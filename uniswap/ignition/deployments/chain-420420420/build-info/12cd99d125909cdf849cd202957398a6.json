{
  "id": "12cd99d125909cdf849cd202957398a6",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.26",
  "solcLongVersion": "0.8.26+commit.8a97fa7a",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/interfaces/IERC20.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint);\n\n    function balanceOf(address owner) external view returns (uint);\n\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n\n    function transfer(address to, uint value) external returns (bool);\n\n    function transferFrom(address from, address to, uint value) external returns (bool);\n}\n"
      },
      "contracts/interfaces/IUniswapV2Callee.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IUniswapV2Callee {\n    function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external;\n}\n"
      },
      "contracts/interfaces/IUniswapV2ERC20.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IUniswapV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint);\n\n    function balanceOf(address owner) external view returns (uint);\n\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n\n    function transfer(address to, uint value) external returns (bool);\n\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IUniswapV2Factory {\n    // event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n\n    function allPairs(uint) external view returns (address pair);\n\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n\n    function setFeeToSetter(address) external;\n}\n"
      },
      "contracts/interfaces/IUniswapV2Pair.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IUniswapV2Pair {\n    // event Approval(address indexed owner, address indexed spender, uint value);\n    // event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint);\n\n    function balanceOf(address owner) external view returns (uint);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n\n    function transfer(address to, uint value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint value\n    ) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint);\n\n    function permit(\n        address owner,\n        address spender,\n        uint value,\n        uint deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(\n        address indexed sender,\n        uint amount0,\n        uint amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves()\n    external\n    view\n    returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    function price0CumulativeLast() external view returns (uint);\n\n    function price1CumulativeLast() external view returns (uint);\n\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n\n    function burn(address to) external returns (uint amount0, uint amount1);\n\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
      },
      "contracts/libraries/Math.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\n// a library for performing various math operations\n\nlibrary Math {\n    function min(uint x, uint y) internal pure returns (uint z) {\n        z = x < y ? x : y;\n    }\n\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\n    function sqrt(uint y) internal pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
      },
      "contracts/libraries/SafeMath.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}\n"
      },
      "contracts/libraries/UQ112x112.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\n\n// range: [0, 2**112 - 1]\n// resolution: 1 / 2**112\n\nlibrary UQ112x112 {\n    uint224 constant Q112 = 2 ** 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 y) internal pure returns (uint224 z) {\n        z = uint224(y) * Q112; // never overflows\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {\n        z = x / uint224(y);\n    }\n}\n"
      },
      "contracts/test/ERC20.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport {UniswapV2ERC20} from \"../UniswapV2ERC20.sol\";\n\ncontract ERC20 is UniswapV2ERC20 {\n    constructor(uint256 _totalSupply) public {\n        _mint(msg.sender, _totalSupply);\n    }\n}\n"
      },
      "contracts/UniswapV2ERC20.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport {IUniswapV2ERC20} from \"./interfaces/IUniswapV2ERC20.sol\";\nimport {SafeMath} from \"./libraries/SafeMath.sol\";\n\ncontract UniswapV2ERC20 is IUniswapV2ERC20 {\n    using SafeMath for uint;\n\n    string public constant name = \"Uniswap V2\";\n    string public constant symbol = \"UNI-V2\";\n    uint8 public constant decimals = 18;\n    uint public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n    0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    // event Approval(address indexed owner, address indexed spender, uint value);\n    // event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor() {\n        uint chainId;\n        assembly {\n            chainId := chainid()\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply + value;\n        balanceOf[to] = balanceOf[to] + value;\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint value\n    ) external returns (bool) {\n        if (allowance[from][msg.sender] != type(uint256).max) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(\n        address owner,\n        address spender,\n        uint value,\n        uint deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        require(deadline >= block.timestamp, \"UniswapV2: EXPIRED\");\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner]++,\n                        deadline\n                    )\n                )\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(\n            recoveredAddress != address(0) && recoveredAddress == owner,\n            \"UniswapV2: INVALID_SIGNATURE\"\n        );\n        _approve(owner, spender, value);\n    }\n}\n"
      },
      "contracts/UniswapV2Factory.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport {UniswapV2Pair} from \"./UniswapV2Pair.sol\";\nimport {IUniswapV2Factory} from \"./interfaces/IUniswapV2Factory.sol\";\nimport {IUniswapV2Pair} from \"./interfaces/IUniswapV2Pair.sol\";\n\ncontract UniswapV2Factory is IUniswapV2Factory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external returns (address pair) {\n        require(tokenA != tokenB, \"UniswapV2: IDENTICAL_ADDRESSES\");\n        (address token0, address token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n        require(token0 != address(0), \"UniswapV2: ZERO_ADDRESS\");\n        require(\n            getPair[token0][token1] == address(0),\n            \"UniswapV2: PAIR_EXISTS\"\n        ); // single check is sufficient\n        bytes memory bytecode = type(UniswapV2Pair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IUniswapV2Pair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, \"UniswapV2: FORBIDDEN\");\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, \"UniswapV2: FORBIDDEN\");\n        feeToSetter = _feeToSetter;\n    }\n}\n"
      },
      "contracts/UniswapV2Pair.sol": {
        "content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport {UniswapV2ERC20} from \"./UniswapV2ERC20.sol\";\nimport {IERC20} from \"./interfaces/IERC20.sol\";\nimport {IUniswapV2Callee} from \"./interfaces/IUniswapV2Callee.sol\";\nimport {IUniswapV2Factory} from \"./interfaces/IUniswapV2Factory.sol\";\nimport {Math} from \"./libraries/Math.sol\";\nimport {SafeMath} from \"./libraries/SafeMath.sol\";\nimport {UQ112x112} from \"./libraries/UQ112x112.sol\";\n\ncontract UniswapV2Pair is UniswapV2ERC20 {\n    using SafeMath for uint;\n    using UQ112x112 for uint224;\n\n    uint public constant MINIMUM_LIQUIDITY = 10 ** 3;\n    bytes4 private constant SELECTOR =\n    bytes4(keccak256(bytes(\"transfer(address,uint256)\")));\n\n    address public factory;\n    address public token0;\n    address public token1;\n\n    uint112 private reserve0; // uses single storage slot, accessible via getReserves\n    uint112 private reserve1; // uses single storage slot, accessible via getReserves\n    uint32 private blockTimestampLast; // uses single storage slot, accessible via getReserves\n\n    uint public price0CumulativeLast;\n    uint public price1CumulativeLast;\n    uint public kLast; // reserve0 * reserve1, as of immediately after the most recent liquidity event\n\n    uint private unlocked = 1;\n    modifier lock() {\n        require(unlocked == 1, \"UniswapV2: LOCKED\");\n        unlocked = 0;\n        _;\n        unlocked = 1;\n    }\n\n    function getReserves()\n    public\n    view\n    returns (\n        uint112 _reserve0,\n        uint112 _reserve1,\n        uint32 _blockTimestampLast\n    )\n    {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    function _safeTransfer(address token, address to, uint value) private {\n        (bool success, bytes memory data) = token.call(\n            abi.encodeWithSelector(SELECTOR, to, value)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"UniswapV2: TRANSFER_FAILED\"\n        );\n    }\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(\n        address indexed sender,\n        uint amount0,\n        uint amount1,\n        address indexed to\n    );\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    constructor() {\n        factory = msg.sender;\n    }\n\n    // called once by the factory at time of deployment\n    function initialize(address _token0, address _token1) external {\n        require(msg.sender == factory, \"UniswapV2: FORBIDDEN\"); // sufficient check\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    // update reserves and, on the first call per block, price accumulators\n    function _update(\n        uint balance0,\n        uint balance1,\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private {\n        require(\n            balance0 <= type(uint112).max && balance1 <= type(uint112).max,\n            \"UniswapV2: OVERFLOW\"\n        );\n        uint32 blockTimestamp = uint32(block.timestamp % 2 ** 32);\n        uint32 timeElapsed = blockTimestamp - blockTimestampLast; // overflow is desired\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            // * never overflows, and + overflow is desired\n            price0CumulativeLast +=\n                uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *\n                timeElapsed;\n            price1CumulativeLast +=\n                uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *\n                timeElapsed;\n        }\n        reserve0 = uint112(balance0);\n        reserve1 = uint112(balance1);\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    // if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)\n    function _mintFee(\n        uint112 _reserve0,\n        uint112 _reserve1\n    ) private returns (bool feeOn) {\n        address feeTo = IUniswapV2Factory(factory).feeTo();\n        feeOn = feeTo != address(0);\n        uint _kLast = kLast; // gas savings\n        if (feeOn) {\n            if (_kLast != 0) {\n                uint rootK = Math.sqrt(uint(_reserve0).mul(_reserve1));\n                uint rootKLast = Math.sqrt(_kLast);\n                if (rootK > rootKLast) {\n                    uint numerator = totalSupply.mul(rootK.sub(rootKLast));\n                    uint denominator = rootK.mul(5).add(rootKLast);\n                    uint liquidity = numerator / denominator;\n                    if (liquidity > 0) _mint(feeTo, liquidity);\n                }\n            }\n        } else if (_kLast != 0) {\n            kLast = 0;\n        }\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function mint(address to) external lock returns (uint liquidity) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        uint balance0 = IERC20(token0).balanceOf(address(this));\n        uint balance1 = IERC20(token1).balanceOf(address(this));\n        uint amount0 = balance0.sub(_reserve0);\n        uint amount1 = balance1.sub(_reserve1);\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY);\n            _mint(address(0), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens\n        } else {\n            liquidity = Math.min(\n                amount0.mul(_totalSupply) / _reserve0,\n                amount1.mul(_totalSupply) / _reserve1\n            );\n        }\n        require(liquidity > 0, \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\");\n        _mint(to, liquidity);\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Mint(msg.sender, amount0, amount1);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function burn(\n        address to\n    ) external lock returns (uint amount0, uint amount1) {\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        uint balance0 = IERC20(_token0).balanceOf(address(this));\n        uint balance1 = IERC20(_token1).balanceOf(address(this));\n        uint liquidity = balanceOf[address(this)];\n\n        bool feeOn = _mintFee(_reserve0, _reserve1);\n        uint _totalSupply = totalSupply; // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = liquidity.mul(balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = liquidity.mul(balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        require(\n            amount0 > 0 && amount1 > 0,\n            \"UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED\"\n        );\n        _burn(address(this), liquidity);\n        _safeTransfer(_token0, to, amount0);\n        _safeTransfer(_token1, to, amount1);\n        balance0 = IERC20(_token0).balanceOf(address(this));\n        balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        if (feeOn) kLast = uint(reserve0).mul(reserve1); // reserve0 and reserve1 are up-to-date\n        emit Burn(msg.sender, amount0, amount1, to);\n    }\n\n    // this low-level function should be called from a contract which performs important safety checks\n    function swap(\n        uint amount0Out,\n        uint amount1Out,\n        address to,\n        bytes calldata data\n    ) external lock {\n        require(\n            amount0Out > 0 || amount1Out > 0,\n            \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n        (uint112 _reserve0, uint112 _reserve1,) = getReserves(); // gas savings\n        require(\n            amount0Out < _reserve0 && amount1Out < _reserve1,\n            \"UniswapV2: INSUFFICIENT_LIQUIDITY\"\n        );\n\n        uint balance0;\n        uint balance1;\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            address _token0 = token0;\n            address _token1 = token1;\n            require(to != _token0 && to != _token1, \"UniswapV2: INVALID_TO\");\n            if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out); // optimistically transfer tokens\n            if (data.length > 0)\n                IUniswapV2Callee(to).uniswapV2Call(\n                    msg.sender,\n                    amount0Out,\n                    amount1Out,\n                    data\n                );\n            balance0 = IERC20(_token0).balanceOf(address(this));\n            balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint amount0In = balance0 > _reserve0 - amount0Out\n            ? balance0 - (_reserve0 - amount0Out)\n            : 0;\n        uint amount1In = balance1 > _reserve1 - amount1Out\n            ? balance1 - (_reserve1 - amount1Out)\n            : 0;\n        require(\n            amount0In > 0 || amount1In > 0,\n            \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\"\n        );\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            uint balance0Adjusted = balance0.mul(1000).sub(amount0In.mul(3));\n            uint balance1Adjusted = balance1.mul(1000).sub(amount1In.mul(3));\n            require(\n                balance0Adjusted.mul(balance1Adjusted) >=\n                uint(_reserve0).mul(_reserve1).mul(1000 ** 2),\n                \"UniswapV2: K\"\n            );\n        }\n\n        _update(balance0, balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to);\n    }\n\n    // force balances to match reserves\n    function skim(address to) external lock {\n        address _token0 = token0; // gas savings\n        address _token1 = token1; // gas savings\n        _safeTransfer(\n            _token0,\n            to,\n            IERC20(_token0).balanceOf(address(this)).sub(reserve0)\n        );\n        _safeTransfer(\n            _token1,\n            to,\n            IERC20(_token1).balanceOf(address(this)).sub(reserve1)\n        );\n    }\n\n    // force reserves to match balances\n    function sync() external lock {\n        _update(\n            IERC20(token0).balanceOf(address(this)),\n            IERC20(token1).balanceOf(address(this)),\n            reserve0,\n            reserve1\n        );\n    }\n}\n"
      }
    },
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": true
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi"
          ]
        }
      },
      "resolc": {
        "version": "latest",
        "compilerSource": "npm",
        "settings": {
          "optimizer": {
            "enabled": true
          }
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/test/ERC20.sol:7:5:\n  |\n7 |     constructor(uint256 _totalSupply) public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "file": "contracts/test/ERC20.sol",
          "start": 151,
          "end": 240
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using 'ecrecover' to validate a signature of a user account.\nPolkadot comes with native account abstraction support, therefore it is highly recommended NOT\nto rely on the fact that the account has an ECDSA private key attached to it since accounts might\nimplement other signature schemes.\n\n--> contracts/UniswapV2ERC20.sol\n",
        "message": "\nWarning: It looks like you are using 'ecrecover' to validate a signature of a user account.\nPolkadot comes with native account abstraction support, therefore it is highly recommended NOT\nto rely on the fact that the account has an ECDSA private key attached to it since accounts might\nimplement other signature schemes.\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "0",
          "start": 3689,
          "end": 3715
        },
        "type": "Warning"
      }
    ],
    "version": "0.8.26",
    "long_version": "0.8.26+commit.8a97fa7a.Emscripten.clang",
    "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
    "sources": {
      "contracts/UniswapV2ERC20.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "contracts/UniswapV2ERC20.sol",
          "exportedSymbols": {
            "IUniswapV2ERC20": [
              1868
            ],
            "SafeMath": [
              2298
            ],
            "UniswapV2ERC20": [
              375
            ]
          },
          "id": 376,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:0"
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV2ERC20.sol",
              "file": "./interfaces/IUniswapV2ERC20.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 376,
              "sourceUnit": 1869,
              "src": "57:65:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IUniswapV2ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1868,
                    "src": "65:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/SafeMath.sol",
              "file": "./libraries/SafeMath.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 376,
              "sourceUnit": 2299,
              "src": "123:50:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "SafeMath",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2298,
                    "src": "131:8:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 6,
                    "name": "IUniswapV2ERC20",
                    "nameLocations": [
                      "202:15:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1868,
                    "src": "202:15:0"
                  },
                  "id": 7,
                  "nodeType": "InheritanceSpecifier",
                  "src": "202:15:0"
                }
              ],
              "canonicalName": "UniswapV2ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 375,
              "linearizedBaseContracts": [
                375,
                1868
              ],
              "name": "UniswapV2ERC20",
              "nameLocation": "184:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 10,
                  "libraryName": {
                    "id": 8,
                    "name": "SafeMath",
                    "nameLocations": [
                      "230:8:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2298,
                    "src": "230:8:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "224:24:0",
                  "typeName": {
                    "id": 9,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "baseFunctions": [
                    1773
                  ],
                  "constant": true,
                  "functionSelector": "06fdde03",
                  "id": 13,
                  "mutability": "constant",
                  "name": "name",
                  "nameLocation": "277:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "254:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "556e6973776170205632",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "284:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738",
                      "typeString": "literal_string \"Uniswap V2\""
                    },
                    "value": "Uniswap V2"
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1778
                  ],
                  "constant": true,
                  "functionSelector": "95d89b41",
                  "id": 16,
                  "mutability": "constant",
                  "name": "symbol",
                  "nameLocation": "325:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "302:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "554e492d5632",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "334:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0c49a525f6758cfb27d0ada1467d2a2e99733995423d47ae30ae4ba2ba563255",
                      "typeString": "literal_string \"UNI-V2\""
                    },
                    "value": "UNI-V2"
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1783
                  ],
                  "constant": true,
                  "functionSelector": "313ce567",
                  "id": 19,
                  "mutability": "constant",
                  "name": "decimals",
                  "nameLocation": "370:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "348:35:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3138",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "381:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1788
                  ],
                  "constant": false,
                  "functionSelector": "18160ddd",
                  "id": 21,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "401:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "389:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1795
                  ],
                  "constant": false,
                  "functionSelector": "70a08231",
                  "id": 25,
                  "mutability": "mutable",
                  "name": "balanceOf",
                  "nameLocation": "450:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "418:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 24,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 22,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "418:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 23,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "437:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1804
                  ],
                  "constant": false,
                  "functionSelector": "dd62ed3e",
                  "id": 31,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "517:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "465:61:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 30,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 26,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "473:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "465:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 29,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 27,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "492:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "484:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 28,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "503:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1838
                  ],
                  "constant": false,
                  "functionSelector": "3644e515",
                  "id": 33,
                  "mutability": "mutable",
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "548:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "533:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1843
                  ],
                  "constant": true,
                  "functionSelector": "30adf81f",
                  "id": 36,
                  "mutability": "constant",
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "698:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "674:112:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "720:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
                      "typeString": "int_const 4995...(69 digits omitted)...3241"
                    },
                    "value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1850
                  ],
                  "constant": false,
                  "functionSelector": "7ecebe00",
                  "id": 40,
                  "mutability": "mutable",
                  "name": "nonces",
                  "nameLocation": "824:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "792:38:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 39,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 37,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "800:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "792:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 38,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "811:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 75,
                    "nodeType": "Block",
                    "src": "1012:463:0",
                    "statements": [
                      {
                        "assignments": [
                          44
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 44,
                            "mutability": "mutable",
                            "name": "chainId",
                            "nameLocation": "1027:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 75,
                            "src": "1022:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 43,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1022:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 45,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1022:12:0"
                      },
                      {
                        "AST": {
                          "nativeSrc": "1053:44:0",
                          "nodeType": "YulBlock",
                          "src": "1053:44:0",
                          "statements": [
                            {
                              "nativeSrc": "1067:20:0",
                              "nodeType": "YulAssignment",
                              "src": "1067:20:0",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "chainid",
                                  "nativeSrc": "1078:7:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1078:7:0"
                                },
                                "nativeSrc": "1078:9:0",
                                "nodeType": "YulFunctionCall",
                                "src": "1078:9:0"
                              },
                              "variableNames": [
                                {
                                  "name": "chainId",
                                  "nativeSrc": "1067:7:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1067:7:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 44,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1067:7:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 46,
                        "nodeType": "InlineAssembly",
                        "src": "1044:53:0"
                      },
                      {
                        "expression": {
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "1106:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                        "id": 52,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1207:84:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                        },
                                        "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                        }
                                      ],
                                      "id": 51,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1176:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 53,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1176:133:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 57,
                                            "name": "name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "1343:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "id": 56,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1337:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 55,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1337:5:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 58,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1337:11:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 54,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1327:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 59,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1327:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "hexValue": "31",
                                            "id": 63,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1383:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                              "typeString": "literal_string \"1\""
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                              "typeString": "literal_string \"1\""
                                            }
                                          ],
                                          "id": 62,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1377:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 61,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1377:5:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 64,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1377:10:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 60,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1367:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 65,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1367:21:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 66,
                                    "name": "chainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "1406:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 69,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "1439:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapV2ERC20_$375",
                                          "typeString": "contract UniswapV2ERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapV2ERC20_$375",
                                          "typeString": "contract UniswapV2ERC20"
                                        }
                                      ],
                                      "id": 68,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1431:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 67,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1431:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 70,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1431:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 49,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "1148:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 50,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1152:6:0",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "1148:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1148:310:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 48,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "1125:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1125:343:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1106:362:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1106:362:0"
                      }
                    ]
                  },
                  "id": 76,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1009:2:0"
                  },
                  "returnParameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1012:0:0"
                  },
                  "scope": 375,
                  "src": "998:477:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "1529:143:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 83,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1539:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 84,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1553:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 85,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1567:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1553:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1539:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "1539:33:0"
                      },
                      {
                        "expression": {
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 89,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1582:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 91,
                            "indexExpression": {
                              "id": 90,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "1592:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1582:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 92,
                                "name": "balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "1598:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 94,
                              "indexExpression": {
                                "id": 93,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "1608:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1598:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 95,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1614:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1598:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1582:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98,
                        "nodeType": "ExpressionStatement",
                        "src": "1582:37:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1651:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1643:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 100,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1643:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1643:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 104,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "1655:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 105,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "1659:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 99,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "1634:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1634:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 107,
                        "nodeType": "EmitStatement",
                        "src": "1629:36:0"
                      }
                    ]
                  },
                  "id": 109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "1490:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1504:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "1496:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1513:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "1508:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1508:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:24:0"
                  },
                  "returnParameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1529:0:0"
                  },
                  "scope": 375,
                  "src": "1481:191:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "1728:155:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 116,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1738:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 118,
                            "indexExpression": {
                              "id": 117,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1748:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1738:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 123,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "1776:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 119,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "1756:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 121,
                                "indexExpression": {
                                  "id": 120,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 111,
                                  "src": "1766:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1756:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1772:3:0",
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2269,
                              "src": "1756:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1756:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1738:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 126,
                        "nodeType": "ExpressionStatement",
                        "src": "1738:44:0"
                      },
                      {
                        "expression": {
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 127,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "1792:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 130,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 113,
                                "src": "1822:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 128,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21,
                                "src": "1806:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1818:3:0",
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2269,
                              "src": "1806:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1806:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1792:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "1792:36:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 135,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "1852:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1866:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1858:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 136,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1858:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1858:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 140,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1870:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 134,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "1843:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1843:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 142,
                        "nodeType": "EmitStatement",
                        "src": "1838:38:0"
                      }
                    ]
                  },
                  "id": 144,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "1687:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1701:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "1693:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1693:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1712:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "1707:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1707:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1692:26:0"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1728:0:0"
                  },
                  "scope": 375,
                  "src": "1678:205:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "1959:96:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 153,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1969:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 156,
                              "indexExpression": {
                                "id": 154,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "1979:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1969:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 157,
                            "indexExpression": {
                              "id": 155,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1986:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1969:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 158,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "1997:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1969:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "1969:33:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 162,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "2026:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 163,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "2033:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 164,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "2042:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 161,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "2017:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2017:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 166,
                        "nodeType": "EmitStatement",
                        "src": "2012:36:0"
                      }
                    ]
                  },
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "1898:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1915:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1907:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1907:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1930:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1922:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1922:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1944:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "1939:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1939:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1906:44:0"
                  },
                  "returnParameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1959:0:0"
                  },
                  "scope": 375,
                  "src": "1889:166:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2126:151:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 177,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2136:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 179,
                            "indexExpression": {
                              "id": 178,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "2146:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2136:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 184,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "2174:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 180,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "2154:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 182,
                                "indexExpression": {
                                  "id": 181,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 170,
                                  "src": "2164:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2154:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2170:3:0",
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2269,
                              "src": "2154:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2154:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2136:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "2136:44:0"
                      },
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 188,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2190:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "id": 189,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "2200:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2190:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 195,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "2224:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 191,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "2206:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 193,
                                "indexExpression": {
                                  "id": 192,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 172,
                                  "src": "2216:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2206:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2220:3:0",
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2247,
                              "src": "2206:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2206:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2190:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "2190:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 170,
                              "src": "2254:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 201,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "2260:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 202,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2264:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 199,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1768,
                            "src": "2245:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2245:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 204,
                        "nodeType": "EmitStatement",
                        "src": "2240:30:0"
                      }
                    ]
                  },
                  "id": 206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "2070:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2088:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2080:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2080:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2102:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2094:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2094:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2111:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2106:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2106:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2079:38:0"
                  },
                  "returnParameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:0"
                  },
                  "scope": 375,
                  "src": "2061:216:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "baseFunctions": [
                    1813
                  ],
                  "body": {
                    "id": 224,
                    "nodeType": "Block",
                    "src": "2353:74:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 216,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2372:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2376:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2372:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 218,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "2384:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 219,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "2393:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 215,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "2363:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2363:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "ExpressionStatement",
                        "src": "2363:36:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2416:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 214,
                        "id": 223,
                        "nodeType": "Return",
                        "src": "2409:11:0"
                      }
                    ]
                  },
                  "functionSelector": "095ea7b3",
                  "id": 225,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2292:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 208,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2308:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "2300:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2300:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2322:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "2317:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2299:29:0"
                  },
                  "returnParameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 225,
                        "src": "2347:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2347:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2346:6:0"
                  },
                  "scope": 375,
                  "src": "2283:144:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1822
                  ],
                  "body": {
                    "id": 243,
                    "nodeType": "Block",
                    "src": "2499:70:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 235,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2519:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2523:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2519:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 237,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "2531:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 238,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "2535:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 234,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "2509:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2509:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "2509:32:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2558:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 233,
                        "id": 242,
                        "nodeType": "Return",
                        "src": "2551:11:0"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 244,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "2442:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2459:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "2451:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2468:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "2463:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2463:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2450:24:0"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "2493:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2493:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2492:6:0"
                  },
                  "scope": 375,
                  "src": "2433:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1833
                  ],
                  "body": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "2689:250:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 255,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "2703:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 257,
                              "indexExpression": {
                                "id": 256,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 246,
                                "src": "2713:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2703:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 260,
                            "indexExpression": {
                              "expression": {
                                "id": 258,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2719:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2723:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2719:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2703:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2739:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 262,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2739:7:0",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 261,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "2734:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2734:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2748:3:0",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "2734:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2703:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 285,
                        "nodeType": "IfStatement",
                        "src": "2699:177:0",
                        "trueBody": {
                          "id": 284,
                          "nodeType": "Block",
                          "src": "2753:123:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 267,
                                      "name": "allowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31,
                                      "src": "2767:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                      }
                                    },
                                    "id": 271,
                                    "indexExpression": {
                                      "id": 268,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 246,
                                      "src": "2777:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2767:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 272,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 269,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2783:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2787:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2783:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2767:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 280,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 250,
                                      "src": "2846:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 273,
                                          "name": "allowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31,
                                          "src": "2797:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 275,
                                        "indexExpression": {
                                          "id": 274,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 246,
                                          "src": "2807:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2797:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 278,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 276,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2813:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2817:6:0",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2813:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2797:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 279,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2825:3:0",
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2269,
                                    "src": "2797:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2797:68:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2767:98:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 283,
                              "nodeType": "ExpressionStatement",
                              "src": "2767:98:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 287,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "2895:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 288,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "2901:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 289,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 250,
                              "src": "2905:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 286,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "2885:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2885:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "2885:26:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2928:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 254,
                        "id": 293,
                        "nodeType": "Return",
                        "src": "2921:11:0"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 295,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2584:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2614:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "2606:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2606:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2636:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "2628:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2628:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2653:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "2648:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2596:68:0"
                  },
                  "returnParameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 295,
                        "src": "2683:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2682:6:0"
                  },
                  "scope": 375,
                  "src": "2575:364:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1867
                  ],
                  "body": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "3122:785:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 313,
                                "name": "deadline",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "3140:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 314,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "3152:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3158:9:0",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3152:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3140:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a2045585049524544",
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3169:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
                                "typeString": "literal_string \"UniswapV2: EXPIRED\""
                              },
                              "value": "UniswapV2: EXPIRED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
                                "typeString": "literal_string \"UniswapV2: EXPIRED\""
                              }
                            ],
                            "id": 312,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3132:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3132:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "3132:58:0"
                      },
                      {
                        "assignments": [
                          321
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 321,
                            "mutability": "mutable",
                            "name": "digest",
                            "nameLocation": "3208:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 373,
                            "src": "3200:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 320,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3200:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 343,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3274:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "id": 326,
                                  "name": "DOMAIN_SEPARATOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "3302:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 330,
                                          "name": "PERMIT_TYPEHASH",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 36,
                                          "src": "3403:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 331,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 297,
                                          "src": "3444:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 332,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "3475:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 333,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 301,
                                          "src": "3508:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 337,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "++",
                                          "prefix": false,
                                          "src": "3539:15:0",
                                          "subExpression": {
                                            "baseExpression": {
                                              "id": 334,
                                              "name": "nonces",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 40,
                                              "src": "3539:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 336,
                                            "indexExpression": {
                                              "id": 335,
                                              "name": "owner",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 297,
                                              "src": "3546:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "3539:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 338,
                                          "name": "deadline",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 303,
                                          "src": "3580:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 328,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967295,
                                          "src": "3367:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 329,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "3371:6:0",
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "3367:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 339,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3367:243:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 327,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967288,
                                    "src": "3336:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3336:292:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 323,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "3240:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3244:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "3240:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3240:402:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 322,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "3217:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3217:435:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3200:452:0"
                      },
                      {
                        "assignments": [
                          345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 345,
                            "mutability": "mutable",
                            "name": "recoveredAddress",
                            "nameLocation": "3670:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 373,
                            "src": "3662:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 344,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3662:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 352,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "3699:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 348,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "3707:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 349,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "3710:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 350,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "3713:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 346,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967290,
                            "src": "3689:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3689:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3662:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 354,
                                  "name": "recoveredAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "3746:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 357,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3774:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3766:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 355,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3766:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3766:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3746:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 360,
                                  "name": "recoveredAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "3780:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 361,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 297,
                                  "src": "3800:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3780:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3746:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3819:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
                                "typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
                              },
                              "value": "UniswapV2: INVALID_SIGNATURE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
                                "typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
                              }
                            ],
                            "id": 353,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3725:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3725:134:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "3725:134:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 368,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "3878:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 369,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3885:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 370,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "3894:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 367,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "3869:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3869:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "3869:31:0"
                      }
                    ]
                  },
                  "functionSelector": "d505accf",
                  "id": 374,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "2954:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2978:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "2970:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2970:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3001:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "2993:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2993:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3023:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "3018:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3018:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "3043:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "3038:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3038:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "3067:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "3061:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3061:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3086:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "3078:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3078:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "3105:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "3097:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3097:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2960:152:0"
                  },
                  "returnParameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3122:0:0"
                  },
                  "scope": 375,
                  "src": "2945:962:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 376,
              "src": "175:3734:0",
              "usedErrors": [],
              "usedEvents": [
                1760,
                1768
              ]
            }
          ],
          "src": "31:3879:0"
        }
      },
      "contracts/UniswapV2Factory.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "contracts/UniswapV2Factory.sol",
          "exportedSymbols": {
            "IUniswapV2Factory": [
              1921
            ],
            "IUniswapV2Pair": [
              2147
            ],
            "UniswapV2Factory": [
              576
            ],
            "UniswapV2Pair": [
              1652
            ]
          },
          "id": 577,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 377,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:1"
            },
            {
              "absolutePath": "contracts/UniswapV2Pair.sol",
              "file": "./UniswapV2Pair.sol",
              "id": 379,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 577,
              "sourceUnit": 1653,
              "src": "57:50:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 378,
                    "name": "UniswapV2Pair",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1652,
                    "src": "65:13:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV2Factory.sol",
              "file": "./interfaces/IUniswapV2Factory.sol",
              "id": 381,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 577,
              "sourceUnit": 1922,
              "src": "108:69:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 380,
                    "name": "IUniswapV2Factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1921,
                    "src": "116:17:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
              "file": "./interfaces/IUniswapV2Pair.sol",
              "id": 383,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 577,
              "sourceUnit": 2148,
              "src": "178:63:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 382,
                    "name": "IUniswapV2Pair",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2147,
                    "src": "186:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 384,
                    "name": "IUniswapV2Factory",
                    "nameLocations": [
                      "272:17:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1921,
                    "src": "272:17:1"
                  },
                  "id": 385,
                  "nodeType": "InheritanceSpecifier",
                  "src": "272:17:1"
                }
              ],
              "canonicalName": "UniswapV2Factory",
              "contractDependencies": [
                1652
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 576,
              "linearizedBaseContracts": [
                576,
                1921
              ],
              "name": "UniswapV2Factory",
              "nameLocation": "252:16:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1875
                  ],
                  "constant": false,
                  "functionSelector": "017e7e58",
                  "id": 387,
                  "mutability": "mutable",
                  "name": "feeTo",
                  "nameLocation": "311:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "296:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1880
                  ],
                  "constant": false,
                  "functionSelector": "094b7415",
                  "id": 389,
                  "mutability": "mutable",
                  "name": "feeToSetter",
                  "nameLocation": "337:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "322:26:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1889
                  ],
                  "constant": false,
                  "functionSelector": "e6a43905",
                  "id": 395,
                  "mutability": "mutable",
                  "name": "getPair",
                  "nameLocation": "410:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "355:62:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                    "typeString": "mapping(address => mapping(address => address))"
                  },
                  "typeName": {
                    "id": 394,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 390,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "363:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "355:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                      "typeString": "mapping(address => mapping(address => address))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 393,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 391,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "382:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "374:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 392,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "393:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1896
                  ],
                  "constant": false,
                  "functionSelector": "1e3dd18b",
                  "id": 398,
                  "mutability": "mutable",
                  "name": "allPairs",
                  "nameLocation": "440:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "423:25:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 396,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "423:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 397,
                    "nodeType": "ArrayTypeName",
                    "src": "423:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
                  "id": 408,
                  "name": "PairCreated",
                  "nameLocation": "461:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "489:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "473:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 402,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "513:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "497:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "497:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 404,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "529:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "521:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 406,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "535:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "535:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:68:1"
                  },
                  "src": "455:86:1"
                },
                {
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "581:43:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 413,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "591:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 414,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "605:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "591:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 416,
                        "nodeType": "ExpressionStatement",
                        "src": "591:26:1"
                      }
                    ]
                  },
                  "id": 418,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "_feeToSetter",
                        "nameLocation": "567:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "559:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "558:22:1"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "581:0:1"
                  },
                  "scope": 576,
                  "src": "547:77:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1901
                  ],
                  "body": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "685:39:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 423,
                            "name": "allPairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "702:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "711:6:1",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "702:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 422,
                        "id": 425,
                        "nodeType": "Return",
                        "src": "695:22:1"
                      }
                    ]
                  },
                  "functionSelector": "574f2ba3",
                  "id": 427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "639:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "653:2:1"
                  },
                  "returnParameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "679:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:6:1"
                  },
                  "scope": 576,
                  "src": "630:94:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1910
                  ],
                  "body": {
                    "id": 538,
                    "nodeType": "Block",
                    "src": "836:922:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 437,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "854:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 438,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 431,
                                "src": "864:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "854:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "872:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                                "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                              },
                              "value": "UniswapV2: IDENTICAL_ADDRESSES"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                                "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                              }
                            ],
                            "id": 436,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "846:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "846:59:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 442,
                        "nodeType": "ExpressionStatement",
                        "src": "846:59:1"
                      },
                      {
                        "assignments": [
                          444,
                          446
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 444,
                            "mutability": "mutable",
                            "name": "token0",
                            "nameLocation": "924:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 538,
                            "src": "916:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "916:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 446,
                            "mutability": "mutable",
                            "name": "token1",
                            "nameLocation": "940:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 538,
                            "src": "932:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "932:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 457,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 447,
                              "name": "tokenA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "950:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 448,
                              "name": "tokenB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "959:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "950:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "components": [
                              {
                                "id": 453,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 431,
                                "src": "1012:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 454,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "1020:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 455,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1011:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "950:77:1",
                          "trueExpression": {
                            "components": [
                              {
                                "id": 450,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "981:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 451,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 431,
                                "src": "989:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 452,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "980:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                              "typeString": "tuple(address,address)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                            "typeString": "tuple(address,address)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "915:112:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 459,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 444,
                                "src": "1045:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 462,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1063:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1055:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 460,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1055:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1055:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1045:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1067:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                                "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                              },
                              "value": "UniswapV2: ZERO_ADDRESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                                "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                              }
                            ],
                            "id": 458,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1037:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1037:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "1037:56:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 469,
                                    "name": "getPair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 395,
                                    "src": "1124:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                      "typeString": "mapping(address => mapping(address => address))"
                                    }
                                  },
                                  "id": 471,
                                  "indexExpression": {
                                    "id": 470,
                                    "name": "token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 444,
                                    "src": "1132:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1124:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 473,
                                "indexExpression": {
                                  "id": 472,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "1140:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1124:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1159:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1151:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 474,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1151:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1151:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1124:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20504149525f455849535453",
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1175:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                                "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                              },
                              "value": "UniswapV2: PAIR_EXISTS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                                "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                              }
                            ],
                            "id": 468,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1103:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1103:106:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "1103:106:1"
                      },
                      {
                        "assignments": [
                          483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 483,
                            "mutability": "mutable",
                            "name": "bytecode",
                            "nameLocation": "1262:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 538,
                            "src": "1249:21:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1249:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 488,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 485,
                                "name": "UniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1652,
                                "src": "1278:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$1652_$",
                                  "typeString": "type(contract UniswapV2Pair)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$1652_$",
                                  "typeString": "type(contract UniswapV2Pair)"
                                }
                              ],
                              "id": 484,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "1273:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1273:19:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_UniswapV2Pair_$1652",
                              "typeString": "type(contract UniswapV2Pair)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1293:12:1",
                          "memberName": "creationCode",
                          "nodeType": "MemberAccess",
                          "src": "1273:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1249:56:1"
                      },
                      {
                        "assignments": [
                          490
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 490,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "1323:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 538,
                            "src": "1315:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 489,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1315:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 498,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 494,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 444,
                                  "src": "1357:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 495,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "1365:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 492,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1340:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1344:12:1",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1340:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1340:32:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 491,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "1330:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1330:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1315:58:1"
                      },
                      {
                        "AST": {
                          "nativeSrc": "1392:84:1",
                          "nodeType": "YulBlock",
                          "src": "1392:84:1",
                          "statements": [
                            {
                              "nativeSrc": "1406:60:1",
                              "nodeType": "YulAssignment",
                              "src": "1406:60:1",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1422:1:1",
                                    "nodeType": "YulLiteral",
                                    "src": "1422:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nativeSrc": "1429:8:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1429:8:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1439:2:1",
                                        "nodeType": "YulLiteral",
                                        "src": "1439:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1425:3:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1425:3:1"
                                    },
                                    "nativeSrc": "1425:17:1",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1425:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nativeSrc": "1450:8:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1450:8:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "1444:5:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1444:5:1"
                                    },
                                    "nativeSrc": "1444:15:1",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1444:15:1"
                                  },
                                  {
                                    "name": "salt",
                                    "nativeSrc": "1461:4:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1461:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nativeSrc": "1414:7:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1414:7:1"
                                },
                                "nativeSrc": "1414:52:1",
                                "nodeType": "YulFunctionCall",
                                "src": "1414:52:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pair",
                                  "nativeSrc": "1406:4:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1406:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 483,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1429:8:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 483,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1450:8:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 434,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1406:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 490,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1461:4:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 499,
                        "nodeType": "InlineAssembly",
                        "src": "1383:93:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 504,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "1517:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 505,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1525:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 501,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 434,
                                  "src": "1500:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 500,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2147,
                                "src": "1485:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2147_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1485:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$2147",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1506:10:1",
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2146,
                            "src": "1485:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) external"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1485:47:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "1485:47:1"
                      },
                      {
                        "expression": {
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 508,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "1542:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 511,
                              "indexExpression": {
                                "id": 509,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 444,
                                "src": "1550:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1542:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 512,
                            "indexExpression": {
                              "id": 510,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1558:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1542:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 513,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "1568:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1542:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 515,
                        "nodeType": "ExpressionStatement",
                        "src": "1542:30:1"
                      },
                      {
                        "expression": {
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 516,
                                "name": "getPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "1582:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(address => address))"
                                }
                              },
                              "id": 519,
                              "indexExpression": {
                                "id": 517,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "1590:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1582:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 520,
                            "indexExpression": {
                              "id": 518,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "1598:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1582:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 521,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "1608:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1582:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "1582:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 527,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "1681:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 524,
                              "name": "allPairs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "1667:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1676:4:1",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1667:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1667:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 529,
                        "nodeType": "ExpressionStatement",
                        "src": "1667:19:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 531,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "1713:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 532,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1721:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 533,
                              "name": "pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "1729:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 534,
                                "name": "allPairs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "1735:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1744:6:1",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1735:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 530,
                            "name": "PairCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "1701:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1701:50:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 537,
                        "nodeType": "EmitStatement",
                        "src": "1696:55:1"
                      }
                    ]
                  },
                  "functionSelector": "c9c65396",
                  "id": 539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "739:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "767:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 539,
                        "src": "759:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "791:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 539,
                        "src": "783:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "783:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "749:54:1"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "830:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 539,
                        "src": "822:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:14:1"
                  },
                  "scope": 576,
                  "src": "730:1028:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1915
                  ],
                  "body": {
                    "id": 556,
                    "nodeType": "Block",
                    "src": "1807:99:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 545,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1825:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1829:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1825:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 547,
                                "name": "feeToSetter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 389,
                                "src": "1839:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1825:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20464f5242494444454e",
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1852:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                                "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                              },
                              "value": "UniswapV2: FORBIDDEN"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                                "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                              }
                            ],
                            "id": 544,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1817:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1817:58:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 551,
                        "nodeType": "ExpressionStatement",
                        "src": "1817:58:1"
                      },
                      {
                        "expression": {
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 552,
                            "name": "feeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "1885:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 553,
                            "name": "_feeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "1893:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1885:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 555,
                        "nodeType": "ExpressionStatement",
                        "src": "1885:14:1"
                      }
                    ]
                  },
                  "functionSelector": "f46901ed",
                  "id": 557,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "1773:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "_feeTo",
                        "nameLocation": "1790:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1782:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1782:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1781:16:1"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1807:0:1"
                  },
                  "scope": 576,
                  "src": "1764:142:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1920
                  ],
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "1967:111:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 563,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1985:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1989:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1985:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 565,
                                "name": "feeToSetter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 389,
                                "src": "1999:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1985:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20464f5242494444454e",
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2012:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                                "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                              },
                              "value": "UniswapV2: FORBIDDEN"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                                "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                              }
                            ],
                            "id": 562,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1977:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1977:58:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 569,
                        "nodeType": "ExpressionStatement",
                        "src": "1977:58:1"
                      },
                      {
                        "expression": {
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 570,
                            "name": "feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "2045:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 571,
                            "name": "_feeToSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "2059:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2045:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "2045:26:1"
                      }
                    ]
                  },
                  "functionSelector": "a2e74af6",
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "1921:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 559,
                        "mutability": "mutable",
                        "name": "_feeToSetter",
                        "nameLocation": "1944:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "1936:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1936:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1935:22:1"
                  },
                  "returnParameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1967:0:1"
                  },
                  "scope": 576,
                  "src": "1912:166:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 577,
              "src": "243:1837:1",
              "usedErrors": [],
              "usedEvents": [
                408
              ]
            }
          ],
          "src": "31:2050:1"
        }
      },
      "contracts/UniswapV2Pair.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "contracts/UniswapV2Pair.sol",
          "exportedSymbols": {
            "IERC20": [
              1736
            ],
            "IUniswapV2Callee": [
              1750
            ],
            "IUniswapV2Factory": [
              1921
            ],
            "Math": [
              2223
            ],
            "SafeMath": [
              2298
            ],
            "UQ112x112": [
              2342
            ],
            "UniswapV2ERC20": [
              375
            ],
            "UniswapV2Pair": [
              1652
            ]
          },
          "id": 1653,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 578,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:2"
            },
            {
              "absolutePath": "contracts/UniswapV2ERC20.sol",
              "file": "./UniswapV2ERC20.sol",
              "id": 580,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 376,
              "src": "57:52:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 579,
                    "name": "UniswapV2ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "65:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IERC20.sol",
              "file": "./interfaces/IERC20.sol",
              "id": 582,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 1737,
              "src": "110:47:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 581,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1736,
                    "src": "118:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV2Callee.sol",
              "file": "./interfaces/IUniswapV2Callee.sol",
              "id": 584,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 1751,
              "src": "158:67:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 583,
                    "name": "IUniswapV2Callee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1750,
                    "src": "166:16:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IUniswapV2Factory.sol",
              "file": "./interfaces/IUniswapV2Factory.sol",
              "id": 586,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 1922,
              "src": "226:69:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 585,
                    "name": "IUniswapV2Factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1921,
                    "src": "234:17:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/Math.sol",
              "file": "./libraries/Math.sol",
              "id": 588,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 2224,
              "src": "296:42:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 587,
                    "name": "Math",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2223,
                    "src": "304:4:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/SafeMath.sol",
              "file": "./libraries/SafeMath.sol",
              "id": 590,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 2299,
              "src": "339:50:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 589,
                    "name": "SafeMath",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2298,
                    "src": "347:8:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/UQ112x112.sol",
              "file": "./libraries/UQ112x112.sol",
              "id": 592,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1653,
              "sourceUnit": 2343,
              "src": "390:52:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 591,
                    "name": "UQ112x112",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2342,
                    "src": "398:9:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 593,
                    "name": "UniswapV2ERC20",
                    "nameLocations": [
                      "470:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 375,
                    "src": "470:14:2"
                  },
                  "id": 594,
                  "nodeType": "InheritanceSpecifier",
                  "src": "470:14:2"
                }
              ],
              "canonicalName": "UniswapV2Pair",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1652,
              "linearizedBaseContracts": [
                1652,
                375,
                1868
              ],
              "name": "UniswapV2Pair",
              "nameLocation": "453:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 597,
                  "libraryName": {
                    "id": 595,
                    "name": "SafeMath",
                    "nameLocations": [
                      "497:8:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2298,
                    "src": "497:8:2"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "491:24:2",
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "global": false,
                  "id": 600,
                  "libraryName": {
                    "id": 598,
                    "name": "UQ112x112",
                    "nameLocations": [
                      "526:9:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2342,
                    "src": "526:9:2"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "520:28:2",
                  "typeName": {
                    "id": 599,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  }
                },
                {
                  "constant": true,
                  "functionSelector": "ba9a7a56",
                  "id": 605,
                  "mutability": "constant",
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "575:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "554:48:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "595:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "601:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "595:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 616,
                  "mutability": "constant",
                  "name": "SELECTOR",
                  "nameLocation": "632:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "608:92:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "7472616e7366657228616464726573732c75696e7432353629",
                                "id": 612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "670:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
                                  "typeString": "literal_string \"transfer(address,uint256)\""
                                },
                                "value": "transfer(address,uint256)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
                                  "typeString": "literal_string \"transfer(address,uint256)\""
                                }
                              ],
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "664:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 610,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "664:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "664:34:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 609,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "654:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "654:45:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "647:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "647:6:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "647:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "c45a0155",
                  "id": 618,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "722:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "707:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0dfe1681",
                  "id": 620,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "750:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "735:21:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d21220a7",
                  "id": 622,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "777:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "762:21:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "806:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "790:24:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "892:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "876:24:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "blockTimestampLast",
                  "nameLocation": "977:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "962:33:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "5909c0d5",
                  "id": 630,
                  "mutability": "mutable",
                  "name": "price0CumulativeLast",
                  "nameLocation": "1070:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "1058:32:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5a3d5493",
                  "id": 632,
                  "mutability": "mutable",
                  "name": "price1CumulativeLast",
                  "nameLocation": "1108:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "1096:32:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7464fc3d",
                  "id": 634,
                  "mutability": "mutable",
                  "name": "kLast",
                  "nameLocation": "1146:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "1134:17:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "unlocked",
                  "nameLocation": "1251:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "1238:25:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1262:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "1285:115:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 640,
                                "name": "unlocked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 637,
                                "src": "1303:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1315:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1303:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a204c4f434b4544",
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1318:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4cc87f075f04bdfaccb0dc54ec0b98f9169b1507a7e83ec8ee97e34d6a77db4a",
                                "typeString": "literal_string \"UniswapV2: LOCKED\""
                              },
                              "value": "UniswapV2: LOCKED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4cc87f075f04bdfaccb0dc54ec0b98f9169b1507a7e83ec8ee97e34d6a77db4a",
                                "typeString": "literal_string \"UniswapV2: LOCKED\""
                              }
                            ],
                            "id": 639,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1295:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1295:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "1295:43:2"
                      },
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 646,
                            "name": "unlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "1348:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1359:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1348:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "1348:12:2"
                      },
                      {
                        "id": 650,
                        "nodeType": "PlaceholderStatement",
                        "src": "1370:1:2"
                      },
                      {
                        "expression": {
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 651,
                            "name": "unlocked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "1381:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1392:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1381:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "1381:12:2"
                      }
                    ]
                  },
                  "id": 656,
                  "name": "lock",
                  "nameLocation": "1278:4:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1282:2:2"
                  },
                  "src": "1269:131:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 677,
                    "nodeType": "Block",
                    "src": "1562:117:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 665,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "1572:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 666,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "1584:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "1572:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "1572:20:2"
                      },
                      {
                        "expression": {
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 669,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 661,
                            "src": "1602:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 670,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "1614:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "1602:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "1602:20:2"
                      },
                      {
                        "expression": {
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 673,
                            "name": "_blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "1632:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 674,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "1654:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1632:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "1632:40:2"
                      }
                    ]
                  },
                  "functionSelector": "0902f1ac",
                  "id": 678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "1415:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1426:2:2"
                  },
                  "returnParameters": {
                    "id": 664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "1479:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "1471:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "1506:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "1498:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1498:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "_blockTimestampLast",
                        "nameLocation": "1532:19:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "1525:26:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1525:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1461:96:2"
                  },
                  "scope": 1652,
                  "src": "1406:273:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 720,
                    "nodeType": "Block",
                    "src": "1755:270:2",
                    "statements": [
                      {
                        "assignments": [
                          688,
                          690
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 688,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1771:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 720,
                            "src": "1766:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 687,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1766:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 690,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "1793:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 720,
                            "src": "1780:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 689,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1780:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 700,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 695,
                                  "name": "SELECTOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 616,
                                  "src": "1848:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 696,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 682,
                                  "src": "1858:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 697,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 684,
                                  "src": "1862:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 693,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967295,
                                  "src": "1825:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1829:18:2",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1825:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1825:43:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 691,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 680,
                              "src": "1801:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1807:4:2",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "1801:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1801:77:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1765:113:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 702,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 688,
                                "src": "1909:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 706,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 703,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 690,
                                          "src": "1921:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 704,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1926:6:2",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "1921:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 705,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1936:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "1921:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 709,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 690,
                                          "src": "1952:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 711,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1959:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 710,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1959:4:2",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 712,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "1958:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 707,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967295,
                                          "src": "1941:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 708,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "1945:6:2",
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "1941:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 713,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1941:24:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "1921:44:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 715,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1920:46:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1909:57:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a205452414e534645525f4641494c4544",
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1980:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d8733df98393ec23d211b1de22ecb14bb9ce352e147cbbbe19c11e12e90b7ff2",
                                "typeString": "literal_string \"UniswapV2: TRANSFER_FAILED\""
                              },
                              "value": "UniswapV2: TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d8733df98393ec23d211b1de22ecb14bb9ce352e147cbbbe19c11e12e90b7ff2",
                                "typeString": "literal_string \"UniswapV2: TRANSFER_FAILED\""
                              }
                            ],
                            "id": 701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1888:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:130:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 719,
                        "nodeType": "ExpressionStatement",
                        "src": "1888:130:2"
                      }
                    ]
                  },
                  "id": 721,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeTransfer",
                  "nameLocation": "1694:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 680,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1716:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "1708:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1708:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1731:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "1723:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1723:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1740:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "1735:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1735:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1707:39:2"
                  },
                  "returnParameters": {
                    "id": 686,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1755:0:2"
                  },
                  "scope": 1652,
                  "src": "1685:340:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
                  "id": 729,
                  "name": "Mint",
                  "nameLocation": "2037:4:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 728,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2058:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "2042:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2042:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 725,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2071:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "2066:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 724,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2066:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 727,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2085:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "2080:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2080:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2041:52:2"
                  },
                  "src": "2031:63:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
                  "id": 739,
                  "name": "Burn",
                  "nameLocation": "2105:4:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2135:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "2119:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 733,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2156:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "2151:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2151:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 735,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2178:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "2173:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2173:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 737,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2211:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 739,
                        "src": "2195:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2195:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2109:110:2"
                  },
                  "src": "2099:121:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
                  "id": 753,
                  "name": "Swap",
                  "nameLocation": "2231:4:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 741,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2261:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "2245:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2245:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 743,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "2282:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "2277:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2277:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "2306:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "2301:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2301:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 747,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2330:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "2325:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 749,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2355:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "2350:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2350:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2391:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "2375:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2235:164:2"
                  },
                  "src": "2225:175:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
                  "id": 759,
                  "name": "Sync",
                  "nameLocation": "2411:4:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 755,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "2424:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 759,
                        "src": "2416:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2416:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "2442:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 759,
                        "src": "2434:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2434:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2415:36:2"
                  },
                  "src": "2405:47:2"
                },
                {
                  "body": {
                    "id": 767,
                    "nodeType": "Block",
                    "src": "2472:37:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 762,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "2482:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 763,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2492:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2496:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2492:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2482:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 766,
                        "nodeType": "ExpressionStatement",
                        "src": "2482:20:2"
                      }
                    ]
                  },
                  "id": 768,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2469:2:2"
                  },
                  "returnParameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2472:0:2"
                  },
                  "scope": 1652,
                  "src": "2458:51:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 791,
                    "nodeType": "Block",
                    "src": "2634:143:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 776,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2652:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2656:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2652:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 778,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 618,
                                "src": "2666:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2652:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20464f5242494444454e",
                              "id": 780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2675:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                                "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                              },
                              "value": "UniswapV2: FORBIDDEN"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                                "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                              }
                            ],
                            "id": 775,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2644:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2644:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 782,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:54:2"
                      },
                      {
                        "expression": {
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 783,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 620,
                            "src": "2728:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 784,
                            "name": "_token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "2737:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2728:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 786,
                        "nodeType": "ExpressionStatement",
                        "src": "2728:16:2"
                      },
                      {
                        "expression": {
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 787,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "2754:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 788,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 772,
                            "src": "2763:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2754:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 790,
                        "nodeType": "ExpressionStatement",
                        "src": "2754:16:2"
                      }
                    ]
                  },
                  "functionSelector": "485cc955",
                  "id": 792,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2580:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 773,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "_token0",
                        "nameLocation": "2599:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "2591:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2591:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 772,
                        "mutability": "mutable",
                        "name": "_token1",
                        "nameLocation": "2616:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "2608:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 771,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2608:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2590:34:2"
                  },
                  "returnParameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:2"
                  },
                  "scope": 1652,
                  "src": "2571:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 906,
                    "nodeType": "Block",
                    "src": "2990:866:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 804,
                                  "name": "balance0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 794,
                                  "src": "3021:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3038:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint112_$",
                                          "typeString": "type(uint112)"
                                        },
                                        "typeName": {
                                          "id": 806,
                                          "name": "uint112",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3038:7:2",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint112_$",
                                          "typeString": "type(uint112)"
                                        }
                                      ],
                                      "id": 805,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967269,
                                      "src": "3033:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3033:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint112",
                                      "typeString": "type(uint112)"
                                    }
                                  },
                                  "id": 809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3047:3:2",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "3033:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "3021:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 811,
                                  "name": "balance1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 796,
                                  "src": "3054:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3071:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint112_$",
                                          "typeString": "type(uint112)"
                                        },
                                        "typeName": {
                                          "id": 813,
                                          "name": "uint112",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3071:7:2",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint112_$",
                                          "typeString": "type(uint112)"
                                        }
                                      ],
                                      "id": 812,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967269,
                                      "src": "3066:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 815,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3066:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint112",
                                      "typeString": "type(uint112)"
                                    }
                                  },
                                  "id": 816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3080:3:2",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "3066:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "3054:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3021:62:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a204f564552464c4f57",
                              "id": 819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3097:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5d1f08cd66a1a59e841a286c7f2c877311b5d331d2315cd2fe3c5f05e833928",
                                "typeString": "literal_string \"UniswapV2: OVERFLOW\""
                              },
                              "value": "UniswapV2: OVERFLOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5d1f08cd66a1a59e841a286c7f2c877311b5d331d2315cd2fe3c5f05e833928",
                                "typeString": "literal_string \"UniswapV2: OVERFLOW\""
                              }
                            ],
                            "id": 803,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3000:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3000:128:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "3000:128:2"
                      },
                      {
                        "assignments": [
                          823
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 823,
                            "mutability": "mutable",
                            "name": "blockTimestamp",
                            "nameLocation": "3145:14:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 906,
                            "src": "3138:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 822,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3138:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 833,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 826,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "3169:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3175:9:2",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "3169:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3187:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3192:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "3187:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "3169:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3162:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 824,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3162:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3162:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3138:57:2"
                      },
                      {
                        "assignments": [
                          835
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 835,
                            "mutability": "mutable",
                            "name": "timeElapsed",
                            "nameLocation": "3212:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 906,
                            "src": "3205:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 834,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3205:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 839,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 836,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "3226:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 837,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "3243:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "3226:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3205:56:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 840,
                                "name": "timeElapsed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 835,
                                "src": "3298:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3312:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3298:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 843,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 798,
                                "src": "3317:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3330:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3317:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3298:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 847,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 800,
                              "src": "3335:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3348:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3335:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3298:51:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 882,
                        "nodeType": "IfStatement",
                        "src": "3294:396:2",
                        "trueBody": {
                          "id": 881,
                          "nodeType": "Block",
                          "src": "3351:339:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 851,
                                  "name": "price0CumulativeLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 630,
                                  "src": "3425:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 859,
                                            "name": "_reserve0",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 798,
                                            "src": "3504:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 856,
                                                "name": "_reserve1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 800,
                                                "src": "3487:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              ],
                                              "expression": {
                                                "id": 854,
                                                "name": "UQ112x112",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2342,
                                                "src": "3470:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_UQ112x112_$2342_$",
                                                  "typeString": "type(library UQ112x112)"
                                                }
                                              },
                                              "id": 855,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "3480:6:2",
                                              "memberName": "encode",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2322,
                                              "src": "3470:16:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
                                                "typeString": "function (uint112) pure returns (uint224)"
                                              }
                                            },
                                            "id": 857,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3470:27:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint224",
                                              "typeString": "uint224"
                                            }
                                          },
                                          "id": 858,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3498:5:2",
                                          "memberName": "uqdiv",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2341,
                                          "src": "3470:33:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$attached_to$_t_uint224_$",
                                            "typeString": "function (uint224,uint112) pure returns (uint224)"
                                          }
                                        },
                                        "id": 860,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3470:44:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3465:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 852,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3465:4:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3465:50:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 862,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 835,
                                    "src": "3534:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "3465:80:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3425:120:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 865,
                              "nodeType": "ExpressionStatement",
                              "src": "3425:120:2"
                            },
                            {
                              "expression": {
                                "id": 879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 866,
                                  "name": "price1CumulativeLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 632,
                                  "src": "3559:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 874,
                                            "name": "_reserve1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 800,
                                            "src": "3638:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 871,
                                                "name": "_reserve0",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 798,
                                                "src": "3621:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              ],
                                              "expression": {
                                                "id": 869,
                                                "name": "UQ112x112",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2342,
                                                "src": "3604:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_UQ112x112_$2342_$",
                                                  "typeString": "type(library UQ112x112)"
                                                }
                                              },
                                              "id": 870,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "3614:6:2",
                                              "memberName": "encode",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2322,
                                              "src": "3604:16:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint112_$returns$_t_uint224_$",
                                                "typeString": "function (uint112) pure returns (uint224)"
                                              }
                                            },
                                            "id": 872,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3604:27:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint224",
                                              "typeString": "uint224"
                                            }
                                          },
                                          "id": 873,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3632:5:2",
                                          "memberName": "uqdiv",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2341,
                                          "src": "3604:33:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint224_$_t_uint112_$returns$_t_uint224_$attached_to$_t_uint224_$",
                                            "typeString": "function (uint224,uint112) pure returns (uint224)"
                                          }
                                        },
                                        "id": 875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3604:44:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 868,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3599:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 867,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3599:4:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3599:50:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 877,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 835,
                                    "src": "3668:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "3599:80:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3559:120:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 880,
                              "nodeType": "ExpressionStatement",
                              "src": "3559:120:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 883,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "3699:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 886,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "3718:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3710:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 884,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "3710:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3710:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "3699:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 889,
                        "nodeType": "ExpressionStatement",
                        "src": "3699:28:2"
                      },
                      {
                        "expression": {
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 890,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "3737:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 893,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 796,
                                "src": "3756:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3748:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint112_$",
                                "typeString": "type(uint112)"
                              },
                              "typeName": {
                                "id": 891,
                                "name": "uint112",
                                "nodeType": "ElementaryTypeName",
                                "src": "3748:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3748:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "3737:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "3737:28:2"
                      },
                      {
                        "expression": {
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 897,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "3775:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 898,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "3796:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "3775:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "3775:35:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 902,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "3830:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 903,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "3840:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 901,
                            "name": "Sync",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 759,
                            "src": "3825:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint112,uint112)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3825:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "EmitStatement",
                        "src": "3820:29:2"
                      }
                    ]
                  },
                  "id": 907,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "2868:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "balance0",
                        "nameLocation": "2890:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "2885:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "balance1",
                        "nameLocation": "2913:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "2908:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2908:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "2939:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "2931:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 800,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "2966:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "2958:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 799,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2958:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2875:106:2"
                  },
                  "returnParameters": {
                    "id": 802,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2990:0:2"
                  },
                  "scope": 1652,
                  "src": "2859:997:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1014,
                    "nodeType": "Block",
                    "src": "4050:734:2",
                    "statements": [
                      {
                        "assignments": [
                          917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 917,
                            "mutability": "mutable",
                            "name": "feeTo",
                            "nameLocation": "4068:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1014,
                            "src": "4060:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 916,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4060:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 923,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 919,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 618,
                                  "src": "4094:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 918,
                                "name": "IUniswapV2Factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1921,
                                "src": "4076:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1921_$",
                                  "typeString": "type(contract IUniswapV2Factory)"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4076:26:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Factory_$1921",
                                "typeString": "contract IUniswapV2Factory"
                              }
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4103:5:2",
                            "memberName": "feeTo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1875,
                            "src": "4076:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4076:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4060:50:2"
                      },
                      {
                        "expression": {
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 924,
                            "name": "feeOn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "4120:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 925,
                              "name": "feeTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "4128:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4145:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4137:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 926,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4137:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4137:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4128:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4120:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "4120:27:2"
                      },
                      {
                        "assignments": [
                          934
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 934,
                            "mutability": "mutable",
                            "name": "_kLast",
                            "nameLocation": "4162:6:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1014,
                            "src": "4157:11:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 933,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4157:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 936,
                        "initialValue": {
                          "id": 935,
                          "name": "kLast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 634,
                          "src": "4171:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4157:19:2"
                      },
                      {
                        "condition": {
                          "id": 937,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 914,
                          "src": "4205:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1004,
                              "name": "_kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "4731:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4731:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1012,
                          "nodeType": "IfStatement",
                          "src": "4727:51:2",
                          "trueBody": {
                            "id": 1011,
                            "nodeType": "Block",
                            "src": "4744:34:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1009,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1007,
                                    "name": "kLast",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 634,
                                    "src": "4758:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 1008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4766:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4758:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1010,
                                "nodeType": "ExpressionStatement",
                                "src": "4758:9:2"
                              }
                            ]
                          }
                        },
                        "id": 1013,
                        "nodeType": "IfStatement",
                        "src": "4201:577:2",
                        "trueBody": {
                          "id": 1003,
                          "nodeType": "Block",
                          "src": "4212:509:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 938,
                                  "name": "_kLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 934,
                                  "src": "4230:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4240:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4230:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1002,
                              "nodeType": "IfStatement",
                              "src": "4226:485:2",
                              "trueBody": {
                                "id": 1001,
                                "nodeType": "Block",
                                "src": "4243:468:2",
                                "statements": [
                                  {
                                    "assignments": [
                                      942
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 942,
                                        "mutability": "mutable",
                                        "name": "rootK",
                                        "nameLocation": "4266:5:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1001,
                                        "src": "4261:10:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 941,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4261:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 953,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 950,
                                              "name": "_reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 911,
                                              "src": "4304:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 947,
                                                  "name": "_reserve0",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 909,
                                                  "src": "4289:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint112",
                                                    "typeString": "uint112"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint112",
                                                    "typeString": "uint112"
                                                  }
                                                ],
                                                "id": 946,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4284:4:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 945,
                                                  "name": "uint",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4284:4:2",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 948,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4284:15:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 949,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4300:3:2",
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2297,
                                            "src": "4284:19:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 951,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4284:30:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 943,
                                          "name": "Math",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2223,
                                          "src": "4274:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Math_$2223_$",
                                            "typeString": "type(library Math)"
                                          }
                                        },
                                        "id": 944,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4279:4:2",
                                        "memberName": "sqrt",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2222,
                                        "src": "4274:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 952,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4274:41:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4261:54:2"
                                  },
                                  {
                                    "assignments": [
                                      955
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 955,
                                        "mutability": "mutable",
                                        "name": "rootKLast",
                                        "nameLocation": "4338:9:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1001,
                                        "src": "4333:14:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 954,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4333:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 960,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 958,
                                          "name": "_kLast",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 934,
                                          "src": "4360:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 956,
                                          "name": "Math",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2223,
                                          "src": "4350:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Math_$2223_$",
                                            "typeString": "type(library Math)"
                                          }
                                        },
                                        "id": 957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4355:4:2",
                                        "memberName": "sqrt",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2222,
                                        "src": "4350:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 959,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4350:17:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "4333:34:2"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 963,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 961,
                                        "name": "rootK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 942,
                                        "src": "4389:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 962,
                                        "name": "rootKLast",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 955,
                                        "src": "4397:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4389:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1000,
                                    "nodeType": "IfStatement",
                                    "src": "4385:312:2",
                                    "trueBody": {
                                      "id": 999,
                                      "nodeType": "Block",
                                      "src": "4408:289:2",
                                      "statements": [
                                        {
                                          "assignments": [
                                            965
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 965,
                                              "mutability": "mutable",
                                              "name": "numerator",
                                              "nameLocation": "4435:9:2",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 999,
                                              "src": "4430:14:2",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 964,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4430:4:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 973,
                                          "initialValue": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 970,
                                                    "name": "rootKLast",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 955,
                                                    "src": "4473:9:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 968,
                                                    "name": "rootK",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 942,
                                                    "src": "4463:5:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 969,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "4469:3:2",
                                                  "memberName": "sub",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 2269,
                                                  "src": "4463:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 971,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4463:20:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "id": 966,
                                                "name": "totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21,
                                                "src": "4447:11:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 967,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "4459:3:2",
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2297,
                                              "src": "4447:15:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 972,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4447:37:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "4430:54:2"
                                        },
                                        {
                                          "assignments": [
                                            975
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 975,
                                              "mutability": "mutable",
                                              "name": "denominator",
                                              "nameLocation": "4511:11:2",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 999,
                                              "src": "4506:16:2",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 974,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4506:4:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 983,
                                          "initialValue": {
                                            "arguments": [
                                              {
                                                "id": 981,
                                                "name": "rootKLast",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 955,
                                                "src": "4542:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "hexValue": "35",
                                                    "id": 978,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4535:1:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_5_by_1",
                                                      "typeString": "int_const 5"
                                                    },
                                                    "value": "5"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_5_by_1",
                                                      "typeString": "int_const 5"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "id": 976,
                                                    "name": "rootK",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 942,
                                                    "src": "4525:5:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 977,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "4531:3:2",
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 2297,
                                                  "src": "4525:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 979,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4525:12:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 980,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "4538:3:2",
                                              "memberName": "add",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2247,
                                              "src": "4525:16:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 982,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4525:27:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "4506:46:2"
                                        },
                                        {
                                          "assignments": [
                                            985
                                          ],
                                          "declarations": [
                                            {
                                              "constant": false,
                                              "id": 985,
                                              "mutability": "mutable",
                                              "name": "liquidity",
                                              "nameLocation": "4579:9:2",
                                              "nodeType": "VariableDeclaration",
                                              "scope": 999,
                                              "src": "4574:14:2",
                                              "stateVariable": false,
                                              "storageLocation": "default",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "typeName": {
                                                "id": 984,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4574:4:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "visibility": "internal"
                                            }
                                          ],
                                          "id": 989,
                                          "initialValue": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 988,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 986,
                                              "name": "numerator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 965,
                                              "src": "4591:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "id": 987,
                                              "name": "denominator",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 975,
                                              "src": "4603:11:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "4591:23:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "VariableDeclarationStatement",
                                          "src": "4574:40:2"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 992,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 990,
                                              "name": "liquidity",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 985,
                                              "src": "4640:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "hexValue": "30",
                                              "id": 991,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "4652:1:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "src": "4640:13:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 998,
                                          "nodeType": "IfStatement",
                                          "src": "4636:42:2",
                                          "trueBody": {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "id": 994,
                                                  "name": "feeTo",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 917,
                                                  "src": "4661:5:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                {
                                                  "id": 995,
                                                  "name": "liquidity",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 985,
                                                  "src": "4668:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "id": 993,
                                                "name": "_mint",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 109,
                                                "src": "4655:5:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                  "typeString": "function (address,uint256)"
                                                }
                                              },
                                              "id": 996,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4655:23:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                              }
                                            },
                                            "id": 997,
                                            "nodeType": "ExpressionStatement",
                                            "src": "4655:23:2"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1015,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mintFee",
                  "nameLocation": "3952:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "_reserve0",
                        "nameLocation": "3978:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1015,
                        "src": "3970:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "3970:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "_reserve1",
                        "nameLocation": "4005:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1015,
                        "src": "3997:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "3997:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3960:60:2"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "feeOn",
                        "nameLocation": "4043:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1015,
                        "src": "4038:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4038:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4037:12:2"
                  },
                  "scope": 1652,
                  "src": "3943:841:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1163,
                    "nodeType": "Block",
                    "src": "4958:1199:2",
                    "statements": [
                      {
                        "assignments": [
                          1025,
                          1027,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1025,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "4977:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "4969:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1024,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "4969:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1027,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "4996:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "4988:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1026,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "4988:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1030,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1028,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "5010:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5010:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4968:55:2"
                      },
                      {
                        "assignments": [
                          1032
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1032,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "5053:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "5048:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1031,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5048:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1042,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1039,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5097:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5089:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1037,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5089:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5089:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1034,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 620,
                                  "src": "5071:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1033,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1736,
                                "src": "5064:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5064:14:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1736",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5079:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1697,
                            "src": "5064:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5064:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5048:55:2"
                      },
                      {
                        "assignments": [
                          1044
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1044,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "5118:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "5113:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1043,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5113:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1054,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1051,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5162:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5154:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1049,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5154:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5154:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1046,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "5136:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1045,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1736,
                                "src": "5129:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5129:14:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1736",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5144:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1697,
                            "src": "5129:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5129:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5113:55:2"
                      },
                      {
                        "assignments": [
                          1056
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1056,
                            "mutability": "mutable",
                            "name": "amount0",
                            "nameLocation": "5183:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "5178:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1055,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5178:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1061,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1059,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "5206:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "expression": {
                              "id": 1057,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1032,
                              "src": "5193:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5202:3:2",
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2269,
                            "src": "5193:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5193:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5178:38:2"
                      },
                      {
                        "assignments": [
                          1063
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1063,
                            "mutability": "mutable",
                            "name": "amount1",
                            "nameLocation": "5231:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "5226:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1062,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5226:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1068,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1066,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "5254:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "expression": {
                              "id": 1064,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "5241:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5250:3:2",
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2269,
                            "src": "5241:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5241:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5226:38:2"
                      },
                      {
                        "assignments": [
                          1070
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1070,
                            "mutability": "mutable",
                            "name": "feeOn",
                            "nameLocation": "5279:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "5274:10:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1069,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5274:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1075,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1072,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "5296:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1073,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "5307:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1071,
                            "name": "_mintFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "5287:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
                              "typeString": "function (uint112,uint112) returns (bool)"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5287:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5274:43:2"
                      },
                      {
                        "assignments": [
                          1077
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1077,
                            "mutability": "mutable",
                            "name": "_totalSupply",
                            "nameLocation": "5332:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1163,
                            "src": "5327:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1076,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5327:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1079,
                        "initialValue": {
                          "id": 1078,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "5347:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5327:31:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1080,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "5450:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5466:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5450:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1123,
                          "nodeType": "Block",
                          "src": "5671:169:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1105,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1022,
                                  "src": "5685:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 1110,
                                            "name": "_totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1077,
                                            "src": "5735:12:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1108,
                                            "name": "amount0",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1056,
                                            "src": "5723:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1109,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5731:3:2",
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2297,
                                          "src": "5723:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5723:25:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1112,
                                        "name": "_reserve0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1025,
                                        "src": "5751:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "5723:37:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1119,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 1116,
                                            "name": "_totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1077,
                                            "src": "5790:12:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1114,
                                            "name": "amount1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1063,
                                            "src": "5778:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1115,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5786:3:2",
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2297,
                                          "src": "5778:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5778:25:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1118,
                                        "name": "_reserve1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1027,
                                        "src": "5806:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint112",
                                          "typeString": "uint112"
                                        }
                                      },
                                      "src": "5778:37:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1106,
                                      "name": "Math",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2223,
                                      "src": "5697:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Math_$2223_$",
                                        "typeString": "type(library Math)"
                                      }
                                    },
                                    "id": 1107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5702:3:2",
                                    "memberName": "min",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2168,
                                    "src": "5697:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1120,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5697:132:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5685:144:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1122,
                              "nodeType": "ExpressionStatement",
                              "src": "5685:144:2"
                            }
                          ]
                        },
                        "id": 1124,
                        "nodeType": "IfStatement",
                        "src": "5446:394:2",
                        "trueBody": {
                          "id": 1104,
                          "nodeType": "Block",
                          "src": "5469:196:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1083,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1022,
                                  "src": "5483:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1092,
                                      "name": "MINIMUM_LIQUIDITY",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 605,
                                      "src": "5531:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 1088,
                                              "name": "amount1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1063,
                                              "src": "5517:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 1086,
                                              "name": "amount0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1056,
                                              "src": "5505:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1087,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5513:3:2",
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2297,
                                            "src": "5505:11:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1089,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5505:20:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1084,
                                          "name": "Math",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2223,
                                          "src": "5495:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Math_$2223_$",
                                            "typeString": "type(library Math)"
                                          }
                                        },
                                        "id": 1085,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5500:4:2",
                                        "memberName": "sqrt",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2222,
                                        "src": "5495:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1090,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5495:31:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1091,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5527:3:2",
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2269,
                                    "src": "5495:35:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5495:54:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5483:66:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1095,
                              "nodeType": "ExpressionStatement",
                              "src": "5483:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1099,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5577:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1098,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5569:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1097,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5569:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5569:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1101,
                                    "name": "MINIMUM_LIQUIDITY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 605,
                                    "src": "5581:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1096,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 109,
                                  "src": "5563:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5563:36:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1103,
                              "nodeType": "ExpressionStatement",
                              "src": "5563:36:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1126,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1022,
                                "src": "5857:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5869:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5857:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4d494e544544",
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5872:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
                              },
                              "value": "UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6591c9f5bf1fefaad109b76a20e25c857b696080c952191f86220f001a83663e",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED\""
                              }
                            ],
                            "id": 1125,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5849:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5849:66:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1131,
                        "nodeType": "ExpressionStatement",
                        "src": "5849:66:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1133,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1017,
                              "src": "5931:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1134,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1022,
                              "src": "5935:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1132,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "5925:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5925:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1136,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:20:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1138,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1032,
                              "src": "5963:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1139,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "5973:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1140,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "5983:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1141,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "5994:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1137,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "5955:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5955:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1143,
                        "nodeType": "ExpressionStatement",
                        "src": "5955:49:2"
                      },
                      {
                        "condition": {
                          "id": 1144,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1070,
                          "src": "6018:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1155,
                        "nodeType": "IfStatement",
                        "src": "6014:47:2",
                        "trueBody": {
                          "expression": {
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1145,
                              "name": "kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "6025:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1151,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "6052:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1148,
                                      "name": "reserve0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 624,
                                      "src": "6038:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint112",
                                        "typeString": "uint112"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint112",
                                        "typeString": "uint112"
                                      }
                                    ],
                                    "id": 1147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6033:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1146,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6033:4:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6033:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6048:3:2",
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "6033:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6033:28:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6025:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1154,
                          "nodeType": "ExpressionStatement",
                          "src": "6025:36:2"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1157,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6121:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6125:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6121:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1159,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "6133:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1160,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1063,
                              "src": "6142:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1156,
                            "name": "Mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "6116:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6116:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1162,
                        "nodeType": "EmitStatement",
                        "src": "6111:39:2"
                      }
                    ]
                  },
                  "functionSelector": "6a627842",
                  "id": 1164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1020,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1019,
                        "name": "lock",
                        "nameLocations": [
                          "4928:4:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 656,
                        "src": "4928:4:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4928:4:2"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "4902:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1017,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4915:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1164,
                        "src": "4907:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4907:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4906:12:2"
                  },
                  "returnParameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1022,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "4947:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1164,
                        "src": "4942:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4942:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4941:16:2"
                  },
                  "scope": 1652,
                  "src": "4893:1264:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1334,
                    "nodeType": "Block",
                    "src": "6357:1339:2",
                    "statements": [
                      {
                        "assignments": [
                          1176,
                          1178,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1176,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "6376:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6368:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1175,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "6368:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1178,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "6395:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6387:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1177,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "6387:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1181,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1179,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "6409:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6409:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6367:55:2"
                      },
                      {
                        "assignments": [
                          1183
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1183,
                            "mutability": "mutable",
                            "name": "_token0",
                            "nameLocation": "6455:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6447:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1182,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6447:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1185,
                        "initialValue": {
                          "id": 1184,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "6465:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6447:24:2"
                      },
                      {
                        "assignments": [
                          1187
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1187,
                            "mutability": "mutable",
                            "name": "_token1",
                            "nameLocation": "6504:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6496:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1186,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6496:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1189,
                        "initialValue": {
                          "id": 1188,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 622,
                          "src": "6514:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6496:24:2"
                      },
                      {
                        "assignments": [
                          1191
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1191,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "6550:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6545:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1190,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6545:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1201,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1198,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6595:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6587:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1196,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6587:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6587:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1193,
                                  "name": "_token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1183,
                                  "src": "6568:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1192,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1736,
                                "src": "6561:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6561:15:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1736",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6577:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1697,
                            "src": "6561:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6561:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6545:56:2"
                      },
                      {
                        "assignments": [
                          1203
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1203,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "6616:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6611:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1202,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6611:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1213,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1210,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "6661:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6653:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1208,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6653:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6653:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1205,
                                  "name": "_token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1187,
                                  "src": "6634:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1204,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1736,
                                "src": "6627:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6627:15:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1736",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6643:9:2",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1697,
                            "src": "6627:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6627:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6611:56:2"
                      },
                      {
                        "assignments": [
                          1215
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1215,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nameLocation": "6682:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6677:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1214,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6677:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1222,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1216,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "6694:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1221,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 1219,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "6712:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                  "typeString": "contract UniswapV2Pair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                  "typeString": "contract UniswapV2Pair"
                                }
                              ],
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6704:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1217,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6704:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6704:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6694:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6677:41:2"
                      },
                      {
                        "assignments": [
                          1224
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1224,
                            "mutability": "mutable",
                            "name": "feeOn",
                            "nameLocation": "6734:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6729:10:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1223,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6729:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1229,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1226,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1176,
                              "src": "6751:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1227,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1178,
                              "src": "6762:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1225,
                            "name": "_mintFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1015,
                            "src": "6742:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$_t_bool_$",
                              "typeString": "function (uint112,uint112) returns (bool)"
                            }
                          },
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6742:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6729:43:2"
                      },
                      {
                        "assignments": [
                          1231
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1231,
                            "mutability": "mutable",
                            "name": "_totalSupply",
                            "nameLocation": "6787:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1334,
                            "src": "6782:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1230,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6782:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1233,
                        "initialValue": {
                          "id": 1232,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "6802:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6782:31:2"
                      },
                      {
                        "expression": {
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1234,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1171,
                            "src": "6901:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1237,
                                  "name": "balance0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1191,
                                  "src": "6925:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1235,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1215,
                                  "src": "6911:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6921:3:2",
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "6911:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6911:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1239,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1231,
                              "src": "6937:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6911:38:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6901:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1242,
                        "nodeType": "ExpressionStatement",
                        "src": "6901:48:2"
                      },
                      {
                        "expression": {
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1243,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "7007:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1246,
                                  "name": "balance1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1203,
                                  "src": "7031:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1244,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1215,
                                  "src": "7017:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7027:3:2",
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "7017:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7017:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1248,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1231,
                              "src": "7043:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7017:38:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7007:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1251,
                        "nodeType": "ExpressionStatement",
                        "src": "7007:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1253,
                                  "name": "amount0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1171,
                                  "src": "7134:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7144:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7134:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1256,
                                  "name": "amount1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1173,
                                  "src": "7149:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7159:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7149:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7134:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20494e53554646494349454e545f4c49515549444954595f4255524e4544",
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7174:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_57ebfb4dd8b5082cdba0f23c17077e3b0ecb9782a51e0e9a15e9bc8c4b30c562",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED\""
                              },
                              "value": "UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_57ebfb4dd8b5082cdba0f23c17077e3b0ecb9782a51e0e9a15e9bc8c4b30c562",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED\""
                              }
                            ],
                            "id": 1252,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7113:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7113:113:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "7113:113:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1266,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "7250:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                    "typeString": "contract UniswapV2Pair"
                                  }
                                ],
                                "id": 1265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7242:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1264,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7242:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7242:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1268,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "7257:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1263,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "7236:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7236:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "7236:31:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1272,
                              "name": "_token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "7291:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1273,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7300:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1274,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "7304:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1271,
                            "name": "_safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "7277:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7277:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1276,
                        "nodeType": "ExpressionStatement",
                        "src": "7277:35:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1278,
                              "name": "_token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "7336:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1279,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7345:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1280,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "7349:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1277,
                            "name": "_safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "7322:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7322:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1282,
                        "nodeType": "ExpressionStatement",
                        "src": "7322:35:2"
                      },
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1283,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1191,
                            "src": "7367:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1290,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "7412:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                      "typeString": "contract UniswapV2Pair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                      "typeString": "contract UniswapV2Pair"
                                    }
                                  ],
                                  "id": 1289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7404:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1288,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7404:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7404:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1285,
                                    "name": "_token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "7385:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1284,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1736,
                                  "src": "7378:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7378:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1736",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7394:9:2",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1697,
                              "src": "7378:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7378:40:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7367:51:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "7367:51:2"
                      },
                      {
                        "expression": {
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1295,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "7428:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1302,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "7473:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                      "typeString": "contract UniswapV2Pair"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                      "typeString": "contract UniswapV2Pair"
                                    }
                                  ],
                                  "id": 1301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7465:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1300,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7465:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7465:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1297,
                                    "name": "_token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1187,
                                    "src": "7446:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1296,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1736,
                                  "src": "7439:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7439:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1736",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7455:9:2",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1697,
                              "src": "7439:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7439:40:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7428:51:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "7428:51:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1308,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "7498:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1309,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "7508:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1310,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1176,
                              "src": "7518:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1311,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1178,
                              "src": "7529:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1307,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "7490:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7490:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "7490:49:2"
                      },
                      {
                        "condition": {
                          "id": 1314,
                          "name": "feeOn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1224,
                          "src": "7553:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1325,
                        "nodeType": "IfStatement",
                        "src": "7549:47:2",
                        "trueBody": {
                          "expression": {
                            "id": 1323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1315,
                              "name": "kLast",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "7560:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 1321,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "7587:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1318,
                                      "name": "reserve0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 624,
                                      "src": "7573:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint112",
                                        "typeString": "uint112"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint112",
                                        "typeString": "uint112"
                                      }
                                    ],
                                    "id": 1317,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7568:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1316,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7568:4:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7568:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7583:3:2",
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2297,
                                "src": "7568:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7568:28:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7560:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1324,
                          "nodeType": "ExpressionStatement",
                          "src": "7560:36:2"
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1327,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7656:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7660:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7656:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1329,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "7668:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1330,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "7677:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1331,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7686:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1326,
                            "name": "Burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "7651:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,address)"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7651:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1333,
                        "nodeType": "EmitStatement",
                        "src": "7646:43:2"
                      }
                    ]
                  },
                  "functionSelector": "89afcb44",
                  "id": 1335,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1169,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1168,
                        "name": "lock",
                        "nameLocations": [
                          "6315:4:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 656,
                        "src": "6315:4:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6315:4:2"
                    }
                  ],
                  "name": "burn",
                  "nameLocation": "6275:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6297:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "6289:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6289:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6279:26:2"
                  },
                  "returnParameters": {
                    "id": 1174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "6334:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "6329:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6329:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1173,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "6348:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "6343:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1172,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6343:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6328:28:2"
                  },
                  "scope": 1652,
                  "src": "6266:1430:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1571,
                    "nodeType": "Block",
                    "src": "7938:2162:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1349,
                                  "name": "amount0Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1337,
                                  "src": "7969:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7982:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7969:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1352,
                                  "name": "amount1Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1339,
                                  "src": "7987:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8000:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7987:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7969:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20494e53554646494349454e545f4f55545055545f414d4f554e54",
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8015:39:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\""
                              },
                              "value": "UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_05339493da7e2cbe77e17beadf6b91132eb307939495f5f1797bf88d95539e83",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT\""
                              }
                            ],
                            "id": 1348,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7948:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7948:116:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "7948:116:2"
                      },
                      {
                        "assignments": [
                          1360,
                          1362,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1360,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "8083:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
                            "src": "8075:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1359,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "8075:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1362,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "8102:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
                            "src": "8094:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 1361,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "8094:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1365,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1363,
                            "name": "getReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "8116:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8116:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8074:55:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1367,
                                  "name": "amount0Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1337,
                                  "src": "8175:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1368,
                                  "name": "_reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1360,
                                  "src": "8188:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "8175:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1370,
                                  "name": "amount1Out",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1339,
                                  "src": "8201:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1371,
                                  "name": "_reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1362,
                                  "src": "8214:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "8201:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8175:48:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20494e53554646494349454e545f4c4951554944495459",
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8237:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3f354ef449b2a9b081220ce21f57691008110b653edc191d8288e60cef58bb5f",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY\""
                              },
                              "value": "UniswapV2: INSUFFICIENT_LIQUIDITY"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3f354ef449b2a9b081220ce21f57691008110b653edc191d8288e60cef58bb5f",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_LIQUIDITY\""
                              }
                            ],
                            "id": 1366,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "8154:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8154:128:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "8154:128:2"
                      },
                      {
                        "assignments": [
                          1378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1378,
                            "mutability": "mutable",
                            "name": "balance0",
                            "nameLocation": "8298:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
                            "src": "8293:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1377,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8293:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1379,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8293:13:2"
                      },
                      {
                        "assignments": [
                          1381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1381,
                            "mutability": "mutable",
                            "name": "balance1",
                            "nameLocation": "8321:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
                            "src": "8316:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1380,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8316:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1382,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8316:13:2"
                      },
                      {
                        "id": 1462,
                        "nodeType": "Block",
                        "src": "8339:799:2",
                        "statements": [
                          {
                            "assignments": [
                              1384
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1384,
                                "mutability": "mutable",
                                "name": "_token0",
                                "nameLocation": "8428:7:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1462,
                                "src": "8420:15:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 1383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8420:7:2",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1386,
                            "initialValue": {
                              "id": 1385,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "8438:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8420:24:2"
                          },
                          {
                            "assignments": [
                              1388
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1388,
                                "mutability": "mutable",
                                "name": "_token1",
                                "nameLocation": "8466:7:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1462,
                                "src": "8458:15:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 1387,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8458:7:2",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1390,
                            "initialValue": {
                              "id": 1389,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "8476:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8458:24:2"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1392,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1341,
                                      "src": "8504:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "id": 1393,
                                      "name": "_token0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1384,
                                      "src": "8510:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "8504:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1397,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1395,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1341,
                                      "src": "8521:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "id": 1396,
                                      "name": "_token1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1388,
                                      "src": "8527:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "8521:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "8504:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "556e697377617056323a20494e56414c49445f544f",
                                  "id": 1399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8536:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_25d395026e6e4dd4e9808c7d6d3dd1f45abaf4874ae71f7161fff58de03154d3",
                                    "typeString": "literal_string \"UniswapV2: INVALID_TO\""
                                  },
                                  "value": "UniswapV2: INVALID_TO"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_25d395026e6e4dd4e9808c7d6d3dd1f45abaf4874ae71f7161fff58de03154d3",
                                    "typeString": "literal_string \"UniswapV2: INVALID_TO\""
                                  }
                                ],
                                "id": 1391,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "8496:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8496:64:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1401,
                            "nodeType": "ExpressionStatement",
                            "src": "8496:64:2"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1402,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1337,
                                "src": "8578:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8591:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8578:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1411,
                            "nodeType": "IfStatement",
                            "src": "8574:58:2",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1406,
                                    "name": "_token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1384,
                                    "src": "8608:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1407,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1341,
                                    "src": "8617:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1408,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1337,
                                    "src": "8621:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1405,
                                  "name": "_safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 721,
                                  "src": "8594:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8594:38:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1410,
                              "nodeType": "ExpressionStatement",
                              "src": "8594:38:2"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1412,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1339,
                                "src": "8684:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8697:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8684:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1421,
                            "nodeType": "IfStatement",
                            "src": "8680:58:2",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1416,
                                    "name": "_token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1388,
                                    "src": "8714:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1417,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1341,
                                    "src": "8723:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1418,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1339,
                                    "src": "8727:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1415,
                                  "name": "_safeTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 721,
                                  "src": "8700:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8700:38:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1420,
                              "nodeType": "ExpressionStatement",
                              "src": "8700:38:2"
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1422,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "8790:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8795:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "8790:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8804:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8790:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1437,
                            "nodeType": "IfStatement",
                            "src": "8786:211:2",
                            "trueBody": {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1430,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "8879:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8883:6:2",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8879:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1432,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1337,
                                    "src": "8911:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1433,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1339,
                                    "src": "8943:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1434,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1343,
                                    "src": "8975:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1427,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1341,
                                        "src": "8840:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1426,
                                      "name": "IUniswapV2Callee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1750,
                                      "src": "8823:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IUniswapV2Callee_$1750_$",
                                        "typeString": "type(contract IUniswapV2Callee)"
                                      }
                                    },
                                    "id": 1428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8823:20:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV2Callee_$1750",
                                      "typeString": "contract IUniswapV2Callee"
                                    }
                                  },
                                  "id": 1429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8844:13:2",
                                  "memberName": "uniswapV2Call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1749,
                                  "src": "8823:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,uint256,uint256,bytes memory) external"
                                  }
                                },
                                "id": 1435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8823:174:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1436,
                              "nodeType": "ExpressionStatement",
                              "src": "8823:174:2"
                            }
                          },
                          {
                            "expression": {
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1438,
                                "name": "balance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1378,
                                "src": "9011:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1445,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "9056:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                          "typeString": "contract UniswapV2Pair"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                          "typeString": "contract UniswapV2Pair"
                                        }
                                      ],
                                      "id": 1444,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9048:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1443,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9048:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9048:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1440,
                                        "name": "_token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1384,
                                        "src": "9029:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1439,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1736,
                                      "src": "9022:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9022:15:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1736",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9038:9:2",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1697,
                                  "src": "9022:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9022:40:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9011:51:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1449,
                            "nodeType": "ExpressionStatement",
                            "src": "9011:51:2"
                          },
                          {
                            "expression": {
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1450,
                                "name": "balance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1381,
                                "src": "9076:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1457,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "9121:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                          "typeString": "contract UniswapV2Pair"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                          "typeString": "contract UniswapV2Pair"
                                        }
                                      ],
                                      "id": 1456,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9113:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1455,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9113:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9113:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1452,
                                        "name": "_token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1388,
                                        "src": "9094:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1451,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1736,
                                      "src": "9087:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1453,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9087:15:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1736",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9103:9:2",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1697,
                                  "src": "9087:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9087:40:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9076:51:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1461,
                            "nodeType": "ExpressionStatement",
                            "src": "9076:51:2"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          1464
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1464,
                            "mutability": "mutable",
                            "name": "amount0In",
                            "nameLocation": "9152:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
                            "src": "9147:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1463,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9147:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1478,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1465,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "9164:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1466,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1360,
                                "src": "9175:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1467,
                                "name": "amount0Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1337,
                                "src": "9187:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9175:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9164:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9262:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9164:99:2",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1470,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "9212:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1471,
                                    "name": "_reserve0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1360,
                                    "src": "9224:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1472,
                                    "name": "amount0Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1337,
                                    "src": "9236:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9224:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1474,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9223:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9212:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9147:116:2"
                      },
                      {
                        "assignments": [
                          1480
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1480,
                            "mutability": "mutable",
                            "name": "amount1In",
                            "nameLocation": "9278:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1571,
                            "src": "9273:14:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1479,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9273:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1494,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1481,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "9290:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1482,
                                "name": "_reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1362,
                                "src": "9301:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1483,
                                "name": "amount1Out",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1339,
                                "src": "9313:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9301:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9290:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "30",
                            "id": 1492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9388:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 1493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9290:99:2",
                          "trueExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1486,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "9338:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1487,
                                    "name": "_reserve1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1362,
                                    "src": "9350:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1488,
                                    "name": "amount1Out",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1339,
                                    "src": "9362:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9350:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1490,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9349:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9338:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9273:116:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1496,
                                  "name": "amount0In",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1464,
                                  "src": "9420:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9432:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9420:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1499,
                                  "name": "amount1In",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1480,
                                  "src": "9437:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9449:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9437:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9420:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e697377617056323a20494e53554646494349454e545f494e5055545f414d4f554e54",
                              "id": 1503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9464:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10e2efc32d8a31d3b2c11a545b3ed09c2dbabc58ef6de4033929d0002e425b67",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\""
                              },
                              "value": "UniswapV2: INSUFFICIENT_INPUT_AMOUNT"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_10e2efc32d8a31d3b2c11a545b3ed09c2dbabc58ef6de4033929d0002e425b67",
                                "typeString": "literal_string \"UniswapV2: INSUFFICIENT_INPUT_AMOUNT\""
                              }
                            ],
                            "id": 1495,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "9399:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9399:113:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1505,
                        "nodeType": "ExpressionStatement",
                        "src": "9399:113:2"
                      },
                      {
                        "id": 1553,
                        "nodeType": "Block",
                        "src": "9522:431:2",
                        "statements": [
                          {
                            "assignments": [
                              1507
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1507,
                                "mutability": "mutable",
                                "name": "balance0Adjusted",
                                "nameLocation": "9617:16:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1553,
                                "src": "9612:21:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1506,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9612:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1518,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "33",
                                      "id": 1515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9673:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1513,
                                      "name": "amount0In",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1464,
                                      "src": "9659:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9669:3:2",
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2297,
                                    "src": "9659:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9659:16:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31303030",
                                      "id": 1510,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9649:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1508,
                                      "name": "balance0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1378,
                                      "src": "9636:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9645:3:2",
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2297,
                                    "src": "9636:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9636:18:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9655:3:2",
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2269,
                                "src": "9636:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9636:40:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9612:64:2"
                          },
                          {
                            "assignments": [
                              1520
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1520,
                                "mutability": "mutable",
                                "name": "balance1Adjusted",
                                "nameLocation": "9695:16:2",
                                "nodeType": "VariableDeclaration",
                                "scope": 1553,
                                "src": "9690:21:2",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1519,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9690:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1531,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "33",
                                      "id": 1528,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9751:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1526,
                                      "name": "amount1In",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1480,
                                      "src": "9737:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9747:3:2",
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2297,
                                    "src": "9737:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9737:16:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "31303030",
                                      "id": 1523,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9727:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1521,
                                      "name": "balance1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1381,
                                      "src": "9714:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1522,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9723:3:2",
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2297,
                                    "src": "9714:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1524,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9714:18:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9733:3:2",
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2269,
                                "src": "9714:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9714:40:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9690:64:2"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 1535,
                                        "name": "balance1Adjusted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1520,
                                        "src": "9814:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1533,
                                        "name": "balance0Adjusted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1507,
                                        "src": "9793:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9810:3:2",
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2297,
                                      "src": "9793:20:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9793:38:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_1000000_by_1",
                                          "typeString": "int_const 1000000"
                                        },
                                        "id": 1547,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "31303030",
                                          "id": 1545,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9886:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1000_by_1",
                                            "typeString": "int_const 1000"
                                          },
                                          "value": "1000"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 1546,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9894:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "9886:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000_by_1",
                                          "typeString": "int_const 1000000"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000_by_1",
                                          "typeString": "int_const 1000000"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1542,
                                            "name": "_reserve1",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1362,
                                            "src": "9871:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint112",
                                              "typeString": "uint112"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1539,
                                                "name": "_reserve0",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1360,
                                                "src": "9856:9:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint112",
                                                  "typeString": "uint112"
                                                }
                                              ],
                                              "id": 1538,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "9851:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 1537,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9851:4:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1540,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9851:15:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1541,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "9867:3:2",
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2297,
                                          "src": "9851:19:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1543,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9851:30:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1544,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "9882:3:2",
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2297,
                                      "src": "9851:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9851:45:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9793:103:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "556e697377617056323a204b",
                                  "id": 1550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9914:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
                                    "typeString": "literal_string \"UniswapV2: K\""
                                  },
                                  "value": "UniswapV2: K"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_50b159bbb975f5448705db79eafd212ba91c20fe5a110a13759239545d3339af",
                                    "typeString": "literal_string \"UniswapV2: K\""
                                  }
                                ],
                                "id": 1532,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "9768:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9768:174:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1552,
                            "nodeType": "ExpressionStatement",
                            "src": "9768:174:2"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1555,
                              "name": "balance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "9971:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1556,
                              "name": "balance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "9981:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1557,
                              "name": "_reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1360,
                              "src": "9991:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1558,
                              "name": "_reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1362,
                              "src": "10002:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1554,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "9963:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 1559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9963:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1560,
                        "nodeType": "ExpressionStatement",
                        "src": "9963:49:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10032:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10036:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10032:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1564,
                              "name": "amount0In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "10044:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1565,
                              "name": "amount1In",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1480,
                              "src": "10055:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1566,
                              "name": "amount0Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1337,
                              "src": "10066:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1567,
                              "name": "amount1Out",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "10078:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1568,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1341,
                              "src": "10090:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1561,
                            "name": "Swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "10027:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256,address)"
                            }
                          },
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10027:66:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1570,
                        "nodeType": "EmitStatement",
                        "src": "10022:71:2"
                      }
                    ]
                  },
                  "functionSelector": "022c0d9f",
                  "id": 1572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1346,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1345,
                        "name": "lock",
                        "nameLocations": [
                          "7933:4:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 656,
                        "src": "7933:4:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7933:4:2"
                    }
                  ],
                  "name": "swap",
                  "nameLocation": "7814:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1337,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "7833:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1572,
                        "src": "7828:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7828:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1339,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "7858:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1572,
                        "src": "7853:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1338,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7853:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7886:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1572,
                        "src": "7878:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7878:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7913:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1572,
                        "src": "7898:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7898:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7818:105:2"
                  },
                  "returnParameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7938:0:2"
                  },
                  "scope": 1652,
                  "src": "7805:2295:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1621,
                    "nodeType": "Block",
                    "src": "10186:381:2",
                    "statements": [
                      {
                        "assignments": [
                          1580
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1580,
                            "mutability": "mutable",
                            "name": "_token0",
                            "nameLocation": "10204:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "10196:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1579,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10196:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1582,
                        "initialValue": {
                          "id": 1581,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "10214:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10196:24:2"
                      },
                      {
                        "assignments": [
                          1584
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1584,
                            "mutability": "mutable",
                            "name": "_token1",
                            "nameLocation": "10253:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "10245:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1583,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10245:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1586,
                        "initialValue": {
                          "id": 1585,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 622,
                          "src": "10263:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10245:24:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1588,
                              "name": "_token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1580,
                              "src": "10321:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1589,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "10342:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1600,
                                  "name": "reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 624,
                                  "src": "10403:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1596,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "10392:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                            "typeString": "contract UniswapV2Pair"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                            "typeString": "contract UniswapV2Pair"
                                          }
                                        ],
                                        "id": 1595,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10384:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1594,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10384:7:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1597,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10384:13:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1591,
                                          "name": "_token0",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1580,
                                          "src": "10365:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1590,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1736,
                                        "src": "10358:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1592,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10358:15:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1736",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1593,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10374:9:2",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1697,
                                    "src": "10358:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10358:40:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10399:3:2",
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2269,
                                "src": "10358:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10358:54:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1587,
                            "name": "_safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "10294:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10294:128:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1603,
                        "nodeType": "ExpressionStatement",
                        "src": "10294:128:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1605,
                              "name": "_token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1584,
                              "src": "10459:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1606,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1574,
                              "src": "10480:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1617,
                                  "name": "reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "10541:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1613,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967268,
                                          "src": "10530:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                            "typeString": "contract UniswapV2Pair"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                            "typeString": "contract UniswapV2Pair"
                                          }
                                        ],
                                        "id": 1612,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10522:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1611,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10522:7:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1614,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10522:13:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1608,
                                          "name": "_token1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1584,
                                          "src": "10503:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1607,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1736,
                                        "src": "10496:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10496:15:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1736",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1610,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10512:9:2",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1697,
                                    "src": "10496:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10496:40:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10537:3:2",
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2269,
                                "src": "10496:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10496:54:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1604,
                            "name": "_safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "10432:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10432:128:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1620,
                        "nodeType": "ExpressionStatement",
                        "src": "10432:128:2"
                      }
                    ]
                  },
                  "functionSelector": "bc25cf77",
                  "id": 1622,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1577,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1576,
                        "name": "lock",
                        "nameLocations": [
                          "10181:4:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 656,
                        "src": "10181:4:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10181:4:2"
                    }
                  ],
                  "name": "skim",
                  "nameLocation": "10155:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1574,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "10168:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1622,
                        "src": "10160:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10160:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10159:12:2"
                  },
                  "returnParameters": {
                    "id": 1578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10186:0:2"
                  },
                  "scope": 1652,
                  "src": "10146:421:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1650,
                    "nodeType": "Block",
                    "src": "10643:184:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1634,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "10707:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                        "typeString": "contract UniswapV2Pair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                        "typeString": "contract UniswapV2Pair"
                                      }
                                    ],
                                    "id": 1633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10699:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1632,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10699:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1635,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10699:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1629,
                                      "name": "token0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 620,
                                      "src": "10681:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1628,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1736,
                                    "src": "10674:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10674:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1736",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10689:9:2",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1697,
                                "src": "10674:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10674:39:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1643,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "10760:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                        "typeString": "contract UniswapV2Pair"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UniswapV2Pair_$1652",
                                        "typeString": "contract UniswapV2Pair"
                                      }
                                    ],
                                    "id": 1642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10752:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1641,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10752:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10752:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1638,
                                      "name": "token1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 622,
                                      "src": "10734:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1637,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1736,
                                    "src": "10727:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$1736_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10727:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1736",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10742:9:2",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1697,
                                "src": "10727:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 1645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10727:39:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1646,
                              "name": "reserve0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "10780:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            {
                              "id": 1647,
                              "name": "reserve1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "10802:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 1627,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "10653:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint112_$_t_uint112_$returns$__$",
                              "typeString": "function (uint256,uint256,uint112,uint112)"
                            }
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10653:167:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1649,
                        "nodeType": "ExpressionStatement",
                        "src": "10653:167:2"
                      }
                    ]
                  },
                  "functionSelector": "fff6cae9",
                  "id": 1651,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1625,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1624,
                        "name": "lock",
                        "nameLocations": [
                          "10638:4:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 656,
                        "src": "10638:4:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10638:4:2"
                    }
                  ],
                  "name": "sync",
                  "nameLocation": "10622:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10626:2:2"
                  },
                  "returnParameters": {
                    "id": 1626,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10643:0:2"
                  },
                  "scope": 1652,
                  "src": "10613:214:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1653,
              "src": "444:10385:2",
              "usedErrors": [],
              "usedEvents": [
                729,
                739,
                753,
                759,
                1760,
                1768
              ]
            }
          ],
          "src": "31:10799:2"
        }
      },
      "contracts/interfaces/IERC20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1736
            ]
          },
          "id": 1737,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1654,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1736,
              "linearizedBaseContracts": [
                1736
              ],
              "name": "IERC20",
              "nameLocation": "67:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1662,
                  "name": "Approval",
                  "nameLocation": "86:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1656,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "111:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "95:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1655,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "95:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1658,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "134:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "118:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1657,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "118:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1660,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "148:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "143:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1659,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "143:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "94:60:3"
                  },
                  "src": "80:75:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1670,
                  "name": "Transfer",
                  "nameLocation": "166:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "191:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "175:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "175:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "213:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "197:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "197:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1668,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "222:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1670,
                        "src": "217:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "217:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "174:54:3"
                  },
                  "src": "160:69:3"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 1675,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "244:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:2:3"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1673,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1675,
                        "src": "274:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:15:3"
                  },
                  "scope": 1736,
                  "src": "235:54:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 1680,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "304:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "310:2:3"
                  },
                  "returnParameters": {
                    "id": 1679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1678,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1680,
                        "src": "336:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "336:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "335:15:3"
                  },
                  "scope": 1736,
                  "src": "295:56:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 1685,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "366:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "374:2:3"
                  },
                  "returnParameters": {
                    "id": 1684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1683,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1685,
                        "src": "400:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "400:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "399:7:3"
                  },
                  "scope": 1736,
                  "src": "357:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 1690,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "422:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1686,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "433:2:3"
                  },
                  "returnParameters": {
                    "id": 1689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1688,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "459:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1687,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "459:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "458:6:3"
                  },
                  "scope": 1736,
                  "src": "413:52:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 1697,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "480:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "498:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "490:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "489:15:3"
                  },
                  "returnParameters": {
                    "id": 1696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1695,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "528:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1694,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "528:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "527:6:3"
                  },
                  "scope": 1736,
                  "src": "471:63:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 1706,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "549:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "567:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "559:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "582:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "574:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "574:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "558:32:3"
                  },
                  "returnParameters": {
                    "id": 1705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1704,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "614:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1703,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "614:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "613:6:3"
                  },
                  "scope": 1736,
                  "src": "540:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 1715,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "635:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1708,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "651:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "643:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1707,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1710,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "665:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "660:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1709,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "642:29:3"
                  },
                  "returnParameters": {
                    "id": 1714,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1713,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "690:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1712,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "689:6:3"
                  },
                  "scope": 1736,
                  "src": "626:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 1724,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "711:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1717,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "728:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "720:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1719,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "737:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "732:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1718,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "732:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:24:3"
                  },
                  "returnParameters": {
                    "id": 1723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1722,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1724,
                        "src": "762:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1721,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "762:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "761:6:3"
                  },
                  "scope": 1736,
                  "src": "702:66:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 1735,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "783:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1731,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1726,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "804:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "796:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "796:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1728,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "818:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "810:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1727,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "810:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1730,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "827:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "822:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "795:38:3"
                  },
                  "returnParameters": {
                    "id": 1734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1733,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "852:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1732,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "851:6:3"
                  },
                  "scope": 1736,
                  "src": "774:84:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1737,
              "src": "57:803:3",
              "usedErrors": [],
              "usedEvents": [
                1662,
                1670
              ]
            }
          ],
          "src": "31:830:3"
        }
      },
      "contracts/interfaces/IUniswapV2Callee.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "contracts/interfaces/IUniswapV2Callee.sol",
          "exportedSymbols": {
            "IUniswapV2Callee": [
              1750
            ]
          },
          "id": 1751,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1738,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV2Callee",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1750,
              "linearizedBaseContracts": [
                1750
              ],
              "name": "IUniswapV2Callee",
              "nameLocation": "67:16:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "10d1e85c",
                  "id": 1749,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uniswapV2Call",
                  "nameLocation": "99:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1740,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "121:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "113:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "113:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1742,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "134:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "129:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1741,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "129:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1744,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "148:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "143:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1743,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "143:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1746,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "172:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "157:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1745,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "157:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "112:65:4"
                  },
                  "returnParameters": {
                    "id": 1748,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "186:0:4"
                  },
                  "scope": 1750,
                  "src": "90:97:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1751,
              "src": "57:132:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "31:159:4"
        }
      },
      "contracts/interfaces/IUniswapV2ERC20.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "contracts/interfaces/IUniswapV2ERC20.sol",
          "exportedSymbols": {
            "IUniswapV2ERC20": [
              1868
            ]
          },
          "id": 1869,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1752,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV2ERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1868,
              "linearizedBaseContracts": [
                1868
              ],
              "name": "IUniswapV2ERC20",
              "nameLocation": "67:15:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1760,
                  "name": "Approval",
                  "nameLocation": "95:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1754,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "120:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1760,
                        "src": "104:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "104:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1756,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "143:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1760,
                        "src": "127:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "127:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1758,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "157:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1760,
                        "src": "152:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1757,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "103:60:5"
                  },
                  "src": "89:75:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1768,
                  "name": "Transfer",
                  "nameLocation": "175:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1762,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "200:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1768,
                        "src": "184:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1761,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "184:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1764,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "222:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1768,
                        "src": "206:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1763,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "206:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1766,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "231:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1768,
                        "src": "226:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1765,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "183:54:5"
                  },
                  "src": "169:69:5"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 1773,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "253:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "257:2:5"
                  },
                  "returnParameters": {
                    "id": 1772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1771,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "283:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1770,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "282:15:5"
                  },
                  "scope": 1868,
                  "src": "244:54:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 1778,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "313:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1774,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "319:2:5"
                  },
                  "returnParameters": {
                    "id": 1777,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1776,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1778,
                        "src": "345:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1775,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "345:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "344:15:5"
                  },
                  "scope": 1868,
                  "src": "304:56:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 1783,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "375:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1779,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "383:2:5"
                  },
                  "returnParameters": {
                    "id": 1782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1783,
                        "src": "409:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "409:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "408:7:5"
                  },
                  "scope": 1868,
                  "src": "366:50:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 1788,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "431:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1784,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "442:2:5"
                  },
                  "returnParameters": {
                    "id": 1787,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1786,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1788,
                        "src": "468:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1785,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "468:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "467:6:5"
                  },
                  "scope": 1868,
                  "src": "422:52:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 1795,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "489:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1791,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1790,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "507:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "499:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1789,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "499:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "498:15:5"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1793,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "537:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1792,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "537:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "536:6:5"
                  },
                  "scope": 1868,
                  "src": "480:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 1804,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "558:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1800,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1797,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "576:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1804,
                        "src": "568:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1796,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "568:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1799,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "591:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1804,
                        "src": "583:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "567:32:5"
                  },
                  "returnParameters": {
                    "id": 1803,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1802,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1804,
                        "src": "623:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "623:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "622:6:5"
                  },
                  "scope": 1868,
                  "src": "549:80:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 1813,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "644:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1806,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "660:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1813,
                        "src": "652:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1808,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "674:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1813,
                        "src": "669:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1807,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "669:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:29:5"
                  },
                  "returnParameters": {
                    "id": 1812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1811,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1813,
                        "src": "699:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1810,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "698:6:5"
                  },
                  "scope": 1868,
                  "src": "635:70:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 1822,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "720:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1815,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "737:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "729:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "729:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1817,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "746:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "741:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1816,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "728:24:5"
                  },
                  "returnParameters": {
                    "id": 1821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1820,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1822,
                        "src": "771:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1819,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "770:6:5"
                  },
                  "scope": 1868,
                  "src": "711:66:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 1833,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "792:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1824,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "813:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1833,
                        "src": "805:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1826,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "827:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1833,
                        "src": "819:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1825,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1828,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "836:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1833,
                        "src": "831:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1827,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "831:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "804:38:5"
                  },
                  "returnParameters": {
                    "id": 1832,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1831,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1833,
                        "src": "861:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1830,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:5"
                  },
                  "scope": 1868,
                  "src": "783:84:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3644e515",
                  "id": 1838,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "882:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1834,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "898:2:5"
                  },
                  "returnParameters": {
                    "id": 1837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1836,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1838,
                        "src": "924:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1835,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "923:9:5"
                  },
                  "scope": 1868,
                  "src": "873:60:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "30adf81f",
                  "id": 1843,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "948:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1839,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "963:2:5"
                  },
                  "returnParameters": {
                    "id": 1842,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1841,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1843,
                        "src": "989:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1840,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "988:9:5"
                  },
                  "scope": 1868,
                  "src": "939:59:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ecebe00",
                  "id": 1850,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "1013:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1028:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1850,
                        "src": "1020:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:15:5"
                  },
                  "returnParameters": {
                    "id": 1849,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1848,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1850,
                        "src": "1058:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1847,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1058:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1057:6:5"
                  },
                  "scope": 1868,
                  "src": "1004:60:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d505accf",
                  "id": 1867,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "1079:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1852,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1094:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1086:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1851,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1086:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1854,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1109:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1101:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1101:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1856,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1123:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1118:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1855,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1118:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1858,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1135:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1130:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1857,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1860,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1151:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1145:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1859,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1145:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1862,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1162:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1154:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1861,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1154:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1864,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1173:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "1165:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1863,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1165:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1085:90:5"
                  },
                  "returnParameters": {
                    "id": 1866,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1184:0:5"
                  },
                  "scope": 1868,
                  "src": "1070:115:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1869,
              "src": "57:1130:5",
              "usedErrors": [],
              "usedEvents": [
                1760,
                1768
              ]
            }
          ],
          "src": "31:1157:5"
        }
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "contracts/interfaces/IUniswapV2Factory.sol",
          "exportedSymbols": {
            "IUniswapV2Factory": [
              1921
            ]
          },
          "id": 1922,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1870,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV2Factory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1921,
              "linearizedBaseContracts": [
                1921
              ],
              "name": "IUniswapV2Factory",
              "nameLocation": "67:17:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "017e7e58",
                  "id": 1875,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nameLocation": "195:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1871,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "200:2:6"
                  },
                  "returnParameters": {
                    "id": 1874,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1873,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1875,
                        "src": "226:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "225:9:6"
                  },
                  "scope": 1921,
                  "src": "186:49:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "094b7415",
                  "id": 1880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToSetter",
                  "nameLocation": "250:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1876,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "261:2:6"
                  },
                  "returnParameters": {
                    "id": 1879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1880,
                        "src": "287:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1877,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "287:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "286:9:6"
                  },
                  "scope": 1921,
                  "src": "241:55:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e6a43905",
                  "id": 1889,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPair",
                  "nameLocation": "311:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1882,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "327:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1889,
                        "src": "319:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "319:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1884,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "343:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1889,
                        "src": "335:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1883,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "335:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "318:32:6"
                  },
                  "returnParameters": {
                    "id": 1888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1887,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "382:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1889,
                        "src": "374:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1886,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "373:14:6"
                  },
                  "scope": 1921,
                  "src": "302:86:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1e3dd18b",
                  "id": 1896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairs",
                  "nameLocation": "403:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1892,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1891,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1896,
                        "src": "412:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1890,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "412:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "411:6:6"
                  },
                  "returnParameters": {
                    "id": 1895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1894,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "449:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1896,
                        "src": "441:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "441:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "440:14:6"
                  },
                  "scope": 1921,
                  "src": "394:61:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "574f2ba3",
                  "id": 1901,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "470:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1897,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "484:2:6"
                  },
                  "returnParameters": {
                    "id": 1900,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1899,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1901,
                        "src": "510:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1898,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "510:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "509:6:6"
                  },
                  "scope": 1921,
                  "src": "461:55:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c9c65396",
                  "id": 1910,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "531:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1906,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1903,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "550:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1910,
                        "src": "542:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1902,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1905,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "566:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1910,
                        "src": "558:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1904,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "541:32:6"
                  },
                  "returnParameters": {
                    "id": 1909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1908,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "600:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1910,
                        "src": "592:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "592:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "591:14:6"
                  },
                  "scope": 1921,
                  "src": "522:84:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f46901ed",
                  "id": 1915,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "621:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1912,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1915,
                        "src": "630:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1911,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "630:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "629:9:6"
                  },
                  "returnParameters": {
                    "id": 1914,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:0:6"
                  },
                  "scope": 1921,
                  "src": "612:36:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a2e74af6",
                  "id": 1920,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "663:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1917,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1920,
                        "src": "678:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1916,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "678:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "677:9:6"
                  },
                  "returnParameters": {
                    "id": 1919,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "695:0:6"
                  },
                  "scope": 1921,
                  "src": "654:42:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1922,
              "src": "57:641:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "31:668:6"
        }
      },
      "contracts/interfaces/IUniswapV2Pair.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "contracts/interfaces/IUniswapV2Pair.sol",
          "exportedSymbols": {
            "IUniswapV2Pair": [
              2147
            ]
          },
          "id": 2148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1923,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV2Pair",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2147,
              "linearizedBaseContracts": [
                2147
              ],
              "name": "IUniswapV2Pair",
              "nameLocation": "67:14:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "06fdde03",
                  "id": 1928,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "258:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1924,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "262:2:7"
                  },
                  "returnParameters": {
                    "id": 1927,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1926,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "288:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1925,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "288:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "287:15:7"
                  },
                  "scope": 2147,
                  "src": "249:54:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 1933,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "318:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1929,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "324:2:7"
                  },
                  "returnParameters": {
                    "id": 1932,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1931,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1933,
                        "src": "350:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1930,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "350:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "349:15:7"
                  },
                  "scope": 2147,
                  "src": "309:56:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 1938,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "380:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1934,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "388:2:7"
                  },
                  "returnParameters": {
                    "id": 1937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1936,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1938,
                        "src": "414:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1935,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "414:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "413:7:7"
                  },
                  "scope": 2147,
                  "src": "371:50:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 1943,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "436:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1939,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "447:2:7"
                  },
                  "returnParameters": {
                    "id": 1942,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1941,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1943,
                        "src": "473:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1940,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:6:7"
                  },
                  "scope": 2147,
                  "src": "427:52:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 1950,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "494:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1945,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "512:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "504:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "504:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "503:15:7"
                  },
                  "returnParameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1948,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "542:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1947,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "541:6:7"
                  },
                  "scope": 2147,
                  "src": "485:63:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 1959,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "563:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1955,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1952,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "590:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "582:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "582:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1954,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "613:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "605:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1953,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "605:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:54:7"
                  },
                  "returnParameters": {
                    "id": 1958,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1957,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "650:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1956,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "650:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "649:6:7"
                  },
                  "scope": 2147,
                  "src": "554:102:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 1968,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "671:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1961,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "687:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1968,
                        "src": "679:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1960,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1963,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "701:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1968,
                        "src": "696:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1962,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:29:7"
                  },
                  "returnParameters": {
                    "id": 1967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1968,
                        "src": "726:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1965,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "726:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "725:6:7"
                  },
                  "scope": 2147,
                  "src": "662:70:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 1977,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "747:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1973,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1970,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "764:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1977,
                        "src": "756:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1969,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "756:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1972,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "773:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1977,
                        "src": "768:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1971,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "755:24:7"
                  },
                  "returnParameters": {
                    "id": 1976,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1975,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1977,
                        "src": "798:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1974,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "798:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "797:6:7"
                  },
                  "scope": 2147,
                  "src": "738:66:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 1988,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "819:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1979,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "849:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "841:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1978,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "841:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1981,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "871:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "863:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1980,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1983,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "888:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "883:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1982,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "883:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "831:68:7"
                  },
                  "returnParameters": {
                    "id": 1987,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1986,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1988,
                        "src": "918:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1985,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "918:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "917:6:7"
                  },
                  "scope": 2147,
                  "src": "810:114:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3644e515",
                  "id": 1993,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "939:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1989,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "955:2:7"
                  },
                  "returnParameters": {
                    "id": 1992,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1991,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1993,
                        "src": "981:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1990,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "981:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "980:9:7"
                  },
                  "scope": 2147,
                  "src": "930:60:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "30adf81f",
                  "id": 1998,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "1005:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1020:2:7"
                  },
                  "returnParameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1996,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1998,
                        "src": "1046:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1995,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1046:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1045:9:7"
                  },
                  "scope": 2147,
                  "src": "996:59:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ecebe00",
                  "id": 2005,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "1070:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2000,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1085:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "1077:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1999,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1076:15:7"
                  },
                  "returnParameters": {
                    "id": 2004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2003,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "1115:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2002,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1115:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1114:6:7"
                  },
                  "scope": 2147,
                  "src": "1061:60:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d505accf",
                  "id": 2022,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "1136:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2007,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1160:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1152:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2009,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1183:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1175:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2008,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1175:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2011,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1205:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1200:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2010,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1200:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2013,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1225:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1220:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2012,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1220:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2015,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1249:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1243:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2014,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1243:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2017,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1268:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1260:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2016,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2019,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1287:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2022,
                        "src": "1279:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2018,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1279:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1142:152:7"
                  },
                  "returnParameters": {
                    "id": 2021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1303:0:7"
                  },
                  "scope": 2147,
                  "src": "1127:177:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
                  "id": 2030,
                  "name": "Mint",
                  "nameLocation": "1316:4:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2024,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1337:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1321:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2023,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1321:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2026,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1350:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1345:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2025,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1345:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2028,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1364:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2030,
                        "src": "1359:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2027,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1359:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1320:52:7"
                  },
                  "src": "1310:63:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
                  "id": 2040,
                  "name": "Burn",
                  "nameLocation": "1384:4:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2032,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1414:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "1398:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2031,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1398:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2034,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1435:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "1430:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2033,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1430:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2036,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1457:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "1452:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2035,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1452:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1490:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2040,
                        "src": "1474:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1388:110:7"
                  },
                  "src": "1378:121:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
                  "id": 2054,
                  "name": "Swap",
                  "nameLocation": "1510:4:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2042,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1540:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "1524:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2041,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1524:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2044,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "1561:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "1556:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2043,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1556:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2046,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "1585:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "1580:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1580:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2048,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "1609:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "1604:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2047,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1604:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2050,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "1634:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "1629:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2049,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1629:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2052,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1670:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "1654:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1654:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1514:164:7"
                  },
                  "src": "1504:175:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
                  "id": 2060,
                  "name": "Sync",
                  "nameLocation": "1690:4:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2056,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1703:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2060,
                        "src": "1695:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2055,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2058,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1721:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2060,
                        "src": "1713:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2057,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1713:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1694:36:7"
                  },
                  "src": "1684:47:7"
                },
                {
                  "functionSelector": "ba9a7a56",
                  "id": 2065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "1746:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1763:2:7"
                  },
                  "returnParameters": {
                    "id": 2064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2065,
                        "src": "1789:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2062,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1789:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1788:6:7"
                  },
                  "scope": 2147,
                  "src": "1737:58:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c45a0155",
                  "id": 2070,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "1810:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1817:2:7"
                  },
                  "returnParameters": {
                    "id": 2069,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2068,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2070,
                        "src": "1843:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1843:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1842:9:7"
                  },
                  "scope": 2147,
                  "src": "1801:51:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0dfe1681",
                  "id": 2075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nameLocation": "1867:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1873:2:7"
                  },
                  "returnParameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2075,
                        "src": "1899:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1899:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1898:9:7"
                  },
                  "scope": 2147,
                  "src": "1858:50:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d21220a7",
                  "id": 2080,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nameLocation": "1923:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2076,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:2:7"
                  },
                  "returnParameters": {
                    "id": 2079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2078,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2080,
                        "src": "1955:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1955:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1954:9:7"
                  },
                  "scope": 2147,
                  "src": "1914:50:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0902f1ac",
                  "id": 2089,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "1979:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2081,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1990:2:7"
                  },
                  "returnParameters": {
                    "id": 2088,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2083,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "2036:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2089,
                        "src": "2028:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2082,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2085,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "2054:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2089,
                        "src": "2046:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2084,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "2046:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2087,
                        "mutability": "mutable",
                        "name": "blockTimestampLast",
                        "nameLocation": "2071:18:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2089,
                        "src": "2064:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2086,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2064:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2027:63:7"
                  },
                  "scope": 2147,
                  "src": "1970:121:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5909c0d5",
                  "id": 2094,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price0CumulativeLast",
                  "nameLocation": "2106:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2090,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:2:7"
                  },
                  "returnParameters": {
                    "id": 2093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2092,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "2152:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2152:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2151:6:7"
                  },
                  "scope": 2147,
                  "src": "2097:61:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a3d5493",
                  "id": 2099,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price1CumulativeLast",
                  "nameLocation": "2173:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2095,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2193:2:7"
                  },
                  "returnParameters": {
                    "id": 2098,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2097,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "2219:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2096,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2219:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2218:6:7"
                  },
                  "scope": 2147,
                  "src": "2164:61:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7464fc3d",
                  "id": 2104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "kLast",
                  "nameLocation": "2240:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2245:2:7"
                  },
                  "returnParameters": {
                    "id": 2103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2104,
                        "src": "2271:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2101,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2271:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2270:6:7"
                  },
                  "scope": 2147,
                  "src": "2231:46:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6a627842",
                  "id": 2111,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "2292:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2106,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2305:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2111,
                        "src": "2297:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2297:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2296:12:7"
                  },
                  "returnParameters": {
                    "id": 2110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2109,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "2332:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2111,
                        "src": "2327:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2108,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:16:7"
                  },
                  "scope": 2147,
                  "src": "2283:60:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "89afcb44",
                  "id": 2120,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "2358:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2113,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2371:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2120,
                        "src": "2363:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2363:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2362:12:7"
                  },
                  "returnParameters": {
                    "id": 2119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2116,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2398:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2120,
                        "src": "2393:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2115,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2393:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2118,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2412:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2120,
                        "src": "2407:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2392:28:7"
                  },
                  "scope": 2147,
                  "src": "2349:72:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "022c0d9f",
                  "id": 2131,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "2436:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2122,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2455:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "2450:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2121,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2450:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2124,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2480:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "2475:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2123,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2475:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2126,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2508:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "2500:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2500:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2128,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2535:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "2520:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2127,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2520:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2440:105:7"
                  },
                  "returnParameters": {
                    "id": 2130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2554:0:7"
                  },
                  "scope": 2147,
                  "src": "2427:128:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bc25cf77",
                  "id": 2136,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "skim",
                  "nameLocation": "2570:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2133,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2583:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2136,
                        "src": "2575:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2575:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2574:12:7"
                  },
                  "returnParameters": {
                    "id": 2135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2595:0:7"
                  },
                  "scope": 2147,
                  "src": "2561:35:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fff6cae9",
                  "id": 2139,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sync",
                  "nameLocation": "2611:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2615:2:7"
                  },
                  "returnParameters": {
                    "id": 2138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2626:0:7"
                  },
                  "scope": 2147,
                  "src": "2602:25:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "485cc955",
                  "id": 2146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2642:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2141,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2146,
                        "src": "2653:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2143,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2146,
                        "src": "2662:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2662:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2652:18:7"
                  },
                  "returnParameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2679:0:7"
                  },
                  "scope": 2147,
                  "src": "2633:47:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2148,
              "src": "57:2625:7",
              "usedErrors": [],
              "usedEvents": [
                2030,
                2040,
                2054,
                2060
              ]
            }
          ],
          "src": "31:2652:7"
        }
      },
      "contracts/libraries/Math.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "contracts/libraries/Math.sol",
          "exportedSymbols": {
            "Math": [
              2223
            ]
          },
          "id": 2224,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Math",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2223,
              "linearizedBaseContracts": [
                2223
              ],
              "name": "Math",
              "nameLocation": "118:4:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2167,
                    "nodeType": "Block",
                    "src": "189:34:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2158,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2156,
                            "src": "199:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2159,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2151,
                                "src": "203:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2160,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2153,
                                "src": "207:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "203:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 2163,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2153,
                              "src": "215:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "203:13:8",
                            "trueExpression": {
                              "id": 2162,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2151,
                              "src": "211:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "199:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2166,
                        "nodeType": "ExpressionStatement",
                        "src": "199:17:8"
                      }
                    ]
                  },
                  "id": 2168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "min",
                  "nameLocation": "138:3:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2151,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "147:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "142:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2150,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "142:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2153,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "155:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "150:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2152,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "150:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "141:16:8"
                  },
                  "returnParameters": {
                    "id": 2157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2156,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "186:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2168,
                        "src": "181:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2155,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "181:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "180:8:8"
                  },
                  "scope": 2223,
                  "src": "129:94:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2221,
                    "nodeType": "Block",
                    "src": "391:239:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2175,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2170,
                            "src": "405:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 2176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "409:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "405:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2211,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2170,
                              "src": "586:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "591:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "586:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2219,
                          "nodeType": "IfStatement",
                          "src": "582:42:8",
                          "trueBody": {
                            "id": 2218,
                            "nodeType": "Block",
                            "src": "594:30:8",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 2214,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2173,
                                    "src": "608:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 2215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "612:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "608:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2217,
                                "nodeType": "ExpressionStatement",
                                "src": "608:5:8"
                              }
                            ]
                          }
                        },
                        "id": 2220,
                        "nodeType": "IfStatement",
                        "src": "401:223:8",
                        "trueBody": {
                          "id": 2210,
                          "nodeType": "Block",
                          "src": "412:164:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 2180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 2178,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2173,
                                  "src": "426:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2179,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2170,
                                  "src": "430:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "426:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2181,
                              "nodeType": "ExpressionStatement",
                              "src": "426:5:8"
                            },
                            {
                              "assignments": [
                                2183
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2183,
                                  "mutability": "mutable",
                                  "name": "x",
                                  "nameLocation": "450:1:8",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2210,
                                  "src": "445:6:8",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2182,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "445:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2189,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2184,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2170,
                                    "src": "454:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 2185,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "458:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "454:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "462:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "454:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "445:18:8"
                            },
                            {
                              "body": {
                                "id": 2208,
                                "nodeType": "Block",
                                "src": "491:75:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2193,
                                        "name": "z",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2173,
                                        "src": "509:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 2194,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2183,
                                        "src": "513:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "509:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2196,
                                    "nodeType": "ExpressionStatement",
                                    "src": "509:5:8"
                                  },
                                  {
                                    "expression": {
                                      "id": 2206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2197,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2183,
                                        "src": "532:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2202,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2200,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2198,
                                                  "name": "y",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2170,
                                                  "src": "537:1:8",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                  "id": 2199,
                                                  "name": "x",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2183,
                                                  "src": "541:1:8",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "537:5:8",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "id": 2201,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2183,
                                                "src": "545:1:8",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "537:9:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2203,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "536:11:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 2204,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "550:1:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "536:15:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "532:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2207,
                                    "nodeType": "ExpressionStatement",
                                    "src": "532:19:8"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2190,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2183,
                                  "src": "484:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2191,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2173,
                                  "src": "488:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "484:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2209,
                              "nodeType": "WhileStatement",
                              "src": "477:89:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 2222,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sqrt",
                  "nameLocation": "347:4:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "357:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "352:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "352:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "351:8:8"
                  },
                  "returnParameters": {
                    "id": 2174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2173,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "388:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "383:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2172,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "383:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "382:8:8"
                  },
                  "scope": 2223,
                  "src": "338:292:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2224,
              "src": "110:522:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "31:602:8"
        }
      },
      "contracts/libraries/SafeMath.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "contracts/libraries/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              2298
            ]
          },
          "id": 2299,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2225,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2298,
              "linearizedBaseContracts": [
                2298
              ],
              "name": "SafeMath",
              "nameLocation": "171:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2246,
                    "nodeType": "Block",
                    "src": "246:66:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 2239,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2235,
                                      "name": "z",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2232,
                                      "src": "265:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2238,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2236,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2227,
                                        "src": "269:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 2237,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2229,
                                        "src": "273:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "269:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "265:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2240,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "264:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2241,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2227,
                                "src": "279:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "264:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
                              "id": 2243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "282:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
                                "typeString": "literal_string \"ds-math-add-overflow\""
                              },
                              "value": "ds-math-add-overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
                                "typeString": "literal_string \"ds-math-add-overflow\""
                              }
                            ],
                            "id": 2234,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "256:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "256:49:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2245,
                        "nodeType": "ExpressionStatement",
                        "src": "256:49:9"
                      }
                    ]
                  },
                  "id": 2247,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "195:3:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2227,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "204:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2247,
                        "src": "199:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2226,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "199:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "212:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2247,
                        "src": "207:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "207:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "198:16:9"
                  },
                  "returnParameters": {
                    "id": 2233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2232,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "243:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2247,
                        "src": "238:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2231,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "238:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:8:9"
                  },
                  "scope": 2298,
                  "src": "186:126:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2268,
                    "nodeType": "Block",
                    "src": "378:67:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 2261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2257,
                                      "name": "z",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2254,
                                      "src": "397:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2260,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2258,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2249,
                                        "src": "401:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 2259,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2251,
                                        "src": "405:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "401:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "397:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2262,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "396:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 2263,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2249,
                                "src": "411:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "396:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
                              "id": 2265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "414:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
                                "typeString": "literal_string \"ds-math-sub-underflow\""
                              },
                              "value": "ds-math-sub-underflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
                                "typeString": "literal_string \"ds-math-sub-underflow\""
                              }
                            ],
                            "id": 2256,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "388:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "388:50:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2267,
                        "nodeType": "ExpressionStatement",
                        "src": "388:50:9"
                      }
                    ]
                  },
                  "id": 2269,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "327:3:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2249,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "336:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2269,
                        "src": "331:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2248,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "331:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2251,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "344:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2269,
                        "src": "339:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2250,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "339:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "330:16:9"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2254,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "375:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2269,
                        "src": "370:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2253,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "370:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "369:8:9"
                  },
                  "scope": 2298,
                  "src": "318:127:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2296,
                    "nodeType": "Block",
                    "src": "511:80:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2279,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2273,
                                  "src": "529:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "534:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "529:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "id": 2286,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 2282,
                                          "name": "z",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2276,
                                          "src": "540:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2285,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2283,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2271,
                                            "src": "544:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 2284,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2273,
                                            "src": "548:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "544:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "540:9:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2287,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "539:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 2288,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2273,
                                    "src": "553:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "539:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 2290,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2271,
                                  "src": "558:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "539:20:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "529:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
                              "id": 2293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "561:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
                                "typeString": "literal_string \"ds-math-mul-overflow\""
                              },
                              "value": "ds-math-mul-overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
                                "typeString": "literal_string \"ds-math-mul-overflow\""
                              }
                            ],
                            "id": 2278,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "521:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "521:63:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2295,
                        "nodeType": "ExpressionStatement",
                        "src": "521:63:9"
                      }
                    ]
                  },
                  "id": 2297,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "460:3:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2271,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "469:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2297,
                        "src": "464:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2270,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2273,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "477:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2297,
                        "src": "472:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2272,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "463:16:9"
                  },
                  "returnParameters": {
                    "id": 2277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2276,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "508:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2297,
                        "src": "503:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2275,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "503:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "502:8:9"
                  },
                  "scope": 2298,
                  "src": "451:140:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2299,
              "src": "163:430:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "31:563:9"
        }
      },
      "contracts/libraries/UQ112x112.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "contracts/libraries/UQ112x112.sol",
          "exportedSymbols": {
            "UQ112x112": [
              2342
            ]
          },
          "id": 2343,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2300,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "UQ112x112",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2342,
              "linearizedBaseContracts": [
                2342
              ],
              "name": "UQ112x112",
              "nameLocation": "221:9:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 2305,
                  "mutability": "constant",
                  "name": "Q112",
                  "nameLocation": "254:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "237:32:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "uint224",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                      "typeString": "int_const 5192...(26 digits omitted)...0096"
                    },
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 2302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "261:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "313132",
                      "id": 2303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "266:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_112_by_1",
                        "typeString": "int_const 112"
                      },
                      "value": "112"
                    },
                    "src": "261:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
                      "typeString": "int_const 5192...(26 digits omitted)...0096"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2321,
                    "nodeType": "Block",
                    "src": "376:57:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2312,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2310,
                            "src": "386:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "id": 2318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2315,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2307,
                                  "src": "398:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "id": 2314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "390:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 2313,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "390:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "390:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2317,
                              "name": "Q112",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2305,
                              "src": "403:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "390:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "386:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 2320,
                        "nodeType": "ExpressionStatement",
                        "src": "386:21:10"
                      }
                    ]
                  },
                  "id": 2322,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "324:6:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2307,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "339:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2322,
                        "src": "331:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2306,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "331:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "330:11:10"
                  },
                  "returnParameters": {
                    "id": 2311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2310,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "373:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2322,
                        "src": "365:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 2309,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "365:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "364:11:10"
                  },
                  "scope": 2342,
                  "src": "315:118:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2340,
                    "nodeType": "Block",
                    "src": "572:35:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 2338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2331,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2329,
                            "src": "582:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "id": 2337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2332,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "586:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 2335,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2326,
                                  "src": "598:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                ],
                                "id": 2334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "590:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 2333,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "590:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "590:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "586:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "582:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 2339,
                        "nodeType": "ExpressionStatement",
                        "src": "582:18:10"
                      }
                    ]
                  },
                  "id": 2341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "uqdiv",
                  "nameLocation": "510:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2324,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "524:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2341,
                        "src": "516:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 2323,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "516:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2326,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "535:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2341,
                        "src": "527:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 2325,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "527:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "515:22:10"
                  },
                  "returnParameters": {
                    "id": 2330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2329,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "569:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2341,
                        "src": "561:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "typeName": {
                          "id": 2328,
                          "name": "uint224",
                          "nodeType": "ElementaryTypeName",
                          "src": "561:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "560:11:10"
                  },
                  "scope": 2342,
                  "src": "501:106:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2343,
              "src": "213:396:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "31:579:10"
        }
      },
      "contracts/test/ERC20.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "contracts/test/ERC20.sol",
          "exportedSymbols": {
            "ERC20": [
              2361
            ],
            "UniswapV2ERC20": [
              375
            ]
          },
          "id": 2362,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2344,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "31:24:11"
            },
            {
              "absolutePath": "contracts/UniswapV2ERC20.sol",
              "file": "../UniswapV2ERC20.sol",
              "id": 2346,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2362,
              "sourceUnit": 376,
              "src": "57:53:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2345,
                    "name": "UniswapV2ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 375,
                    "src": "65:14:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2347,
                    "name": "UniswapV2ERC20",
                    "nameLocations": [
                      "130:14:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 375,
                    "src": "130:14:11"
                  },
                  "id": 2348,
                  "nodeType": "InheritanceSpecifier",
                  "src": "130:14:11"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2361,
              "linearizedBaseContracts": [
                2361,
                375,
                1868
              ],
              "name": "ERC20",
              "nameLocation": "121:5:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2359,
                    "nodeType": "Block",
                    "src": "192:48:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2354,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "208:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "212:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "208:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2356,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2350,
                              "src": "220:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2353,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "202:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "202:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2358,
                        "nodeType": "ExpressionStatement",
                        "src": "202:31:11"
                      }
                    ]
                  },
                  "id": 2360,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2350,
                        "mutability": "mutable",
                        "name": "_totalSupply",
                        "nameLocation": "171:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 2360,
                        "src": "163:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "163:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "162:22:11"
                  },
                  "returnParameters": {
                    "id": 2352,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:0:11"
                  },
                  "scope": 2361,
                  "src": "151:89:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2362,
              "src": "112:130:11",
              "usedErrors": [],
              "usedEvents": [
                1760,
                1768
              ]
            }
          ],
          "src": "31:212:11"
        }
      }
    },
    "contracts": {
      "contracts/UniswapV2ERC20.sol": {
        "UniswapV2ERC20": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2ERC20.sol\":\"UniswapV2ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x650e75119c6096dd47324f28bf1b68934f16d04449f5683d182d45b37d9e8349\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f92f159daf0829baede379a21e5c6266e53f1b19b34984e0f37cd0c0079ffb2\",\"dweb:/ipfs/QmcM5nuCCgiEBELimmeRuwywb7thLSnUWeQmN9JxnoWxPA\"]},\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x1ee410a23a1970896fdbc82047d8a830a0075caaee4ea0899cd6f8a62ab60f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6dba7e23e97d9a2d98410b2107d82d459340826a582e9861f8f9179c2c5d534\",\"dweb:/ipfs/QmNdwjhQetZEXytKnjRiRBwMqgwvcTAyLCiyqScoZvzdLd\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b980727960c67aeff9b83b7b760bd2b1e817f5464ddefd00b23fc926ab6cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4edd6ef81d4c39f34f10e8867fe396b44680c9f6025a0c5d0e265d7f6d5b126a\",\"dweb:/ipfs/Qmaod5Jufw7AXq85ZzNdmxRmLFkJGE5TSxtN6PqFon3pL8\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 184/65776 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 5021\n// Code size = 17647 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x200c0]\n   117: jump @100 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x300f0\n   126: i32 a0 = a0 + 0\n   128: ecalli 15 // 'set_immutable_data'\n   130: jump @100\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 8 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 16 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 (gas: 33)\n   923: sp = sp + 0xffffffffffffff20\n   927: u64 [sp + 0xd8] = ra\n   931: u64 [sp + 0xd0] = s0\n   935: u64 [sp + 0xc8] = s1\n   939: s0 = sp + 0xe0\n   943: sp = sp & 0xffffffffffffffe0\n   946: a5 = u64 [a4]\n   948: u64 [sp + 0x40] = a5\n   951: a5 = u64 [a4 + 0x8]\n   954: u64 [sp + 0x48] = a5\n   957: a5 = u64 [a4 + 0x10]\n   960: u64 [sp + 0x50] = a5\n   963: a4 = u64 [a4 + 0x18]\n   966: u64 [sp + 0x58] = a4\n   969: t0 = 0x6\n   972: a4 = u64 [a3]\n   974: u64 [sp + 0x18] = a4\n   977: a4 = u64 [a3 + 0x8]\n   980: u64 [sp + 0x20] = a4\n   983: a4 = u64 [a3 + 0x10]\n   986: u64 [sp + 0x28] = a4\n   989: a3 = u64 [a3 + 0x18]\n   992: u64 [sp + 0x30] = a3\n   995: s1 = u64 [a2]\n   997: a3 = u64 [a2 + 0x8]\n  1000: u64 [sp] = a3\n  1002: a3 = u64 [a2 + 0x10]\n  1005: u64 [sp + 0x8] = a3\n  1008: a2 = u64 [a2 + 0x18]\n  1011: u64 [sp + 0x10] = a2\n  1014: u64 [sp + 56] = 0x20\n  1018: ra = 0x8\n  1021: jump @26\n      : @24 [@dyn 3] (gas: 2)\n  1024: u64 [sp + 0x38] = a1\n  1027: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 46)\n  1032: a1 = reverse s1\n  1034: u64 [sp + 0x78] = a1\n  1037: a1 = u64 [sp]\n  1039: a1 = reverse a1\n  1041: u64 [sp + 0x70] = a1\n  1044: a1 = u64 [sp + 0x8]\n  1047: a1 = reverse a1\n  1049: u64 [sp + 0x68] = a1\n  1052: a1 = u64 [sp + 0x10]\n  1055: a1 = reverse a1\n  1057: u64 [sp + 0x60] = a1\n  1060: a1 = u64 [sp + 0x18]\n  1063: a1 = reverse a1\n  1065: u64 [sp + 0x98] = a1\n  1069: a1 = u64 [sp + 0x20]\n  1072: a1 = reverse a1\n  1074: u64 [sp + 0x90] = a1\n  1078: a1 = u64 [sp + 0x28]\n  1081: a1 = reverse a1\n  1083: u64 [sp + 0x88] = a1\n  1087: a1 = u64 [sp + 0x30]\n  1090: a1 = reverse a1\n  1092: u64 [sp + 0x80] = a1\n  1096: a1 = u64 [sp + 0x40]\n  1099: a1 = reverse a1\n  1101: u64 [sp + 0xb8] = a1\n  1105: a1 = u64 [sp + 0x48]\n  1108: a1 = reverse a1\n  1110: u64 [sp + 0xb0] = a1\n  1114: a1 = u64 [sp + 0x50]\n  1117: a1 = reverse a1\n  1119: u64 [sp + 0xa8] = a1\n  1123: a1 = u64 [sp + 0x58]\n  1126: a1 = reverse a1\n  1128: u64 [sp + 0xa0] = a1\n  1132: i32 a2 = a0 + 0\n  1134: a3 = i32 [sp + 0x38]\n  1137: i32 a0 = sp + 0x60\n  1140: a1 = 0x3\n  1143: ecalli 7 // 'deposit_event'\n  1145: sp = s0 + 0xffffffffffffff20\n  1149: ra = u64 [sp + 0xd8]\n  1153: s0 = u64 [sp + 0xd0]\n  1157: s1 = u64 [sp + 0xc8]\n  1161: sp = sp + 0xe0\n  1165: ret\n      : @26 (gas: 2)\n  1167: i32 a2 = a0 >> 0x10\n  1170: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1173: a1 = a1 + a0\n  1176: i32 a1 = a1 + 0x1f\n  1179: a1 = a1 & 0xffffffffffffffe0\n  1182: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1188: a2 = 0x200bc\n  1193: a3 = i32 [0x200bc]\n  1198: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1201: u32 [0x200bc] = a1\n  1206: fallthrough\n      : @30 (gas: 4)\n  1207: a1 = 0x200d0\n  1212: i32 a0 = a0 + 0\n  1214: a0 = a0 + a1\n  1217: ret\n      : @31 (gas: 1)\n  1219: trap\n      : @32 (gas: 6)\n  1220: sp = sp + 0xfffffffffffffff0\n  1223: u64 [sp + 0x8] = ra\n  1226: u64 [sp] = s0\n  1228: s0 = a0 & 0x1\n  1231: ecalli 4 // 'call_data_size'\n  1233: fallthrough\n      : @33 (gas: 2)\n  1234: u32 [0x200b8] = a0\n  1239: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1242: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 20)\n  1246: ra = 0xc\n  1249: sp = sp + 0xfffffffffffff808\n  1253: a0 = sp + 0x700\n  1257: u64 [a0 + 0xf0] = ra\n  1261: u64 [a0 + 0xe8] = s0\n  1265: u64 [a0 + 0xe0] = s1\n  1269: s0 = sp + 0x7f8\n  1273: sp = sp + 0xfffffffffffff800\n  1277: sp = sp + 0xfffffffffffff9b8\n  1281: sp = sp & 0xffffffffffffffe0\n  1284: s1 = sp\n  1286: a2 = s1 + 0x10b8\n  1290: u64 [a2 + 320] = 0\n  1294: u64 [a2 + 312] = 0\n  1298: u64 [a2 + 296] = 0x80\n  1304: a0 = 0x40\n  1307: a1 = s1 + 0x11e0\n  1311: u64 [a2 + 304] = 0\n  1315: ra = 0x6a\n  1318: jump @19\n      : @36 [@dyn 6] (gas: 15)\n  1321: sp = sp + 0xfffffffffffffbe0\n  1325: a0 = sp + 0x400\n  1329: u64 [a0 + 0x18] = ra\n  1332: u64 [a0 + 0x10] = s0\n  1335: u64 [a0 + 0x8] = s1\n  1338: s0 = sp + 0x420\n  1342: sp = sp & 0xffffffffffffffe0\n  1345: s1 = sp\n  1347: u64 [s1 + 888] = 0\n  1351: u64 [s1 + 880] = 0\n  1355: u64 [s1 + 872] = 0\n  1359: u64 [s1 + 864] = 0x80\n  1365: a0 = 0x40\n  1368: a1 = s1 + 0x360\n  1372: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1377: u64 [s1 + 920] = 0\n  1381: u64 [s1 + 912] = 0\n  1385: u64 [s1 + 904] = 0\n  1389: u64 [s1 + 896] = 0\n  1393: i32 a0 = s1 + 0x380\n  1397: ecalli 17 // 'value_transferred'\n  1399: fallthrough\n      : @38 (gas: 9)\n  1400: a4 = s1 + 0x300\n  1404: a0 = u64 [a4 + 0x90]\n  1408: a1 = u64 [a4 + 0x98]\n  1412: a2 = u64 [a4 + 0x88]\n  1416: a3 = u64 [a4 + 0x80]\n  1420: a1 = a1 | a2\n  1423: a0 = a0 | a3\n  1426: a0 = a0 | a1\n  1429: jump @97 if a0 != 0\n      : @39 (gas: 3)\n  1433: a0 = s1 + 0x340\n  1437: a1 = 0x40\n  1440: ra = 16, jump @17\n      : @40 [@dyn 8] (gas: 20)\n  1445: a5 = s1 + 0x300\n  1449: a1 = u64 [a5 + 0x58]\n  1452: u64 [s1 + 0x68] = a1\n  1455: a2 = u64 [a5 + 0x50]\n  1458: u64 [s1 + 0x60] = a2\n  1461: a4 = u64 [a5 + 0x48]\n  1464: u64 [s1 + 0x70] = a4\n  1467: a3 = u64 [a5 + 0x40]\n  1470: u64 [s1 + 0x78] = a3\n  1473: u64 [s1 + 792] = 0\n  1477: u64 [s1 + 784] = 0\n  1481: u64 [s1 + 776] = 0\n  1485: u64 [a5 + 0] = 0x40\n  1488: u64 [a5 + 0x38] = a1\n  1491: u64 [a5 + 0x30] = a2\n  1494: u64 [a5 + 0x28] = a4\n  1497: a0 = s1 + 0x320\n  1501: a1 = s1 + 0x300\n  1505: u64 [a5 + 0x20] = a3\n  1508: ra = 18, jump @537\n      : @41 [@dyn 9] (gas: 1)\n  1513: t0 = 20, jump @670\n      : @42 [@dyn 10] (gas: 1)\n  1518: jump @96 if a0 != 0\n      : @43 (gas: 7)\n  1522: u64 [s1 + 760] = 0\n  1526: u64 [s1 + 752] = 0\n  1530: u64 [s1 + 744] = 0\n  1534: a1 = s1 + 0x2e0\n  1538: u64 [s1 + 736] = 0xa\n  1543: a0 = u64 [s1 + 0x78]\n  1546: ra = 22, jump @19\n      : @44 [@dyn 11] (gas: 1)\n  1551: t0 = 24, jump @661\n      : @45 [@dyn 12] (gas: 1)\n  1556: jump @96 if a1 == 0\n      : @46 (gas: 11)\n  1560: a0 = u64 [s1 + 0x78]\n  1563: i32 a0 = a0 + 0x20\n  1566: a1 = u64 [0x20000]\n  1571: u64 [s1 + 712] = 0\n  1575: u64 [s1 + 704] = 0\n  1579: u64 [s1 + 0x2d8] = a1\n  1583: a2 = 0x5632000000000000\n  1593: a1 = s1 + 0x2c0\n  1597: u64 [s1 + 0x2d0] = a2\n  1601: u64 [s1 + 0x70] = a0\n  1604: ra = 26, jump @19\n      : @47 [@dyn 13] (gas: 3)\n  1609: a0 = s1 + 0x2a0\n  1613: a1 = u64 [s1 + 0x78]\n  1616: ra = 28, jump @17\n      : @48 [@dyn 14] (gas: 6)\n  1621: a4 = s1 + 0x200\n  1625: a0 = u64 [a4 + 0xb8]\n  1629: a3 = u64 [a4 + 0xb0]\n  1633: a2 = u64 [a4 + 0xa8]\n  1637: a1 = u64 [a4 + 0xa0]\n  1641: t0 = 30, jump @657\n      : @49 [@dyn 15] (gas: 1)\n  1646: jump @96 if a0 != 0\n      : @50 (gas: 3)\n  1650: a0 = u64 [s1 + 0x70]\n  1653: u64 [s1 + 0x78] = a1\n  1656: ra = 32, jump @26\n      : @51 [@dyn 16] (gas: 1)\n  1661: t0 = 34, jump @663\n      : @52 [@dyn 17] (gas: 13)\n  1666: ecalli 9 // 'hash_keccak_256'\n  1668: a1 = u64 [s1 + 0x70]\n  1671: a0 = u64 [a1 + 0x18]\n  1674: u64 [s1 + 0x58] = a0\n  1677: a0 = u64 [a1 + 0x10]\n  1680: u64 [s1 + 0x50] = a0\n  1683: a0 = u64 [a1 + 0x8]\n  1686: u64 [s1 + 0x48] = a0\n  1689: a0 = u64 [a1]\n  1691: u64 [s1 + 0x40] = a0\n  1694: a0 = s1 + 0x280\n  1698: a1 = 0x40\n  1701: ra = 36, jump @17\n      : @53 [@dyn 18] (gas: 20)\n  1706: a5 = s1 + 0x200\n  1710: a0 = u64 [a5 + 0x98]\n  1714: u64 [s1 + 0x68] = a0\n  1717: a1 = u64 [a5 + 0x90]\n  1721: u64 [s1 + 0x60] = a1\n  1724: a3 = u64 [a5 + 0x88]\n  1728: u64 [s1 + 0x70] = a3\n  1731: a2 = u64 [a5 + 0x80]\n  1735: u64 [s1 + 0x78] = a2\n  1738: u64 [s1 + 600] = 0\n  1742: u64 [s1 + 592] = 0\n  1746: u64 [s1 + 584] = 0\n  1750: u64 [a5 + 64] = 0x40\n  1754: u64 [a5 + 0x78] = a0\n  1757: u64 [a5 + 0x70] = a1\n  1760: u64 [a5 + 0x68] = a3\n  1763: a0 = s1 + 0x260\n  1767: a1 = s1 + 0x240\n  1771: u64 [a5 + 0x60] = a2\n  1774: ra = 38, jump @537\n      : @54 [@dyn 19] (gas: 1)\n  1779: t0 = 40, jump @670\n      : @55 [@dyn 20] (gas: 1)\n  1784: jump @96 if a0 != 0\n      : @56 (gas: 7)\n  1788: u64 [s1 + 568] = 0\n  1792: u64 [s1 + 560] = 0\n  1796: u64 [s1 + 552] = 0\n  1800: a1 = s1 + 0x220\n  1804: u64 [s1 + 544] = 0x1\n  1809: a0 = u64 [s1 + 0x78]\n  1812: ra = 42, jump @19\n      : @57 [@dyn 21] (gas: 1)\n  1817: t0 = 44, jump @661\n      : @58 [@dyn 22] (gas: 1)\n  1822: jump @96 if a1 == 0\n      : @59 (gas: 10)\n  1826: a0 = u64 [s1 + 0x78]\n  1829: i32 a0 = a0 + 0x20\n  1832: u64 [s1 + 528] = 0\n  1836: u64 [s1 + 520] = 0\n  1840: u64 [s1 + 512] = 0\n  1844: a2 = 0x3100000000000000\n  1854: a1 = s1 + 0x200\n  1858: u64 [s1 + 0x218] = a2\n  1862: u64 [s1 + 0x70] = a0\n  1865: ra = 46, jump @19\n      : @60 [@dyn 23] (gas: 3)\n  1870: a0 = s1 + 0x1e0\n  1874: a1 = u64 [s1 + 0x78]\n  1877: ra = 48, jump @17\n      : @61 [@dyn 24] (gas: 6)\n  1882: a4 = s1 + 0x100\n  1886: a0 = u64 [a4 + 0xf8]\n  1890: a3 = u64 [a4 + 0xf0]\n  1894: a2 = u64 [a4 + 0xe8]\n  1898: a1 = u64 [a4 + 0xe0]\n  1902: t0 = 50, jump @657\n      : @62 [@dyn 25] (gas: 1)\n  1907: jump @96 if a0 != 0\n      : @63 (gas: 3)\n  1911: a0 = u64 [s1 + 0x70]\n  1914: u64 [s1 + 0x78] = a1\n  1917: ra = 52, jump @26\n      : @64 [@dyn 26] (gas: 1)\n  1922: t0 = 54, jump @663\n      : @65 [@dyn 27] (gas: 13)\n  1927: ecalli 9 // 'hash_keccak_256'\n  1929: a1 = u64 [s1 + 0x70]\n  1932: a0 = u64 [a1 + 0x18]\n  1935: u64 [s1 + 0x38] = a0\n  1938: a0 = u64 [a1 + 0x10]\n  1941: u64 [s1 + 0x30] = a0\n  1944: a0 = u64 [a1 + 0x8]\n  1947: u64 [s1 + 0x28] = a0\n  1950: a0 = u64 [a1]\n  1952: u64 [s1 + 0x20] = a0\n  1955: a0 = s1 + 0x1c0\n  1959: a1 = 0x40\n  1962: ra = 56, jump @17\n      : @66 [@dyn 28] (gas: 20)\n  1967: t0 = u64 [s1 + 0x1c0]\n  1971: t1 = u64 [s1 + 0x1d8]\n  1975: t2 = u64 [s1 + 0x1c8]\n  1979: a5 = u64 [s1 + 0x1d0]\n  1983: a4 = t0 + 0x20\n  1986: a0 = a4 <u t0\n  1989: a1 = t2 + a0\n  1992: a2 = a1 <u t2\n  1995: a2 = a0 if a0 == 0\n  1998: a2 = a2 + a5\n  2001: a0 = a2 <u a5\n  2004: a0 = a0 + t1\n  2007: a3 = a4 | a2\n  2010: a0 = a0 | a1\n  2013: a3 = a3 | a0\n  2016: a3 = a3 >> 0x20\n  2019: a0 = a0 | a2\n  2022: a0 = a0 << 0x20\n  2025: a0 = a0 | a3\n  2028: jump @96 if a0 != 0\n      : @67 (gas: 17)\n  2032: a0 = u64 [0x20008]\n  2037: a3 = s1 + 0x100\n  2041: u64 [a3 + 0xb8] = a0\n  2045: a0 = u64 [0x20010]\n  2050: a1 = u64 [0x20018]\n  2055: a2 = u64 [0x20020]\n  2060: u64 [a3 + 0xb0] = a0\n  2064: u64 [a3 + 0xa8] = a1\n  2068: a1 = s1 + 0x1a0\n  2072: u64 [a3 + 0xa0] = a2\n  2076: u64 [s1 + 0x18] = a4\n  2079: a0 = a4\n  2081: u64 [s1 + 0x78] = t0\n  2084: u64 [s1 + 0x70] = t2\n  2087: u64 [s1 + 0x68] = t1\n  2090: u64 [s1 + 0x60] = a5\n  2093: ra = 58, jump @19\n      : @68 [@dyn 29] (gas: 5)\n  2098: a4 = u64 [s1 + 0x60]\n  2101: a3 = u64 [s1 + 0x70]\n  2104: a1 = u64 [s1 + 0x78]\n  2107: a0 = a1 + 0x40\n  2110: t0 = 60, jump @647\n      : @69 [@dyn 30] (gas: 1)\n  2115: jump @96 if a1 != 0\n      : @70 (gas: 15)\n  2119: a1 = u64 [s1 + 0x40]\n  2122: a2 = reverse a1\n  2124: a1 = u64 [s1 + 0x48]\n  2127: a1 = reverse a1\n  2129: a3 = u64 [s1 + 0x50]\n  2132: a3 = reverse a3\n  2134: a4 = u64 [s1 + 0x58]\n  2137: a4 = reverse a4\n  2139: a5 = s1 + 0x100\n  2143: u64 [a5 + 0x80] = a4\n  2147: u64 [a5 + 0x88] = a3\n  2151: u64 [a5 + 0x90] = a1\n  2155: a1 = s1 + 0x180\n  2159: u64 [a5 + 0x98] = a2\n  2163: ra = 62, jump @19\n      : @71 [@dyn 31] (gas: 5)\n  2168: a4 = u64 [s1 + 0x60]\n  2171: a3 = u64 [s1 + 0x70]\n  2174: a1 = u64 [s1 + 0x78]\n  2177: a0 = a1 + 0x60\n  2180: t0 = 64, jump @647\n      : @72 [@dyn 32] (gas: 1)\n  2185: jump @96 if a1 != 0\n      : @73 (gas: 15)\n  2189: a1 = u64 [s1 + 0x20]\n  2192: a2 = reverse a1\n  2194: a1 = u64 [s1 + 0x28]\n  2197: a1 = reverse a1\n  2199: a3 = u64 [s1 + 0x30]\n  2202: a3 = reverse a3\n  2204: a4 = u64 [s1 + 0x38]\n  2207: a4 = reverse a4\n  2209: a5 = s1 + 0x100\n  2213: u64 [a5 + 0x60] = a4\n  2216: u64 [a5 + 0x68] = a3\n  2219: u64 [a5 + 0x70] = a1\n  2222: a1 = s1 + 0x160\n  2226: u64 [a5 + 0x78] = a2\n  2229: ra = 66, jump @19\n      : @74 [@dyn 33] (gas: 4)\n  2234: i32 a0 = s1 + 0x3a0\n  2238: ra = 0x44\n  2241: ecalli 6 // 'chain_id'\n  2243: fallthrough\n      : @75 [@dyn 34] (gas: 5)\n  2244: a4 = u64 [s1 + 0x60]\n  2247: a3 = u64 [s1 + 0x70]\n  2250: a1 = u64 [s1 + 0x78]\n  2253: a0 = a1 + 0x80\n  2257: t0 = 70, jump @647\n      : @76 [@dyn 35] (gas: 1)\n  2262: jump @96 if a1 != 0\n      : @77 (gas: 12)\n  2266: a5 = s1 + 0x300\n  2270: a2 = u64 [a5 + 0xa0]\n  2274: a1 = u64 [a5 + 0xa8]\n  2278: a3 = u64 [a5 + 0xb0]\n  2282: a4 = u64 [a5 + 0xb8]\n  2286: a5 = s1 + 0x100\n  2290: u64 [a5 + 0x58] = a4\n  2293: u64 [a5 + 0x50] = a3\n  2296: u64 [a5 + 0x48] = a1\n  2299: a1 = s1 + 0x140\n  2303: u64 [a5 + 0x40] = a2\n  2306: ra = 72, jump @19\n      : @78 [@dyn 36] (gas: 6)\n  2311: a0 = 0x300d0\n  2316: u64 [s1 + 0x58] = a0\n  2319: i32 a0 = a0 + 0\n  2321: ra = 0x4a\n  2324: ecalli 0 // 'address'\n  2325: fallthrough\n      : @79 [@dyn 37] (gas: 5)\n  2326: a4 = u64 [s1 + 0x60]\n  2329: a3 = u64 [s1 + 0x70]\n  2332: a1 = u64 [s1 + 0x78]\n  2335: a0 = a1 + 0xa0\n  2339: t0 = 76, jump @647\n      : @80 [@dyn 38] (gas: 1)\n  2344: jump @96 if a1 != 0\n      : @81 (gas: 21)\n  2348: a3 = u64 [s1 + 0x58]\n  2351: a1 = u64 [a3 + 0x8]\n  2354: a2 = i32 [a3 + 0x10]\n  2357: a3 = u64 [a3]\n  2359: a1 = reverse a1\n  2361: a4 = a1 << 0x20\n  2364: a2 = reverse a2\n  2366: a2 = a2 >> 0x20\n  2369: a2 = a2 | a4\n  2372: a1 = a1 >> 0x20\n  2375: a3 = reverse a3\n  2377: a4 = a3 << 0x20\n  2380: a1 = a1 | a4\n  2383: a3 = a3 >> 0x20\n  2386: u64 [s1 + 312] = 0\n  2390: a4 = s1 + 0x100\n  2394: u64 [a4 + 0x30] = a3\n  2397: u64 [a4 + 0x28] = a1\n  2400: a1 = s1 + 0x120\n  2404: u64 [a4 + 0x20] = a2\n  2407: ra = 78, jump @19\n      : @82 [@dyn 39] (gas: 12)\n  2412: a5 = u64 [s1 + 0x60]\n  2415: a4 = u64 [s1 + 0x68]\n  2418: a3 = u64 [s1 + 0x70]\n  2421: a0 = u64 [s1 + 0x78]\n  2424: a2 = a0 | a5\n  2427: a1 = a3 | a4\n  2430: a2 = a2 | a1\n  2433: a2 = a2 >> 0x20\n  2436: a1 = a1 | a5\n  2439: a1 = a1 << 0x20\n  2442: a1 = a1 | a2\n  2445: jump @96 if a1 != 0\n      : @83 (gas: 6)\n  2449: u64 [s1 + 280] = 0\n  2453: u64 [s1 + 272] = 0\n  2457: u64 [s1 + 264] = 0\n  2461: a1 = s1 + 0x100\n  2465: u64 [s1 + 256] = 0xa0\n  2471: ra = 80, jump @19\n      : @84 [@dyn 40] (gas: 15)\n  2476: u64 [s1 + 216] = 0\n  2480: u64 [s1 + 208] = 0\n  2484: u64 [s1 + 200] = 0\n  2488: u64 [s1 + 192] = 0xc0\n  2494: a0 = u64 [s1 + 0x68]\n  2497: u64 [s1 + 0xf8] = a0\n  2501: a0 = u64 [s1 + 0x60]\n  2504: u64 [s1 + 0xf0] = a0\n  2508: a0 = u64 [s1 + 0x70]\n  2511: u64 [s1 + 0xe8] = a0\n  2515: a0 = s1 + 0xe0\n  2519: a1 = s1 + 0xc0\n  2523: a2 = u64 [s1 + 0x78]\n  2526: u64 [s1 + 0xe0] = a2\n  2530: ra = 82, jump @537\n      : @85 [@dyn 41] (gas: 3)\n  2535: a0 = s1 + 0xa0\n  2539: a1 = u64 [s1 + 0x78]\n  2542: ra = 84, jump @17\n      : @86 [@dyn 42] (gas: 5)\n  2547: a0 = u64 [s1 + 0xb8]\n  2551: a3 = u64 [s1 + 0xb0]\n  2555: a2 = u64 [s1 + 0xa8]\n  2559: a1 = u64 [s1 + 0xa0]\n  2563: t0 = 86, jump @657\n      : @87 [@dyn 43] (gas: 1)\n  2568: jump @96 if a0 != 0\n      : @88 (gas: 3)\n  2571: a0 = u64 [s1 + 0x18]\n  2574: u64 [s1 + 0x78] = a1\n  2577: ra = 88, jump @26\n      : @89 [@dyn 44] (gas: 1)\n  2582: t0 = 90, jump @663\n      : @90 [@dyn 45] (gas: 5)\n  2587: ra = 0x5c\n  2590: ecalli 9 // 'hash_keccak_256'\n  2592: a3 = u64 [s1 + 0x70]\n  2595: t0 = 0x5e\n  2598: jump @668\n      : @91 [@dyn 46] (gas: 2)\n  2601: a3 = u64 [s1 + 0x70]\n  2604: t0 = 94, jump @668\n      : @92 [@dyn 47] (gas: 12)\n  2609: u64 [s1 + 984] = 0\n  2613: u64 [s1 + 976] = 0\n  2617: u64 [s1 + 968] = 0\n  2621: a5 = s1 + 0x300\n  2625: u64 [a5 + 192] = 0x3\n  2630: u64 [a5 + 0xf8] = a3\n  2634: u64 [a5 + 0xf0] = a2\n  2638: u64 [a5 + 0xe8] = a1\n  2642: u64 [a5 + 0xe0] = a0\n  2646: a0 = s1 + 0x3c0\n  2650: a1 = s1 + 0x3e0\n  2654: ra = 96, jump @22\n      : @93 [@dyn 48] (gas: 3)\n  2659: a0 = s1 + 0x80\n  2663: a1 = 0x40\n  2666: ra = 98, jump @17\n      : @94 [@dyn 49] (gas: 5)\n  2671: a3 = u64 [s1 + 0x98]\n  2675: a1 = u64 [s1 + 0x90]\n  2679: a2 = u64 [s1 + 0x88]\n  2683: a0 = u64 [s1 + 0x80]\n  2687: t0 = 100, jump @658\n      : @95 [@dyn 50] (gas: 1)\n  2692: jump @98 if a1 == 0\n      : @96 (gas: 1)\n  2695: trap\n      : @97 (gas: 8)\n  2696: a1 = 0x200d0\n  2701: i32 a1 = a1 + 0\n  2703: a0 = 0x1\n  2706: a2 = 0\n  2708: ecalli 14 // 'seal_return'\n  2710: u64 [s1 + 0x78] = a0\n  2713: ra = 0x66\n  2716: jump @26\n      : @98 (gas: 2)\n  2719: u64 [s1 + 0x78] = a0\n  2722: ra = 102, jump @26\n      : @99 [@dyn 51] (gas: 5)\n  2727: i32 a0 = a0 + 0\n  2729: a1 = 0\n  2731: a2 = 0\n  2733: ecalli 2 // 'call_data_copy'\n  2735: jump @15\n      : @100 (gas: 3)\n  2738: a0 = u64 [s1 + 0x78]\n  2741: a1 = 0\n  2743: ra = 104, jump @26\n      : @101 [@dyn 52] (gas: 7)\n  2748: i32 a1 = a0 + 0\n  2750: a0 = 0\n  2752: a2 = 0\n  2754: ecalli 14 // 'seal_return'\n  2756: u64 [s1 + 0x78] = a0\n  2759: ra = 0x66\n  2762: jump @26\n      : @102 [@dyn 53] (gas: 4)\n  2765: a0 = 0x200b8\n  2770: u64 [s1 + 0x138] = a0\n  2774: a0 = i32 [0x200b8]\n  2779: jump @104 if a0 >=u 4\n      : @103 (gas: 1)\n  2783: jump @498\n      : @104 (gas: 6)\n  2786: a0 = s1 + 0x1000\n  2790: i32 a0 = a0 + 0x200\n  2794: a1 = 0\n  2796: ra = 0x6c\n  2799: ecalli 3 // 'call_data_load'\n  2801: fallthrough\n      : @105 [@dyn 54] (gas: 3)\n  2802: t0 = s1 + 0x10b8\n  2806: a0 = i32 [t0 + 0x164]\n  2810: jump @223 if a0 == 2514000705\n      : @106 (gas: 1)\n  2818: jump @174 if a0 == 2835717307\n      : @107 (gas: 1)\n  2826: jump @109 if a0 != 3573918927\n      : @108 (gas: 1)\n  2833: jump @356\n      : @109 (gas: 1)\n  2836: jump @111 if a0 != 3714247998\n      : @110 (gas: 1)\n  2843: jump @316\n      : @111 (gas: 1)\n  2846: jump @140 if a0 == 117300739\n      : @112 (gas: 1)\n  2854: jump @114 if a0 != 157198259\n      : @113 (gas: 1)\n  2861: jump @342\n      : @114 (gas: 1)\n  2864: jump @189 if a0 == 404098525\n      : @115 (gas: 1)\n  2872: jump @250 if a0 == 599290589\n      : @116 (gas: 1)\n  2880: jump @162 if a0 == 816707615\n      : @117 (gas: 1)\n  2888: jump @200 if a0 == 826074471\n      : @118 (gas: 1)\n  2896: jump @212 if a0 == 910484757\n      : @119 (gas: 1)\n  2904: jump @121 if a0 == 1889567281\n      : @120 (gas: 1)\n  2911: jump @384\n      : @121 (gas: 10)\n  2914: u64 [t0 + 736] = 0\n  2918: u64 [t0 + 728] = 0\n  2922: u64 [t0 + 720] = 0\n  2926: u64 [t0 + 712] = 0\n  2930: a0 = s1 + 0x1000\n  2934: i32 a0 = a0 + 0x380\n  2938: ra = 0x6e\n  2941: ecalli 17 // 'value_transferred'\n  2943: t0 = 0x70\n  2946: jump @665\n      : @122 [@dyn 55] (gas: 1)\n  2949: t0 = 112, jump @665\n      : @123 [@dyn 56] (gas: 8)\n  2954: a0 = u64 [a4 + 0xd8]\n  2958: a1 = u64 [a4 + 0xe0]\n  2962: a2 = u64 [a4 + 0xd0]\n  2966: a3 = u64 [a4 + 0xc8]\n  2970: a1 = a1 | a2\n  2973: a0 = a0 | a3\n  2976: a0 = a0 | a1\n  2979: jump @125 if a0 == 0\n      : @124 (gas: 1)\n  2982: jump @501\n      : @125 (gas: 4)\n  2985: a0 = u64 [s1 + 0x138]\n  2989: a0 = i32 [a0]\n  2991: a1 = 0x23\n  2994: jump @127 if a1 <u a0\n      : @126 (gas: 1)\n  2997: jump @502\n      : @127 (gas: 5)\n  3000: a0 = s1 + 0x7ff\n  3004: a0 = a0 + 0x1\n  3007: ra = 0x72\n  3010: t0 = 0x218\n  3014: jump @674\n      : @128 [@dyn 57] (gas: 13)\n  3017: a0 = s1 + 0x1000\n  3021: a0 = u64 [a0 + 0xfffffffffffff800]\n  3025: a1 = s1 + 0x1000\n  3029: a1 = u64 [a1 + 0xfffffffffffff808]\n  3033: a2 = s1 + 0x1000\n  3037: a2 = u32 [a2 + 0xfffffffffffff810]\n  3041: u64 [s1 + 2040] = 0\n  3045: u64 [s1 + 0x7f0] = a2\n  3049: u64 [s1 + 0x7e8] = a1\n  3053: a1 = s1 + 0x7e0\n  3057: u64 [s1 + 0x7e0] = a0\n  3061: a0 = 0\n  3063: ra = 116, jump @19\n      : @129 [@dyn 58] (gas: 7)\n  3068: u64 [s1 + 2008] = 0\n  3072: u64 [s1 + 2000] = 0\n  3076: u64 [s1 + 1984] = 0x1\n  3081: a0 = 0x20\n  3084: a1 = s1 + 0x7c0\n  3088: u64 [s1 + 1992] = 0\n  3092: ra = 118, jump @19\n      : @130 [@dyn 59] (gas: 2)\n  3097: a1 = i32 [0x200bc]\n  3102: jump @132 if a1 >u 63\n      : @131 (gas: 2)\n  3106: u32 [0x200bc] = 0x40\n  3112: fallthrough\n      : @132 (gas: 12)\n  3113: a0 = sp + 0xffffffffffffffe0\n  3116: a2 = a0 & 0xffffffffffffffe0\n  3119: u64 [s1 + 0x138] = a2\n  3123: sp = a2\n  3125: a0 = 0x200d0\n  3130: i32 a0 = a0 + 0\n  3132: i32 a2 = a2 + 0\n  3134: a1 = 0x40\n  3137: ra = 0x78\n  3140: ecalli 9 // 'hash_keccak_256'\n  3142: t0 = 0x7a\n  3145: jump @655\n      : @133 [@dyn 60] (gas: 1)\n  3148: t0 = 122, jump @655\n      : @134 [@dyn 61] (gas: 8)\n  3153: u64 [a4 + 0x300] = a3\n  3157: a3 = a4 + 0x200\n  3161: u64 [a3 + 0xf8] = a2\n  3165: u64 [a3 + 0xf0] = a1\n  3169: u64 [a3 + 0xe8] = a0\n  3173: a0 = s1 + 0x7a0\n  3177: a1 = s1 + 0x13a0\n  3181: ra = 124, jump @21\n      : @135 [@dyn 62] (gas: 12)\n  3186: a0 = u64 [s1 + 0x7b8]\n  3190: a1 = s1 + 0x100\n  3194: u64 [a1 + 0x38] = a0\n  3197: a0 = u64 [s1 + 0x7b0]\n  3201: u64 [a1 + 0x30] = a0\n  3204: a0 = u64 [s1 + 0x7a8]\n  3208: u64 [a1 + 0x28] = a0\n  3211: a0 = u64 [s1 + 0x7a0]\n  3215: u64 [a1 + 0x20] = a0\n  3218: a0 = s1 + 0x780\n  3222: a1 = 0x40\n  3225: ra = 126, jump @17\n      : @136 [@dyn 63] (gas: 6)\n  3230: a4 = s1 + 0x700\n  3234: a0 = u64 [a4 + 0x98]\n  3238: a1 = u64 [a4 + 0x90]\n  3242: a2 = u64 [a4 + 0x88]\n  3246: a3 = u64 [a4 + 0x80]\n  3250: t0 = 128, jump @650\n      : @137 [@dyn 64] (gas: 1)\n  3256: jump @139 if a0 == 0\n      : @138 (gas: 1)\n  3259: jump @497\n      : @139 (gas: 15)\n  3262: a2 = s1 + 0x100\n  3266: a0 = u64 [a2 + 0x20]\n  3269: a4 = s1 + 0x700\n  3273: u64 [a4 + 0x60] = a0\n  3276: a0 = u64 [a2 + 0x28]\n  3279: u64 [a4 + 0x68] = a0\n  3282: a0 = u64 [a2 + 0x30]\n  3285: u64 [a4 + 0x70] = a0\n  3288: a1 = s1 + 0x760\n  3292: a0 = u64 [a2 + 0x38]\n  3295: u64 [a4 + 0x78] = a0\n  3298: a0 = a3\n  3300: u64 [s1 + 0x138] = a3\n  3304: ra = 0x190\n  3308: jump @19\n      : @140 (gas: 9)\n  3311: u64 [t0 + 384] = 0\n  3315: u64 [t0 + 376] = 0\n  3319: u64 [t0 + 368] = 0\n  3323: u64 [t0 + 360] = 0\n  3327: a0 = s1 + 0x1000\n  3331: i32 a0 = a0 + 0x220\n  3335: ra = 0x82\n  3339: ecalli 17 // 'value_transferred'\n  3341: fallthrough\n      : @141 [@dyn 65] (gas: 3)\n  3342: a3 = s1 + 0x10b8\n  3346: a4 = a3 + 0x100\n  3350: t0 = 132, jump @673\n      : @142 [@dyn 66] (gas: 1)\n  3356: jump @144 if a0 == 0\n      : @143 (gas: 1)\n  3359: jump @503\n      : @144 (gas: 3)\n  3362: a0 = u64 [s1 + 0x138]\n  3366: a0 = i32 [a0]\n  3368: jump @146 if a0 >u 3\n      : @145 (gas: 1)\n  3372: jump @504\n      : @146 (gas: 3)\n  3375: a0 = s1 + 0x240\n  3379: a1 = 0x40\n  3382: ra = 134, jump @17\n      : @147 [@dyn 67] (gas: 20)\n  3388: a5 = s1 + 0x200\n  3392: a0 = u64 [a5 + 0x58]\n  3395: u64 [s1 + 0x120] = a0\n  3399: a1 = u64 [a5 + 0x50]\n  3402: u64 [s1 + 0x128] = a1\n  3406: a3 = u64 [a5 + 0x48]\n  3409: u64 [s1 + 0x130] = a3\n  3413: a2 = u64 [a5 + 0x40]\n  3416: u64 [s1 + 0x138] = a2\n  3420: u64 [s1 + 536] = 0\n  3424: u64 [s1 + 528] = 0\n  3428: u64 [s1 + 520] = 0\n  3432: u64 [a5 + 0] = 0x40\n  3435: u64 [a5 + 0x38] = a0\n  3438: u64 [a5 + 0x30] = a1\n  3441: u64 [a5 + 0x28] = a3\n  3444: a0 = s1 + 0x220\n  3448: a1 = s1 + 0x200\n  3452: u64 [a5 + 0x20] = a2\n  3455: ra = 136, jump @537\n      : @148 [@dyn 68] (gas: 1)\n  3461: t0 = 138, jump @666\n      : @149 [@dyn 69] (gas: 1)\n  3467: jump @151 if a0 == 0\n      : @150 (gas: 1)\n  3470: jump @497\n      : @151 (gas: 7)\n  3473: u64 [s1 + 504] = 0\n  3477: u64 [s1 + 496] = 0\n  3481: u64 [s1 + 488] = 0\n  3485: a1 = s1 + 0x1e0\n  3489: u64 [s1 + 480] = 0xa\n  3494: a0 = u64 [s1 + 0x138]\n  3498: ra = 140, jump @19\n      : @152 [@dyn 70] (gas: 1)\n  3504: t0 = 142, jump @656\n      : @153 [@dyn 71] (gas: 1)\n  3510: jump @155 if a1 != 0\n      : @154 (gas: 1)\n  3513: jump @497\n      : @155 (gas: 10)\n  3516: a0 = u64 [s1 + 0x138]\n  3520: i32 a0 = a0 + 0x20\n  3523: a1 = u64 [0x20070]\n  3528: u64 [s1 + 456] = 0\n  3532: u64 [s1 + 0x1d8] = a1\n  3536: a1 = 0x5632000000000000\n  3546: u64 [s1 + 0x1d0] = a1\n  3550: a1 = s1 + 0x1c0\n  3554: u64 [s1 + 448] = 0\n  3558: ra = 144, jump @19\n      : @156 [@dyn 72] (gas: 3)\n  3564: a0 = s1 + 0x1a0\n  3568: a1 = 0x40\n  3571: ra = 146, jump @17\n      : @157 [@dyn 73] (gas: 24)\n  3577: a2 = u64 [s1 + 0x1b8]\n  3581: u64 [s1 + 0x118] = a2\n  3585: a1 = u64 [s1 + 0x1b0]\n  3589: u64 [s1 + 0x110] = a1\n  3593: a3 = u64 [s1 + 0x1a8]\n  3597: u64 [s1 + 0x108] = a3\n  3601: a4 = u64 [s1 + 0x1a0]\n  3605: u64 [s1 + 0x100] = a4\n  3609: a0 = u64 [s1 + 0x120]\n  3613: u64 [s1 + 0x158] = a0\n  3617: a0 = u64 [s1 + 0x128]\n  3621: u64 [s1 + 0x150] = a0\n  3625: a0 = u64 [s1 + 0x130]\n  3629: u64 [s1 + 0x148] = a0\n  3633: a0 = u64 [s1 + 0x138]\n  3637: u64 [s1 + 0x140] = a0\n  3641: u64 [s1 + 0x178] = a2\n  3645: u64 [s1 + 0x170] = a1\n  3649: u64 [s1 + 0x168] = a3\n  3653: a0 = s1 + 0x180\n  3657: a1 = s1 + 0x160\n  3661: a2 = s1 + 0x140\n  3665: u64 [s1 + 0x160] = a4\n  3669: ra = 148, jump @546\n      : @158 [@dyn 74] (gas: 1)\n  3675: t0 = 150, jump @662\n      : @159 [@dyn 75] (gas: 1)\n  3681: jump @161 if a0 == 0\n      : @160 (gas: 1)\n  3684: jump @497\n      : @161 (gas: 8)\n  3687: t0 = a3\n  3689: a5 = s1 + 0x100\n  3693: a0 = u64 [a5 + 0x88]\n  3697: a1 = u64 [a5 + 0x98]\n  3701: u64 [a5 + 0x38] = a1\n  3704: t1 = u64 [s1 + 0x180]\n  3708: a3 = u64 [a5 + 0x90]\n  3712: jump @246\n      : @162 (gas: 15)\n  3715: a0 = s1 + 0x100\n  3719: u64 [a0 + 0x18] = a2\n  3722: u64 [a0 + 0x20] = a5\n  3725: u64 [a0 + 0x28] = a4\n  3728: u64 [a0 + 0x30] = a3\n  3731: u64 [t0 + 608] = 0\n  3735: u64 [t0 + 600] = 0\n  3739: u64 [t0 + 592] = 0\n  3743: u64 [t0 + 584] = 0\n  3747: a0 = s1 + 0x1000\n  3751: i32 a0 = a0 + 0x300\n  3755: ra = 0x98\n  3759: ecalli 17 // 'value_transferred'\n  3761: t0 = 0x9a\n  3765: jump @665\n      : @163 [@dyn 76] (gas: 1)\n  3768: t0 = 154, jump @665\n      : @164 [@dyn 77] (gas: 1)\n  3774: t0 = 156, jump @672\n      : @165 [@dyn 78] (gas: 1)\n  3780: jump @167 if a0 == 0\n      : @166 (gas: 1)\n  3783: jump @505\n      : @167 (gas: 3)\n  3786: a0 = u64 [s1 + 0x138]\n  3790: a0 = i32 [a0]\n  3792: jump @169 if a0 >u 3\n      : @168 (gas: 1)\n  3796: jump @506\n      : @169 (gas: 3)\n  3799: a0 = s1 + 0x6a0\n  3803: a1 = 0x40\n  3806: ra = 158, jump @17\n      : @170 [@dyn 79] (gas: 6)\n  3812: a4 = s1 + 0x600\n  3816: a0 = u64 [a4 + 0xb8]\n  3820: a1 = u64 [a4 + 0xb0]\n  3824: a2 = u64 [a4 + 0xa8]\n  3828: a3 = u64 [a4 + 0xa0]\n  3832: t0 = 160, jump @650\n      : @171 [@dyn 80] (gas: 1)\n  3838: jump @173 if a0 == 0\n      : @172 (gas: 1)\n  3841: jump @497\n      : @173 (gas: 15)\n  3844: a4 = s1 + 0x100\n  3848: a0 = u64 [0x20028]\n  3853: a1 = u64 [0x20030]\n  3858: a2 = u64 [0x20038]\n  3863: a5 = s1 + 0x600\n  3867: u64 [a5 + 0x98] = a0\n  3871: a0 = u64 [0x20040]\n  3876: u64 [a5 + 0x90] = a1\n  3880: u64 [a5 + 0x88] = a2\n  3884: a1 = s1 + 0x680\n  3888: u64 [a5 + 0x80] = a0\n  3892: a0 = a3\n  3894: u64 [s1 + 0x138] = a3\n  3898: ra = 0x190\n  3902: jump @19\n      : @174 (gas: 10)\n  3905: u64 [t0 + 896] = 0\n  3909: u64 [t0 + 888] = 0\n  3913: u64 [t0 + 880] = 0\n  3917: u64 [t0 + 872] = 0\n  3921: a0 = s1 + 0x1000\n  3925: i32 a0 = a0 + 0x420\n  3929: ra = 0xa2\n  3933: ecalli 17 // 'value_transferred'\n  3935: t0 = 0xa4\n  3939: jump @664\n      : @175 [@dyn 81] (gas: 1)\n  3942: t0 = 164, jump @664\n      : @176 [@dyn 82] (gas: 1)\n  3948: t0 = 166, jump @673\n      : @177 [@dyn 83] (gas: 1)\n  3954: jump @179 if a0 == 0\n      : @178 (gas: 1)\n  3957: jump @507\n      : @179 (gas: 4)\n  3960: a0 = u64 [s1 + 0x138]\n  3964: a0 = i32 [a0]\n  3966: a1 = 0x43\n  3969: jump @181 if a1 <u a0\n      : @180 (gas: 1)\n  3972: jump @508\n      : @181 (gas: 5)\n  3975: a0 = s1 + 0x7ff\n  3979: a0 = a0 + 0x2a1\n  3983: ra = 0xa8\n  3987: t0 = 0x218\n  3991: jump @674\n      : @182 [@dyn 84] (gas: 32)\n  3994: a1 = s1 + 0x7ff\n  3998: a1 = a1 + 0xb9\n  4002: a2 = a1 + 0x100\n  4006: a0 = u64 [a2 + 0xe8]\n  4010: u64 [s1 + 0x138] = a0\n  4014: a0 = u64 [a2 + 0xf0]\n  4018: u64 [s1 + 0x130] = a0\n  4022: a0 = u64 [a2 + 0xf8]\n  4026: u64 [s1 + 0x128] = a0\n  4030: a0 = u64 [a1 + 0x200]\n  4034: u64 [s1 + 0x120] = a0\n  4038: a0 = s1 + 0x1000\n  4042: i32 a0 = a0 + 0x440\n  4046: a1 = 0x24\n  4049: ecalli 3 // 'call_data_load'\n  4051: a0 = s1 + 0x10b8\n  4055: a2 = a0 + 0x300\n  4059: a1 = u64 [a2 + 0x88]\n  4063: u64 [s1 + 0x118] = a1\n  4067: a1 = u64 [a2 + 0x90]\n  4071: u64 [s1 + 0x110] = a1\n  4075: a1 = u64 [a2 + 0x98]\n  4079: u64 [s1 + 0x108] = a1\n  4083: a0 = u64 [a2 + 0xa0]\n  4087: u64 [s1 + 0x100] = a0\n  4091: a0 = 0x300d0\n  4096: u64 [s1 + 0xf8] = a0\n  4100: i32 a0 = a0 + 0\n  4102: ra = 0xaa\n  4106: ecalli 5 // 'caller'\n  4108: t0 = 0xac\n  4112: jump @654\n      : @183 [@dyn 85] (gas: 1)\n  4115: t0 = 172, jump @654\n      : @184 [@dyn 86] (gas: 31)\n  4121: a3 = s1 + 0x7ff\n  4125: a3 = a3 + 0xb9\n  4129: a5 = s1 + 0x100\n  4133: a4 = u64 [a5]\n  4135: u64 [a3 + 0x1a0] = a4\n  4139: a4 = u64 [a5 + 0x8]\n  4142: u64 [a3 + 0x198] = a4\n  4146: a4 = u64 [a5 + 0x10]\n  4149: u64 [a3 + 0x190] = a4\n  4153: a4 = u64 [a5 + 0x18]\n  4156: u64 [a3 + 0x188] = a4\n  4160: a4 = u64 [a5 + 0x20]\n  4163: u64 [a3 + 0x1c0] = a4\n  4167: a4 = u64 [a5 + 0x28]\n  4170: u64 [a3 + 0x1b8] = a4\n  4174: a4 = u64 [a5 + 0x30]\n  4177: u64 [a3 + 0x1b0] = a4\n  4181: a4 = u64 [a5 + 0x38]\n  4184: a5 = a3 + 0x100\n  4188: u64 [a5 + 0xa8] = a4\n  4192: u64 [a5 + 0xd8] = a2\n  4196: u64 [a5 + 0xd0] = a0\n  4200: u64 [a5 + 0xc8] = a1\n  4204: a0 = s1 + 0x7ff\n  4208: a0 = a0 + 0x281\n  4212: a1 = s1 + 0x7ff\n  4216: a1 = a1 + 0x261\n  4220: a2 = s1 + 0x7ff\n  4224: a2 = a2 + 0x241\n  4228: u64 [a3 + 480] = 0\n  4232: ra = 174, jump @600\n      : @185 [@dyn 87] (gas: 4)\n  4238: a0 = s1 + 0x7ff\n  4242: a0 = a0 + 0x221\n  4246: a1 = 0x40\n  4249: ra = 176, jump @17\n      : @186 [@dyn 88] (gas: 15)\n  4255: a3 = s1 + 0x7ff\n  4259: a3 = a3 + 0xb9\n  4263: a5 = a3 + 0x100\n  4267: a4 = u64 [a5 + 0x80]\n  4271: a1 = u64 [a5 + 0x78]\n  4274: a2 = u64 [a5 + 0x70]\n  4277: a0 = u64 [a5 + 0x68]\n  4280: a4 = a4 | a2\n  4283: a2 = a0 | a1\n  4286: a2 = a2 | a4\n  4289: a2 = a2 >> 0x20\n  4292: a1 = a1 | a4\n  4295: a1 = a1 << 0x20\n  4298: a1 = a1 | a2\n  4301: jump @188 if a1 == 0\n      : @187 (gas: 1)\n  4304: jump @497\n      : @188 (gas: 9)\n  4307: u64 [a3 + 352] = 0\n  4311: u64 [a3 + 344] = 0\n  4315: u64 [a3 + 328] = 0x1\n  4320: a1 = s1 + 0x7ff\n  4324: a1 = a1 + 0x201\n  4328: u64 [a3 + 336] = 0\n  4332: u64 [s1 + 0x138] = a0\n  4336: ra = 0x190\n  4340: jump @19\n      : @189 (gas: 8)\n  4343: u64 [t0 + 480] = 0\n  4347: u64 [t0 + 472] = 0\n  4351: u64 [t0 + 464] = 0\n  4355: u64 [t0 + 456] = 0\n  4359: a0 = s1 + 0x1000\n  4363: i32 a0 = a0 + 0x280\n  4367: ecalli 17 // 'value_transferred'\n  4369: fallthrough\n      : @190 (gas: 11)\n  4370: a3 = s1 + 0x10b8\n  4374: a5 = a3 + 0x100\n  4378: a0 = u64 [a5 + 0xd8]\n  4382: a1 = u64 [a5 + 0xe0]\n  4386: a2 = u64 [a5 + 0xd0]\n  4390: a4 = a3\n  4392: a3 = u64 [a5 + 0xc8]\n  4396: a1 = a1 | a2\n  4399: a0 = a0 | a3\n  4402: a0 = a0 | a1\n  4405: jump @192 if a0 == 0\n      : @191 (gas: 1)\n  4408: jump @509\n      : @192 (gas: 3)\n  4411: a0 = u64 [s1 + 0x138]\n  4415: a0 = i32 [a0]\n  4417: jump @194 if a0 >u 3\n      : @193 (gas: 1)\n  4421: jump @510\n      : @194 (gas: 7)\n  4424: u64 [a4 + 512] = 0\n  4428: u64 [a4 + 504] = 0\n  4432: u64 [a4 + 496] = 0\n  4436: u64 [a4 + 488] = 0\n  4440: a0 = s1 + 0x360\n  4444: a1 = s1 + 0x12a0\n  4448: ra = 178, jump @21\n      : @195 [@dyn 89] (gas: 12)\n  4454: a0 = u64 [s1 + 0x378]\n  4458: a1 = s1 + 0x100\n  4462: u64 [a1 + 0x38] = a0\n  4465: a0 = u64 [s1 + 0x370]\n  4469: u64 [a1 + 0x30] = a0\n  4472: a0 = u64 [s1 + 0x368]\n  4476: u64 [a1 + 0x28] = a0\n  4479: a0 = u64 [s1 + 0x360]\n  4483: u64 [a1 + 0x20] = a0\n  4486: a0 = s1 + 0x340\n  4490: a1 = 0x40\n  4493: ra = 180, jump @17\n      : @196 [@dyn 90] (gas: 6)\n  4499: a4 = s1 + 0x300\n  4503: a0 = u64 [a4 + 0x58]\n  4506: a1 = u64 [a4 + 0x50]\n  4509: a2 = u64 [a4 + 0x48]\n  4512: a3 = u64 [a4 + 0x40]\n  4515: t0 = 182, jump @650\n      : @197 [@dyn 91] (gas: 1)\n  4521: jump @199 if a0 == 0\n      : @198 (gas: 1)\n  4524: jump @497\n      : @199 (gas: 15)\n  4527: a2 = s1 + 0x100\n  4531: a0 = u64 [a2 + 0x20]\n  4534: a4 = s1 + 0x300\n  4538: u64 [a4 + 0x20] = a0\n  4541: a0 = u64 [a2 + 0x28]\n  4544: u64 [a4 + 0x28] = a0\n  4547: a0 = u64 [a2 + 0x30]\n  4550: u64 [a4 + 0x30] = a0\n  4553: a1 = s1 + 0x320\n  4557: a0 = u64 [a2 + 0x38]\n  4560: u64 [a4 + 0x38] = a0\n  4563: a0 = a3\n  4565: u64 [s1 + 0x138] = a3\n  4569: ra = 0x190\n  4573: jump @19\n      : @200 (gas: 10)\n  4576: u64 [t0 + 640] = 0\n  4580: u64 [t0 + 632] = 0\n  4584: u64 [t0 + 624] = 0\n  4588: u64 [t0 + 616] = 0\n  4592: a0 = s1 + 0x1000\n  4596: i32 a0 = a0 + 0x320\n  4600: ra = 0xb8\n  4604: ecalli 17 // 'value_transferred'\n  4606: t0 = 0xba\n  4610: jump @665\n      : @201 [@dyn 92] (gas: 1)\n  4613: t0 = 186, jump @665\n      : @202 [@dyn 93] (gas: 1)\n  4619: t0 = 188, jump @673\n      : @203 [@dyn 94] (gas: 1)\n  4625: jump @205 if a0 == 0\n      : @204 (gas: 1)\n  4628: jump @511\n      : @205 (gas: 3)\n  4631: a0 = u64 [s1 + 0x138]\n  4635: a0 = i32 [a0]\n  4637: jump @207 if a0 >u 3\n      : @206 (gas: 1)\n  4641: jump @512\n      : @207 (gas: 3)\n  4644: a0 = s1 + 0x6e0\n  4648: a1 = 0x40\n  4651: ra = 190, jump @17\n      : @208 [@dyn 95] (gas: 6)\n  4657: a4 = s1 + 0x600\n  4661: a3 = u64 [a4 + 0xf8]\n  4665: a1 = u64 [a4 + 0xf0]\n  4669: a2 = u64 [a4 + 0xe8]\n  4673: a0 = u64 [a4 + 0xe0]\n  4677: t0 = 192, jump @658\n      : @209 [@dyn 96] (gas: 1)\n  4683: jump @211 if a1 == 0\n      : @210 (gas: 1)\n  4686: jump @497\n      : @211 (gas: 8)\n  4689: u64 [s1 + 1752] = 0\n  4693: u64 [s1 + 1744] = 0\n  4697: u64 [s1 + 1736] = 0\n  4701: a1 = s1 + 0x6c0\n  4705: u64 [s1 + 1728] = 0x12\n  4710: u64 [s1 + 0x138] = a0\n  4714: ra = 0x190\n  4718: jump @19\n      : @212 (gas: 8)\n  4721: u64 [t0 + 672] = 0\n  4725: u64 [t0 + 664] = 0\n  4729: u64 [t0 + 656] = 0\n  4733: u64 [t0 + 648] = 0\n  4737: a0 = s1 + 0x1000\n  4741: i32 a0 = a0 + 0x340\n  4745: ecalli 17 // 'value_transferred'\n  4747: fallthrough\n      : @213 (gas: 11)\n  4748: a3 = s1 + 0x10b8\n  4752: a5 = a3 + 0x200\n  4756: a0 = u64 [a5 + 0x98]\n  4760: a1 = u64 [a5 + 0xa0]\n  4764: a2 = u64 [a5 + 0x90]\n  4768: a4 = a3\n  4770: a3 = u64 [a5 + 0x88]\n  4774: a1 = a1 | a2\n  4777: a0 = a0 | a3\n  4780: a0 = a0 | a1\n  4783: jump @215 if a0 == 0\n      : @214 (gas: 1)\n  4786: jump @513\n      : @215 (gas: 3)\n  4789: a0 = u64 [s1 + 0x138]\n  4793: a1 = i32 [a0]\n  4795: jump @217 if a1 >u 3\n      : @216 (gas: 1)\n  4799: jump @514\n      : @217 (gas: 7)\n  4802: u64 [a4 + 704] = 0\n  4806: u64 [a4 + 696] = 0\n  4810: u64 [a4 + 688] = 0\n  4814: u64 [a4 + 680] = 0x3\n  4819: a0 = s1 + 0x740\n  4823: a1 = s1 + 0x1360\n  4827: ra = 194, jump @21\n      : @218 [@dyn 97] (gas: 12)\n  4833: a0 = u64 [s1 + 0x758]\n  4837: a1 = s1 + 0x100\n  4841: u64 [a1 + 0x38] = a0\n  4844: a0 = u64 [s1 + 0x750]\n  4848: u64 [a1 + 0x30] = a0\n  4851: a0 = u64 [s1 + 0x748]\n  4855: u64 [a1 + 0x28] = a0\n  4858: a0 = u64 [s1 + 0x740]\n  4862: u64 [a1 + 0x20] = a0\n  4865: a0 = s1 + 0x720\n  4869: a1 = 0x40\n  4872: ra = 196, jump @17\n      : @219 [@dyn 98] (gas: 6)\n  4878: a4 = s1 + 0x700\n  4882: a0 = u64 [a4 + 0x38]\n  4885: a1 = u64 [a4 + 0x30]\n  4888: a2 = u64 [a4 + 0x28]\n  4891: a3 = u64 [a4 + 0x20]\n  4894: t0 = 198, jump @650\n      : @220 [@dyn 99] (gas: 1)\n  4900: jump @222 if a0 == 0\n      : @221 (gas: 1)\n  4903: jump @497\n      : @222 (gas: 15)\n  4906: a2 = s1 + 0x100\n  4910: a0 = u64 [a2 + 0x20]\n  4913: a4 = s1 + 0x700\n  4917: u64 [a4] = a0\n  4919: a0 = u64 [a2 + 0x28]\n  4922: u64 [a4 + 0x8] = a0\n  4925: a0 = u64 [a2 + 0x30]\n  4928: u64 [a4 + 0x10] = a0\n  4931: a1 = s1 + 0x700\n  4935: a0 = u64 [a2 + 0x38]\n  4938: u64 [a4 + 0x18] = a0\n  4941: a0 = a3\n  4943: u64 [s1 + 0x138] = a3\n  4947: ra = 0x190\n  4951: jump @19\n      : @223 (gas: 10)\n  4954: u64 [t0 + 864] = 0\n  4958: u64 [t0 + 856] = 0\n  4962: u64 [t0 + 848] = 0\n  4966: u64 [t0 + 840] = 0\n  4970: a0 = s1 + 0x1000\n  4974: i32 a0 = a0 + 0x400\n  4978: ra = 0xc8\n  4982: ecalli 17 // 'value_transferred'\n  4984: t0 = 0xca\n  4988: jump @664\n      : @224 [@dyn 100] (gas: 1)\n  4991: t0 = 202, jump @664\n      : @225 [@dyn 101] (gas: 1)\n  4997: t0 = 204, jump @672\n      : @226 [@dyn 102] (gas: 1)\n  5003: jump @228 if a0 == 0\n      : @227 (gas: 1)\n  5006: jump @515\n      : @228 (gas: 3)\n  5009: a0 = u64 [s1 + 0x138]\n  5013: a0 = i32 [a0]\n  5015: jump @230 if a0 >u 3\n      : @229 (gas: 1)\n  5019: jump @516\n      : @230 (gas: 4)\n  5022: a0 = s1 + 0x7ff\n  5026: a0 = a0 + 0x1e1\n  5030: a1 = 0x40\n  5033: ra = 206, jump @17\n      : @231 [@dyn 103] (gas: 24)\n  5039: a2 = s1 + 0x7ff\n  5043: a2 = a2 + 0xb9\n  5047: a0 = u64 [a2 + 0x140]\n  5051: u64 [s1 + 0x120] = a0\n  5055: a1 = u64 [a2 + 0x138]\n  5059: u64 [s1 + 0x128] = a1\n  5063: a4 = u64 [a2 + 0x130]\n  5067: u64 [s1 + 0x130] = a4\n  5071: a3 = u64 [a2 + 0x128]\n  5075: u64 [s1 + 0x138] = a3\n  5079: u64 [a2 + 256] = 0\n  5083: u64 [a2 + 248] = 0\n  5087: u64 [a2 + 240] = 0\n  5091: u64 [a2 + 232] = 0x40\n  5096: a5 = a2 + 0x100\n  5100: u64 [a5 + 0x20] = a0\n  5103: u64 [a5 + 0x18] = a1\n  5106: u64 [a5 + 0x10] = a4\n  5109: a0 = s1 + 0x7ff\n  5113: a0 = a0 + 0x1c1\n  5117: a1 = s1 + 0x7ff\n  5121: a1 = a1 + 0x1a1\n  5125: u64 [a5 + 0x8] = a3\n  5128: ra = 208, jump @537\n      : @232 [@dyn 104] (gas: 1)\n  5134: t0 = 210, jump @666\n      : @233 [@dyn 105] (gas: 1)\n  5140: jump @235 if a0 == 0\n      : @234 (gas: 1)\n  5143: jump @497\n      : @235 (gas: 10)\n  5146: a2 = s1 + 0x7ff\n  5150: a2 = a2 + 0xb9\n  5154: u64 [a2 + 224] = 0\n  5158: u64 [a2 + 216] = 0\n  5162: u64 [a2 + 208] = 0\n  5166: a1 = s1 + 0x7ff\n  5170: a1 = a1 + 0x181\n  5174: u64 [a2 + 200] = 0x6\n  5179: a0 = u64 [s1 + 0x138]\n  5183: ra = 212, jump @19\n      : @236 [@dyn 106] (gas: 1)\n  5189: t0 = 214, jump @656\n      : @237 [@dyn 107] (gas: 1)\n  5195: jump @239 if a1 != 0\n      : @238 (gas: 1)\n  5198: jump @497\n      : @239 (gas: 12)\n  5201: a0 = u64 [s1 + 0x138]\n  5205: i32 a0 = a0 + 0x20\n  5208: a1 = u64 [0x20068]\n  5213: a2 = s1 + 0x7ff\n  5217: a2 = a2 + 0xb9\n  5221: u64 [a2 + 184] = 0\n  5225: u64 [a2 + 176] = 0\n  5229: u64 [a2 + 0xc0] = a1\n  5233: a1 = s1 + 0x7ff\n  5237: a1 = a1 + 0x161\n  5241: u64 [a2 + 168] = 0\n  5245: ra = 216, jump @19\n      : @240 [@dyn 108] (gas: 4)\n  5251: a0 = s1 + 0x7ff\n  5255: a0 = a0 + 0x141\n  5259: a1 = 0x40\n  5262: ra = 218, jump @17\n      : @241 [@dyn 109] (gas: 30)\n  5268: a1 = s1 + 0x7ff\n  5272: a1 = a1 + 0xb9\n  5276: a3 = u64 [a1 + 0xa0]\n  5280: u64 [s1 + 0x118] = a3\n  5284: a2 = u64 [a1 + 0x98]\n  5288: u64 [s1 + 0x110] = a2\n  5292: a4 = u64 [a1 + 0x90]\n  5296: u64 [s1 + 0x108] = a4\n  5300: a5 = u64 [a1 + 0x88]\n  5304: u64 [s1 + 0x100] = a5\n  5308: a0 = u64 [s1 + 0x120]\n  5312: u64 [a1 + 0x40] = a0\n  5315: a0 = u64 [s1 + 0x128]\n  5319: u64 [a1 + 0x38] = a0\n  5322: a0 = u64 [s1 + 0x130]\n  5326: u64 [a1 + 0x30] = a0\n  5329: a0 = u64 [s1 + 0x138]\n  5333: u64 [a1 + 0x28] = a0\n  5336: u64 [a1 + 0x60] = a3\n  5339: u64 [a1 + 0x58] = a2\n  5342: u64 [a1 + 0x50] = a4\n  5345: a3 = a1\n  5347: a0 = s1 + 0x7ff\n  5351: a0 = a0 + 0x121\n  5355: a1 = s1 + 0x7ff\n  5359: a1 = a1 + 0x101\n  5363: a2 = s1 + 0x7ff\n  5367: a2 = a2 + 0xe1\n  5371: u64 [a3 + 0x48] = a5\n  5374: ra = 220, jump @546\n      : @242 [@dyn 110] (gas: 1)\n  5380: t0 = 222, jump @662\n      : @243 [@dyn 111] (gas: 1)\n  5386: jump @245 if a0 == 0\n      : @244 (gas: 1)\n  5389: jump @497\n      : @245 (gas: 9)\n  5392: t0 = a3\n  5394: a1 = s1 + 0x7ff\n  5398: a1 = a1 + 0xb9\n  5402: a0 = u64 [a1 + 0x70]\n  5405: a3 = u64 [a1 + 0x80]\n  5409: u64 [s1 + 0x138] = a3\n  5413: t1 = u64 [a1 + 0x68]\n  5416: a3 = u64 [a1 + 0x78]\n  5419: fallthrough\n      : @246 (gas: 26)\n  5420: t2 = a0 ^ a4\n  5423: a5 = a0 <u a4\n  5426: ra = t1 <u a2\n  5429: a5 = ra if t2 == 0\n  5432: a1 = a3 - t0\n  5435: t2 = a1 - a5\n  5438: a1 = a1 <u a5\n  5441: u64 [s1 + 0x130] = a1\n  5445: a3 = a3 <u t0\n  5448: a5 = u64 [s1 + 0x118]\n  5452: a1 = u64 [s1 + 0x138]\n  5456: a5 = a1 - a5\n  5459: a5 = a5 - a3\n  5462: a1 = u64 [s1 + 0x130]\n  5466: a5 = a5 - a1\n  5469: a0 = a0 - a4\n  5472: a0 = a0 - ra\n  5475: a1 = t1 - a2\n  5478: a0 = a0 | a5\n  5481: a3 = a1 | t2\n  5484: a3 = a3 | a0\n  5487: a0 = a0 | t2\n  5490: a3 = a3 >> 0x20\n  5493: a0 = a0 << 0x20\n  5496: a0 = a0 | a3\n  5499: jump @248 if a0 == 0\n      : @247 (gas: 1)\n  5502: jump @497\n      : @248 (gas: 3)\n  5505: a0 = a2\n  5507: u64 [s1 + 0x138] = a1\n  5511: ra = 224, jump @26\n      : @249 [@dyn 112] (gas: 6)\n  5517: i32 a1 = a0 + 0\n  5519: a2 = i32 [s1 + 0x138]\n  5523: a0 = 0\n  5525: ecalli 14 // 'seal_return'\n  5527: a1 = s1 + 0x10b8\n  5531: jump @407\n      : @250 (gas: 10)\n  5534: u64 [t0 + 544] = 0\n  5538: u64 [t0 + 536] = 0\n  5542: u64 [t0 + 528] = 0\n  5546: u64 [t0 + 520] = 0\n  5550: a0 = s1 + 0x1000\n  5554: i32 a0 = a0 + 0x2c0\n  5558: ra = 0xe2\n  5562: ecalli 17 // 'value_transferred'\n  5564: t0 = 0xe4\n  5568: jump @665\n      : @251 [@dyn 113] (gas: 1)\n  5571: t0 = 228, jump @665\n      : @252 [@dyn 114] (gas: 8)\n  5577: a0 = u64 [a4 + 0x18]\n  5580: a1 = u64 [a4 + 0x20]\n  5583: a2 = u64 [a4 + 0x10]\n  5586: a3 = u64 [a4 + 0x8]\n  5589: a1 = a1 | a2\n  5592: a0 = a0 | a3\n  5595: a0 = a0 | a1\n  5598: jump @254 if a0 == 0\n      : @253 (gas: 1)\n  5601: jump @517\n      : @254 (gas: 4)\n  5604: a0 = u64 [s1 + 0x138]\n  5608: a0 = i32 [a0]\n  5610: a1 = 0x63\n  5613: jump @256 if a1 <u a0\n      : @255 (gas: 1)\n  5616: jump @518\n      : @256 (gas: 4)\n  5619: a0 = s1 + 0x660\n  5623: ra = 0xe6\n  5627: t0 = 0x218\n  5631: jump @674\n      : @257 [@dyn 115] (gas: 12)\n  5634: a0 = u64 [s1 + 0x678]\n  5638: u64 [s1 + 0xe8] = a0\n  5642: a0 = u64 [s1 + 0x670]\n  5646: u64 [s1 + 0x118] = a0\n  5650: a0 = u64 [s1 + 0x668]\n  5654: u64 [s1 + 0x138] = a0\n  5658: a0 = u64 [s1 + 0x660]\n  5662: u64 [s1 + 0x130] = a0\n  5666: a0 = s1 + 0x640\n  5670: ra = 0xe8\n  5674: t0 = 0x222\n  5678: jump @674\n      : @258 [@dyn 116] (gas: 36)\n  5681: a0 = u64 [s1 + 0x658]\n  5685: u64 [s1 + 0xe0] = a0\n  5689: a0 = u64 [s1 + 0x650]\n  5693: u64 [s1 + 0xd8] = a0\n  5697: a0 = u64 [s1 + 0x648]\n  5701: u64 [s1 + 0xd0] = a0\n  5705: a0 = u64 [s1 + 0x640]\n  5709: u64 [s1 + 0xc8] = a0\n  5713: a0 = s1 + 0x1000\n  5717: i32 a0 = a0 + 0x2e0\n  5721: a1 = 0x44\n  5724: ecalli 3 // 'call_data_load'\n  5726: a0 = s1 + 0x10b8\n  5730: a2 = a0 + 0x200\n  5734: a1 = u64 [a2 + 0x40]\n  5737: a3 = s1 + 0x100\n  5741: u64 [a3 + 0x8] = a1\n  5744: a1 = u64 [a2 + 0x38]\n  5747: u64 [a3] = a1\n  5749: a1 = u64 [a2 + 0x30]\n  5752: u64 [s1 + 0xf8] = a1\n  5756: a0 = u64 [a2 + 0x28]\n  5759: u64 [s1 + 0xf0] = a0\n  5763: a0 = u64 [a3 + 0x18]\n  5766: a0 = a0 << 0x20\n  5769: a0 = a0 >> 0x20\n  5772: u64 [s1 + 1592] = 0\n  5776: u64 [s1 + 0xc0] = a0\n  5780: u64 [s1 + 0x630] = a0\n  5784: a0 = u64 [a3 + 0x38]\n  5787: u64 [s1 + 0x628] = a0\n  5791: a1 = s1 + 0x620\n  5795: a0 = u64 [a3 + 0x30]\n  5798: u64 [s1 + 0x620] = a0\n  5802: a0 = 0\n  5804: ra = 234, jump @19\n      : @259 [@dyn 117] (gas: 7)\n  5810: u64 [s1 + 1560] = 0\n  5814: u64 [s1 + 1552] = 0\n  5818: u64 [s1 + 1536] = 0x2\n  5823: a0 = 0x20\n  5826: a1 = s1 + 0x600\n  5830: u64 [s1 + 1544] = 0\n  5834: ra = 236, jump @19\n      : @260 [@dyn 118] (gas: 3)\n  5840: a1 = 0x200bc\n  5845: a0 = i32 [0x200bc]\n  5850: jump @262 if a0 >u 63\n      : @261 (gas: 2)\n  5854: u32 [0x200bc] = 0x40\n  5860: fallthrough\n      : @262 (gas: 13)\n  5861: a0 = sp + 0xffffffffffffffe0\n  5864: a2 = a0 & 0xffffffffffffffe0\n  5867: u64 [s1 + 0x110] = a2\n  5871: sp = a2\n  5873: a0 = 0x200d0\n  5878: i32 a0 = a0 + 0\n  5880: i32 a2 = a2 + 0\n  5882: u64 [s1 + 0x128] = a1\n  5886: a1 = 0x40\n  5889: u64 [s1 + 0x120] = a0\n  5893: ra = 0xee\n  5897: ecalli 9 // 'hash_keccak_256'\n  5899: fallthrough\n      : @263 [@dyn 119] (gas: 8)\n  5900: a3 = u64 [s1 + 0x110]\n  5904: a0 = u64 [a3 + 0x18]\n  5907: a1 = u64 [a3 + 0x10]\n  5910: a2 = u64 [a3 + 0x8]\n  5913: a3 = u64 [a3]\n  5915: a0 = reverse a0\n  5917: u64 [s1 + 0xa8] = a0\n  5921: t0 = 240, jump @653\n      : @264 [@dyn 120] (gas: 10)\n  5927: u64 [s1 + 0xb0] = a0\n  5931: sp = a0\n  5933: a0 = 0x300d0\n  5938: u64 [s1 + 0x110] = a0\n  5942: i32 a0 = a0 + 0\n  5944: u64 [s1 + 0xb8] = a0\n  5948: ra = 0xf2\n  5952: ecalli 5 // 'caller'\n  5954: t0 = 0xf4\n  5958: jump @648\n      : @265 [@dyn 121] (gas: 1)\n  5961: t0 = 244, jump @648\n      : @266 [@dyn 122] (gas: 7)\n  5967: u64 [s1 + 1528] = 0\n  5971: u64 [s1 + 0x5f0] = a1\n  5975: u64 [s1 + 0x5e8] = a0\n  5979: a1 = s1 + 0x5e0\n  5983: u64 [s1 + 0x5e0] = a3\n  5987: a0 = 0\n  5989: ra = 246, jump @19\n      : @267 [@dyn 123] (gas: 12)\n  5995: a0 = u64 [s1 + 0x90]\n  5999: a3 = s1 + 0x500\n  6003: u64 [a3 + 0xd8] = a0\n  6007: a0 = u64 [s1 + 0x98]\n  6011: u64 [a3 + 0xd0] = a0\n  6015: a0 = u64 [s1 + 0xa0]\n  6019: u64 [a3 + 0xc8] = a0\n  6023: a0 = 0x20\n  6026: a1 = s1 + 0x5c0\n  6030: a2 = u64 [s1 + 0xa8]\n  6034: u64 [a3 + 0xc0] = a2\n  6038: ra = 248, jump @19\n      : @268 [@dyn 124] (gas: 3)\n  6044: a1 = u64 [s1 + 0x128]\n  6048: a0 = i32 [a1]\n  6050: jump @270 if a0 >u 63\n      : @269 (gas: 2)\n  6054: u32 [a1 + 0] = 0x40\n  6057: fallthrough\n      : @270 (gas: 4)\n  6058: a0 = sp + 0xffffffffffffffe0\n  6061: a0 = a0 & 0xffffffffffffffe0\n  6064: u64 [s1 + 0xa8] = a0\n  6068: t0 = 250, jump @659\n      : @271 [@dyn 125] (gas: 5)\n  6074: ra = 0xfc\n  6078: ecalli 9 // 'hash_keccak_256'\n  6080: a3 = u64 [s1 + 0xa8]\n  6084: t0 = 0xfe\n  6088: jump @649\n      : @272 [@dyn 126] (gas: 2)\n  6091: a3 = u64 [s1 + 0xa8]\n  6095: t0 = 254, jump @649\n      : @273 [@dyn 127] (gas: 7)\n  6101: a1 = u64 [s1 + 0xb0]\n  6105: u64 [a1 + 0x18] = a3\n  6108: u64 [a1 + 0x10] = a2\n  6111: u64 [a1 + 0x8] = a4\n  6114: u64 [a1] = a0\n  6116: a0 = s1 + 0x5a0\n  6120: ra = 256, jump @21\n      : @274 [@dyn 128] (gas: 9)\n  6126: a4 = s1 + 0x500\n  6130: a0 = u64 [a4 + 0xb0]\n  6134: a1 = u64 [a4 + 0xb8]\n  6138: a2 = u64 [a4 + 0xa8]\n  6142: a3 = u64 [a4 + 0xa0]\n  6146: a1 = a1 & a2\n  6149: a0 = a0 & a3\n  6152: a0 = a0 & a1\n  6155: jump @310 if a0 == 4294967295\n      : @275 (gas: 10)\n  6160: u64 [s1 + 1432] = 0\n  6164: a0 = u64 [s1 + 0x130]\n  6168: u64 [s1 + 0x580] = a0\n  6172: a0 = u64 [s1 + 0x138]\n  6176: u64 [s1 + 0x588] = a0\n  6180: a1 = s1 + 0x580\n  6184: a0 = u64 [s1 + 0xc0]\n  6188: u64 [s1 + 0x590] = a0\n  6192: a0 = 0\n  6194: ra = 258, jump @19\n      : @276 [@dyn 129] (gas: 7)\n  6200: u64 [s1 + 1400] = 0\n  6204: u64 [s1 + 1392] = 0\n  6208: u64 [s1 + 1376] = 0x2\n  6213: a0 = 0x20\n  6216: a1 = s1 + 0x560\n  6220: u64 [s1 + 1384] = 0\n  6224: ra = 260, jump @19\n      : @277 [@dyn 130] (gas: 3)\n  6230: a1 = u64 [s1 + 0x128]\n  6234: a0 = i32 [a1]\n  6236: jump @279 if a0 >u 63\n      : @278 (gas: 2)\n  6240: u32 [a1 + 0] = 0x40\n  6243: fallthrough\n      : @279 (gas: 4)\n  6244: a0 = sp + 0xffffffffffffffe0\n  6247: a0 = a0 & 0xffffffffffffffe0\n  6250: u64 [s1 + 0xb0] = a0\n  6254: t0 = 262, jump @659\n      : @280 [@dyn 131] (gas: 3)\n  6260: ra = 0x108\n  6264: ecalli 9 // 'hash_keccak_256'\n  6266: fallthrough\n      : @281 [@dyn 132] (gas: 8)\n  6267: a3 = u64 [s1 + 0xb0]\n  6271: a0 = u64 [a3 + 0x18]\n  6274: a1 = u64 [a3 + 0x10]\n  6277: a2 = u64 [a3 + 0x8]\n  6280: a3 = u64 [a3]\n  6282: a0 = reverse a0\n  6284: u64 [s1 + 0xb0] = a0\n  6288: t0 = 266, jump @653\n      : @282 [@dyn 133] (gas: 7)\n  6294: u64 [s1 + 0xa8] = a0\n  6298: sp = a0\n  6300: a0 = u64 [s1 + 0xb8]\n  6304: ra = 0x10c\n  6308: ecalli 5 // 'caller'\n  6310: t0 = 0x10e\n  6314: jump @648\n      : @283 [@dyn 134] (gas: 1)\n  6317: t0 = 270, jump @648\n      : @284 [@dyn 135] (gas: 7)\n  6323: u64 [s1 + 1368] = 0\n  6327: u64 [s1 + 0x550] = a1\n  6331: u64 [s1 + 0x548] = a0\n  6335: a1 = s1 + 0x540\n  6339: u64 [s1 + 0x540] = a3\n  6343: a0 = 0\n  6345: ra = 272, jump @19\n      : @285 [@dyn 136] (gas: 12)\n  6351: a0 = u64 [s1 + 0x90]\n  6355: a3 = s1 + 0x500\n  6359: u64 [a3 + 0x38] = a0\n  6362: a0 = u64 [s1 + 0x98]\n  6366: u64 [a3 + 0x30] = a0\n  6369: a0 = u64 [s1 + 0xa0]\n  6373: u64 [a3 + 0x28] = a0\n  6376: a0 = 0x20\n  6379: a1 = s1 + 0x520\n  6383: a2 = u64 [s1 + 0xb0]\n  6387: u64 [a3 + 0x20] = a2\n  6390: ra = 274, jump @19\n      : @286 [@dyn 137] (gas: 3)\n  6396: a1 = u64 [s1 + 0x128]\n  6400: a0 = i32 [a1]\n  6402: jump @288 if a0 >u 63\n      : @287 (gas: 2)\n  6406: u32 [a1 + 0] = 0x40\n  6409: fallthrough\n      : @288 (gas: 4)\n  6410: a0 = sp + 0xffffffffffffffe0\n  6413: a0 = a0 & 0xffffffffffffffe0\n  6416: u64 [s1 + 0xb0] = a0\n  6420: t0 = 276, jump @659\n      : @289 [@dyn 138] (gas: 5)\n  6426: ra = 0x116\n  6430: ecalli 9 // 'hash_keccak_256'\n  6432: a3 = u64 [s1 + 0xb0]\n  6436: t0 = 0x118\n  6440: jump @649\n      : @290 [@dyn 139] (gas: 2)\n  6443: a3 = u64 [s1 + 0xb0]\n  6447: t0 = 280, jump @649\n      : @291 [@dyn 140] (gas: 11)\n  6453: a1 = u64 [s1 + 0xa8]\n  6457: u64 [a1 + 0x18] = a3\n  6460: u64 [a1 + 0x10] = a2\n  6463: u64 [a1 + 0x8] = a4\n  6466: u64 [a1] = a0\n  6468: a0 = sp + 0xffffffffffffffe0\n  6471: a0 = a0 & 0xffffffffffffffe0\n  6474: u64 [s1 + 0xb0] = a0\n  6478: sp = a0\n  6480: a0 = s1 + 0x500\n  6484: ra = 282, jump @21\n      : @292 [@dyn 141] (gas: 21)\n  6490: a4 = s1 + 0x500\n  6494: a3 = u64 [a4]\n  6496: a0 = u64 [a4 + 0x8]\n  6499: a1 = u64 [a4 + 0x10]\n  6502: a2 = u64 [a4 + 0x18]\n  6505: a4 = u64 [s1 + 0x108]\n  6509: u64 [s1 + 0x4b8] = a4\n  6513: a4 = u64 [s1 + 0x100]\n  6517: u64 [s1 + 0x4b0] = a4\n  6521: a4 = u64 [s1 + 0xf8]\n  6525: u64 [s1 + 0x4a8] = a4\n  6529: a4 = u64 [s1 + 0xf0]\n  6533: u64 [s1 + 0x4a0] = a4\n  6537: u64 [s1 + 0x4d8] = a2\n  6541: u64 [s1 + 0x4d0] = a1\n  6545: u64 [s1 + 0x4c8] = a0\n  6549: a0 = s1 + 0x4e0\n  6553: a1 = s1 + 0x4c0\n  6557: a2 = s1 + 0x4a0\n  6561: u64 [s1 + 0x4c0] = a3\n  6565: ra = 284, jump @593\n      : @293 [@dyn 142] (gas: 19)\n  6571: a0 = u64 [s1 + 0x4f0]\n  6575: a1 = u64 [s1 + 0x4f8]\n  6579: a2 = u64 [s1 + 0x4e0]\n  6583: a3 = u64 [s1 + 0x4e8]\n  6587: a4 = u64 [s1 + 0xb0]\n  6591: u64 [a4 + 0x10] = a0\n  6594: u64 [a4 + 0x18] = a1\n  6597: u64 [a4] = a2\n  6599: u64 [a4 + 0x8] = a3\n  6602: u64 [s1 + 1176] = 0\n  6606: a0 = u64 [s1 + 0xc0]\n  6610: u64 [s1 + 0x490] = a0\n  6614: a0 = u64 [s1 + 0x138]\n  6618: u64 [s1 + 0x488] = a0\n  6622: a1 = s1 + 0x480\n  6626: a0 = u64 [s1 + 0x130]\n  6630: u64 [s1 + 0x480] = a0\n  6634: a0 = 0\n  6636: ra = 286, jump @19\n      : @294 [@dyn 143] (gas: 7)\n  6642: u64 [s1 + 1144] = 0\n  6646: u64 [s1 + 1136] = 0\n  6650: u64 [s1 + 1120] = 0x2\n  6655: a0 = 0x20\n  6658: a1 = s1 + 0x460\n  6662: u64 [s1 + 1128] = 0\n  6666: ra = 288, jump @19\n      : @295 [@dyn 144] (gas: 3)\n  6672: a1 = u64 [s1 + 0x128]\n  6676: a0 = i32 [a1]\n  6678: jump @297 if a0 >u 63\n      : @296 (gas: 2)\n  6682: u32 [a1 + 0] = 0x40\n  6685: fallthrough\n      : @297 (gas: 4)\n  6686: a0 = sp + 0xffffffffffffffe0\n  6689: a0 = a0 & 0xffffffffffffffe0\n  6692: u64 [s1 + 0xc0] = a0\n  6696: t0 = 290, jump @659\n      : @298 [@dyn 145] (gas: 3)\n  6702: ra = 0x124\n  6706: ecalli 9 // 'hash_keccak_256'\n  6708: fallthrough\n      : @299 [@dyn 146] (gas: 8)\n  6709: a3 = u64 [s1 + 0xc0]\n  6713: a0 = u64 [a3 + 0x18]\n  6716: a1 = u64 [a3 + 0x10]\n  6719: a2 = u64 [a3 + 0x8]\n  6722: a3 = u64 [a3]\n  6724: a0 = reverse a0\n  6726: u64 [s1 + 0xa8] = a0\n  6730: t0 = 294, jump @653\n      : @300 [@dyn 147] (gas: 7)\n  6736: u64 [s1 + 0xc0] = a0\n  6740: sp = a0\n  6742: a0 = u64 [s1 + 0xb8]\n  6746: ra = 0x128\n  6750: ecalli 5 // 'caller'\n  6752: t0 = 0x12a\n  6756: jump @648\n      : @301 [@dyn 148] (gas: 1)\n  6759: t0 = 298, jump @648\n      : @302 [@dyn 149] (gas: 7)\n  6765: u64 [s1 + 1112] = 0\n  6769: u64 [s1 + 0x450] = a1\n  6773: u64 [s1 + 0x448] = a0\n  6777: a1 = s1 + 0x440\n  6781: u64 [s1 + 0x440] = a3\n  6785: a0 = 0\n  6787: ra = 300, jump @19\n      : @303 [@dyn 150] (gas: 12)\n  6793: a0 = u64 [s1 + 0x90]\n  6797: a3 = s1 + 0x400\n  6801: u64 [a3 + 0x38] = a0\n  6804: a0 = u64 [s1 + 0x98]\n  6808: u64 [a3 + 0x30] = a0\n  6811: a0 = u64 [s1 + 0xa0]\n  6815: u64 [a3 + 0x28] = a0\n  6818: a0 = 0x20\n  6821: a1 = s1 + 0x420\n  6825: a2 = u64 [s1 + 0xa8]\n  6829: u64 [a3 + 0x20] = a2\n  6832: ra = 302, jump @19\n      : @304 [@dyn 151] (gas: 3)\n  6838: a1 = u64 [s1 + 0x128]\n  6842: a0 = i32 [a1]\n  6844: jump @306 if a0 >u 63\n      : @305 (gas: 2)\n  6848: u32 [a1 + 0] = 0x40\n  6851: fallthrough\n      : @306 (gas: 4)\n  6852: a0 = sp + 0xffffffffffffffe0\n  6855: a0 = a0 & 0xffffffffffffffe0\n  6858: u64 [s1 + 0x128] = a0\n  6862: t0 = 304, jump @659\n      : @307 [@dyn 152] (gas: 5)\n  6868: ra = 0x132\n  6872: ecalli 9 // 'hash_keccak_256'\n  6874: a3 = u64 [s1 + 0x128]\n  6878: t0 = 0x134\n  6882: jump @667\n      : @308 [@dyn 153] (gas: 2)\n  6885: a3 = u64 [s1 + 0x128]\n  6889: t0 = 308, jump @667\n      : @309 [@dyn 154] (gas: 7)\n  6895: a0 = u64 [s1 + 0xc0]\n  6899: u64 [a0 + 0x18] = a3\n  6902: u64 [a0 + 0x10] = a2\n  6905: u64 [a0 + 0x8] = a1\n  6908: u64 [a0] = a4\n  6910: a1 = u64 [s1 + 0xb0]\n  6914: ra = 310, jump @22\n      : @310 [@dyn 155] (gas: 30)\n  6920: a0 = u64 [s1 + 0xf0]\n  6924: u64 [s1 + 0x3c0] = a0\n  6928: a0 = u64 [s1 + 0xc8]\n  6932: u64 [s1 + 0x3e0] = a0\n  6936: a1 = s1 + 0x100\n  6940: a0 = u64 [a1 + 0x30]\n  6943: a4 = s1 + 0x400\n  6947: u64 [a4] = a0\n  6949: a0 = u64 [s1 + 0xf8]\n  6953: u64 [s1 + 0x3c8] = a0\n  6957: a0 = u64 [s1 + 0xd0]\n  6961: u64 [s1 + 0x3e8] = a0\n  6965: a0 = u64 [a1 + 0x38]\n  6968: u64 [a4 + 0x8] = a0\n  6971: a0 = u64 [a1]\n  6973: u64 [s1 + 0x3d0] = a0\n  6977: a0 = u64 [s1 + 0xd8]\n  6981: u64 [s1 + 0x3f0] = a0\n  6985: a0 = u64 [a1 + 0x18]\n  6988: u64 [a4 + 0x10] = a0\n  6991: a0 = u64 [a1 + 0x8]\n  6994: u64 [s1 + 0x3d8] = a0\n  6998: a0 = u64 [s1 + 0xe0]\n  7002: u64 [s1 + 0x3f8] = a0\n  7006: a0 = s1 + 0x400\n  7010: a1 = s1 + 0x3e0\n  7014: a2 = s1 + 0x3c0\n  7018: a3 = u64 [s1 + 0xe8]\n  7022: u64 [a4 + 0x18] = a3\n  7025: ra = 312, jump @600\n      : @311 [@dyn 156] (gas: 3)\n  7031: a0 = s1 + 0x3a0\n  7035: a1 = 0x40\n  7038: ra = 314, jump @17\n      : @312 [@dyn 157] (gas: 6)\n  7044: a4 = s1 + 0x300\n  7048: a3 = u64 [a4 + 0xb8]\n  7052: a1 = u64 [a4 + 0xb0]\n  7056: a2 = u64 [a4 + 0xa8]\n  7060: a0 = u64 [a4 + 0xa0]\n  7064: t0 = 316, jump @658\n      : @313 [@dyn 158] (gas: 1)\n  7070: jump @315 if a1 == 0\n      : @314 (gas: 1)\n  7073: jump @497\n      : @315 (gas: 8)\n  7076: u64 [s1 + 920] = 0\n  7080: u64 [s1 + 912] = 0\n  7084: u64 [s1 + 904] = 0\n  7088: a1 = s1 + 0x380\n  7092: u64 [s1 + 896] = 0x1\n  7097: u64 [s1 + 0x138] = a0\n  7101: ra = 0x190\n  7105: jump @19\n      : @316 (gas: 9)\n  7108: u64 [t0 + 1376] = 0\n  7112: u64 [t0 + 1368] = 0\n  7116: u64 [t0 + 1360] = 0\n  7120: u64 [t0 + 1352] = 0\n  7124: a0 = s1 + 0x1000\n  7128: i32 a0 = a0 + 0x600\n  7132: ra = 0x13e\n  7136: ecalli 17 // 'value_transferred'\n  7138: fallthrough\n      : @317 [@dyn 159] (gas: 3)\n  7139: a3 = s1 + 0x10b8\n  7143: a4 = a3 + 0x500\n  7147: t0 = 320, jump @672\n      : @318 [@dyn 160] (gas: 1)\n  7153: jump @320 if a0 == 0\n      : @319 (gas: 1)\n  7156: jump @519\n      : @320 (gas: 4)\n  7159: a0 = u64 [s1 + 0x138]\n  7163: a0 = i32 [a0]\n  7165: a1 = 0x43\n  7168: jump @322 if a1 <u a0\n      : @321 (gas: 1)\n  7171: jump @520\n      : @322 (gas: 6)\n  7174: a0 = 0xffffffff\n  7184: u64 [s1 + 0x138] = a0\n  7188: a0 = s1 + 0x11c0\n  7192: ra = 0x142\n  7196: t0 = 0x218\n  7200: jump @674\n      : @323 [@dyn 161] (gas: 11)\n  7203: a1 = s1 + 0x10b8\n  7207: a0 = u64 [a1 + 0x108]\n  7211: u64 [s1 + 0x130] = a0\n  7215: a0 = u64 [a1 + 0x110]\n  7219: u64 [s1 + 0x110] = a0\n  7223: a0 = u32 [a1 + 0x118]\n  7227: u64 [s1 + 0x108] = a0\n  7231: a0 = s1 + 0x11a0\n  7235: ra = 0x144\n  7239: t0 = 0x222\n  7243: jump @674\n      : @324 [@dyn 162] (gas: 3)\n  7246: t0 = 0x146\n  7250: a1 = s1 + 0x10b8\n  7254: fallthrough\n      : @325 [@dyn 163] (gas: 18)\n  7255: a0 = u64 [a1 + 0xf8]\n  7259: a3 = s1 + 0x100\n  7263: u64 [a3 + 0x28] = a0\n  7266: a0 = u64 [a1 + 0xf0]\n  7270: u64 [a3 + 0x20] = a0\n  7273: a0 = u64 [a1 + 0xe8]\n  7277: u64 [a3 + 0x18] = a0\n  7280: u64 [a1 + 224] = 0\n  7284: a0 = u64 [a3 + 0x8]\n  7287: u64 [a1 + 0xd8] = a0\n  7291: a0 = u64 [a3 + 0x10]\n  7294: u64 [a1 + 0xd0] = a0\n  7298: a2 = a1\n  7300: a1 = s1 + 0x1180\n  7304: a0 = u64 [a3 + 0x30]\n  7307: u64 [a2 + 0xc8] = a0\n  7311: a0 = 0\n  7313: ra = 328, jump @19\n      : @326 [@dyn 164] (gas: 3)\n  7319: t0 = 0x14a\n  7323: a1 = s1 + 0x10b8\n  7327: fallthrough\n      : @327 [@dyn 165] (gas: 8)\n  7328: u64 [a1 + 192] = 0\n  7332: u64 [a1 + 184] = 0\n  7336: u64 [a1 + 168] = 0x2\n  7341: a2 = a1\n  7343: a0 = 0x20\n  7346: a1 = s1 + 0x1160\n  7350: u64 [a2 + 176] = 0\n  7354: ra = 332, jump @19\n      : @328 [@dyn 166] (gas: 3)\n  7360: a1 = 0x200bc\n  7365: a0 = i32 [0x200bc]\n  7370: jump @330 if a0 >u 63\n      : @329 (gas: 2)\n  7374: u32 [0x200bc] = 0x40\n  7380: fallthrough\n      : @330 (gas: 43)\n  7381: a0 = sp + 0xffffffffffffffe0\n  7384: a2 = a0 & 0xffffffffffffffe0\n  7387: u64 [s1 + 0x108] = a2\n  7391: sp = a2\n  7393: a0 = 0x200d0\n  7398: i32 a0 = a0 + 0\n  7400: i32 a2 = a2 + 0\n  7402: u64 [s1 + 0x130] = a1\n  7406: a1 = 0x40\n  7409: u64 [s1 + 0x110] = a0\n  7413: ecalli 9 // 'hash_keccak_256'\n  7415: a3 = u64 [s1 + 0x108]\n  7419: a0 = u64 [a3 + 0x18]\n  7422: a1 = u64 [a3 + 0x10]\n  7425: a2 = u64 [a3 + 0x8]\n  7428: a3 = u64 [a3]\n  7430: a0 = reverse a0\n  7432: u64 [s1 + 0x100] = a0\n  7436: a0 = reverse a1\n  7438: u64 [s1 + 0xf8] = a0\n  7442: a0 = reverse a2\n  7444: u64 [s1 + 0xf0] = a0\n  7448: a0 = reverse a3\n  7450: u64 [s1 + 0xe8] = a0\n  7454: a0 = sp + 0xffffffffffffffe0\n  7457: a0 = a0 & 0xffffffffffffffe0\n  7460: u64 [s1 + 0x108] = a0\n  7464: sp = a0\n  7466: a0 = u64 [s1 + 0x118]\n  7470: a0 = a0 & 0xffffffffffffffff\n  7473: a2 = u64 [s1 + 0x120]\n  7477: a1 = a2 & 0xffffffffffffffff\n  7480: a2 = u64 [s1 + 0x138]\n  7484: a3 = u64 [s1 + 0x128]\n  7488: a2 = a2 & a3\n  7491: a3 = s1 + 0x10b8\n  7495: u64 [a3 + 160] = 0\n  7499: u64 [a3 + 0x98] = a2\n  7503: u64 [a3 + 0x90] = a1\n  7507: a1 = s1 + 0x1140\n  7511: u64 [a3 + 0x88] = a0\n  7515: a0 = 0\n  7517: ra = 334, jump @19\n      : @331 [@dyn 167] (gas: 13)\n  7523: a0 = u64 [s1 + 0xe8]\n  7527: a1 = s1 + 0x10b8\n  7531: u64 [a1 + 0x80] = a0\n  7535: a0 = u64 [s1 + 0xf0]\n  7539: u64 [a1 + 0x78] = a0\n  7542: a0 = u64 [s1 + 0xf8]\n  7546: u64 [a1 + 0x70] = a0\n  7549: a3 = a1\n  7551: a0 = 0x20\n  7554: a1 = s1 + 0x1120\n  7558: a2 = u64 [s1 + 0x100]\n  7562: u64 [a3 + 0x68] = a2\n  7565: ra = 336, jump @19\n      : @332 [@dyn 168] (gas: 3)\n  7571: a1 = u64 [s1 + 0x130]\n  7575: a0 = i32 [a1]\n  7577: jump @334 if a0 >u 63\n      : @333 (gas: 2)\n  7581: u32 [a1 + 0] = 0x40\n  7584: fallthrough\n      : @334 (gas: 12)\n  7585: a0 = sp + 0xffffffffffffffe0\n  7588: a0 = a0 & 0xffffffffffffffe0\n  7591: u64 [s1 + 0x138] = a0\n  7595: sp = a0\n  7597: i32 a2 = a0 + 0\n  7599: a1 = 0x40\n  7602: a0 = u64 [s1 + 0x110]\n  7606: ra = 0x152\n  7610: ecalli 9 // 'hash_keccak_256'\n  7612: a3 = u64 [s1 + 0x138]\n  7616: t0 = 0x154\n  7620: jump @649\n      : @335 [@dyn 169] (gas: 2)\n  7623: a3 = u64 [s1 + 0x138]\n  7627: t0 = 340, jump @649\n      : @336 [@dyn 170] (gas: 7)\n  7633: a1 = u64 [s1 + 0x108]\n  7637: u64 [a1 + 0x18] = a3\n  7640: u64 [a1 + 0x10] = a2\n  7643: u64 [a1 + 0x8] = a4\n  7646: u64 [a1] = a0\n  7648: a0 = s1 + 0x1100\n  7652: ra = 342, jump @21\n      : @337 [@dyn 171] (gas: 3)\n  7658: t0 = 0x158\n  7662: a1 = s1 + 0x10b8\n  7666: fallthrough\n      : @338 [@dyn 172] (gas: 12)\n  7667: a0 = u64 [a1 + 0x60]\n  7670: a2 = s1 + 0x100\n  7674: u64 [a2 + 0x38] = a0\n  7677: a0 = u64 [a1 + 0x58]\n  7680: u64 [a2 + 0x30] = a0\n  7683: a0 = u64 [a1 + 0x50]\n  7686: u64 [a2 + 0x28] = a0\n  7689: a0 = u64 [a1 + 0x48]\n  7692: u64 [a2 + 0x20] = a0\n  7695: a0 = s1 + 0x10e0\n  7699: a1 = 0x40\n  7702: ra = 346, jump @17\n      : @339 [@dyn 173] (gas: 13)\n  7708: a3 = s1 + 0x10b8\n  7712: a0 = u64 [a3 + 0x40]\n  7715: a1 = u64 [a3 + 0x38]\n  7718: a2 = u64 [a3 + 0x30]\n  7721: a4 = u64 [a3 + 0x28]\n  7724: a0 = a0 | a2\n  7727: a2 = a4 | a1\n  7730: a2 = a2 | a0\n  7733: a2 = a2 >> 0x20\n  7736: a0 = a0 | a1\n  7739: a0 = a0 << 0x20\n  7742: a0 = a0 | a2\n  7745: jump @341 if a0 == 0\n      : @340 (gas: 1)\n  7748: jump @497\n      : @341 (gas: 14)\n  7751: a2 = s1 + 0x100\n  7755: a0 = u64 [a2 + 0x20]\n  7758: u64 [a3 + 0x8] = a0\n  7761: a0 = u64 [a2 + 0x28]\n  7764: u64 [a3 + 0x10] = a0\n  7767: a0 = u64 [a2 + 0x30]\n  7770: u64 [a3 + 0x18] = a0\n  7773: a1 = s1 + 0x10c0\n  7777: a0 = u64 [a2 + 0x38]\n  7780: u64 [a3 + 0x20] = a0\n  7783: a0 = a4\n  7785: u64 [a2 + 0x38] = a4\n  7788: ra = 0x190\n  7792: jump @19\n      : @342 (gas: 8)\n  7795: u64 [t0 + 416] = 0\n  7799: u64 [t0 + 408] = 0\n  7803: u64 [t0 + 400] = 0\n  7807: u64 [t0 + 392] = 0\n  7811: a0 = s1 + 0x1000\n  7815: i32 a0 = a0 + 0x240\n  7819: ecalli 17 // 'value_transferred'\n  7821: fallthrough\n      : @343 (gas: 10)\n  7822: a3 = s1 + 0x10b8\n  7826: a4 = a3 + 0x100\n  7830: a0 = u64 [a4 + 0x98]\n  7834: a1 = u64 [a4 + 0xa0]\n  7838: a2 = u64 [a4 + 0x90]\n  7842: a3 = u64 [a4 + 0x88]\n  7846: a1 = a1 | a2\n  7849: a0 = a0 | a3\n  7852: a0 = a0 | a1\n  7855: jump @345 if a0 == 0\n      : @344 (gas: 1)\n  7858: jump @521\n      : @345 (gas: 4)\n  7861: a0 = u64 [s1 + 0x138]\n  7865: a0 = i32 [a0]\n  7867: a1 = 0x43\n  7870: jump @347 if a1 <u a0\n      : @346 (gas: 1)\n  7873: jump @522\n      : @347 (gas: 4)\n  7876: a0 = s1 + 0x300\n  7880: ra = 0x15c\n  7884: t0 = 0x218\n  7888: jump @674\n      : @348 [@dyn 174] (gas: 30)\n  7891: a1 = s1 + 0x300\n  7895: a0 = u64 [a1]\n  7897: u64 [s1 + 0x138] = a0\n  7901: a0 = u64 [a1 + 0x8]\n  7904: u64 [s1 + 0x130] = a0\n  7908: a0 = u64 [a1 + 0x10]\n  7911: u64 [s1 + 0x128] = a0\n  7915: a0 = u64 [a1 + 0x18]\n  7918: u64 [s1 + 0x120] = a0\n  7922: a0 = s1 + 0x1000\n  7926: i32 a0 = a0 + 0x260\n  7930: a1 = 0x24\n  7933: ecalli 3 // 'call_data_load'\n  7935: a0 = s1 + 0x10b8\n  7939: a2 = a0 + 0x100\n  7943: a1 = u64 [a2 + 0xa8]\n  7947: u64 [s1 + 0x118] = a1\n  7951: a1 = u64 [a2 + 0xb0]\n  7955: u64 [s1 + 0x110] = a1\n  7959: a1 = u64 [a2 + 0xb8]\n  7963: u64 [s1 + 0x108] = a1\n  7967: a0 = u64 [a2 + 0xc0]\n  7971: u64 [s1 + 0x100] = a0\n  7975: a0 = 0x300d0\n  7980: u64 [s1 + 0xf8] = a0\n  7984: i32 a0 = a0 + 0\n  7986: ra = 0x15e\n  7990: ecalli 5 // 'caller'\n  7992: t0 = 0x160\n  7996: jump @654\n      : @349 [@dyn 175] (gas: 1)\n  7999: t0 = 352, jump @654\n      : @350 [@dyn 176] (gas: 25)\n  8005: a4 = s1 + 0x100\n  8009: a3 = u64 [a4]\n  8011: u64 [s1 + 0x2b8] = a3\n  8015: a3 = u64 [a4 + 0x8]\n  8018: u64 [s1 + 0x2b0] = a3\n  8022: a3 = u64 [a4 + 0x10]\n  8025: u64 [s1 + 0x2a8] = a3\n  8029: a3 = u64 [a4 + 0x18]\n  8032: u64 [s1 + 0x2a0] = a3\n  8036: a3 = u64 [a4 + 0x20]\n  8039: u64 [s1 + 0x2d8] = a3\n  8043: a3 = u64 [a4 + 0x28]\n  8046: u64 [s1 + 0x2d0] = a3\n  8050: a3 = u64 [a4 + 0x30]\n  8053: u64 [s1 + 0x2c8] = a3\n  8057: a3 = u64 [a4 + 0x38]\n  8060: u64 [s1 + 0x2c0] = a3\n  8064: u64 [s1 + 0x2f0] = a2\n  8068: u64 [s1 + 0x2e8] = a0\n  8072: u64 [s1 + 0x2e0] = a1\n  8076: a0 = s1 + 0x2e0\n  8080: a1 = s1 + 0x2c0\n  8084: a2 = s1 + 0x2a0\n  8088: u64 [s1 + 760] = 0\n  8092: ra = 354, jump @575\n      : @351 [@dyn 177] (gas: 3)\n  8098: a0 = s1 + 0x280\n  8102: a1 = 0x40\n  8105: ra = 356, jump @17\n      : @352 [@dyn 178] (gas: 6)\n  8111: a4 = s1 + 0x200\n  8115: a3 = u64 [a4 + 0x98]\n  8119: a1 = u64 [a4 + 0x90]\n  8123: a2 = u64 [a4 + 0x88]\n  8127: a0 = u64 [a4 + 0x80]\n  8131: t0 = 358, jump @658\n      : @353 [@dyn 179] (gas: 1)\n  8137: jump @355 if a1 == 0\n      : @354 (gas: 1)\n  8140: jump @497\n      : @355 (gas: 8)\n  8143: u64 [s1 + 632] = 0\n  8147: u64 [s1 + 624] = 0\n  8151: u64 [s1 + 616] = 0\n  8155: a1 = s1 + 0x260\n  8159: u64 [s1 + 608] = 0x1\n  8164: u64 [s1 + 0x138] = a0\n  8168: ra = 0x190\n  8172: jump @19\n      : @356 (gas: 15)\n  8175: a0 = s1 + 0x100\n  8179: u64 [a0 + 0x18] = a2\n  8182: u64 [a0 + 0x20] = a5\n  8185: u64 [a0 + 0x28] = a4\n  8188: u64 [a0 + 0x30] = a3\n  8191: u64 [t0 + 960] = 0\n  8195: u64 [t0 + 952] = 0\n  8199: u64 [t0 + 944] = 0\n  8203: u64 [t0 + 936] = 0\n  8207: a0 = s1 + 0x1000\n  8211: i32 a0 = a0 + 0x460\n  8215: ra = 0x168\n  8219: ecalli 17 // 'value_transferred'\n  8221: t0 = 0x16a\n  8225: jump @664\n      : @357 [@dyn 180] (gas: 1)\n  8228: t0 = 362, jump @664\n      : @358 [@dyn 181] (gas: 8)\n  8234: a0 = u64 [a4 + 0xb8]\n  8238: a1 = u64 [a4 + 0xc0]\n  8242: a2 = u64 [a4 + 0xb0]\n  8246: a3 = u64 [a4 + 0xa8]\n  8250: a1 = a1 | a2\n  8253: a0 = a0 | a3\n  8256: a0 = a0 | a1\n  8259: jump @360 if a0 == 0\n      : @359 (gas: 1)\n  8262: jump @523\n      : @360 (gas: 4)\n  8265: a0 = u64 [s1 + 0x138]\n  8269: a0 = i32 [a0]\n  8271: a1 = 0xe3\n  8275: jump @362 if a1 <u a0\n      : @361 (gas: 1)\n  8278: jump @524\n      : @362 (gas: 4)\n  8281: a0 = s1 + 0x10a0\n  8285: ra = 0x16c\n  8289: t0 = 0x218\n  8293: jump @674\n      : @363 [@dyn 182] (gas: 14)\n  8296: a1 = s1 + 0x10b8\n  8300: a0 = u64 [a1]\n  8302: u64 [s1 + 0x98] = a0\n  8306: a2 = a1 + 0xffffffffffffff00\n  8310: a0 = u64 [a2 + 0xf8]\n  8314: u64 [s1 + 0xe8] = a0\n  8318: a0 = u64 [a2 + 0xf0]\n  8322: u64 [s1 + 0xf8] = a0\n  8326: a0 = u64 [a2 + 0xe8]\n  8330: u64 [s1 + 0xf0] = a0\n  8334: a0 = s1 + 0x1080\n  8338: ra = 0x16e\n  8342: t0 = 0x222\n  8346: jump @674\n      : @364 [@dyn 183] (gas: 45)\n  8349: a0 = s1 + 0x7ff\n  8353: a0 = a0 + 0xb9\n  8357: a2 = a0 + 0x700\n  8361: a1 = u64 [a2 + 0xe0]\n  8365: u64 [s1 + 0x90] = a1\n  8369: a1 = u64 [a2 + 0xd8]\n  8373: u64 [s1 + 0xd8] = a1\n  8377: a1 = u64 [a2 + 0xd0]\n  8381: u64 [s1 + 0xd0] = a1\n  8385: a0 = u64 [a2 + 0xc8]\n  8389: u64 [s1 + 0xc8] = a0\n  8393: a0 = s1 + 0x1000\n  8397: i32 a0 = a0 + 0x480\n  8401: a1 = 0x44\n  8404: ecalli 3 // 'call_data_load'\n  8406: a1 = s1 + 0x10b8\n  8410: a2 = a1 + 0x300\n  8414: a0 = u64 [a2 + 0xe0]\n  8418: u64 [s1 + 0xc0] = a0\n  8422: a0 = u64 [a2 + 0xd8]\n  8426: u64 [s1 + 0xb8] = a0\n  8430: a0 = u64 [a2 + 0xd0]\n  8434: u64 [s1 + 0xb0] = a0\n  8438: a0 = u64 [a2 + 0xc8]\n  8442: u64 [s1 + 0xa8] = a0\n  8446: a0 = s1 + 0x1000\n  8450: i32 a0 = a0 + 0x4a0\n  8454: a1 = 0x64\n  8457: ecalli 3 // 'call_data_load'\n  8459: a1 = s1 + 0x10b8\n  8463: a0 = u64 [a1 + 0x400]\n  8467: a2 = s1 + 0x100\n  8471: u64 [a2 + 0x38] = a0\n  8474: a3 = a1 + 0x300\n  8478: a0 = u64 [a3 + 0xf8]\n  8482: u64 [a2 + 0x10] = a0\n  8485: a0 = u64 [a3 + 0xf0]\n  8489: u64 [a2 + 0x8] = a0\n  8492: a0 = u64 [a3 + 0xe8]\n  8496: u64 [a2] = a0\n  8498: a0 = s1 + 0x1000\n  8502: i32 a0 = a0 + 0x4c0\n  8506: a1 = 0x84\n  8510: ecalli 3 // 'call_data_load'\n  8512: fallthrough\n      : @365 (gas: 12)\n  8513: a2 = s1 + 0x10b8\n  8517: a4 = a2 + 0x400\n  8521: a0 = u64 [a4 + 0x20]\n  8524: a1 = u64 [a4 + 0x18]\n  8527: a3 = u64 [a4 + 0x8]\n  8530: a2 = u64 [a4 + 0x10]\n  8533: a0 = a0 | a1\n  8536: u64 [s1 + 0xa0] = a3\n  8540: a1 = a3 <u 0x100\n  8544: a1 = 0 if a2 != 0\n  8546: a1 = 0 if a0 != 0\n  8548: jump @367 if a1 != 0\n      : @366 (gas: 1)\n  8551: jump @525\n      : @367 (gas: 4)\n  8554: a0 = s1 + 0x1000\n  8558: i32 a0 = a0 + 0x4e0\n  8562: ecalli 10 // 'now'\n  8564: fallthrough\n      : @368 (gas: 22)\n  8565: a3 = s1 + 0x10b8\n  8569: a4 = a3 + 0x400\n  8573: a0 = u64 [a4 + 0x30]\n  8576: a1 = u64 [a4 + 0x40]\n  8579: a2 = u64 [a4 + 0x28]\n  8582: a3 = u64 [a4 + 0x38]\n  8585: a5 = u64 [s1 + 0x108]\n  8589: a4 = a5 ^ a0\n  8592: a0 = a5 <u a0\n  8595: a5 = u64 [s1 + 0x100]\n  8599: a2 = a5 <u a2\n  8602: a2 = a0 if a4 != 0\n  8605: a0 = u64 [s1 + 0x110]\n  8609: t0 = a0 <u a3\n  8612: a5 = u64 [s1 + 0x138]\n  8616: a4 = a5 ^ a1\n  8619: a1 = a5 <u a1\n  8622: a1 = t0 if a4 == 0\n  8625: a0 = a0 ^ a3\n  8628: a0 = a0 | a4\n  8631: a1 = a2 if a0 == 0\n  8634: jump @406 if a1 == 0\n      : @369 (gas: 4)\n  8638: a0 = s1 + 0x7ff\n  8642: a0 = a0 + 0x341\n  8646: a1 = 0x40\n  8649: ra = 368, jump @17\n      : @370 [@dyn 184] (gas: 15)\n  8655: a2 = s1 + 0x7ff\n  8659: a2 = a2 + 0xb9\n  8663: t0 = u64 [a2 + 0x2a0]\n  8667: a1 = a2 + 0x200\n  8671: a5 = u64 [a1 + 0x98]\n  8675: a4 = u64 [a1 + 0x90]\n  8679: a0 = u64 [a1 + 0x88]\n  8683: a3 = a4 | t0\n  8686: a1 = a0 | a5\n  8689: a1 = a1 | a3\n  8692: a1 = a1 >> 0x20\n  8695: a3 = a3 | a5\n  8698: a3 = a3 << 0x20\n  8701: a1 = a1 | a3\n  8704: jump @372 if a1 == 0\n      : @371 (gas: 1)\n  8707: jump @497\n      : @372 (gas: 12)\n  8710: u64 [a2 + 632] = 0\n  8714: u64 [a2 + 624] = 0\n  8718: u64 [a2 + 616] = 0\n  8722: a3 = 0x8c379a000000000\n  8732: a1 = s1 + 0x7ff\n  8736: a1 = a1 + 0x321\n  8740: u64 [a2 + 0x280] = a3\n  8744: u64 [s1 + 0x138] = a0\n  8748: u64 [s1 + 0x130] = a4\n  8752: u64 [s1 + 0x120] = t0\n  8756: u64 [s1 + 0x128] = a5\n  8760: ra = 370, jump @19\n      : @373 [@dyn 185] (gas: 12)\n  8766: a5 = s1 + 0x100\n  8770: a1 = u64 [a5 + 0x38]\n  8773: a0 = u64 [a5 + 0x28]\n  8776: a3 = u64 [a5 + 0x20]\n  8779: a3 = a3 | a0\n  8782: a4 = 0x100000000\n  8792: a0 = 0xfffffffc\n  8802: a0 = a1 <u a0\n  8805: a2 = u64 [a5 + 0x30]\n  8808: a0 = 0 if a2 != 0\n  8810: a0 = 0 if a3 != 0\n  8812: jump @375 if a0 != 0\n      : @374 (gas: 1)\n  8815: jump @497\n      : @375 (gas: 12)\n  8818: i32 a0 = a1 + 0x4\n  8821: a2 = s1 + 0x7ff\n  8825: a2 = a2 + 0xb9\n  8829: u64 [a2 + 608] = 0\n  8833: u64 [a2 + 600] = 0\n  8837: u64 [a2 + 584] = 0x20\n  8842: a1 = s1 + 0x7ff\n  8846: a1 = a1 + 0x301\n  8850: u64 [a2 + 592] = 0\n  8854: u64 [s1 + 0x128] = a3\n  8858: u64 [s1 + 0x120] = a4\n  8862: ra = 372, jump @19\n      : @376 [@dyn 186] (gas: 10)\n  8868: a4 = s1 + 0x100\n  8872: a3 = u64 [a4 + 0x28]\n  8875: a2 = u64 [a4 + 0x30]\n  8878: a1 = u64 [a4 + 0x38]\n  8881: a0 = u64 [a4 + 0x20]\n  8884: a0 = a0 + 0xffffffffffffffdc\n  8887: a0 = a1 <u a0\n  8890: a0 = 0 if a2 != 0\n  8892: a0 = 0 if a3 != 0\n  8894: jump @378 if a0 != 0\n      : @377 (gas: 1)\n  8897: jump @497\n      : @378 (gas: 10)\n  8900: i32 a0 = a1 + 0x24\n  8903: a3 = s1 + 0x7ff\n  8907: a3 = a3 + 0xb9\n  8911: u64 [a3 + 576] = 0\n  8915: u64 [a3 + 568] = 0\n  8919: u64 [a3 + 552] = 0x12\n  8924: a1 = s1 + 0x7ff\n  8928: a1 = a1 + 0x2e1\n  8932: u64 [a3 + 560] = 0\n  8936: ra = 374, jump @19\n      : @379 [@dyn 187] (gas: 9)\n  8942: a2 = s1 + 0x100\n  8946: a3 = u64 [a2 + 0x38]\n  8949: a0 = 0xffffffbc\n  8959: a0 = a3 <u a0\n  8962: a1 = u64 [a2 + 0x30]\n  8965: a0 = 0 if a1 != 0\n  8967: a1 = u64 [a2 + 0x28]\n  8970: a0 = 0 if a1 != 0\n  8972: jump @381 if a0 != 0\n      : @380 (gas: 1)\n  8975: jump @497\n      : @381 (gas: 14)\n  8978: i32 a0 = a3 + 0x44\n  8981: a1 = u64 [0x20048]\n  8986: a2 = u64 [0x20060]\n  8991: a4 = s1 + 0x7ff\n  8995: a4 = a4 + 0xb9\n  8999: a3 = a4 + 0x200\n  9003: u64 [a3 + 0x20] = a1\n  9006: u64 [a3 + 0x18] = a2\n  9009: a1 = 0x4544000000000000\n  9019: u64 [a3 + 0x10] = a1\n  9022: a1 = s1 + 0x7ff\n  9026: a1 = a1 + 0x2c1\n  9030: u64 [a4 + 520] = 0\n  9034: ra = 376, jump @19\n      : @382 [@dyn 188] (gas: 3)\n  9040: a1 = 0x64\n  9043: a0 = u64 [s1 + 0x138]\n  9047: ra = 378, jump @26\n      : @383 [@dyn 189] (gas: 5)\n  9053: i32 a1 = a0 + 0\n  9055: a0 = 0x1\n  9058: a2 = 0x64\n  9061: ecalli 14 // 'seal_return'\n  9063: fallthrough\n      : @384 (gas: 1)\n  9064: jump @386 if a0 == 2127478272\n      : @385 (gas: 1)\n  9071: jump @498\n      : @386 (gas: 10)\n  9074: u64 [t0 + 800] = 0\n  9078: u64 [t0 + 792] = 0\n  9082: u64 [t0 + 784] = 0\n  9086: u64 [t0 + 776] = 0\n  9090: a0 = s1 + 0x1000\n  9094: i32 a0 = a0 + 0x3c0\n  9098: ra = 0x17c\n  9102: ecalli 17 // 'value_transferred'\n  9104: t0 = 0x17e\n  9108: jump @664\n      : @387 [@dyn 190] (gas: 1)\n  9111: t0 = 382, jump @664\n      : @388 [@dyn 191] (gas: 8)\n  9117: a0 = u64 [a4 + 0x18]\n  9120: a1 = u64 [a4 + 0x20]\n  9123: a2 = u64 [a4 + 0x10]\n  9126: a3 = u64 [a4 + 0x8]\n  9129: a1 = a1 | a2\n  9132: a0 = a0 | a3\n  9135: a0 = a0 | a1\n  9138: jump @390 if a0 == 0\n      : @389 (gas: 1)\n  9141: jump @526\n      : @390 (gas: 4)\n  9144: a0 = u64 [s1 + 0x138]\n  9148: a0 = i32 [a0]\n  9150: a1 = 0x23\n  9153: jump @392 if a1 <u a0\n      : @391 (gas: 1)\n  9156: jump @527\n      : @392 (gas: 5)\n  9159: a0 = s1 + 0x7ff\n  9163: a0 = a0 + 0xc1\n  9167: ra = 0x180\n  9171: t0 = 0x218\n  9175: jump @674\n      : @393 [@dyn 192] (gas: 15)\n  9178: a3 = s1 + 0x7ff\n  9182: a3 = a3 + 0xb9\n  9186: a0 = u64 [a3 + 0x8]\n  9189: a1 = u64 [a3 + 0x10]\n  9192: a2 = u32 [a3 + 0x18]\n  9195: u64 [a3 + 0] = 0\n  9197: u64 [a3 + 0xfffffffffffffff8] = a2\n  9200: a2 = s1 + 0x1000\n  9204: u64 [a2 + 0xfffffffffffff8a8] = a1\n  9208: a1 = s1 + 0x7ff\n  9212: a1 = a1 + 0xa1\n  9216: a2 = s1 + 0x1000\n  9220: u64 [a2 + 0xfffffffffffff8a0] = a0\n  9224: a0 = 0\n  9226: ra = 386, jump @19\n      : @394 [@dyn 193] (gas: 12)\n  9232: a0 = s1 + 0x1000\n  9236: u64 [a0 + 4294965400] = 0\n  9240: a0 = s1 + 0x1000\n  9244: u64 [a0 + 4294965392] = 0\n  9248: a1 = s1 + 0x1000\n  9252: u64 [a1 + 4294965376] = 0x4\n  9257: a0 = 0x20\n  9260: a1 = s1 + 0x7ff\n  9264: a1 = a1 + 0x81\n  9268: a2 = s1 + 0x1000\n  9272: u64 [a2 + 4294965384] = 0\n  9276: ra = 388, jump @19\n      : @395 [@dyn 194] (gas: 2)\n  9282: a1 = i32 [0x200bc]\n  9287: jump @397 if a1 >u 63\n      : @396 (gas: 2)\n  9291: u32 [0x200bc] = 0x40\n  9297: fallthrough\n      : @397 (gas: 12)\n  9298: a0 = sp + 0xffffffffffffffe0\n  9301: a2 = a0 & 0xffffffffffffffe0\n  9304: u64 [s1 + 0x138] = a2\n  9308: sp = a2\n  9310: a0 = 0x200d0\n  9315: i32 a0 = a0 + 0\n  9317: i32 a2 = a2 + 0\n  9319: a1 = 0x40\n  9322: ra = 0x186\n  9326: ecalli 9 // 'hash_keccak_256'\n  9328: t0 = 0x188\n  9332: jump @655\n      : @398 [@dyn 195] (gas: 1)\n  9335: t0 = 392, jump @655\n      : @399 [@dyn 196] (gas: 9)\n  9341: a5 = a4 + 0x300\n  9345: u64 [a5 + 0x40] = a3\n  9348: u64 [a5 + 0x38] = a2\n  9351: u64 [a5 + 0x30] = a1\n  9354: u64 [a5 + 0x28] = a0\n  9357: a0 = s1 + 0x7ff\n  9361: a0 = a0 + 0x61\n  9364: a1 = s1 + 0x13e0\n  9368: ra = 394, jump @21\n      : @400 [@dyn 197] (gas: 17)\n  9374: a0 = s1 + 0x1000\n  9378: a0 = u64 [a0 + 0xfffffffffffff878]\n  9382: a1 = s1 + 0x100\n  9386: u64 [a1 + 0x38] = a0\n  9389: a0 = s1 + 0x1000\n  9393: a0 = u64 [a0 + 0xfffffffffffff870]\n  9397: u64 [a1 + 0x30] = a0\n  9400: a0 = s1 + 0x1000\n  9404: a0 = u64 [a0 + 0xfffffffffffff868]\n  9408: u64 [a1 + 0x28] = a0\n  9411: a0 = s1 + 0x1000\n  9415: a0 = u64 [a0 + 0xfffffffffffff860]\n  9419: u64 [a1 + 0x20] = a0\n  9422: a0 = s1 + 0x7ff\n  9426: a0 = a0 + 0x41\n  9429: a1 = 0x40\n  9432: ra = 396, jump @17\n      : @401 [@dyn 198] (gas: 9)\n  9438: a0 = s1 + 0x1000\n  9442: a0 = u64 [a0 + 0xfffffffffffff858]\n  9446: a1 = s1 + 0x1000\n  9450: a1 = u64 [a1 + 0xfffffffffffff850]\n  9454: a2 = s1 + 0x1000\n  9458: a2 = u64 [a2 + 0xfffffffffffff848]\n  9462: a3 = s1 + 0x1000\n  9466: a3 = u64 [a3 + 0xfffffffffffff840]\n  9470: t0 = 398, jump @650\n      : @402 [@dyn 199] (gas: 1)\n  9476: jump @497 if a0 != 0\n      : @403 (gas: 18)\n  9480: a2 = s1 + 0x100\n  9484: a0 = u64 [a2 + 0x20]\n  9487: a1 = s1 + 0x1000\n  9491: u64 [a1 + 0xfffffffffffff820] = a0\n  9495: a0 = u64 [a2 + 0x28]\n  9498: a1 = s1 + 0x1000\n  9502: u64 [a1 + 0xfffffffffffff828] = a0\n  9506: a0 = u64 [a2 + 0x30]\n  9509: a1 = s1 + 0x1000\n  9513: u64 [a1 + 0xfffffffffffff830] = a0\n  9517: a1 = s1 + 0x7ff\n  9521: a1 = a1 + 0x21\n  9524: a0 = u64 [a2 + 0x38]\n  9527: a2 = s1 + 0x1000\n  9531: u64 [a2 + 0xfffffffffffff838] = a0\n  9535: a0 = a3\n  9537: u64 [s1 + 0x138] = a3\n  9541: ra = 400, jump @19\n      : @404 [@dyn 200] (gas: 3)\n  9547: a1 = 0x20\n  9550: a0 = u64 [s1 + 0x138]\n  9554: ra = 402, jump @26\n      : @405 [@dyn 201] (gas: 6)\n  9560: i32 a1 = a0 + 0\n  9562: a2 = 0x20\n  9565: a0 = 0\n  9567: ecalli 14 // 'seal_return'\n  9569: a1 = s1 + 0x10b8\n  9573: jump @407\n      : @406 (gas: 2)\n  9575: a1 = s1 + 0x10b8\n  9579: fallthrough\n      : @407 (gas: 7)\n  9580: u64 [a1 + 1120] = 0\n  9584: u64 [a1 + 1112] = 0\n  9588: u64 [a1 + 1104] = 0\n  9592: u64 [a1 + 1096] = 0x3\n  9597: a0 = s1 + 0x1060\n  9601: a1 = s1 + 0x1500\n  9605: ra = 404, jump @21\n      : @408 [@dyn 202] (gas: 25)\n  9611: a1 = s1 + 0x7ff\n  9615: a1 = a1 + 0xb9\n  9619: a2 = a1 + 0x700\n  9623: a0 = u64 [a2 + 0xc0]\n  9627: u64 [s1 + 0x48] = a0\n  9630: a0 = u64 [a2 + 0xb8]\n  9634: u64 [s1 + 0x40] = a0\n  9637: a0 = u64 [a2 + 0xb0]\n  9641: u64 [s1 + 0x38] = a0\n  9644: a0 = u64 [a2 + 0xa8]\n  9648: u64 [s1 + 0x30] = a0\n  9651: a0 = u64 [s1 + 0xe8]\n  9655: a0 = a0 << 0x20\n  9658: a0 = a0 >> 0x20\n  9661: u64 [a1 + 1952] = 0\n  9665: u64 [s1 + 0x70] = a0\n  9668: u64 [a2 + 0x98] = a0\n  9672: a0 = u64 [s1 + 0xf8]\n  9676: u64 [a2 + 0x90] = a0\n  9680: a2 = a1\n  9682: a1 = s1 + 0x1040\n  9686: a0 = u64 [s1 + 0xf0]\n  9690: u64 [a2 + 0x788] = a0\n  9694: a0 = 0\n  9696: ra = 406, jump @19\n      : @409 [@dyn 203] (gas: 10)\n  9702: a1 = s1 + 0x7ff\n  9706: a1 = a1 + 0xb9\n  9710: u64 [a1 + 1920] = 0\n  9714: u64 [a1 + 1912] = 0\n  9718: u64 [a1 + 1896] = 0x4\n  9723: a2 = a1\n  9725: a0 = 0x20\n  9728: a1 = s1 + 0x1020\n  9732: u64 [a2 + 1904] = 0\n  9736: ra = 408, jump @19\n      : @410 [@dyn 204] (gas: 7)\n  9742: a0 = sp + 0xffffffffffffffe0\n  9745: a0 = a0 & 0xffffffffffffffe0\n  9748: u64 [s1 + 0xe0] = a0\n  9752: sp = a0\n  9754: a2 = 0x200bc\n  9759: a0 = i32 [0x200bc]\n  9764: jump @412 if a0 >u 63\n      : @411 (gas: 2)\n  9768: u32 [0x200bc] = 0x40\n  9774: fallthrough\n      : @412 (gas: 16)\n  9775: u64 [s1 + 0x28] = a2\n  9778: a0 = sp + 0xffffffffffffffe0\n  9781: a2 = a0 & 0xffffffffffffffe0\n  9784: u64 [s1 + 0x88] = a2\n  9788: sp = a2\n  9790: a0 = 0x200d0\n  9795: u64 [s1 + 0x20] = a0\n  9798: i32 a0 = a0 + 0\n  9800: i32 a2 = a2 + 0\n  9802: a1 = 0x40\n  9805: u64 [s1 + 0x18] = a0\n  9808: ra = 0x19a\n  9812: ecalli 9 // 'hash_keccak_256'\n  9814: a3 = u64 [s1 + 0x88]\n  9818: t0 = 0x19c\n  9822: jump @649\n      : @413 [@dyn 205] (gas: 2)\n  9825: a3 = u64 [s1 + 0x88]\n  9829: t0 = 412, jump @649\n      : @414 [@dyn 206] (gas: 7)\n  9835: a1 = u64 [s1 + 0xe0]\n  9839: u64 [a1 + 0x18] = a3\n  9842: u64 [a1 + 0x10] = a2\n  9845: u64 [a1 + 0x8] = a4\n  9848: u64 [a1] = a0\n  9850: a0 = s1 + 0x1000\n  9854: ra = 414, jump @21\n      : @415 [@dyn 207] (gas: 23)\n  9860: a1 = s1 + 0x7ff\n  9864: a1 = a1 + 0xb9\n  9868: a5 = a1 + 0x700\n  9872: a0 = u64 [a5 + 0x48]\n  9875: a4 = u64 [a5 + 0x60]\n  9878: a2 = u64 [a5 + 0x50]\n  9881: a3 = u64 [a5 + 0x58]\n  9884: u64 [s1 + 0x60] = a0\n  9887: a0 = a0 + 0x1\n  9890: a1 = a0 <u 0x1\n  9893: u64 [s1 + 0x58] = a2\n  9896: a1 = a1 + a2\n  9899: a2 = a0 | a1\n  9902: a2 = a2 <u 0x1\n  9905: a2 = a2 + a3\n  9908: u64 [s1 + 0x50] = a3\n  9911: a3 = a2 <u a3\n  9914: u64 [s1 + 0x68] = a4\n  9917: a3 = a3 + a4\n  9920: a4 = a1 | a3\n  9923: a5 = a0 | a2\n  9926: a4 = a4 | a5\n  9929: jump @528 if a4 == 0\n      : @416 (gas: 9)\n  9933: a4 = s1 + 0x10b8\n  9937: a5 = a4 + 0x400\n  9941: u64 [a5 + 0x68] = a0\n  9944: u64 [a5 + 0x70] = a1\n  9947: u64 [a5 + 0x78] = a2\n  9950: u64 [a5 + 0x80] = a3\n  9954: a1 = s1 + 0x1520\n  9958: a0 = u64 [s1 + 0xe0]\n  9962: ra = 416, jump @22\n      : @417 [@dyn 208] (gas: 4)\n  9968: a0 = s1 + 0x7ff\n  9972: a0 = a0 + 0x7e1\n  9976: a1 = 0x40\n  9979: ra = 418, jump @17\n      : @418 [@dyn 209] (gas: 22)\n  9985: a5 = s1 + 0x7ff\n  9989: a5 = a5 + 0xb9\n  9993: t0 = u64 [a5 + 0x728]\n  9997: t1 = u64 [a5 + 0x740]\n 10001: t2 = u64 [a5 + 0x730]\n 10005: ra = u64 [a5 + 0x738]\n 10009: a4 = t0 + 0x20\n 10012: a0 = a4 <u t0\n 10015: a1 = t2 + a0\n 10018: a2 = a1 <u t2\n 10021: a2 = a0 if a0 == 0\n 10024: a2 = a2 + ra\n 10027: a0 = a2 <u ra\n 10030: a0 = a0 + t1\n 10033: a3 = a4 | a2\n 10036: a0 = a0 | a1\n 10039: a3 = a3 | a0\n 10042: a3 = a3 >> 0x20\n 10045: a0 = a0 | a2\n 10048: a0 = a0 << 0x20\n 10051: a0 = a0 | a3\n 10054: jump @497 if a0 != 0\n      : @419 (gas: 18)\n 10058: a3 = s1 + 0x100\n 10062: a0 = u64 [0x20028]\n 10067: a1 = u64 [0x20030]\n 10072: a2 = u64 [0x20038]\n 10077: u64 [a5 + 0x720] = a0\n 10081: a0 = u64 [0x20040]\n 10086: u64 [a5 + 0x718] = a1\n 10090: u64 [a5 + 0x710] = a2\n 10094: a1 = s1 + 0x7ff\n 10098: a1 = a1 + 0x7c1\n 10102: u64 [a5 + 0x708] = a0\n 10106: u64 [a3 + 0x30] = a4\n 10109: a0 = a4\n 10111: u64 [s1 + 0xe0] = t0\n 10115: u64 [s1 + 0x88] = t2\n 10119: u64 [s1 + 0x80] = t1\n 10123: u64 [s1 + 0x78] = ra\n 10126: ra = 420, jump @19\n      : @420 [@dyn 210] (gas: 5)\n 10132: a4 = u64 [s1 + 0x78]\n 10135: a3 = u64 [s1 + 0x88]\n 10139: a1 = u64 [s1 + 0xe0]\n 10143: a0 = a1 + 0x40\n 10146: t0 = 422, jump @646\n      : @421 [@dyn 211] (gas: 1)\n 10152: jump @497 if a1 != 0\n      : @422 (gas: 13)\n 10156: a3 = s1 + 0x7ff\n 10160: a3 = a3 + 0xb9\n 10164: u64 [a3 + 1792] = 0\n 10168: a1 = u64 [s1 + 0xf0]\n 10172: a4 = a3 + 0x600\n 10176: u64 [a4 + 0xe8] = a1\n 10180: a1 = u64 [s1 + 0xf8]\n 10184: u64 [a4 + 0xf0] = a1\n 10188: a1 = s1 + 0x7ff\n 10192: a1 = a1 + 0x7a1\n 10196: a2 = u64 [s1 + 0x70]\n 10199: u64 [a4 + 0xf8] = a2\n 10203: ra = 424, jump @19\n      : @423 [@dyn 212] (gas: 5)\n 10209: a4 = u64 [s1 + 0x78]\n 10212: a3 = u64 [s1 + 0x88]\n 10216: a1 = u64 [s1 + 0xe0]\n 10220: a0 = a1 + 0x60\n 10223: t0 = 426, jump @646\n      : @424 [@dyn 213] (gas: 1)\n 10229: jump @497 if a1 != 0\n      : @425 (gas: 18)\n 10233: a2 = 0xffffffff\n 10243: a1 = u64 [s1 + 0xd8]\n 10247: u64 [s1 + 0x128] = a2\n 10251: a2 = a2 & a1\n 10254: a1 = u64 [s1 + 0xd0]\n 10258: a1 = a1 & 0xffffffffffffffff\n 10261: a3 = u64 [s1 + 0xc8]\n 10265: a3 = a3 & 0xffffffffffffffff\n 10268: a4 = s1 + 0x7ff\n 10272: a4 = a4 + 0xb9\n 10276: u64 [a4 + 1760] = 0\n 10280: a5 = a4 + 0x600\n 10284: u64 [a5 + 0xc8] = a3\n 10288: u64 [a5 + 0xd0] = a1\n 10292: a1 = s1 + 0x7ff\n 10296: a1 = a1 + 0x781\n 10300: u64 [a5 + 0xd8] = a2\n 10304: ra = 428, jump @19\n      : @426 [@dyn 214] (gas: 5)\n 10310: a4 = u64 [s1 + 0x78]\n 10313: a3 = u64 [s1 + 0x88]\n 10317: a1 = u64 [s1 + 0xe0]\n 10321: a0 = a1 + 0x80\n 10325: t0 = 430, jump @646\n      : @427 [@dyn 215] (gas: 1)\n 10331: jump @497 if a1 != 0\n      : @428 (gas: 14)\n 10335: a1 = u64 [s1 + 0xa8]\n 10339: a3 = s1 + 0x7ff\n 10343: a3 = a3 + 0xb9\n 10347: a4 = a3 + 0x600\n 10351: u64 [a4 + 0xa8] = a1\n 10355: a1 = u64 [s1 + 0xb0]\n 10359: u64 [a4 + 0xb0] = a1\n 10363: a1 = u64 [s1 + 0xb8]\n 10367: u64 [a4 + 0xb8] = a1\n 10371: a1 = s1 + 0x7ff\n 10375: a1 = a1 + 0x761\n 10379: a2 = u64 [s1 + 0xc0]\n 10383: u64 [a4 + 0xc0] = a2\n 10387: ra = 432, jump @19\n      : @429 [@dyn 216] (gas: 5)\n 10393: a4 = u64 [s1 + 0x78]\n 10396: a3 = u64 [s1 + 0x88]\n 10400: a1 = u64 [s1 + 0xe0]\n 10404: a0 = a1 + 0xa0\n 10408: t0 = 434, jump @646\n      : @430 [@dyn 217] (gas: 1)\n 10414: jump @497 if a1 != 0\n      : @431 (gas: 14)\n 10418: a2 = s1 + 0x7ff\n 10422: a2 = a2 + 0xb9\n 10426: a1 = u64 [s1 + 0x60]\n 10429: a4 = a2 + 0x600\n 10433: u64 [a4 + 0x88] = a1\n 10437: a1 = u64 [s1 + 0x58]\n 10440: u64 [a4 + 0x90] = a1\n 10444: a1 = u64 [s1 + 0x50]\n 10447: u64 [a4 + 0x98] = a1\n 10451: a1 = s1 + 0x7ff\n 10455: a1 = a1 + 0x741\n 10459: a3 = u64 [s1 + 0x68]\n 10462: u64 [a4 + 0xa0] = a3\n 10466: ra = 436, jump @19\n      : @432 [@dyn 218] (gas: 5)\n 10472: a4 = u64 [s1 + 0x78]\n 10475: a3 = u64 [s1 + 0x88]\n 10479: a1 = u64 [s1 + 0xe0]\n 10483: a0 = a1 + 0xc0\n 10487: t0 = 438, jump @646\n      : @433 [@dyn 219] (gas: 1)\n 10493: jump @497 if a1 != 0\n      : @434 (gas: 15)\n 10497: a4 = s1 + 0x100\n 10501: a1 = u64 [a4]\n 10503: a3 = s1 + 0x7ff\n 10507: a3 = a3 + 0xb9\n 10511: a5 = a3 + 0x600\n 10515: u64 [a5 + 0x68] = a1\n 10518: a1 = u64 [a4 + 0x8]\n 10521: u64 [a5 + 0x70] = a1\n 10524: a1 = u64 [a4 + 0x10]\n 10527: u64 [a5 + 0x78] = a1\n 10530: a1 = s1 + 0x7ff\n 10534: a1 = a1 + 0x721\n 10538: a2 = u64 [a4 + 0x38]\n 10541: u64 [a5 + 0x80] = a2\n 10545: ra = 440, jump @19\n      : @435 [@dyn 220] (gas: 12)\n 10551: a5 = u64 [s1 + 0x78]\n 10554: a4 = u64 [s1 + 0x80]\n 10558: a3 = u64 [s1 + 0x88]\n 10562: a0 = u64 [s1 + 0xe0]\n 10566: a2 = a0 | a5\n 10569: a1 = a3 | a4\n 10572: a2 = a2 | a1\n 10575: a2 = a2 >> 0x20\n 10578: a1 = a1 | a5\n 10581: a1 = a1 << 0x20\n 10584: a1 = a1 | a2\n 10587: jump @497 if a1 != 0\n      : @436 (gas: 10)\n 10591: a2 = s1 + 0x7ff\n 10595: a2 = a2 + 0xb9\n 10599: u64 [a2 + 1632] = 0\n 10603: u64 [a2 + 1624] = 0\n 10607: u64 [a2 + 1616] = 0\n 10611: t0 = 0xc0\n 10615: a1 = s1 + 0x7ff\n 10619: a1 = a1 + 0x701\n 10623: u64 [a2 + 0x648] = t0\n 10627: ra = 442, jump @19\n      : @437 [@dyn 221] (gas: 21)\n 10633: a1 = s1 + 0x7ff\n 10637: a1 = a1 + 0xb9\n 10641: u64 [a1 + 1568] = 0\n 10645: u64 [a1 + 1560] = 0\n 10649: u64 [a1 + 1552] = 0\n 10653: a2 = a1 + 0x600\n 10657: u64 [a2 + 8] = 0xe0\n 10662: a0 = u64 [s1 + 0x80]\n 10666: u64 [a2 + 0x40] = a0\n 10669: a0 = u64 [s1 + 0x78]\n 10672: u64 [a2 + 0x38] = a0\n 10675: a0 = u64 [s1 + 0x88]\n 10679: u64 [a2 + 0x30] = a0\n 10682: a3 = a1\n 10684: a0 = s1 + 0x7ff\n 10688: a0 = a0 + 0x6e1\n 10692: a1 = s1 + 0x7ff\n 10696: a1 = a1 + 0x6c1\n 10700: a2 = u64 [s1 + 0xe0]\n 10704: u64 [a3 + 0x628] = a2\n 10708: ra = 444, jump @537\n      : @438 [@dyn 222] (gas: 4)\n 10714: a0 = s1 + 0x7ff\n 10718: a0 = a0 + 0x6a1\n 10722: a1 = u64 [s1 + 0xe0]\n 10726: ra = 446, jump @17\n      : @439 [@dyn 223] (gas: 8)\n 10732: a1 = s1 + 0x7ff\n 10736: a1 = a1 + 0xb9\n 10740: a0 = u64 [a1 + 0x600]\n 10744: a4 = a1 + 0x500\n 10748: a3 = u64 [a4 + 0xf8]\n 10752: a2 = u64 [a4 + 0xf0]\n 10756: a1 = u64 [a4 + 0xe8]\n 10760: t0 = 448, jump @657\n      : @440 [@dyn 224] (gas: 1)\n 10766: jump @497 if a0 != 0\n      : @441 (gas: 3)\n 10770: a0 = u64 [s1 + 0x130]\n 10774: u64 [s1 + 0x138] = a1\n 10778: ra = 450, jump @26\n      : @442 [@dyn 225] (gas: 1)\n 10784: t0 = 452, jump @671\n      : @443 [@dyn 226] (gas: 14)\n 10790: ecalli 9 // 'hash_keccak_256'\n 10792: a1 = u64 [s1 + 0x130]\n 10796: a0 = u64 [a1 + 0x18]\n 10799: u64 [s1 + 0x110] = a0\n 10803: a0 = u64 [a1 + 0x10]\n 10806: u64 [s1 + 0x108] = a0\n 10810: a0 = u64 [a1 + 0x8]\n 10813: u64 [s1 + 0x100] = a0\n 10817: a0 = u64 [a1]\n 10819: u64 [s1 + 0xe0] = a0\n 10823: a0 = s1 + 0x7ff\n 10827: a0 = a0 + 0x681\n 10831: a1 = 0x40\n 10834: ra = 454, jump @17\n      : @444 [@dyn 227] (gas: 27)\n 10840: t0 = s1 + 0x7ff\n 10844: t0 = t0 + 0xb9\n 10848: a0 = t0 + 0x500\n 10852: a1 = u64 [a0 + 0xc8]\n 10856: a5 = u64 [a0 + 0xe0]\n 10860: a2 = u64 [a0 + 0xd0]\n 10864: a4 = u64 [a0 + 0xd8]\n 10868: a0 = a1 + 0x20\n 10871: u64 [s1 + 0x138] = a1\n 10875: a3 = a0 <u a1\n 10878: a1 = a2 + a3\n 10881: u64 [s1 + 0x130] = a2\n 10885: a2 = a1 <u a2\n 10888: a2 = a3 if a3 == 0\n 10891: a2 = a2 + a4\n 10894: u64 [s1 + 0x118] = a4\n 10898: a3 = a2 <u a4\n 10901: u64 [s1 + 0x120] = a5\n 10905: a5 = a5 + a3\n 10908: a3 = a0 | a2\n 10911: a1 = a1 | a5\n 10914: a3 = a3 | a1\n 10917: a3 = a3 >> 0x20\n 10920: a1 = a1 | a2\n 10923: a1 = a1 << 0x20\n 10926: a1 = a1 | a3\n 10929: jump @497 if a1 != 0\n      : @445 (gas: 9)\n 10933: u64 [t0 + 1464] = 0\n 10937: u64 [t0 + 1456] = 0\n 10941: u64 [t0 + 1448] = 0\n 10945: a2 = 0x1901000000000000\n 10955: a1 = s1 + 0x7ff\n 10959: a1 = a1 + 0x661\n 10963: u64 [t0 + 0x5c0] = a2\n 10967: u64 [s1 + 0x88] = a0\n 10971: ra = 456, jump @19\n      : @446 [@dyn 228] (gas: 4)\n 10977: a5 = s1 + 0x100\n 10981: a1 = u64 [a5 + 0x38]\n 10984: a0 = a1 + 0x22\n 10987: t0 = 458, jump @652\n      : @447 [@dyn 229] (gas: 1)\n 10993: jump @497 if a1 != 0\n      : @448 (gas: 14)\n 10997: a2 = s1 + 0x7ff\n 11001: a2 = a2 + 0xb9\n 11005: a1 = u64 [s1 + 0x30]\n 11008: a4 = a2 + 0x500\n 11012: u64 [a4 + 0x88] = a1\n 11016: a1 = u64 [s1 + 0x38]\n 11019: u64 [a4 + 0x90] = a1\n 11023: a1 = u64 [s1 + 0x40]\n 11026: u64 [a4 + 0x98] = a1\n 11030: a1 = s1 + 0x7ff\n 11034: a1 = a1 + 0x641\n 11038: a3 = u64 [s1 + 0x48]\n 11041: u64 [a4 + 0xa0] = a3\n 11045: ra = 460, jump @19\n      : @449 [@dyn 230] (gas: 4)\n 11051: a5 = s1 + 0x100\n 11055: a1 = u64 [a5 + 0x38]\n 11058: a0 = a1 + 0x42\n 11061: t0 = 462, jump @652\n      : @450 [@dyn 231] (gas: 1)\n 11067: jump @497 if a1 != 0\n      : @451 (gas: 18)\n 11071: a1 = u64 [s1 + 0xe0]\n 11075: a2 = reverse a1\n 11077: a1 = u64 [s1 + 0x100]\n 11081: a1 = reverse a1\n 11083: a3 = u64 [s1 + 0x108]\n 11087: a3 = reverse a3\n 11089: a4 = u64 [s1 + 0x110]\n 11093: a4 = reverse a4\n 11095: a5 = s1 + 0x7ff\n 11099: a5 = a5 + 0xb9\n 11103: u64 [a5 + 0x568] = a4\n 11107: a4 = a5 + 0x500\n 11111: u64 [a4 + 0x70] = a3\n 11114: u64 [a4 + 0x78] = a1\n 11117: a1 = s1 + 0x7ff\n 11121: a1 = a1 + 0x621\n 11125: u64 [a4 + 0x80] = a2\n 11129: ra = 464, jump @19\n      : @452 [@dyn 232] (gas: 13)\n 11135: a4 = s1 + 0x100\n 11139: a0 = u64 [a4 + 0x38]\n 11142: a3 = u64 [a4 + 0x18]\n 11145: a0 = a0 | a3\n 11148: a1 = u64 [a4 + 0x30]\n 11151: a2 = u64 [a4 + 0x20]\n 11154: a1 = a1 | a2\n 11157: a0 = a0 | a1\n 11160: a0 = a0 >> 0x20\n 11163: a1 = a1 | a3\n 11166: a1 = a1 << 0x20\n 11169: a0 = a0 | a1\n 11172: jump @497 if a0 != 0\n      : @453 (gas: 10)\n 11176: a2 = s1 + 0x7ff\n 11180: a2 = a2 + 0xb9\n 11184: u64 [a2 + 1376] = 0\n 11188: u64 [a2 + 1368] = 0\n 11192: u64 [a2 + 1360] = 0\n 11196: a1 = s1 + 0x7ff\n 11200: a1 = a1 + 0x601\n 11204: u64 [a2 + 1352] = 0x42\n 11209: a0 = u64 [s1 + 0x138]\n 11213: ra = 466, jump @19\n      : @454 [@dyn 233] (gas: 21)\n 11219: a1 = s1 + 0x7ff\n 11223: a1 = a1 + 0xb9\n 11227: u64 [a1 + 1312] = 0\n 11231: u64 [a1 + 1304] = 0\n 11235: u64 [a1 + 1296] = 0\n 11239: a2 = a1 + 0x500\n 11243: u64 [a2 + 8] = 0x62\n 11247: a0 = u64 [s1 + 0x120]\n 11251: u64 [a2 + 0x40] = a0\n 11254: a0 = u64 [s1 + 0x118]\n 11258: u64 [a2 + 0x38] = a0\n 11261: a0 = u64 [s1 + 0x130]\n 11265: u64 [a2 + 0x30] = a0\n 11268: a3 = a1\n 11270: a0 = s1 + 0x7ff\n 11274: a0 = a0 + 0x5e1\n 11278: a1 = s1 + 0x7ff\n 11282: a1 = a1 + 0x5c1\n 11286: a2 = u64 [s1 + 0x138]\n 11290: u64 [a3 + 0x528] = a2\n 11294: ra = 468, jump @537\n      : @455 [@dyn 234] (gas: 4)\n 11300: a0 = s1 + 0x7ff\n 11304: a0 = a0 + 0x5a1\n 11308: a1 = u64 [s1 + 0x138]\n 11312: ra = 470, jump @17\n      : @456 [@dyn 235] (gas: 15)\n 11318: a3 = s1 + 0x7ff\n 11322: a3 = a3 + 0xb9\n 11326: a0 = u64 [a3 + 0x500]\n 11330: a5 = a3 + 0x400\n 11334: a1 = u64 [a5 + 0xf8]\n 11338: a2 = u64 [a5 + 0xf0]\n 11342: a4 = u64 [a5 + 0xe8]\n 11346: a0 = a0 | a2\n 11349: a2 = a4 | a1\n 11352: a2 = a2 | a0\n 11355: a2 = a2 >> 0x20\n 11358: a0 = a0 | a1\n 11361: a0 = a0 << 0x20\n 11364: a0 = a0 | a2\n 11367: jump @497 if a0 != 0\n      : @457 (gas: 5)\n 11371: a3 = a4\n 11373: a0 = u64 [s1 + 0x88]\n 11377: a1 = a4\n 11379: u64 [s1 + 0x138] = a3\n 11383: ra = 472, jump @26\n      : @458 [@dyn 236] (gas: 1)\n 11389: t0 = 474, jump @671\n      : @459 [@dyn 237] (gas: 14)\n 11395: ecalli 9 // 'hash_keccak_256'\n 11397: a1 = u64 [s1 + 0x130]\n 11401: a0 = u64 [a1 + 0x18]\n 11404: u64 [s1 + 0xe0] = a0\n 11408: a0 = u64 [a1 + 0x10]\n 11411: u64 [s1 + 0x100] = a0\n 11415: a0 = u64 [a1 + 0x8]\n 11418: u64 [s1 + 0x108] = a0\n 11422: a0 = u64 [a1]\n 11424: u64 [s1 + 0x110] = a0\n 11428: a0 = s1 + 0x7ff\n 11432: a0 = a0 + 0x581\n 11436: a1 = 0x40\n 11439: ra = 476, jump @17\n      : @460 [@dyn 238] (gas: 20)\n 11445: a0 = s1 + 0x7ff\n 11449: a0 = a0 + 0xb9\n 11453: a5 = a0 + 0x400\n 11457: a3 = u64 [a5 + 0xe0]\n 11461: a4 = u64 [a5 + 0xd8]\n 11465: a2 = u64 [a5 + 0xd0]\n 11469: a1 = u64 [a5 + 0xc8]\n 11473: a5 = s1 + 0x100\n 11477: u64 [a5 + 0x30] = a2\n 11480: u64 [a5 + 0x20] = a3\n 11483: a0 = a2 | a3\n 11486: u64 [a5 + 0x38] = a1\n 11489: a1 = a1 | a4\n 11492: a1 = a1 | a0\n 11495: a1 = a1 >> 0x20\n 11498: u64 [a5 + 0x18] = a4\n 11501: a0 = a0 | a4\n 11504: a0 = a0 << 0x20\n 11507: a0 = a0 | a1\n 11510: jump @497 if a0 != 0\n      : @461 (gas: 19)\n 11514: a0 = u64 [s1 + 0xe0]\n 11518: a0 = reverse a0\n 11520: a1 = u64 [s1 + 0x100]\n 11524: a1 = reverse a1\n 11526: a2 = u64 [s1 + 0x108]\n 11530: a2 = reverse a2\n 11532: a3 = u64 [s1 + 0x110]\n 11536: a3 = reverse a3\n 11538: a4 = s1 + 0x7ff\n 11542: a4 = a4 + 0xb9\n 11546: a5 = a4 + 0x400\n 11550: u64 [a5 + 0xc0] = a3\n 11554: u64 [a5 + 0xb8] = a2\n 11558: u64 [a5 + 0xb0] = a1\n 11562: a1 = s1 + 0x7ff\n 11566: a1 = a1 + 0x561\n 11570: u64 [a5 + 0xa8] = a0\n 11574: a0 = u64 [s1 + 0x138]\n 11578: ra = 478, jump @19\n      : @462 [@dyn 239] (gas: 14)\n 11584: a3 = s1 + 0x100\n 11588: a0 = u64 [a3 + 0x20]\n 11591: a2 = u64 [a3 + 0x18]\n 11594: a2 = a2 | a0\n 11597: a0 = 0x100000000\n 11607: u64 [a3 + 0x18] = a0\n 11610: a0 = 0xffffffe0\n 11620: a1 = u64 [a3 + 0x38]\n 11623: a0 = a1 <u a0\n 11626: a1 = u64 [a3 + 0x30]\n 11629: a0 = 0 if a1 != 0\n 11631: u64 [a3 + 0x20] = a2\n 11634: a0 = 0 if a2 != 0\n 11636: jump @497 if a0 == 0\n      : @463 (gas: 12)\n 11640: a1 = u8 [s1 + 0xa0]\n 11644: a0 = u64 [s1 + 0x138]\n 11648: i32 a0 = a0 + 0x20\n 11651: a2 = s1 + 0x7ff\n 11655: a2 = a2 + 0xb9\n 11659: u64 [a2 + 1184] = 0\n 11663: u64 [a2 + 1176] = 0\n 11667: u64 [a2 + 0x488] = a1\n 11671: a1 = s1 + 0x7ff\n 11675: a1 = a1 + 0x541\n 11679: u64 [a2 + 1168] = 0\n 11683: ra = 480, jump @19\n      : @464 [@dyn 240] (gas: 5)\n 11689: a0 = s1 + 0x1000\n 11693: i32 a0 = a0 + 0x540\n 11697: a1 = 0xa4\n 11701: ecalli 3 // 'call_data_load'\n 11703: fallthrough\n      : @465 (gas: 10)\n 11704: a2 = s1 + 0x100\n 11708: a0 = u64 [a2 + 0x18]\n 11711: a0 = a0 + 0xffffffffffffffc0\n 11714: a1 = u64 [a2 + 0x38]\n 11717: a0 = a1 <u a0\n 11720: a1 = u64 [a2 + 0x30]\n 11723: a0 = 0 if a1 != 0\n 11725: a1 = u64 [a2 + 0x20]\n 11728: a0 = 0 if a1 != 0\n 11730: jump @497 if a0 == 0\n      : @466 (gas: 18)\n 11734: a0 = s1 + 0x10b8\n 11738: a5 = a0 + 0x400\n 11742: a2 = u64 [a5 + 0x88]\n 11746: a1 = u64 [a5 + 0x90]\n 11750: a3 = u64 [a5 + 0x98]\n 11754: a4 = u64 [a5 + 0xa0]\n 11758: a0 = u64 [s1 + 0x138]\n 11762: i32 a0 = a0 + 0x40\n 11765: a5 = s1 + 0x7ff\n 11769: a5 = a5 + 0xb9\n 11773: u64 [a5 + 0x480] = a4\n 11777: a4 = a5 + 0x400\n 11781: u64 [a4 + 0x78] = a3\n 11784: u64 [a4 + 0x70] = a1\n 11787: a1 = s1 + 0x7ff\n 11791: a1 = a1 + 0x521\n 11795: u64 [a4 + 0x68] = a2\n 11798: ra = 482, jump @19\n      : @467 [@dyn 241] (gas: 5)\n 11804: a0 = s1 + 0x1000\n 11808: i32 a0 = a0 + 0x560\n 11812: a1 = 0xc4\n 11816: ecalli 3 // 'call_data_load'\n 11818: fallthrough\n      : @468 (gas: 9)\n 11819: a0 = 0xffffffa0\n 11829: a2 = s1 + 0x100\n 11833: a1 = u64 [a2 + 0x38]\n 11836: a0 = a1 <u a0\n 11839: a1 = u64 [a2 + 0x30]\n 11842: a0 = 0 if a1 != 0\n 11844: a1 = u64 [a2 + 0x20]\n 11847: a0 = 0 if a1 != 0\n 11849: jump @497 if a0 == 0\n      : @469 (gas: 18)\n 11853: a0 = s1 + 0x10b8\n 11857: a5 = a0 + 0x400\n 11861: a2 = u64 [a5 + 0xa8]\n 11865: a1 = u64 [a5 + 0xb0]\n 11869: a3 = u64 [a5 + 0xb8]\n 11873: a4 = u64 [a5 + 0xc0]\n 11877: a0 = u64 [s1 + 0x138]\n 11881: i32 a0 = a0 + 0x60\n 11884: a5 = s1 + 0x7ff\n 11888: a5 = a5 + 0xb9\n 11892: u64 [a5 + 0x460] = a4\n 11896: a4 = a5 + 0x400\n 11900: u64 [a4 + 0x58] = a3\n 11903: u64 [a4 + 0x50] = a1\n 11906: a1 = s1 + 0x7ff\n 11910: a1 = a1 + 0x501\n 11914: u64 [a4 + 0x48] = a2\n 11917: ra = 484, jump @19\n      : @470 [@dyn 242] (gas: 10)\n 11923: a0 = s1 + 0x7ff\n 11927: a0 = a0 + 0xb9\n 11931: u64 [a0 + 1088] = 0\n 11935: u64 [a0 + 1080] = 0\n 11939: u64 [a0 + 1072] = 0\n 11943: a1 = s1 + 0x7ff\n 11947: a1 = a1 + 0x4e1\n 11951: u64 [a0 + 1064] = 0\n 11955: a0 = 0\n 11957: ra = 486, jump @19\n      : @471 [@dyn 243] (gas: 14)\n 11963: ecalli 11 // 'ref_time_left'\n 11965: a1 = 0x300d0\n 11970: u64 [0x300d8] = 0\n 11975: u64 [0x300d0] = 0\n 11980: u64 [s1 + 0x130] = a1\n 11984: u32 [0x300e0] = 0x1000000\n 11993: a0 = s1 + 0x10b8\n 11997: u64 [a0 + 1248] = 0\n 12001: u64 [a0 + 1240] = 0\n 12005: u64 [a0 + 1232] = 0\n 12009: u64 [a0 + 1224] = 0\n 12013: a1 = 0x80\n 12017: a0 = u64 [s1 + 0x138]\n 12021: ra = 488, jump @26\n      : @472 [@dyn 244] (gas: 3)\n 12027: a1 = u64 [s1 + 0x28]\n 12030: a1 = i32 [a1]\n 12032: jump @474 if a1 >u 31\n      : @473 (gas: 3)\n 12036: a2 = u64 [s1 + 0x28]\n 12039: u32 [a2 + 0] = 0x20\n 12042: fallthrough\n      : @474 (gas: 32)\n 12043: a2 = s1 + 0x10b8\n 12047: u32 [a2 + 1256] = 0x20\n 12052: u64 [a2 + 1312] = 0\n 12056: u64 [a2 + 1304] = 0\n 12060: u64 [a2 + 1296] = 0\n 12064: u64 [a2 + 1288] = 0\n 12068: a1 = u64 [s1 + 0x130]\n 12072: a1 = a1 << 0x20\n 12075: a1 = a1 >> 0x20\n 12078: a2 = 0x1800000000\n 12088: t0 = a1 | a2\n 12091: a1 = s1 + 0x1580\n 12095: a1 = a1 << 0x20\n 12098: a1 = a1 >> 0x20\n 12101: a2 = s1 + 0x15c0\n 12105: a2 = a2 << 0x20\n 12108: a3 = a2 | a1\n 12111: a0 = a0 << 0x20\n 12114: a0 = a0 >> 0x20\n 12117: a1 = 0x8000000000\n 12127: a4 = a0 | a1\n 12130: a0 = u64 [s1 + 0x20]\n 12133: a0 = a0 << 0x20\n 12136: a0 = a0 >> 0x20\n 12139: a1 = s1 + 0x15a0\n 12143: a1 = a1 << 0x20\n 12146: a5 = a1 | a0\n 12149: a1 = 0xffffffffffffffff\n 12152: a2 = 0xffffffffffffffff\n 12155: a0 = t0\n 12157: ecalli 1 // 'call'\n 12159: fallthrough\n      : @475 (gas: 1)\n 12160: jump @488 if a0 != 0\n      : @476 (gas: 4)\n 12164: a0 = s1 + 0x7ff\n 12168: a0 = a0 + 0x4a1\n 12172: a1 = 0\n 12174: ra = 490, jump @17\n      : @477 [@dyn 245] (gas: 13)\n 12180: a2 = s1 + 0x7ff\n 12184: a2 = a2 + 0xb9\n 12188: a3 = a2 + 0x300\n 12192: a0 = u64 [a3 + 0xf0]\n 12196: a1 = u64 [a3 + 0xf8]\n 12200: a2 = u64 [a3 + 0xe8]\n 12204: a0 = a0 & 0xffffffffffffffff\n 12207: a4 = u64 [s1 + 0x128]\n 12211: a1 = a1 & a4\n 12214: a2 = a2 & 0xffffffffffffffff\n 12217: a3 = a2 | a1\n 12220: a3 = a3 | a0\n 12223: jump @479 if a3 == 0\n      : @478 (gas: 9)\n 12226: a3 = u64 [s1 + 0xf0]\n 12230: a2 = a2 ^ a3\n 12233: a3 = u64 [s1 + 0x70]\n 12236: a1 = a1 ^ a3\n 12239: a3 = u64 [s1 + 0xf8]\n 12243: a0 = a0 ^ a3\n 12246: a0 = a0 | a2\n 12249: a0 = a0 | a1\n 12252: jump @533 if a0 == 0\n      : @479 (gas: 4)\n 12256: a0 = s1 + 0x7ff\n 12260: a0 = a0 + 0x481\n 12264: a1 = 0x40\n 12267: ra = 492, jump @17\n      : @480 [@dyn 246] (gas: 20)\n 12273: a0 = s1 + 0x7ff\n 12277: a0 = a0 + 0xb9\n 12281: a5 = a0 + 0x300\n 12285: a3 = u64 [a5 + 0xe0]\n 12289: a4 = u64 [a5 + 0xd8]\n 12293: a2 = u64 [a5 + 0xd0]\n 12297: a1 = u64 [a5 + 0xc8]\n 12301: a5 = s1 + 0x100\n 12305: u64 [a5 + 0x30] = a2\n 12308: u64 [a5 + 0x28] = a3\n 12311: a0 = a2 | a3\n 12314: u64 [a5 + 0x38] = a1\n 12317: a1 = a1 | a4\n 12320: a1 = a1 | a0\n 12323: a1 = a1 >> 0x20\n 12326: u64 [a5 + 0x20] = a4\n 12329: a0 = a0 | a4\n 12332: a0 = a0 << 0x20\n 12335: a0 = a0 | a1\n 12338: jump @497 if a0 != 0\n      : @481 (gas: 11)\n 12342: a2 = s1 + 0x7ff\n 12346: a2 = a2 + 0xb9\n 12350: u64 [a2 + 952] = 0\n 12354: u64 [a2 + 944] = 0\n 12358: u64 [a2 + 936] = 0\n 12362: a0 = 0x8c379a000000000\n 12372: a1 = s1 + 0x7ff\n 12376: a1 = a1 + 0x461\n 12380: u64 [a2 + 0x3c0] = a0\n 12384: a0 = u64 [s1 + 0x138]\n 12388: ra = 494, jump @19\n      : @482 [@dyn 247] (gas: 14)\n 12394: a3 = s1 + 0x100\n 12398: a0 = u64 [a3 + 0x28]\n 12401: a2 = u64 [a3 + 0x20]\n 12404: a2 = a2 | a0\n 12407: a0 = 0x100000000\n 12417: u64 [a3 + 0x20] = a0\n 12420: a0 = 0xfffffffc\n 12430: a1 = u64 [a3 + 0x38]\n 12433: a0 = a1 <u a0\n 12436: a1 = u64 [a3 + 0x30]\n 12439: a0 = 0 if a1 != 0\n 12441: u64 [a3 + 0x28] = a2\n 12444: a0 = 0 if a2 != 0\n 12446: jump @497 if a0 == 0\n      : @483 (gas: 11)\n 12450: a0 = u64 [s1 + 0x138]\n 12454: i32 a0 = a0 + 0x4\n 12457: a2 = s1 + 0x7ff\n 12461: a2 = a2 + 0xb9\n 12465: u64 [a2 + 928] = 0\n 12469: u64 [a2 + 920] = 0\n 12473: u64 [a2 + 904] = 0x20\n 12478: a1 = s1 + 0x7ff\n 12482: a1 = a1 + 0x441\n 12486: u64 [a2 + 912] = 0\n 12490: ra = 496, jump @19\n      : @484 [@dyn 248] (gas: 10)\n 12496: a2 = s1 + 0x100\n 12500: a0 = u64 [a2 + 0x20]\n 12503: a0 = a0 + 0xffffffffffffffdc\n 12506: a1 = u64 [a2 + 0x38]\n 12509: a0 = a1 <u a0\n 12512: a1 = u64 [a2 + 0x30]\n 12515: a0 = 0 if a1 != 0\n 12517: a1 = u64 [a2 + 0x28]\n 12520: a0 = 0 if a1 != 0\n 12522: jump @497 if a0 == 0\n      : @485 (gas: 11)\n 12526: a0 = u64 [s1 + 0x138]\n 12530: i32 a0 = a0 + 0x24\n 12533: a2 = s1 + 0x7ff\n 12537: a2 = a2 + 0xb9\n 12541: u64 [a2 + 896] = 0\n 12545: u64 [a2 + 888] = 0\n 12549: u64 [a2 + 872] = 0x1c\n 12554: a1 = s1 + 0x7ff\n 12558: a1 = a1 + 0x421\n 12562: u64 [a2 + 880] = 0\n 12566: ra = 498, jump @19\n      : @486 [@dyn 249] (gas: 9)\n 12572: a0 = 0xffffffbc\n 12582: a2 = s1 + 0x100\n 12586: a1 = u64 [a2 + 0x38]\n 12589: a0 = a1 <u a0\n 12592: a1 = u64 [a2 + 0x30]\n 12595: a0 = 0 if a1 != 0\n 12597: a1 = u64 [a2 + 0x28]\n 12600: a0 = 0 if a1 != 0\n 12602: jump @497 if a0 == 0\n      : @487 (gas: 17)\n 12606: a0 = u64 [s1 + 0x138]\n 12610: i32 a0 = a0 + 0x44\n 12613: a1 = u64 [0x20048]\n 12618: a2 = u64 [0x20050]\n 12623: a3 = u64 [0x20058]\n 12628: a4 = s1 + 0x7ff\n 12632: a4 = a4 + 0xb9\n 12636: a5 = a4 + 0x300\n 12640: u64 [a5 + 0x60] = a1\n 12643: u64 [a5 + 0x58] = a2\n 12646: u64 [a5 + 0x50] = a3\n 12649: a2 = 0x5455524500000000\n 12659: a1 = s1 + 0x7ff\n 12663: a1 = a1 + 0x401\n 12667: u64 [a5 + 0x48] = a2\n 12670: ra = 0x178\n 12674: jump @19\n      : @488 (gas: 4)\n 12677: a0 = s1 + 0x7ff\n 12681: a0 = a0 + 0x4c1\n 12685: a1 = 0x40\n 12688: ra = 500, jump @17\n      : @489 [@dyn 250] (gas: 13)\n 12694: a0 = s1 + 0x7ff\n 12698: a0 = a0 + 0xb9\n 12702: a2 = a0 + 0x400\n 12706: a1 = u64 [a2 + 0x20]\n 12709: u64 [s1 + 0x130] = a1\n 12713: a1 = u64 [a2 + 0x18]\n 12716: u64 [s1 + 0x128] = a1\n 12720: a1 = u64 [a2 + 0x10]\n 12723: u64 [s1 + 0x120] = a1\n 12727: a0 = u64 [a2 + 0x8]\n 12730: u64 [s1 + 0x138] = a0\n 12734: ecalli 13 // 'return_data_size'\n 12736: fallthrough\n      : @490 (gas: 13)\n 12737: a4 = s1 + 0x100\n 12741: a1 = u64 [a4 + 0x30]\n 12744: a2 = u64 [a4 + 0x20]\n 12747: a1 = a1 | a2\n 12750: a3 = u64 [a4 + 0x28]\n 12753: a2 = u64 [a4 + 0x38]\n 12756: a2 = a2 | a3\n 12759: a2 = a2 | a1\n 12762: a2 = a2 >> 0x20\n 12765: a1 = a1 | a3\n 12768: a1 = a1 << 0x20\n 12771: a1 = a1 | a2\n 12774: jump @497 if a1 != 0\n      : @491 (gas: 2)\n 12777: a1 = a0 >> 0x20\n 12780: jump @497 if a1 != 0\n      : @492 (gas: 6)\n 12783: a1 = a0\n 12785: u64 [s1 + 0x128] = a0\n 12789: i32 a0 = a0 + 0\n 12791: u64 [s1 + 0x130] = a0\n 12795: a0 = u64 [s1 + 0x138]\n 12799: ra = 502, jump @26\n      : @493 [@dyn 251] (gas: 9)\n 12805: a1 = s1 + 0x10b8\n 12809: a2 = u64 [s1 + 0x128]\n 12813: u32 [a1 + 0x528] = a2\n 12817: i32 a0 = a0 + 0\n 12819: a1 = s1 + 0x1000\n 12823: i32 a1 = a1 + 0x5e0\n 12827: a2 = 0\n 12829: ecalli 12 // 'return_data_copy'\n 12831: fallthrough\n      : @494 (gas: 4)\n 12832: a0 = s1 + 0x10b8\n 12836: a0 = i32 [a0 + 0x528]\n 12840: a1 = u64 [s1 + 0x130]\n 12844: jump @497 if a0 <u a1\n      : @495 (gas: 2)\n 12847: ecalli 13 // 'return_data_size'\n 12849: fallthrough\n      : @496 (gas: 3)\n 12850: a1 = a0\n 12852: a0 = a0 >> 0x20\n 12855: jump @535 if a0 == 0\n      : @497 (gas: 1)\n 12859: trap\n      : @498 (gas: 4)\n 12860: a1 = 0x200d0\n 12865: i32 a1 = a1 + 0\n 12867: a0 = 0x1\n 12870: jump @500\n      : @499 (gas: 6)\n 12872: i32 a1 = a1 + 0\n 12874: a0 = 0x1\n 12877: a2 = 0\n 12879: ecalli 14 // 'seal_return'\n 12881: a1 = 0x200d0\n 12886: jump @499\n      : @500 (gas: 4)\n 12888: a2 = 0\n 12890: ecalli 14 // 'seal_return'\n 12892: a1 = 0x200d0\n 12897: jump @499\n      : @501 (gas: 2)\n 12899: a1 = 0x200d0\n 12904: jump @499\n      : @502 (gas: 2)\n 12906: a1 = 0x200d0\n 12911: jump @499\n      : @503 (gas: 2)\n 12913: a1 = 0x200d0\n 12918: jump @499\n      : @504 (gas: 2)\n 12920: a1 = 0x200d0\n 12925: jump @499\n      : @505 (gas: 2)\n 12927: a1 = 0x200d0\n 12932: jump @499\n      : @506 (gas: 2)\n 12934: a1 = 0x200d0\n 12939: jump @499\n      : @507 (gas: 2)\n 12941: a1 = 0x200d0\n 12946: jump @499\n      : @508 (gas: 2)\n 12948: a1 = 0x200d0\n 12953: jump @499\n      : @509 (gas: 2)\n 12955: a1 = 0x200d0\n 12960: jump @499\n      : @510 (gas: 2)\n 12962: a1 = 0x200d0\n 12967: jump @499\n      : @511 (gas: 2)\n 12969: a1 = 0x200d0\n 12974: jump @499\n      : @512 (gas: 2)\n 12976: a1 = 0x200d0\n 12981: jump @499\n      : @513 (gas: 2)\n 12983: a1 = 0x200d0\n 12988: jump @499\n      : @514 (gas: 2)\n 12990: a1 = 0x200d0\n 12995: jump @499\n      : @515 (gas: 2)\n 12997: a1 = 0x200d0\n 13002: jump @499\n      : @516 (gas: 2)\n 13005: a1 = 0x200d0\n 13010: jump @499\n      : @517 (gas: 2)\n 13013: a1 = 0x200d0\n 13018: jump @499\n      : @518 (gas: 2)\n 13021: a1 = 0x200d0\n 13026: jump @499\n      : @519 (gas: 2)\n 13029: a1 = 0x200d0\n 13034: jump @499\n      : @520 (gas: 2)\n 13037: a1 = 0x200d0\n 13042: jump @499\n      : @521 (gas: 2)\n 13045: a1 = 0x200d0\n 13050: jump @499\n      : @522 (gas: 2)\n 13053: a1 = 0x200d0\n 13058: jump @499\n      : @523 (gas: 2)\n 13061: a1 = 0x200d0\n 13066: jump @499\n      : @524 (gas: 2)\n 13069: a1 = 0x200d0\n 13074: jump @499\n      : @525 (gas: 2)\n 13077: a1 = 0x200d0\n 13082: jump @499\n      : @526 (gas: 2)\n 13085: a1 = 0x200d0\n 13090: jump @499\n      : @527 (gas: 2)\n 13093: a1 = 0x200d0\n 13098: jump @499\n      : @528 (gas: 12)\n 13101: a0 = s1 + 0x7ff\n 13105: a0 = a0 + 0xb9\n 13109: u64 [a0 + 728] = 0\n 13113: u64 [a0 + 720] = 0\n 13117: u64 [a0 + 712] = 0\n 13121: a2 = a0\n 13123: a0 = 0x4e487b7100000000\n 13133: a1 = s1 + 0x7ff\n 13137: a1 = a1 + 0x381\n 13141: u64 [a2 + 0x2e0] = a0\n 13145: a0 = 0\n 13147: ra = 504, jump @19\n      : @529 [@dyn 252] (gas: 11)\n 13153: a1 = s1 + 0x7ff\n 13157: a1 = a1 + 0xb9\n 13161: u64 [a1 + 704] = 0\n 13165: u64 [a1 + 696] = 0\n 13169: u64 [a1 + 680] = 0x11\n 13174: a2 = a1\n 13176: a0 = 0x4\n 13179: a1 = s1 + 0x7ff\n 13183: a1 = a1 + 0x361\n 13187: u64 [a2 + 688] = 0\n 13191: ra = 506, jump @19\n      : @530 [@dyn 253] (gas: 3)\n 13197: a0 = u64 [s1 + 0x28]\n 13200: a0 = i32 [a0]\n 13202: jump @532 if a0 >u 63\n      : @531 (gas: 3)\n 13206: a1 = u64 [s1 + 0x28]\n 13209: u32 [a1 + 0] = 0x40\n 13212: fallthrough\n      : @532 (gas: 5)\n 13213: a0 = 0x1\n 13216: a2 = 0x24\n 13219: a1 = u64 [s1 + 0x18]\n 13222: ecalli 14 // 'seal_return'\n 13224: fallthrough\n      : @533 (gas: 35)\n 13225: a3 = s1 + 0x7ff\n 13229: a3 = a3 + 0xb9\n 13233: a0 = u64 [s1 + 0xa8]\n 13237: a1 = a3 + 0x200\n 13241: u64 [a1 + 0xe8] = a0\n 13245: a0 = u64 [s1 + 0xc8]\n 13249: a5 = a3 + 0x300\n 13253: u64 [a5 + 0x8] = a0\n 13256: a0 = u64 [s1 + 0xf0]\n 13260: u64 [a5 + 0x28] = a0\n 13263: a0 = u64 [s1 + 0xb0]\n 13267: u64 [a1 + 0xf0] = a0\n 13271: a0 = u64 [s1 + 0xd0]\n 13275: u64 [a5 + 0x10] = a0\n 13278: a0 = u64 [s1 + 0xf8]\n 13282: u64 [a5 + 0x30] = a0\n 13285: a0 = u64 [s1 + 0xb8]\n 13289: u64 [a1 + 0xf8] = a0\n 13293: a0 = u64 [s1 + 0xd8]\n 13297: u64 [a5 + 0x18] = a0\n 13300: a0 = u64 [s1 + 0xe8]\n 13304: u64 [a5 + 0x38] = a0\n 13307: a0 = u64 [s1 + 0xc0]\n 13311: u64 [a5] = a0\n 13313: a0 = u64 [s1 + 0x90]\n 13317: u64 [a5 + 0x20] = a0\n 13320: a0 = s1 + 0x7ff\n 13324: a0 = a0 + 0x3e1\n 13328: a1 = s1 + 0x7ff\n 13332: a1 = a1 + 0x3c1\n 13336: a2 = s1 + 0x7ff\n 13340: a2 = a2 + 0x3a1\n 13344: a4 = u64 [s1 + 0x98]\n 13348: u64 [a5 + 0x40] = a4\n 13351: ra = 508, jump @575\n      : @534 [@dyn 254] (gas: 3)\n 13357: a0 = 0\n 13359: a1 = u64 [s1 + 0x18]\n 13362: jump @500\n      : @535 (gas: 3)\n 13365: a0 = u64 [s1 + 0x138]\n 13369: u64 [s1 + 0x130] = a1\n 13373: ra = 510, jump @26\n      : @536 [@dyn 255] (gas: 6)\n 13379: i32 a1 = a0 + 0\n 13381: a2 = i32 [s1 + 0x130]\n 13385: a0 = 0x1\n 13388: ra = 0x200\n 13392: ecalli 14 // 'seal_return'\n 13394: fallthrough\n      : @537 [@dyn 256] (gas: 46)\n 13395: sp = sp + 0xffffffffffffff70\n 13399: u64 [sp + 0x88] = ra\n 13403: u64 [sp + 0x80] = s0\n 13407: u64 [sp + 0x78] = s1\n 13410: s0 = sp + 0x90\n 13414: sp = sp & 0xfffffffffffffff0\n 13417: t0 = a0\n 13419: a2 = u64 [a1]\n 13421: t2 = u64 [a0 + 0x8]\n 13424: a5 = u64 [a1 + 0x8]\n 13427: t1 = u64 [a0]\n 13429: a3 = a2 + 0x1f\n 13432: ra = a3 <u a2\n 13435: a2 = a5 + ra\n 13438: a3 = a3 & 0xffffffffffffffe0\n 13441: u64 [sp + 0x8] = t1\n 13444: t1 = t1 + a3\n 13447: a4 = t1 <u a3\n 13450: a3 = a2 + t2\n 13453: a3 = a3 + a4\n 13456: s1 = a3 ^ a2\n 13459: a0 = a3 <u a2\n 13462: a0 = a4 if s1 == 0\n 13465: a4 = u64 [t0 + 0x18]\n 13468: a5 = a2 <u a5\n 13471: s1 = u64 [a1 + 0x10]\n 13474: t0 = u64 [t0 + 0x10]\n 13477: a1 = u64 [a1 + 0x18]\n 13480: a5 = ra if ra == 0\n 13483: a5 = a5 + s1\n 13486: s1 = a5 <u s1\n 13489: a2 = a5 + t0\n 13492: a0 = a0 + a2\n 13495: a5 = a2 <u a5\n 13498: a2 = a0 <u a2\n 13501: a1 = a1 + a4\n 13504: a1 = a1 + s1\n 13507: a1 = a1 + a5\n 13510: a5 = a1 + a2\n 13513: a1 = a5 >u 0\n 13515: a2 = a0 >u 0\n 13517: a2 = a1 if a5 != 0\n 13520: a1 = a0 | a5\n 13523: s1 = a3 >u 0\n 13525: s1 = a2 if a1 != 0\n 13528: jump @541 if s1 != 0\n      : @538 (gas: 13)\n 13531: a1 = u64 [sp + 0x8]\n 13534: a1 = t1 <u a1\n 13537: a2 = a3 ^ t2\n 13540: s1 = a3 <u t2\n 13543: s1 = a1 if a2 == 0\n 13546: a1 = a0 <u t0\n 13549: a2 = a5 ^ a4\n 13552: a4 = a5 <u a4\n 13555: a4 = a1 if a2 == 0\n 13558: a1 = a0 ^ t0\n 13561: a1 = a1 | a2\n 13564: a4 = s1 if a1 == 0\n 13567: jump @541 if a4 != 0\n      : @539 (gas: 7)\n 13570: u64 [sp + 0x50] = t1\n 13573: u64 [sp + 0x58] = a3\n 13576: u64 [sp + 0x60] = a0\n 13579: a0 = 0x40\n 13582: a1 = sp + 0x50\n 13585: u64 [sp + 0x68] = a5\n 13588: ra = 514, jump @19\n      : @540 [@dyn 257] (gas: 6)\n 13594: sp = s0 + 0xffffffffffffff70\n 13598: ra = u64 [sp + 0x88]\n 13602: s0 = u64 [sp + 0x80]\n 13606: s1 = u64 [sp + 0x78]\n 13609: sp = sp + 0x90\n 13613: ret\n      : @541 (gas: 8)\n 13615: u64 [sp + 64] = 0\n 13618: u64 [sp + 56] = 0\n 13621: u64 [sp + 48] = 0\n 13624: a0 = 0x4e487b7100000000\n 13634: a1 = sp + 0x30\n 13637: u64 [sp + 0x48] = a0\n 13640: a0 = 0\n 13642: ra = 516, jump @19\n      : @542 [@dyn 258] (gas: 7)\n 13648: u64 [sp + 40] = 0\n 13651: u64 [sp + 32] = 0\n 13654: u64 [sp + 16] = 0x41\n 13658: a0 = 0x4\n 13661: a1 = sp + 0x10\n 13664: u64 [sp + 24] = 0\n 13667: ra = 518, jump @19\n      : @543 [@dyn 259] (gas: 2)\n 13673: a1 = i32 [0x200bc]\n 13678: jump @545 if a1 >u 63\n      : @544 (gas: 2)\n 13682: u32 [0x200bc] = 0x40\n 13688: fallthrough\n      : @545 (gas: 7)\n 13689: a1 = 0x200d0\n 13694: i32 a1 = a1 + 0\n 13696: a0 = 0x1\n 13699: a2 = 0x24\n 13702: ra = 0x208\n 13706: ecalli 14 // 'seal_return'\n 13708: fallthrough\n      : @546 [@dyn 260] (gas: 22)\n 13709: sp = sp + 0xfffffffffffffee0\n 13713: u64 [sp + 0x118] = ra\n 13717: u64 [sp + 0x110] = s0\n 13721: u64 [sp + 0x108] = s1\n 13725: s0 = sp + 0x120\n 13729: sp = sp & 0xfffffffffffffff0\n 13732: a4 = u64 [a1 + 0x10]\n 13735: a3 = u64 [a1 + 0x18]\n 13738: a5 = u64 [a1 + 0x8]\n 13741: t0 = u64 [a1]\n 13743: u64 [sp + 0x68] = a3\n 13746: u64 [sp + 0x78] = a5\n 13749: a1 = a5 | a3\n 13752: a3 = t0 | a4\n 13755: a3 = a3 | a1\n 13758: a3 = a3 >> 0x20\n 13761: u64 [sp + 0x70] = a4\n 13764: a1 = a1 | a4\n 13767: a1 = a1 << 0x20\n 13770: a1 = a1 | a3\n 13773: u64 [sp + 0x8] = a0\n 13776: jump @561 if a1 != 0\n      : @547 (gas: 15)\n 13780: a0 = u64 [a2 + 0x18]\n 13783: u64 [sp + 0x48] = a0\n 13786: s1 = u64 [a2 + 0x10]\n 13789: a0 = u64 [a2 + 0x8]\n 13792: u64 [sp + 0x50] = a0\n 13795: a0 = u64 [a2]\n 13797: u64 [sp + 0x58] = a0\n 13800: u64 [sp + 248] = 0\n 13804: u64 [sp + 240] = 0\n 13808: u64 [sp + 232] = 0\n 13812: a1 = sp + 0xe0\n 13816: u64 [sp + 224] = 0x20\n 13821: a0 = t0\n 13823: u64 [sp + 0x60] = t0\n 13826: ra = 522, jump @19\n      : @548 [@dyn 261] (gas: 12)\n 13832: a1 = u64 [sp + 0x58]\n 13835: a0 = a1 | s1\n 13838: a2 = u64 [sp + 0x48]\n 13841: a3 = u64 [sp + 0x50]\n 13844: a2 = a2 | a3\n 13847: a0 = a0 | a2\n 13850: a0 = a0 >> 0x20\n 13853: u64 [sp + 0x20] = s1\n 13856: a2 = a2 | s1\n 13859: a2 = a2 << 0x20\n 13862: a0 = a0 | a2\n 13865: jump @561 if a0 != 0\n      : @549 (gas: 2)\n 13869: a0 = sp + 0xc0\n 13873: ra = 524, jump @17\n      : @550 [@dyn 262] (gas: 13)\n 13879: a0 = u64 [sp + 0x70]\n 13882: a1 = u64 [sp + 0x68]\n 13885: a1 = a1 | a0\n 13888: a0 = 0x100000000\n 13898: u64 [sp + 0x10] = a0\n 13901: a0 = 0xffffffe0\n 13911: a2 = u64 [sp + 0x60]\n 13914: a0 = a2 <u a0\n 13917: a3 = u64 [sp + 0x78]\n 13920: a0 = 0 if a3 != 0\n 13922: u64 [sp + 0x18] = a1\n 13925: a0 = 0 if a1 != 0\n 13927: jump @561 if a0 == 0\n      : @551 (gas: 16)\n 13931: a3 = u64 [sp + 0xd8]\n 13935: a4 = u64 [sp + 0xd0]\n 13939: a5 = u64 [sp + 0xc8]\n 13943: a1 = u64 [sp + 0xc0]\n 13947: i32 a0 = a2 + 0x20\n 13950: u64 [sp + 0x28] = a1\n 13953: u64 [sp + 0xa0] = a1\n 13957: u64 [sp + 0x30] = a5\n 13960: u64 [sp + 0xa8] = a5\n 13964: u64 [sp + 0x38] = a4\n 13967: u64 [sp + 0xb0] = a4\n 13971: a1 = sp + 0xa0\n 13975: u64 [sp + 0x40] = a3\n 13978: u64 [sp + 0xb8] = a3\n 13982: s1 = a2\n 13984: ra = 526, jump @19\n      : @552 [@dyn 263] (gas: 8)\n 13990: a0 = u64 [sp + 0x10]\n 13993: a0 = a0 + 0xffffffffffffffc0\n 13996: a0 = s1 <u a0\n 13999: a1 = u64 [sp + 0x78]\n 14002: a0 = 0 if a1 != 0\n 14004: a1 = u64 [sp + 0x18]\n 14007: a0 = 0 if a1 != 0\n 14009: jump @561 if a0 == 0\n      : @553 (gas: 10)\n 14013: a0 = u64 [sp + 0x48]\n 14016: a1 = u64 [sp + 0x20]\n 14019: a0 = a0 | a1\n 14022: a1 = 0xffffffe0\n 14032: a3 = u64 [sp + 0x58]\n 14035: a1 = a3 <u a1\n 14038: a4 = u64 [sp + 0x50]\n 14041: a1 = 0 if a4 != 0\n 14043: a1 = 0 if a0 != 0\n 14045: jump @561 if a1 == 0\n      : @554 (gas: 13)\n 14049: a2 = s1\n 14051: a1 = u64 [sp + 0x28]\n 14054: a5 = u64 [sp + 0x38]\n 14057: a0 = a1 | a5\n 14060: a4 = u64 [sp + 0x40]\n 14063: s1 = u64 [sp + 0x30]\n 14066: a4 = a4 | s1\n 14069: a0 = a0 | a4\n 14072: a0 = a0 >> 0x20\n 14075: a4 = a4 | a5\n 14078: a4 = a4 << 0x20\n 14081: a0 = a0 | a4\n 14084: jump @561 if a0 != 0\n      : @555 (gas: 5)\n 14088: i32 a0 = a2 + 0x40\n 14091: i32 a3 = a3 + 0x20\n 14094: u64 [sp + 0x58] = a3\n 14097: s1 = a1\n 14099: ra = 528, jump @26\n      : @556 [@dyn 264] (gas: 4)\n 14105: u64 [sp + 0x50] = a0\n 14108: a0 = u64 [sp + 0x58]\n 14111: a1 = s1\n 14113: ra = 530, jump @26\n      : @557 [@dyn 265] (gas: 4)\n 14119: a1 = a0\n 14121: a0 = u64 [sp + 0x50]\n 14124: a2 = s1\n 14126: ra = 532, jump @0\n      : @558 [@dyn 266] (gas: 27)\n 14132: a0 = u64 [sp + 0x60]\n 14135: a0 = a0 + s1\n 14138: a1 = a0 <u s1\n 14141: a2 = u64 [sp + 0x78]\n 14144: a4 = u64 [sp + 0x30]\n 14147: a2 = a2 + a4\n 14150: a2 = a2 + a1\n 14153: a3 = a2 ^ a4\n 14156: a4 = a2 <u a4\n 14159: a4 = a1 if a3 == 0\n 14162: a1 = u64 [sp + 0x70]\n 14165: a3 = u64 [sp + 0x38]\n 14168: a1 = a1 + a3\n 14171: a3 = a1 <u a3\n 14174: a5 = u64 [sp + 0x68]\n 14177: s1 = u64 [sp + 0x40]\n 14180: a5 = a5 + s1\n 14183: a3 = a3 + a5\n 14186: a4 = a4 + a1\n 14189: a1 = a4 <u a1\n 14192: a1 = a1 + a3\n 14195: a1 = a1 | a4\n 14198: a3 = 0xffffffc0\n 14208: a3 = a0 <u a3\n 14211: a3 = 0 if a2 != 0\n 14213: a3 = 0 if a1 != 0\n 14215: jump @561 if a3 == 0\n      : @559 (gas: 7)\n 14219: i32 a0 = a0 + 0x40\n 14222: u64 [sp + 152] = 0\n 14226: u64 [sp + 144] = 0\n 14230: u64 [sp + 136] = 0\n 14234: a1 = sp + 0x80\n 14238: u64 [sp + 128] = 0\n 14242: ra = 534, jump @19\n      : @560 [@dyn 267] (gas: 35)\n 14248: s1 = u64 [sp + 0x28]\n 14251: s1 = s1 + 0x1f\n 14254: a0 = 0x1ffffffe0\n 14264: a0 = a0 & s1\n 14267: a1 = u64 [sp + 0x60]\n 14270: a0 = a0 + a1\n 14273: a1 = a0 <u a1\n 14276: a3 = u64 [sp + 0x78]\n 14279: a2 = a3 + a1\n 14282: a3 = a2 <u a3\n 14285: a3 = a1 if a1 == 0\n 14288: a1 = u64 [sp + 0x70]\n 14291: a3 = a3 + a1\n 14294: a1 = a3 <u a1\n 14297: a4 = u64 [sp + 0x68]\n 14300: a1 = a1 + a4\n 14303: a4 = a0 + 0x40\n 14306: a0 = a4 <u a0\n 14309: a5 = a2 + a0\n 14312: a2 = a5 <u a2\n 14315: a2 = a0 if a0 == 0\n 14318: a2 = a2 + a3\n 14321: a0 = a2 <u a3\n 14324: a0 = a0 + a1\n 14327: a1 = u64 [sp + 0x8]\n 14330: u64 [a1] = a4\n 14332: u64 [a1 + 0x8] = a5\n 14335: u64 [a1 + 0x10] = a2\n 14338: u64 [a1 + 0x18] = a0\n 14341: sp = s0 + 0xfffffffffffffee0\n 14345: ra = u64 [sp + 0x118]\n 14349: s0 = u64 [sp + 0x110]\n 14353: s1 = u64 [sp + 0x108]\n 14357: sp = sp + 0x120\n 14361: ret\n      : @561 (gas: 1)\n 14363: trap\n      : @562 [@dyn 268] (gas: 5)\n 14364: a1 = 0x4\n 14367: ra = 0x21a\n 14371: ecalli 3 // 'call_data_load'\n 14373: t0 = 0x21c\n 14377: jump @660\n      : @563 [@dyn 269] (gas: 1)\n 14380: t0 = 540, jump @660\n      : @564 [@dyn 270] (gas: 1)\n 14386: jump @567 if a3 == 0\n      : @565 (gas: 1)\n 14389: t0 = 542, jump @669\n      : @566 [@dyn 271] (gas: 1)\n 14395: ret\n      : @567 (gas: 8)\n 14397: a1 = 0x200d0\n 14402: i32 a1 = a1 + 0\n 14404: a0 = 0x1\n 14407: a2 = 0\n 14409: ra = 0x220\n 14413: ecalli 14 // 'seal_return'\n 14415: t0 = 0x222\n 14419: jump @674\n      : @568 [@dyn 272] (gas: 1)\n 14422: t0 = 546, jump @674\n      : @569 [@dyn 273] (gas: 5)\n 14428: a1 = 0x24\n 14431: ra = 0x224\n 14435: ecalli 3 // 'call_data_load'\n 14437: t0 = 0x226\n 14441: jump @660\n      : @570 [@dyn 274] (gas: 1)\n 14444: t0 = 550, jump @660\n      : @571 [@dyn 275] (gas: 1)\n 14450: jump @574 if a3 == 0\n      : @572 (gas: 1)\n 14453: t0 = 552, jump @669\n      : @573 [@dyn 276] (gas: 1)\n 14459: ret\n      : @574 (gas: 7)\n 14461: a1 = 0x200d0\n 14466: i32 a1 = a1 + 0\n 14468: a0 = 0x1\n 14471: a2 = 0\n 14473: ra = 0x22a\n 14477: ecalli 14 // 'seal_return'\n 14479: fallthrough\n      : @575 [@dyn 277] (gas: 40)\n 14480: sp = sp + 0xfffffffffffffe00\n 14484: u64 [sp + 0x1f8] = ra\n 14488: u64 [sp + 0x1f0] = s0\n 14492: u64 [sp + 0x1e8] = s1\n 14496: s0 = sp + 0x200\n 14500: sp = sp & 0xffffffffffffffe0\n 14503: s1 = sp\n 14505: a3 = u64 [a1 + 0x10]\n 14508: u64 [s1 + 0x98] = a3\n 14512: a3 = u64 [a1 + 0x8]\n 14515: u64 [s1 + 0x90] = a3\n 14519: a1 = u64 [a1]\n 14521: u64 [s1 + 0x88] = a1\n 14525: t0 = u64 [a0]\n 14527: a1 = u64 [a0 + 0x8]\n 14530: a0 = u32 [a0 + 0x10]\n 14533: a4 = u64 [a2 + 0x18]\n 14536: a5 = u64 [a2 + 0x10]\n 14539: a3 = u64 [a2 + 0x8]\n 14542: a2 = u64 [a2]\n 14544: u64 [s1 + 0x28] = a4\n 14547: u64 [s1 + 0x1d8] = a4\n 14551: u64 [s1 + 0x20] = a5\n 14554: u64 [s1 + 0x1d0] = a5\n 14558: u64 [s1 + 0x18] = a3\n 14561: u64 [s1 + 0x1c8] = a3\n 14565: u64 [s1 + 0x10] = a2\n 14568: u64 [s1 + 0x1c0] = a2\n 14572: a2 = 0xffffffff\n 14582: u64 [s1 + 0x78] = a2\n 14585: u64 [s1 + 440] = 0\n 14589: u64 [s1 + 0x30] = a0\n 14592: u64 [s1 + 0x1b0] = a0\n 14596: u64 [s1 + 0x38] = a1\n 14599: u64 [s1 + 0x1a8] = a1\n 14603: a1 = s1 + 0x1a0\n 14607: u64 [s1 + 0x40] = t0\n 14610: u64 [s1 + 0x1a0] = t0\n 14614: a0 = 0\n 14616: ra = 556, jump @19\n      : @576 [@dyn 278] (gas: 7)\n 14622: u64 [s1 + 408] = 0\n 14626: u64 [s1 + 400] = 0\n 14630: u64 [s1 + 384] = 0x2\n 14635: a0 = 0x20\n 14638: a1 = s1 + 0x180\n 14642: u64 [s1 + 392] = 0\n 14646: ra = 558, jump @19\n      : @577 [@dyn 279] (gas: 3)\n 14652: a1 = 0x200bc\n 14657: a0 = i32 [0x200bc]\n 14662: jump @579 if a0 >u 63\n      : @578 (gas: 2)\n 14666: u32 [0x200bc] = 0x40\n 14672: fallthrough\n      : @579 (gas: 45)\n 14673: a0 = sp + 0xffffffffffffffe0\n 14676: a2 = a0 & 0xffffffffffffffe0\n 14679: u64 [s1 + 0x68] = a2\n 14682: sp = a2\n 14684: a0 = 0x200d0\n 14689: i32 a0 = a0 + 0\n 14691: i32 a2 = a2 + 0\n 14693: u64 [s1 + 0x80] = a1\n 14697: a1 = 0x40\n 14700: u64 [s1 + 0x70] = a0\n 14703: ecalli 9 // 'hash_keccak_256'\n 14705: a3 = u64 [s1 + 0x68]\n 14708: a0 = u64 [a3 + 0x18]\n 14711: a1 = u64 [a3 + 0x10]\n 14714: a2 = u64 [a3 + 0x8]\n 14717: a3 = u64 [a3]\n 14719: a0 = reverse a0\n 14721: u64 [s1 + 0x60] = a0\n 14724: a0 = reverse a1\n 14726: u64 [s1 + 0x58] = a0\n 14729: a0 = reverse a2\n 14731: u64 [s1 + 0x50] = a0\n 14734: a0 = reverse a3\n 14736: u64 [s1 + 0x48] = a0\n 14739: a0 = sp + 0xffffffffffffffe0\n 14742: a0 = a0 & 0xffffffffffffffe0\n 14745: u64 [s1 + 0x68] = a0\n 14748: sp = a0\n 14750: a0 = u64 [s1 + 0x88]\n 14754: a0 = a0 & 0xffffffffffffffff\n 14757: a1 = u64 [s1 + 0x90]\n 14761: a1 = a1 & 0xffffffffffffffff\n 14764: a2 = u64 [s1 + 0x98]\n 14768: a3 = u64 [s1 + 0x78]\n 14771: a2 = a2 & a3\n 14774: u64 [s1 + 376] = 0\n 14778: u64 [s1 + 0x78] = a2\n 14781: u64 [s1 + 0x170] = a2\n 14785: u64 [s1 + 0x88] = a1\n 14789: u64 [s1 + 0x168] = a1\n 14793: a1 = s1 + 0x160\n 14797: u64 [s1 + 0x90] = a0\n 14801: u64 [s1 + 0x160] = a0\n 14805: a0 = 0\n 14807: ra = 560, jump @19\n      : @580 [@dyn 280] (gas: 12)\n 14813: a0 = u64 [s1 + 0x48]\n 14816: a3 = s1 + 0x100\n 14820: u64 [a3 + 0x58] = a0\n 14823: a0 = u64 [s1 + 0x50]\n 14826: u64 [a3 + 0x50] = a0\n 14829: a0 = u64 [s1 + 0x58]\n 14832: u64 [a3 + 0x48] = a0\n 14835: a0 = 0x20\n 14838: a1 = s1 + 0x140\n 14842: a2 = u64 [s1 + 0x60]\n 14845: u64 [a3 + 0x40] = a2\n 14848: ra = 562, jump @19\n      : @581 [@dyn 281] (gas: 3)\n 14854: a1 = u64 [s1 + 0x80]\n 14858: a0 = i32 [a1]\n 14860: jump @583 if a0 >u 63\n      : @582 (gas: 2)\n 14864: u32 [a1 + 0] = 0x40\n 14867: fallthrough\n      : @583 (gas: 12)\n 14868: a0 = sp + 0xffffffffffffffe0\n 14871: a0 = a0 & 0xffffffffffffffe0\n 14874: u64 [s1 + 0x98] = a0\n 14878: sp = a0\n 14880: i32 a2 = a0 + 0\n 14882: a1 = 0x40\n 14885: a0 = u64 [s1 + 0x70]\n 14888: ra = 0x234\n 14892: ecalli 9 // 'hash_keccak_256'\n 14894: a3 = u64 [s1 + 0x98]\n 14898: t0 = 0x236\n 14902: jump @667\n      : @584 [@dyn 282] (gas: 2)\n 14905: a3 = u64 [s1 + 0x98]\n 14909: t0 = 566, jump @667\n      : @585 [@dyn 283] (gas: 7)\n 14915: a0 = u64 [s1 + 0x68]\n 14918: u64 [a0 + 0x18] = a3\n 14921: u64 [a0 + 0x10] = a2\n 14924: u64 [a0 + 0x8] = a1\n 14927: u64 [a0] = a4\n 14929: a1 = s1 + 0x1c0\n 14933: ra = 568, jump @22\n      : @586 [@dyn 284] (gas: 3)\n 14939: a0 = s1 + 0x120\n 14943: a1 = 0x40\n 14946: ra = 570, jump @17\n      : @587 [@dyn 285] (gas: 6)\n 14952: a4 = s1 + 0x100\n 14956: a0 = u64 [a4 + 0x38]\n 14959: a1 = u64 [a4 + 0x30]\n 14962: a2 = u64 [a4 + 0x28]\n 14965: a3 = u64 [a4 + 0x20]\n 14968: t0 = 572, jump @650\n      : @588 [@dyn 286] (gas: 1)\n 14974: jump @592 if a0 != 0\n      : @589 (gas: 13)\n 14978: a0 = u64 [s1 + 0x10]\n 14981: a2 = s1 + 0x100\n 14985: u64 [a2] = a0\n 14987: a0 = u64 [s1 + 0x18]\n 14990: u64 [a2 + 0x8] = a0\n 14993: a0 = u64 [s1 + 0x20]\n 14996: u64 [a2 + 0x10] = a0\n 14999: a1 = s1 + 0x100\n 15003: a0 = u64 [s1 + 0x28]\n 15006: u64 [a2 + 0x18] = a0\n 15009: a0 = a3\n 15011: u64 [s1 + 0x98] = a3\n 15015: ra = 574, jump @19\n      : @590 [@dyn 287] (gas: 28)\n 15021: u64 [s1 + 184] = 0\n 15025: a0 = u64 [s1 + 0x78]\n 15028: u64 [s1 + 0xb0] = a0\n 15032: a0 = u64 [s1 + 0x88]\n 15036: u64 [s1 + 0xa8] = a0\n 15040: a0 = u64 [s1 + 0x90]\n 15044: u64 [s1 + 0xa0] = a0\n 15048: u64 [s1 + 216] = 0\n 15052: a0 = u64 [s1 + 0x30]\n 15055: u64 [s1 + 0xd0] = a0\n 15059: a0 = u64 [s1 + 0x38]\n 15062: u64 [s1 + 0xc8] = a0\n 15066: a0 = u64 [0x20078]\n 15071: a1 = u64 [0x20080]\n 15076: a2 = u64 [0x20088]\n 15081: a3 = u64 [s1 + 0x40]\n 15084: u64 [s1 + 0xc0] = a3\n 15088: u64 [s1 + 0xf8] = a0\n 15092: u64 [s1 + 0xf0] = a1\n 15096: u64 [s1 + 0xe8] = a2\n 15100: a0 = u64 [0x20090]\n 15105: a1 = 0x20\n 15108: a2 = s1 + 0xe0\n 15112: a3 = s1 + 0xc0\n 15116: a4 = s1 + 0xa0\n 15120: u64 [s1 + 0xe0] = a0\n 15124: a0 = u64 [s1 + 0x98]\n 15128: ra = 576, jump @23\n      : @591 [@dyn 288] (gas: 6)\n 15134: sp = s0 + 0xfffffffffffffe00\n 15138: ra = u64 [sp + 0x1f8]\n 15142: s0 = u64 [sp + 0x1f0]\n 15146: s1 = u64 [sp + 0x1e8]\n 15150: sp = sp + 0x200\n 15154: ret\n      : @592 (gas: 1)\n 15156: trap\n      : @593 (gas: 30)\n 15157: sp = sp + 0xffffffffffffff80\n 15160: u64 [sp + 0x78] = ra\n 15163: u64 [sp + 0x70] = s0\n 15166: u64 [sp + 0x68] = s1\n 15169: s0 = sp + 0x80\n 15173: sp = sp & 0xfffffffffffffff0\n 15176: a4 = u64 [a2]\n 15178: a3 = u64 [a1]\n 15180: s1 = u64 [a2 + 0x8]\n 15183: t1 = u64 [a1 + 0x8]\n 15186: t2 = u64 [a2 + 0x10]\n 15189: a5 = u64 [a1 + 0x10]\n 15192: a2 = u64 [a2 + 0x18]\n 15195: a1 = u64 [a1 + 0x18]\n 15198: t0 = t1 ^ s1\n 15201: u64 [sp + 0x8] = s1\n 15204: s1 = t1 <u s1\n 15207: u64 [sp + 0x18] = a4\n 15210: u64 [sp + 0x10] = a3\n 15213: a3 = a3 <u a4\n 15216: u64 [sp] = a3\n 15218: s1 = a3 if t0 == 0\n 15221: a3 = a1 ^ a2\n 15224: ra = a1 <u a2\n 15227: t0 = a5 <u t2\n 15230: ra = t0 if a3 == 0\n 15233: a4 = a5 ^ t2\n 15236: a3 = a3 | a4\n 15239: ra = s1 if a3 == 0\n 15242: jump @595 if ra != 0\n      : @594 (gas: 23)\n 15245: a3 = a5 - t2\n 15248: a1 = a1 - a2\n 15251: a1 = a1 - t0\n 15254: a2 = a3 <u s1\n 15257: a1 = a1 - a2\n 15260: a3 = a3 - s1\n 15263: a2 = u64 [sp + 0x8]\n 15266: a2 = t1 - a2\n 15269: a4 = u64 [sp]\n 15271: a2 = a2 - a4\n 15274: a4 = u64 [sp + 0x18]\n 15277: a5 = u64 [sp + 0x10]\n 15280: a4 = a5 - a4\n 15283: u64 [a0] = a4\n 15285: u64 [a0 + 0x8] = a2\n 15288: u64 [a0 + 0x10] = a3\n 15291: u64 [a0 + 0x18] = a1\n 15294: sp = s0 + 0xffffffffffffff80\n 15297: ra = u64 [sp + 0x78]\n 15300: s0 = u64 [sp + 0x70]\n 15303: s1 = u64 [sp + 0x68]\n 15306: sp = sp + 0x80\n 15310: ret\n      : @595 (gas: 8)\n 15312: u64 [sp + 80] = 0\n 15315: u64 [sp + 72] = 0\n 15318: u64 [sp + 64] = 0\n 15321: a0 = 0x4e487b7100000000\n 15331: a1 = sp + 0x40\n 15334: u64 [sp + 0x58] = a0\n 15337: a0 = 0\n 15339: ra = 578, jump @19\n      : @596 [@dyn 289] (gas: 7)\n 15345: u64 [sp + 56] = 0\n 15348: u64 [sp + 48] = 0\n 15351: u64 [sp + 32] = 0x11\n 15355: a0 = 0x4\n 15358: a1 = sp + 0x20\n 15361: u64 [sp + 40] = 0\n 15364: ra = 580, jump @19\n      : @597 [@dyn 290] (gas: 2)\n 15370: a1 = i32 [0x200bc]\n 15375: jump @599 if a1 >u 63\n      : @598 (gas: 2)\n 15379: u32 [0x200bc] = 0x40\n 15385: fallthrough\n      : @599 (gas: 7)\n 15386: a1 = 0x200d0\n 15391: i32 a1 = a1 + 0\n 15393: a0 = 0x1\n 15396: a2 = 0x24\n 15399: ra = 0x246\n 15403: ecalli 14 // 'seal_return'\n 15405: fallthrough\n      : @600 [@dyn 291] (gas: 35)\n 15406: sp = sp + 0xfffffffffffffc40\n 15410: a3 = sp + 0x300\n 15414: u64 [a3 + 0xb8] = ra\n 15418: u64 [a3 + 0xb0] = s0\n 15422: u64 [a3 + 0xa8] = s1\n 15426: s0 = sp + 0x3c0\n 15430: sp = sp & 0xffffffffffffffe0\n 15433: s1 = sp\n 15435: a3 = u64 [a2 + 0x18]\n 15438: u64 [s1 + 0x68] = a3\n 15441: a3 = u64 [a2 + 0x10]\n 15444: u64 [s1 + 0x60] = a3\n 15447: a3 = u64 [a2 + 0x8]\n 15450: u64 [s1 + 0x58] = a3\n 15453: a2 = u64 [a2]\n 15455: u64 [s1 + 0x50] = a2\n 15458: a2 = u64 [a1 + 0x10]\n 15461: u64 [s1 + 0x30] = a2\n 15464: a2 = u64 [a1 + 0x8]\n 15467: u64 [s1 + 0x28] = a2\n 15470: a1 = u64 [a1]\n 15472: u64 [s1 + 0x20] = a1\n 15475: a2 = u64 [a0]\n 15477: a1 = u64 [a0 + 0x8]\n 15480: a0 = u32 [a0 + 0x10]\n 15483: u64 [s1 + 760] = 0\n 15487: u64 [s1 + 0x38] = a0\n 15490: u64 [s1 + 0x2f0] = a0\n 15494: u64 [s1 + 0x40] = a1\n 15497: u64 [s1 + 0x2e8] = a1\n 15501: a1 = s1 + 0x2e0\n 15505: u64 [s1 + 0x48] = a2\n 15508: u64 [s1 + 0x2e0] = a2\n 15512: a0 = 0\n 15514: ra = 584, jump @19\n      : @601 [@dyn 292] (gas: 7)\n 15520: u64 [s1 + 728] = 0\n 15524: u64 [s1 + 720] = 0\n 15528: u64 [s1 + 712] = 0\n 15532: a0 = 0x20\n 15535: a1 = s1 + 0x2c0\n 15539: u64 [s1 + 704] = 0x1\n 15544: ra = 586, jump @19\n      : @602 [@dyn 293] (gas: 3)\n 15550: a1 = 0x200bc\n 15555: a0 = i32 [0x200bc]\n 15560: jump @604 if a0 >u 63\n      : @603 (gas: 2)\n 15564: u32 [0x200bc] = 0x40\n 15570: fallthrough\n      : @604 (gas: 17)\n 15571: a0 = 0xffffffff\n 15581: u64 [s1 + 0x18] = a0\n 15584: a0 = sp + 0xffffffffffffffe0\n 15587: a2 = a0 & 0xffffffffffffffe0\n 15590: u64 [s1 + 0x10] = a2\n 15593: sp = a2\n 15595: a0 = 0x200d0\n 15600: i32 a0 = a0 + 0\n 15602: u64 [s1 + 0x70] = a1\n 15605: i32 a2 = a2 + 0\n 15607: a1 = 0x40\n 15610: u64 [s1 + 0x78] = a0\n 15613: ra = 0x24c\n 15617: ecalli 9 // 'hash_keccak_256'\n 15619: a3 = u64 [s1 + 0x10]\n 15622: t0 = 0x24e\n 15626: jump @668\n      : @605 [@dyn 294] (gas: 2)\n 15629: a3 = u64 [s1 + 0x10]\n 15632: t0 = 590, jump @668\n      : @606 [@dyn 295] (gas: 7)\n 15638: u64 [s1 + 0x338] = a3\n 15642: u64 [s1 + 0x330] = a2\n 15646: u64 [s1 + 0x328] = a1\n 15650: u64 [s1 + 0x320] = a0\n 15654: a0 = s1 + 0x2a0\n 15658: a1 = s1 + 0x320\n 15662: ra = 592, jump @21\n      : @607 [@dyn 296] (gas: 20)\n 15668: a3 = u64 [s1 + 0x2a0]\n 15672: a0 = u64 [s1 + 0x2a8]\n 15676: a1 = u64 [s1 + 0x2b0]\n 15680: a2 = u64 [s1 + 0x2b8]\n 15684: a4 = u64 [s1 + 0x68]\n 15687: u64 [s1 + 0x258] = a4\n 15691: a4 = u64 [s1 + 0x60]\n 15694: u64 [s1 + 0x250] = a4\n 15698: a4 = u64 [s1 + 0x58]\n 15701: u64 [s1 + 0x248] = a4\n 15705: a4 = u64 [s1 + 0x50]\n 15708: u64 [s1 + 0x240] = a4\n 15712: u64 [s1 + 0x278] = a2\n 15716: u64 [s1 + 0x270] = a1\n 15720: u64 [s1 + 0x268] = a0\n 15724: a0 = s1 + 0x280\n 15728: a1 = s1 + 0x260\n 15732: a2 = s1 + 0x240\n 15736: u64 [s1 + 0x260] = a3\n 15740: ra = 594, jump @593\n      : @608 [@dyn 297] (gas: 19)\n 15746: a0 = u64 [s1 + 0x298]\n 15750: a1 = u64 [s1 + 0x290]\n 15754: a2 = u64 [s1 + 0x288]\n 15758: a3 = u64 [s1 + 0x280]\n 15762: a4 = s1 + 0x300\n 15766: u64 [a4 + 0x18] = a0\n 15769: u64 [a4 + 0x10] = a1\n 15772: u64 [a4 + 0x8] = a2\n 15775: u64 [a4] = a3\n 15777: u64 [s1 + 568] = 0\n 15781: a0 = u64 [s1 + 0x38]\n 15784: u64 [s1 + 0x230] = a0\n 15788: a0 = u64 [s1 + 0x40]\n 15791: u64 [s1 + 0x228] = a0\n 15795: a1 = s1 + 0x220\n 15799: a0 = u64 [s1 + 0x48]\n 15802: u64 [s1 + 0x220] = a0\n 15806: a0 = 0\n 15808: ra = 596, jump @19\n      : @609 [@dyn 298] (gas: 7)\n 15814: u64 [s1 + 536] = 0\n 15818: u64 [s1 + 528] = 0\n 15822: u64 [s1 + 512] = 0x1\n 15827: a0 = 0x20\n 15830: a1 = s1 + 0x200\n 15834: u64 [s1 + 520] = 0\n 15838: ra = 598, jump @19\n      : @610 [@dyn 299] (gas: 3)\n 15844: a1 = u64 [s1 + 0x70]\n 15847: a0 = i32 [a1]\n 15849: jump @612 if a0 >u 63\n      : @611 (gas: 2)\n 15853: u32 [a1 + 0] = 0x40\n 15856: fallthrough\n      : @612 (gas: 12)\n 15857: a0 = sp + 0xffffffffffffffe0\n 15860: a0 = a0 & 0xffffffffffffffe0\n 15863: u64 [s1 + 0x10] = a0\n 15866: sp = a0\n 15868: i32 a2 = a0 + 0\n 15870: a1 = 0x40\n 15873: a0 = u64 [s1 + 0x78]\n 15876: ra = 0x258\n 15880: ecalli 9 // 'hash_keccak_256'\n 15882: a3 = u64 [s1 + 0x10]\n 15885: t0 = 0x25a\n 15889: jump @651\n      : @613 [@dyn 300] (gas: 2)\n 15892: a3 = u64 [s1 + 0x10]\n 15895: t0 = 602, jump @651\n      : @614 [@dyn 301] (gas: 7)\n 15901: u64 [a4 + 0x58] = a3\n 15904: u64 [a4 + 0x50] = a2\n 15907: u64 [a4 + 0x48] = a1\n 15910: u64 [a4 + 0x40] = a0\n 15913: a0 = s1 + 0x340\n 15917: a1 = s1 + 0x300\n 15921: ra = 604, jump @22\n      : @615 [@dyn 302] (gas: 17)\n 15927: a0 = u64 [s1 + 0x20]\n 15930: a0 = a0 & 0xffffffffffffffff\n 15933: a1 = u64 [s1 + 0x28]\n 15936: a1 = a1 & 0xffffffffffffffff\n 15939: a2 = u64 [s1 + 0x30]\n 15942: a3 = u64 [s1 + 0x18]\n 15945: a2 = a2 & a3\n 15948: u64 [s1 + 504] = 0\n 15952: u64 [s1 + 0x20] = a2\n 15955: u64 [s1 + 0x1f0] = a2\n 15959: u64 [s1 + 0x28] = a1\n 15962: u64 [s1 + 0x1e8] = a1\n 15966: a1 = s1 + 0x1e0\n 15970: u64 [s1 + 0x30] = a0\n 15973: u64 [s1 + 0x1e0] = a0\n 15977: a0 = 0\n 15979: ra = 606, jump @19\n      : @616 [@dyn 303] (gas: 7)\n 15985: u64 [s1 + 472] = 0\n 15989: u64 [s1 + 464] = 0\n 15993: u64 [s1 + 448] = 0x1\n 15998: a0 = 0x20\n 16001: a1 = s1 + 0x1c0\n 16005: u64 [s1 + 456] = 0\n 16009: ra = 608, jump @19\n      : @617 [@dyn 304] (gas: 3)\n 16015: a1 = u64 [s1 + 0x70]\n 16018: a0 = i32 [a1]\n 16020: jump @619 if a0 >=u 64\n      : @618 (gas: 2)\n 16024: u32 [a1 + 0] = 0x40\n 16027: fallthrough\n      : @619 (gas: 12)\n 16028: a0 = sp + 0xffffffffffffffe0\n 16031: a0 = a0 & 0xffffffffffffffe0\n 16034: u64 [s1 + 0x18] = a0\n 16037: sp = a0\n 16039: i32 a2 = a0 + 0\n 16041: a1 = 0x40\n 16044: a0 = u64 [s1 + 0x78]\n 16047: ra = 0x262\n 16051: ecalli 9 // 'hash_keccak_256'\n 16053: a3 = u64 [s1 + 0x18]\n 16056: t0 = 0x264\n 16060: jump @651\n      : @620 [@dyn 305] (gas: 2)\n 16063: a3 = u64 [s1 + 0x18]\n 16066: t0 = 612, jump @651\n      : @621 [@dyn 306] (gas: 7)\n 16072: u64 [a4 + 0x78] = a3\n 16075: u64 [a4 + 0x70] = a2\n 16078: u64 [a4 + 0x68] = a1\n 16081: u64 [a4 + 0x60] = a0\n 16084: a0 = s1 + 0x1a0\n 16088: a1 = s1 + 0x360\n 16092: ra = 614, jump @21\n      : @622 [@dyn 307] (gas: 41)\n 16098: t2 = u64 [s1 + 0x1b8]\n 16102: a2 = s1 + 0x100\n 16106: a0 = u64 [a2 + 0xb0]\n 16110: a1 = u64 [a2 + 0xa0]\n 16114: a4 = u64 [a2 + 0xa8]\n 16118: a2 = sp + 0xffffffffffffffe0\n 16121: a3 = a2 & 0xffffffffffffffe0\n 16124: sp = a3\n 16126: a5 = u64 [s1 + 0x58]\n 16129: a5 = a5 + a4\n 16132: t0 = u64 [s1 + 0x50]\n 16135: t0 = t0 + a1\n 16138: u64 [s1 + 0x18] = t0\n 16141: a1 = t0 <u a1\n 16144: ra = a5 + a1\n 16147: a2 = ra ^ a4\n 16150: t0 = ra <u a4\n 16153: t0 = a1 if a2 == 0\n 16156: a2 = u64 [s1 + 0x60]\n 16159: a2 = a2 + a0\n 16162: a4 = a2 + t0\n 16165: t1 = a4 <u a2\n 16168: a1 = u64 [s1 + 0x68]\n 16171: a1 = a1 + t2\n 16174: a2 = a2 <u a0\n 16177: a1 = a1 + a2\n 16180: a1 = a1 + t1\n 16183: t1 = a4 <u a0\n 16186: a2 = t2 ^ a1\n 16189: a5 = a1 <u t2\n 16192: a5 = t1 if a2 == 0\n 16195: a0 = a0 ^ a4\n 16198: a0 = a0 | a2\n 16201: a5 = t0 if a0 == 0\n 16204: u64 [a3 + 0x10] = a4\n 16207: u64 [a3 + 0x8] = ra\n 16210: a0 = u64 [s1 + 0x18]\n 16213: u64 [a3] = a0\n 16215: u64 [s1 + 0x18] = a3\n 16218: u64 [a3 + 0x18] = a1\n 16221: jump @637 if a5 != 0\n      : @623 (gas: 10)\n 16225: u64 [s1 + 408] = 0\n 16229: a0 = u64 [s1 + 0x30]\n 16232: u64 [s1 + 0x180] = a0\n 16236: a0 = u64 [s1 + 0x28]\n 16239: u64 [s1 + 0x188] = a0\n 16243: a1 = s1 + 0x180\n 16247: a0 = u64 [s1 + 0x20]\n 16250: u64 [s1 + 0x190] = a0\n 16254: a0 = 0\n 16256: ra = 616, jump @19\n      : @624 [@dyn 308] (gas: 7)\n 16262: u64 [s1 + 376] = 0\n 16266: u64 [s1 + 368] = 0\n 16270: u64 [s1 + 352] = 0x1\n 16275: a0 = 0x20\n 16278: a1 = s1 + 0x160\n 16282: u64 [s1 + 360] = 0\n 16286: ra = 618, jump @19\n      : @625 [@dyn 309] (gas: 3)\n 16292: a2 = u64 [s1 + 0x70]\n 16295: a0 = i32 [a2]\n 16297: jump @627 if a0 >u 63\n      : @626 (gas: 2)\n 16301: u32 [a2 + 0] = 0x40\n 16304: fallthrough\n      : @627 (gas: 12)\n 16305: a0 = sp + 0xffffffffffffffe0\n 16308: a0 = a0 & 0xffffffffffffffe0\n 16311: u64 [s1 + 0x70] = a0\n 16314: sp = a0\n 16316: i32 a2 = a0 + 0\n 16318: a1 = 0x40\n 16321: a0 = u64 [s1 + 0x78]\n 16324: ra = 0x26c\n 16328: ecalli 9 // 'hash_keccak_256'\n 16330: a3 = u64 [s1 + 0x70]\n 16333: t0 = 0x26e\n 16337: jump @651\n      : @628 [@dyn 310] (gas: 2)\n 16340: a3 = u64 [s1 + 0x70]\n 16343: t0 = 622, jump @651\n      : @629 [@dyn 311] (gas: 7)\n 16349: u64 [a4 + 0x98] = a3\n 16353: u64 [a4 + 0x90] = a2\n 16357: u64 [a4 + 0x88] = a1\n 16361: u64 [a4 + 0x80] = a0\n 16365: a0 = s1 + 0x380\n 16369: a1 = u64 [s1 + 0x18]\n 16372: ra = 624, jump @22\n      : @630 [@dyn 312] (gas: 3)\n 16378: a0 = s1 + 0x140\n 16382: a1 = 0x40\n 16385: ra = 626, jump @17\n      : @631 [@dyn 313] (gas: 6)\n 16391: a4 = s1 + 0x100\n 16395: a0 = u64 [a4 + 0x58]\n 16398: a1 = u64 [a4 + 0x50]\n 16401: a2 = u64 [a4 + 0x48]\n 16404: a3 = u64 [a4 + 0x40]\n 16407: t0 = 628, jump @650\n      : @632 [@dyn 314] (gas: 1)\n 16413: jump @636 if a0 != 0\n      : @633 (gas: 12)\n 16417: a0 = u64 [s1 + 0x50]\n 16420: u64 [s1 + 0x120] = a0\n 16424: a0 = u64 [s1 + 0x58]\n 16427: u64 [s1 + 0x128] = a0\n 16431: a0 = u64 [s1 + 0x60]\n 16434: u64 [s1 + 0x130] = a0\n 16438: a1 = s1 + 0x120\n 16442: a0 = u64 [s1 + 0x68]\n 16445: u64 [s1 + 0x138] = a0\n 16449: a0 = a3\n 16451: u64 [s1 + 0x78] = a3\n 16454: ra = 630, jump @19\n      : @634 [@dyn 315] (gas: 29)\n 16460: u64 [s1 + 216] = 0\n 16464: a0 = u64 [s1 + 0x20]\n 16467: u64 [s1 + 0xd0] = a0\n 16471: a0 = u64 [s1 + 0x28]\n 16474: u64 [s1 + 0xc8] = a0\n 16478: a0 = u64 [s1 + 0x30]\n 16481: u64 [s1 + 0xc0] = a0\n 16485: u64 [s1 + 248] = 0\n 16489: a0 = u64 [s1 + 0x38]\n 16492: u64 [s1 + 0xf0] = a0\n 16496: a0 = u64 [s1 + 0x40]\n 16499: u64 [s1 + 0xe8] = a0\n 16503: a0 = u64 [0x20098]\n 16508: a1 = u64 [0x200a0]\n 16513: a2 = u64 [0x200a8]\n 16518: a3 = u64 [s1 + 0x48]\n 16521: u64 [s1 + 0xe0] = a3\n 16525: a5 = s1 + 0x100\n 16529: u64 [a5 + 0x18] = a0\n 16532: u64 [a5 + 0x10] = a1\n 16535: u64 [a5 + 0x8] = a2\n 16538: a0 = u64 [0x200b0]\n 16543: a1 = 0x20\n 16546: a2 = s1 + 0x100\n 16550: a3 = s1 + 0xe0\n 16554: a4 = s1 + 0xc0\n 16558: u64 [a5] = a0\n 16560: a0 = u64 [s1 + 0x78]\n 16563: ra = 632, jump @23\n      : @635 [@dyn 316] (gas: 7)\n 16569: sp = s0 + 0xfffffffffffffc40\n 16573: a0 = sp + 0x300\n 16577: ra = u64 [a0 + 0xb8]\n 16581: s0 = u64 [a0 + 0xb0]\n 16585: s1 = u64 [a0 + 0xa8]\n 16589: sp = sp + 0x3c0\n 16593: ret\n      : @636 (gas: 1)\n 16595: trap\n      : @637 (gas: 8)\n 16596: u64 [s1 + 176] = 0\n 16600: u64 [s1 + 168] = 0\n 16604: u64 [s1 + 160] = 0\n 16608: a0 = 0x4e487b7100000000\n 16618: a1 = s1 + 0xa0\n 16622: u64 [s1 + 0xb8] = a0\n 16626: a0 = 0\n 16628: ra = 634, jump @19\n      : @638 [@dyn 317] (gas: 7)\n 16634: u64 [s1 + 152] = 0\n 16638: u64 [s1 + 144] = 0\n 16642: u64 [s1 + 128] = 0x11\n 16647: a0 = 0x4\n 16650: a1 = s1 + 0x80\n 16654: u64 [s1 + 136] = 0\n 16658: ra = 636, jump @19\n      : @639 [@dyn 318] (gas: 3)\n 16664: a0 = u64 [s1 + 0x70]\n 16667: a0 = i32 [a0]\n 16669: jump @641 if a0 >u 63\n      : @640 (gas: 3)\n 16673: a1 = u64 [s1 + 0x70]\n 16676: u32 [a1 + 0] = 0x40\n 16679: fallthrough\n      : @641 (gas: 7)\n 16680: a0 = 0x1\n 16683: a2 = 0x24\n 16686: a1 = u64 [s1 + 0x78]\n 16689: ecalli 14 // 'seal_return'\n 16691: a0 = 0\n 16693: ra = 0x27e\n 16697: jump @32\n      : @642 [export #0: 'call'] (gas: 2)\n 16700: a0 = 0\n 16702: ra = 638, jump @32\n      : @643 [@dyn 319] [export #1: 'deploy'] (gas: 2)\n 16708: a0 = 0x1\n 16711: ra = 640, jump @32\n      : @644 [@dyn 320] (gas: 24)\n 16717: sp = sp + 0xffffffffffffffb0\n 16720: u64 [sp + 0x48] = ra\n 16723: u64 [sp + 0x40] = s0\n 16726: s0 = sp + 0x50\n 16729: sp = sp & 0xfffffffffffffff0\n 16732: t0 = u64 [a0]\n 16734: t1 = u64 [a0 + 0x8]\n 16737: a4 = u64 [a0 + 0x10]\n 16740: a0 = u64 [a0 + 0x18]\n 16743: a5 = u64 [a1]\n 16745: a2 = u64 [a1 + 0x8]\n 16748: a3 = u64 [a1 + 0x10]\n 16751: a1 = u64 [a1 + 0x18]\n 16754: u64 [sp + 0x18] = a1\n 16757: u64 [sp + 0x10] = a3\n 16760: u64 [sp + 0x8] = a2\n 16763: u64 [sp] = a5\n 16765: u64 [sp + 0x38] = a0\n 16768: u64 [sp + 0x30] = a4\n 16771: u64 [sp + 0x28] = t1\n 16774: a0 = sp + 0x20\n 16777: a1 = sp\n 16779: u64 [sp + 0x20] = t0\n 16782: ra = 642, jump @537\n      : @645 [@dyn 321] (gas: 5)\n 16788: sp = s0 + 0xffffffffffffffb0\n 16791: ra = u64 [sp + 0x48]\n 16794: s0 = u64 [sp + 0x40]\n 16797: sp = sp + 0x50\n 16800: ret\n      : @646 (gas: 16)\n 16802: a1 = a0 <u a1\n 16805: a2 = a3 + a1\n 16808: a3 = a2 <u a3\n 16811: a3 = a1 if a1 == 0\n 16814: a3 = a3 + a4\n 16817: a1 = a3 <u a4\n 16820: a4 = u64 [s1 + 0x80]\n 16824: a1 = a1 + a4\n 16827: a4 = a0 | a3\n 16830: a1 = a1 | a2\n 16833: a4 = a4 | a1\n 16836: a4 = a4 >> 0x20\n 16839: a1 = a1 | a3\n 16842: a1 = a1 << 0x20\n 16845: a1 = a1 | a4\n 16848: jump [t0]\n      : @647 (gas: 16)\n 16850: a1 = a0 <u a1\n 16853: a2 = a3 + a1\n 16856: a3 = a2 <u a3\n 16859: a3 = a1 if a1 == 0\n 16862: a3 = a3 + a4\n 16865: a1 = a3 <u a4\n 16868: a4 = u64 [s1 + 0x68]\n 16871: a1 = a1 + a4\n 16874: a4 = a0 | a3\n 16877: a1 = a1 | a2\n 16880: a4 = a4 | a1\n 16883: a4 = a4 >> 0x20\n 16886: a1 = a1 | a3\n 16889: a1 = a1 << 0x20\n 16892: a1 = a1 | a4\n 16895: jump [t0]\n      : @648 (gas: 15)\n 16897: a2 = u64 [s1 + 0x110]\n 16901: a0 = u64 [a2 + 0x8]\n 16904: a1 = i32 [a2 + 0x10]\n 16907: a2 = u64 [a2]\n 16909: a0 = reverse a0\n 16911: a3 = a0 << 0x20\n 16914: a1 = reverse a1\n 16916: a1 = a1 >> 0x20\n 16919: a3 = a3 | a1\n 16922: a0 = a0 >> 0x20\n 16925: a1 = reverse a2\n 16927: a2 = a1 << 0x20\n 16930: a0 = a0 | a2\n 16933: a1 = a1 >> 0x20\n 16936: jump [t0]\n      : @649 (gas: 9)\n 16938: a0 = u64 [a3 + 0x18]\n 16941: a1 = u64 [a3 + 0x10]\n 16944: a2 = u64 [a3 + 0x8]\n 16947: a3 = u64 [a3]\n 16949: a0 = reverse a0\n 16951: a4 = reverse a1\n 16953: a2 = reverse a2\n 16955: a3 = reverse a3\n 16957: jump [t0]\n      : @650 (gas: 8)\n 16959: a0 = a0 | a2\n 16962: a2 = a3 | a1\n 16965: a2 = a2 | a0\n 16968: a2 = a2 >> 0x20\n 16971: a0 = a0 | a1\n 16974: a0 = a0 << 0x20\n 16977: a0 = a0 | a2\n 16980: jump [t0]\n      : @651 (gas: 10)\n 16982: a0 = u64 [a3 + 0x18]\n 16985: a1 = u64 [a3 + 0x10]\n 16988: a2 = u64 [a3 + 0x8]\n 16991: a3 = u64 [a3]\n 16993: a0 = reverse a0\n 16995: a1 = reverse a1\n 16997: a2 = reverse a2\n 16999: a3 = reverse a3\n 17001: a4 = s1 + 0x300\n 17005: jump [t0]\n      : @652 (gas: 18)\n 17007: a1 = a0 <u a1\n 17010: a3 = u64 [a5 + 0x30]\n 17013: a2 = a3 + a1\n 17016: a3 = a2 <u a3\n 17019: a3 = a1 if a1 == 0\n 17022: a1 = u64 [a5 + 0x18]\n 17025: a3 = a3 + a1\n 17028: a1 = a3 <u a1\n 17031: a4 = u64 [a5 + 0x20]\n 17034: a1 = a1 + a4\n 17037: a4 = a0 | a3\n 17040: a1 = a1 | a2\n 17043: a4 = a4 | a1\n 17046: a4 = a4 >> 0x20\n 17049: a1 = a1 | a3\n 17052: a1 = a1 << 0x20\n 17055: a1 = a1 | a4\n 17058: jump [t0]\n      : @653 (gas: 9)\n 17060: a0 = reverse a1\n 17062: u64 [s1 + 0xa0] = a0\n 17066: a0 = reverse a2\n 17068: u64 [s1 + 0x98] = a0\n 17072: a0 = reverse a3\n 17074: u64 [s1 + 0x90] = a0\n 17078: a0 = sp + 0xffffffffffffffe0\n 17081: a0 = a0 & 0xffffffffffffffe0\n 17084: jump [t0]\n      : @654 (gas: 15)\n 17086: a2 = u64 [s1 + 0xf8]\n 17090: a0 = u64 [a2 + 0x8]\n 17093: a1 = i32 [a2 + 0x10]\n 17096: a2 = u64 [a2]\n 17098: a0 = reverse a0\n 17100: a3 = a0 << 0x20\n 17103: a1 = reverse a1\n 17105: a1 = a1 >> 0x20\n 17108: a1 = a1 | a3\n 17111: a0 = a0 >> 0x20\n 17114: a2 = reverse a2\n 17116: a3 = a2 << 0x20\n 17119: a0 = a0 | a3\n 17122: a2 = a2 >> 0x20\n 17125: jump [t0]\n      : @655 (gas: 11)\n 17127: a3 = u64 [s1 + 0x138]\n 17131: a0 = u64 [a3 + 0x18]\n 17134: a1 = u64 [a3 + 0x10]\n 17137: a2 = u64 [a3 + 0x8]\n 17140: a3 = u64 [a3]\n 17142: a0 = reverse a0\n 17144: a1 = reverse a1\n 17146: a2 = reverse a2\n 17148: a3 = reverse a3\n 17150: a4 = s1 + 0x10b8\n 17154: jump [t0]\n      : @656 (gas: 11)\n 17156: a3 = s1 + 0x100\n 17160: a0 = u64 [a3 + 0x28]\n 17163: a1 = u64 [a3 + 0x20]\n 17166: a0 = a0 | a1\n 17169: a1 = 0xffffffe0\n 17179: a2 = u64 [a3 + 0x38]\n 17182: a1 = a2 <u a1\n 17185: a2 = u64 [a3 + 0x30]\n 17188: a1 = 0 if a2 != 0\n 17190: a1 = 0 if a0 != 0\n 17192: jump [t0]\n      : @657 (gas: 8)\n 17194: a0 = a0 | a2\n 17197: a2 = a1 | a3\n 17200: a2 = a2 | a0\n 17203: a2 = a2 >> 0x20\n 17206: a0 = a0 | a3\n 17209: a0 = a0 << 0x20\n 17212: a0 = a0 | a2\n 17215: jump [t0]\n      : @658 (gas: 8)\n 17217: a3 = a3 | a2\n 17220: a2 = a0 | a1\n 17223: a2 = a2 | a3\n 17226: a2 = a2 >> 0x20\n 17229: a1 = a1 | a3\n 17232: a1 = a1 << 0x20\n 17235: a1 = a1 | a2\n 17238: jump [t0]\n      : @659 (gas: 5)\n 17240: sp = a0\n 17242: i32 a2 = a0 + 0\n 17244: a1 = 0x40\n 17247: a0 = u64 [s1 + 0x120]\n 17251: jump [t0]\n      : @660 (gas: 10)\n 17253: a0 = u64 [sp + 0x10]\n 17256: a1 = u64 [sp + 0x18]\n 17259: a2 = 0x100000000\n 17269: a2 = a2 ^ a0\n 17272: a2 = a2 | a1\n 17275: a3 = a0 >> 0x20\n 17278: a3 = a3 <u 0x1\n 17281: a3 = 0 if a1 != 0\n 17283: a3 = 0 if a2 == 0\n 17285: jump [t0]\n      : @661 (gas: 10)\n 17287: a0 = u64 [s1 + 0x68]\n 17290: a1 = u64 [s1 + 0x60]\n 17293: a0 = a0 | a1\n 17296: a1 = 0xffffffe0\n 17306: a2 = u64 [s1 + 0x78]\n 17309: a1 = a2 <u a1\n 17312: a2 = u64 [s1 + 0x70]\n 17315: a1 = 0 if a2 != 0\n 17317: a1 = 0 if a0 != 0\n 17319: jump [t0]\n      : @662 (gas: 13)\n 17321: a1 = s1 + 0x100\n 17325: a4 = u64 [a1 + 0x8]\n 17328: a2 = u64 [a1]\n 17330: a0 = u64 [a1 + 0x18]\n 17333: a0 = a0 | a4\n 17336: a3 = u64 [a1 + 0x10]\n 17339: a1 = a2 | a3\n 17342: a1 = a1 | a0\n 17345: a1 = a1 >> 0x20\n 17348: a0 = a0 | a3\n 17351: a0 = a0 << 0x20\n 17354: a0 = a0 | a1\n 17357: jump [t0]\n      : @663 (gas: 8)\n 17359: a1 = sp + 0xffffffffffffffe0\n 17362: a2 = a1 & 0xffffffffffffffe0\n 17365: u64 [s1 + 0x70] = a2\n 17368: sp = a2\n 17370: i32 a0 = a0 + 0\n 17372: a1 = i32 [s1 + 0x78]\n 17375: i32 a2 = a2 + 0\n 17377: jump [t0]\n      : @664 (gas: 4)\n 17379: a0 = 0x10b8\n 17383: a3 = s1 + a0\n 17386: a4 = a3 + 0x300\n 17390: jump [t0]\n      : @665 (gas: 4)\n 17392: a0 = 0x10b8\n 17396: a3 = s1 + a0\n 17399: a4 = a3 + 0x200\n 17403: jump [t0]\n      : @666 (gas: 13)\n 17405: a3 = s1 + 0x100\n 17409: a0 = u64 [a3 + 0x20]\n 17412: a1 = u64 [a3 + 0x30]\n 17415: a0 = a0 | a1\n 17418: a2 = u64 [a3 + 0x28]\n 17421: a1 = u64 [a3 + 0x38]\n 17424: a1 = a1 | a2\n 17427: a1 = a1 | a0\n 17430: a1 = a1 >> 0x20\n 17433: a0 = a0 | a2\n 17436: a0 = a0 << 0x20\n 17439: a0 = a0 | a1\n 17442: jump [t0]\n      : @667 (gas: 9)\n 17444: a0 = u64 [a3 + 0x18]\n 17447: a1 = u64 [a3 + 0x10]\n 17450: a2 = u64 [a3 + 0x8]\n 17453: a3 = u64 [a3]\n 17455: a4 = reverse a0\n 17457: a1 = reverse a1\n 17459: a2 = reverse a2\n 17461: a3 = reverse a3\n 17463: jump [t0]\n      : @668 (gas: 9)\n 17465: a0 = u64 [a3 + 0x18]\n 17468: a1 = u64 [a3 + 0x10]\n 17471: a2 = u64 [a3 + 0x8]\n 17474: a3 = u64 [a3]\n 17476: a0 = reverse a0\n 17478: a1 = reverse a1\n 17480: a2 = reverse a2\n 17482: a3 = reverse a3\n 17484: jump [t0]\n      : @669 (gas: 12)\n 17486: a2 = u64 [sp]\n 17488: a3 = u64 [sp + 0x8]\n 17491: u64 [s1] = a2\n 17493: u64 [s1 + 0x8] = a3\n 17496: u64 [s1 + 0x10] = a0\n 17499: u64 [s1 + 0x18] = a1\n 17502: sp = s0 + 0xffffffffffffffc0\n 17505: ra = u64 [sp + 0x38]\n 17508: s0 = u64 [sp + 0x30]\n 17511: s1 = u64 [sp + 0x28]\n 17514: sp = sp + 0x40\n 17517: jump [t0]\n      : @670 (gas: 12)\n 17519: a0 = u64 [s1 + 0x68]\n 17522: a1 = u64 [s1 + 0x70]\n 17525: a0 = a0 | a1\n 17528: a2 = u64 [s1 + 0x60]\n 17531: a1 = u64 [s1 + 0x78]\n 17534: a1 = a1 | a2\n 17537: a1 = a1 | a0\n 17540: a1 = a1 >> 0x20\n 17543: a0 = a0 | a2\n 17546: a0 = a0 << 0x20\n 17549: a0 = a0 | a1\n 17552: jump [t0]\n      : @671 (gas: 8)\n 17554: a1 = sp + 0xffffffffffffffe0\n 17557: a2 = a1 & 0xffffffffffffffe0\n 17560: u64 [s1 + 0x130] = a2\n 17564: sp = a2\n 17566: i32 a0 = a0 + 0\n 17568: a1 = i32 [s1 + 0x138]\n 17572: i32 a2 = a2 + 0\n 17574: jump [t0]\n      : @672 (gas: 8)\n 17576: a0 = u64 [a4 + 0x58]\n 17579: a1 = u64 [a4 + 0x60]\n 17582: a2 = u64 [a4 + 0x50]\n 17585: a3 = u64 [a4 + 0x48]\n 17588: a1 = a1 | a2\n 17591: a0 = a0 | a3\n 17594: a0 = a0 | a1\n 17597: jump [t0]\n      : @673 (gas: 8)\n 17599: a0 = u64 [a4 + 0x78]\n 17602: a1 = u64 [a4 + 0x80]\n 17606: a2 = u64 [a4 + 0x70]\n 17609: a3 = u64 [a4 + 0x68]\n 17612: a1 = a1 | a2\n 17615: a0 = a0 | a3\n 17618: a0 = a0 | a1\n 17621: jump [t0]\n      : @674 (gas: 9)\n 17623: sp = sp + 0xffffffffffffffc0\n 17626: u64 [sp + 0x38] = ra\n 17629: u64 [sp + 0x30] = s0\n 17632: u64 [sp + 0x28] = s1\n 17635: s0 = sp + 0x40\n 17638: sp = sp & 0xffffffffffffffe0\n 17641: s1 = a0\n 17643: i32 a0 = sp + 0\n 17645: jump [t0]\n",
            "bytecode": {
              "object": "50564d00001f52000000000000010700c1f000c000800380b82070617773696e553dfeb89bc6c3738b79cc59f74ccc2e51cafa0f9b177b9f230f40392b525da7a97fb9b112aeed716e1010ef0f37601f4d4a112601aefaa25fc926615d84649c165670617773696e554c41564e49203a32414e4749535f44495249505845203a32000032562d494e552070617773696e555b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af52804811c1200000000070000000b0000001900000027000000350000003b00000043000000500000005b0000006a0000006d0000007a0000008a0000009a000000a5000000b7000000c20000006164647265737363616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636861696e5f69646465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235366e6f777265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c03c410463616c6cc04441066465706c6f7906c01550814102c0ef449b00e30100040804de0429056105a505e905ee050f061406490655066e067d068206aa06f306f80619071e074e075a07730782078707af073208430878088908ba08c408d6080709160928096c09ac09e709f309080a160a1b0a290a310a630a6f0a840aa70abc0acd0af20a850b8a0bc90bfc0b190c4c0c510c720c9e0cb80c0e0d1c0d3c0d850d8b0db00db60dec0df90d5b0e610eb80ebe0ec40ee40efe0e660f6c0f720f9a0f131019108e109f1066119311a91105120b12111231124b12e1120e1324137f1385138b13af130e14141445144b148314941404150a158d15c315c91502163116b216d0160c17271749174f176b179c17ba17cb17d517ee173818561874187b189618ad18b318cf18fc181a192b1935195a19ab19f219101a2e1a351a501a671a6d1a891ab61ad41ae51aef1a081b771b841b9e1be31bf11b231c4e1c571c971ca01cc01c631d931dc71dd11dea1df31d1c1ed31e3f1f451fa21faf1fc91f24202a2068209d20cf213e22a422ee2250235d2397239d23da231024422477247d249e24de2404254b2558258b25e6250e2661266b268426f02601279427a827e127f52746285b289928ae28e828fd2837298929da29ec290e2a202a262a582ae12af12a2b2b3b2b7f2bd32b242c362c7d2c832cb52c402da92d1c2e932ebb2efb2e942ff12f6a30d0301c319631053261338d332d34433453341a35503569358d3508363736a636193727373437a8371c382c3832383b3856385c386c3872387b3890381e393c39dd39063a393a433a5b3a683a7e3aad3a1e3bf13b0a3c2e3ca03cbe3c0d3d163d343d823dc63de43d143e1d3e373e713e8f3ebf3ec83ee23e863fa43fd43fdd3ffa3f07401d404c40b940fa40184144414d419441aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f032003908c0000251083d0a3307f0000383770a0f28300a9511f07b10087b15648964753308206497501002f9037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004b1026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a08821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a109551a08210588215509511603200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020682ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b1910491138203300082892007b18385010088c006f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a07955120ff8210d8008215d0008216c8009511e00032008b7910520931c8780883881f8488e05638000001253309bc0002390abc0002ae8a093d08bc0002013308d000028377c887073200009511f07b10087b158475010a04013d07b8000251050750100a4f33000c951108f8951700077b70f0007b75e8007b76e0009515f807951100f89511b8f98411e064169569b81049294001492938014929280180003307409568e0114929300133006a2899fc9511e0fb951700047b70187b75107b7608951520048411e064164926780349267003492668034926600380003307409568600350100e63fc49269803492690034926880349268003836780030a1101956b000382b7900082b8980082b9880082ba8000d49808d4a707d487075207f30495674003330840501010e5fa956c000382c8587b686882c9507b696082cb487b6b7082ca407b6a78492618034926100349260803490c407bc8387bc9307bcb2895672003956800037bca205010126f2e501214863e520799044926f8024926f0024926e8029568e0024926e0020a826778501016b5fb501218783d510873048267788377203a080000024926c8024926c0027b68d802140900000000000032569568c0027b69d0027b677050101a7bfb9567a00282687850101c35fa956b000282b7b80082bab00082b9a80082b8a00050121ec13c520719048267707b687850102017fe501222523d0a098268708287187b67588287107b67508287087b674882877b674095678002330840501024e0f9956c000282c798007b676882c890007b686082ca88007b6a7082c980007b6978492658024926500249264802491c40407bc7787bc8707bca6895676002956840027bc960501026652d5012287c3d52078f0349263802492630024926280295682002492620020182677850102aabfa50122c6e3c5108690382677883772049261002492608024926000214090000000000000031956800027b6918027b677050102e76fa9567e00182687850103030f9956b000182b7f80082baf00082b9e80082b8e000501232bc3b520714038267707b687850103412fd5012364d3c0a098268708287187b67388287107b67308287087b672882877b67209567c001330840501038dbf88262c0018263d8018264c801826cd001952b20d82b07c87408d84809da7709c8c909d8c907c83707d49b0ad48707d47a0a98aa20d49707977720d4a70752079b023a07080002956a00017ba7b8003a071000023a081800023a092000027ba7b0007ba8a8009568a0017ba9a0007b6b1864b77b62787b64707b63687b6c6050103a92f9826b60826a7082687895874050123c9439520844028268406f898268486f88826a506faa826b586fbb956c00017bcb80007bca88007bc89000956880017bc9980050103e4cf9826b60826a708268789587605012404e395208fe018268206f898268286f88826a306faa826b386fbb956c00017bcb607bca687bc870956860017bc9785010420af98367a0033300440a0601826b60826a708268789587800050124601395208b101956c000382c9a00082c8a80082cab00082cbb800956c00017bcb587bca507bc848956840017bc940501048bdf83307d000037b6758837733004a0a01826b60826a708268789587a00050124caf3852085f01826a5882a80881a91082aa6f88978b206f99989920d4b9099888206faa97ab20d4b80898aa2049263801956b00017bba307bb828956820017bb92050104e58f8826c60826b68826a70826778d4c709d4ba08d48909989920d4c808978820d498085208fa004926180149261001492608019568000149260001a00050105018f84926d8004926d0004926c8004926c000c0008267687b67f8008267607b67f0008267707b67e8009567e0009568c0008269787b69e000501052712a9567a00082687850105497f68267b800826ab0008269a8008268a000501256273952077f8267187b68785010587efa50125ab93933005c0a09826a7033025e28133a826a7050125e0d3a4926d8034926d0034926c803956c0003492cc000037bcaf8007bc9f0007bc8e8007bc7e0009567c0039568e003501060d4f8956780003308405010621bf6826a9800826890008269880082678000501264c23851081b003308d00002838833070133090a0e7b677833006628f3f97b6778501066edf98377330833090a0228c1f58267783308501068d8f98378330733090a0e7b677833006628c5f93307b800027b6738013907b8000255170407285d279567001083770002330833006c0a03019562b810812764015147419bd89560085147bb9c05a93f045247cfac05d50a28de1452473eed62dd0a28a910514703defd06d1015247b3a75e090a2846135147dd0d1618c7055147dd72b823660a51471ff8ad304303514767e53c319806514715e54436210751473182a0700a2809184922e0024922d8024922d0024922c802956700108377800333006e0a11330270286e385012706b3882b7d80082b8e00082b9d00082bac800d49808d4a707d4870751070628bd26826738018177330823ac780628b5269567ff079577013300723302180228113995670010827700f895680010828808f895690010809910f84926f8077b69f0077b68e8079568e0077b67e0073307501074c8f54926d8074926d0074926c007013307209568c0074926c807501076abf53908bc000256183f0b2003bc000240019517e08479e07b69380164913307d00002837783993308403300780a0933027a289e3650127a9b367bba000395ba00027ba9f8007ba8f0007ba7e8009567a0079568a01350107c44f68267b807956800017b87388267b0077b87308267a8077b87288267a0077b87209567800733084050107eecf3956b000782b7980082b8900082b9880082ba8000502280008d3551070628802595690001829720956b00077bb7608297287bb7688297307bb770956860078297387bb77864a77b6a38013300900128d3f4492280014922780149227001492268019567001083772002330082000a1101956ab81095ab000150228400a93751070628522582673801817756170307284c2595674002330840502086004ff3956c000282c7587b67200182c8507b68280182ca487b6a300182c9407b693801492618024926100249260802490c407bc7387bc8307bca2895672002956800027bc92050208800d42650228a00783651070628ad244926f8014926f0014926e8019568e0014926e0010a8267380150208c0015f450228e005435520806288224826738018377203a087000024926c8017b68d801140800000000000032567b68d0019568c0014926c00150209000d9f39567a0013308405020920092f28269b8017b6918018268b0017b681001826aa8017b6a0801826ba0017b6b0001826720017b675801826728017b675001826730017b674801826738017b6740017b6978017b6870017b6a68019567800195686001956940017b6b6001502094003827502296004e3551070628d72364a2956c000182c7880082c898007bc8388263800182ca900028ac06956700017b79187b7c207b7b287b7a30492260024922580249225002492248029567001083770003330098000a1133029a00283b3550229a00383550229c00ea3551070628b8238267380181775617030728b2239567a00633084050209e00a7f1956b000682b7b80082b8b00082b9a80082baa0005022a0004733510706283a23956b00013a072800023a083000023a09380002956c00067bc798003a074000027bc890007bc98800956880067bc7800064a77b6a3801330090012881f24922800349227803492270034922680395670010837720043300a2000a113302a4002880345022a4007d345022a6005335510706281823826738018177330843ac78062810239567ff079577a1023300a800330218022840359568ff079588b900958900018297e8007b6738018297f0007b6730018297f8007b672801828700027b67200195670010837740043308240a039567b81095790003829888007b681801829890007b681001829898007b6808018297a0007b6700013307d000037b67f80083773300aa000a053302ac0028ae325022ac00ab32956aff0795aab900956c000182cb7baba00182cb087bab980182cb107bab900182cb187bab880182cb207babc00182cb287babb80182cb307babb00182cb3895ac00017bcba8007bc9d8007bc7d0007bc8c8009567ff07957781029568ff07958861029569ff0795994102492ae0015020ae00a62b9567ff07957721023308405020b000ecef956aff0795aab90095ac000182cb800082c87882c97082c768d49b0bd48709d4b909989920d4b808978820d49808510806286b21492a6001492a5801492a4801019568ff0795880102492a50017b6738013300900128cbf04922e0014922d8014922d0014922c80195670010837780020a1101956ab81095ac000182c7d80082c8e00082c9d00064ab82cac800d49808d4a707d4870751070628632182673801817756170307285d21492b0002492bf801492bf001492be801956760039568a0125020b20051f182677803956800017b8738826770037b8730826768037b8728826760037b8720956740033308405020b400f8ee956b000382b75882b85082b94882ba405022b6009c30510706288f2095690001829720956b00037bb7208297287bb7288297307bb730956820038297387bb73864a77b6a38013300900128e2ef4922800249227802492270024922680295670010837720033300b8000a113302ba0028ee315022ba00eb315022bc00b43251070628952082673801817756170307288f209567e0063308405020be005aee956b000682baf80082b8f00082b9e80082b7e0005022c000fc3051080628ed1f4926d8064926d0064926c8069568c0064926c006127b673801330090012851ef4922a00249229802492290024922880295670010837740030a1101956ab81095ac000282c7980082c8a00082c9900064ab82ca8800d49808d4a707d487075107062805208267380181785618030728ff1f492bc002492bb802492bb002492ba8020395674007956860135020c200d6ef82675807956800017b8738826750077b8730826748077b8728826740077b8720956720073308405020c4007ded956b000782b73882b83082b92882ba205022c600212f51070628141f95690001829720956b00077bb78297287bb7088297307bb710956800078297387bb71864a77b6a3801330090012868ee4922600349225803492250034922480395670010837700043300c8000a113302ca002867305022ca0064305022cc00233151070628371f8267380181775617030728321f9567ff079577e1013308405020ce00dcec9569ff079599b900829740017b672001829838017b682801829b30017b6b3001829a28017b6a3801492900014929f8004929f0004929e80040959c00017bc7207bc8187bcb109567ff079577c1019568ff079588a1017bca085020d0004b205022d200ef2f51070628241e9569ff079599b9004929e0004929d8004929d0009568ff07958881014929c80006826738015020d40080ed5022d600bf2e52080628ed1d826738018377203a086800029569ff079599b9004929b8004929b0007b98c0009568ff07958861014929a8005020d80042ed9567ff07957741013308405020da00f7eb9568ff079588b900828aa0007b6a1801828998007b691001828b90007b6b0801828c88007b6c0001826720017b8740826728017b8738826730017b8730826738017b87287b8a607b89587b8b50648a9567ff07957721019568ff07958801019569ff079599e1007bac485020dc008f205022de00a52e510706282e1d64a29568ff079588b900828770828a80007b6a3801828368828a7801d3b704d8b70cd89300da400cc92a08c9c804d8c8087b683001d82a0a826c180182683801c9c80cc9ac0c82683001c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a70751070628bd1c64977b6838015020e00008ef83788169380133070a0e9568b81028d10f49222002492218024922100249220802956700108377c0023300e2000a113302e40028302e5022e4002d2e82b71882b82082b91082ba08d49808d4a707d4870751070628f41c826738018177330863ac780628ed1c956760063300e6003302180228d82e826778067b67e800826770067b671801826768067b673801826760067b673001956740063300e8003302220228a92e826758067b67e000826750067b67d800826748067b67d000826740067b67c800956700108377e0023308440a039567b81095790002829840956a00017ba8088298387ba88298307b68f8008297287b67f00082a718977720987720492638067b67c0007b67300682a7387b6728069568200682a7307b67200633075020ea0013eb4926180649261006492600060233072095680006492608065020ec00f5ea3308bc00023907bc000256173f0b2003bc000240019517e08479e07b69100164913307d00002837783997b6828013308407b6720013300ee000a0901826a100182a71882a81082a90882aa6f777b67a8005022f000832b7b67b00064713307d000037b67100183777b67b8003300f2000a053302f40028bb2a5022f400b82a4926f8057b68f0057b67e8059568e0057b6ae00533075020f6005aea82679000956a00057ba7d800826798007ba7d0008267a0007ba7c8003307209568c0058269a8007ba9c0005020f80029ea82682801818756173f08480840019517e08477e07b67a8005022fa00a42b3300fc000a09826aa8003302fe0028622a826aa8005022fe005b2a8268b0007b8a187b89107b8b087b879567a00550200001c9ea956b000582b7b00082b8b80082b9a80082baa000d29808d2a707d287075117fffd0249269805826730017b678005826738017b678805956880058267c0007b6790053307502002018de9492678054926700549266005023307209568600549266805502004016fe982682801818756173f08480840019517e08477e07b67b00050220601ea2a330008010a0901826ab00082a71882a81082a90882aa6f777b67b00050220a01142a7b67a80064718267b80033000c010a0533020e0128572950220e015429492658057b6850057b674805956840057b6a4005330750201001f6e882679000956a00057ba738826798007ba7308267a0007ba728330720956820058269b0007ba92050201201c9e882682801818756173f08480840019517e08477e07b67b00050221401442a330016010a09826ab00033021801280229826ab00050221801fb288268a8007b8a187b89107b8b087b879517e08477e07b67b00064719567000550201a015de9956b000582ba82b70882b81082b918826b08017b6bb804826b00017b6bb004826bf8007b6ba804826bf0007b6ba0047b69d8047b68d0047b67c8049567e0049568c0049569a0047b6ac00450201c0190218267f0048268f8048269e004826ae804826bb0007bb7107bb8187bb97bba08492698048267c0007b679004826738017b67880495688004826730017b678004330750201e01d3e749267804492670044926600402330720956860044926680450202001b5e782682801818756173f08480840019517e08477e07b67c000502222013029330024010a0901826ac00082a71882a81082a90882aa6f777b67a800502226015a287b67c00064718267b800330028010a0533022a01289d2750222a019a27492658047b6850047b674804956840047b6a4004330750202c013ce782679000956a00047ba738826798007ba7308267a0007ba728330720956820048269a8007ba92050202e010fe782682801818756173f08480840019517e08477e07b672801502230018a28330032010a09826a280133023401284229826a2801502234013b298267c0007b7a187b79107b78087b7b8268b0005020360130e88267f0007b67c0038267c8007b67e00395680001828730956b00047bb78267f8007b67c8038267d0007b67e8038287387bb70882877b67d0038267d8007b67f0038287187bb7108287087b67d8038267e0007b67f803956700049568e0039569c003826ae8007bba1850203801bd209567a00333084050203a0107e5956b000382bab80082b8b00082b9a80082b7a00050223c01a927510806289a164926980349269003492688039568800349268003017b6738013300900128fee549226005492258054922500549224805956700108377000633003e010a1101956ab81095ab000550224001bd2851070628f116826738018177330843ac780628ea161407ffffffff000000007b6738019567c011330042013302180228b7289568b810828708017b673001828710017b671001808718017b6708019567a0113300440133022202288c28330246019568b810018287f800956a00017ba7288287f0007ba7208287e8007ba7184928e00082a7087b87d80082a7107b87d00064899568801182a7307b97c8003307502048012ee533024a019568b810014928c0004928b8004928a800026489330720956860114929b00050204c0105e53308bc00023907bc000256173f0b2003bc000240019517e08479e07b69080164913307d00002837783997b6830013308407b6710010a09826a080182a71882a81082a90882aa6f777b6700016f877b67f8006f977b67f0006fa77b67e8009517e08477e07b6708016471826718018477ff826920018498ff82693801826a2801d2a909956ab810492aa0007ba998007ba89000956840117ba78800330750204e0162e48267e8009568b8107b8780008267f0007b87788267f8007b8770648a33072095682011826900017ba9685020500132e482683001818756173f08480840019517e08477e07b6738016471837933084082671001330052010a09826a380133025401286624826a3801502254015f24826808017b8a187b89107b8b087b879567001150205601cde4330258019568b81001828760956900017b97388287587b97308287507b97288287487b97209567e01033084050205a016fe2956ab81082a74082a83882a93082ab28d49707d48b09d47909989920d48707977720d4970751070628f713956900018297207ba7088297287ba7108297307ba7189568c0108297387ba72064b77b9b3833009001284fe34922a00149229801492290014922880195670010837740020a1101956ab81095ab000182b7980082b8a00082b9900082ba8800d49808d4a707d48707510706284314826738018177330843ac7806283c149567000333005c01330218022807269568000382877b6738018287087b6730018287107b6728018287187b67200195670010837760023308240a039567b810957900018298a8007b6818018298b0007b6810018298b8007b6808018297c0007b6700013307d000037b67f800837733005e010a0533026001288223502260017f23956b000182ba7b6ab80282ba087b6ab00282ba107b6aa80282ba187b6aa00282ba207b6ad80282ba287b6ad00282ba307b6ac80282ba387b6ac0027b69f0027b67e8027b68e0029567e0029568c0029569a0024926f80250206201f4189567800233084050206401dce0956b000282ba980082b8900082b9880082b78000502266017e23510806286f124926780249267002492668029568600249266002017b6738013300900128d3e1956700017b79187b7c207b7b287b7a304922c0034922b8034922b0034922a8039567001083776004330068010a1133026a0128c22350226a01bf2382b7b80082b8c00082b9b00082baa800d49808d4a707d4870751070628bf128267380181773308e300ac780628b7129567a01033006c01330218022872249568b81082877b679800958900ff8297f8007b67e8008297f0007b67f8008297e8007b67f0009567801033006e0133022202283d249567ff079577b900957900078298e0007b6890008298d8007b68d8008298d0007b68d0008297c8007b67c80095670010837780043308440a039568b810958900038297e0007b67c0008297d8007b67b8008297d0007b67b0008297c8007b67a800956700108377a0043308640a039568b81082870004956900017b9738958a000382a7f8007b971082a7f0007b970882a7e8007b97956700108377c004330884000a03019569b810959b000482b72082b81882ba0882b910d487077b6aa00088a800019498947852080628ae11956700108377e0040a0a01956ab81095ab000482b73082b84082b92882ba38826c0801d37c0bd87c07826c0001d89c09dbb70982671001d8a702826c3801d38c0bd88c08dab208d3a707d4b707da79085108ad039567ff079577410333084050207001bcde9569ff079599b9008292a00295980002828c9800828b900082878800d42b0ad4c708d4a808988820d4ca0a97aa20d4a808510806283810492978024929700249296802140a00000000a079c3089568ff07958821037b9a80027b6738017b6b30017b6220017b6c28015020720187df956c000182c83882c72882ca20d47a0a140b00000000010000001407fcffffff00000000d8780782c930949794a752070628cc0f8387049569ff079599b900492960024929580249294802209568ff0795880103492950027b6a28017b6b20015020740121df956b000182ba2882b93082b83882b7209577dcd87807949794a7520706287a0f838724956aff0795aab900492a4002492a3802492a2802129568ff079588e102492a300250207601d7de95690001829a381407bcffffff00000000d87a0782983094878298289487520706282c0f83a7443a084800023a09600002956bff0795bbb90095ba00027ba8207ba918140800000000000044457ba8109568ff079588c102492b08025020780175de3308648267380150207a0138e183783307013309640a0e01514700bece7e0a28cd0e49222003492218034922100349220803956700108377c00333007c010a1133027e01284f2050227e014c2082b71882b82082b91082ba08d49808d4a707d4870751070628680f826738018177330823ac780628610f9567ff079577c1003300800133021802280021956aff0795aab90082a70882a81080a918490a7ba9f8956900107b98a8f89568ff079588a100956900107b97a0f8330750208201b5dd95670010492798f895670010492790f895680010492880f8043307209568ff079588810095690010492988f85020840183dd3908bc000256183f0b2003bc000240019517e08479e07b69380164913307d0000283778399330840330086010a093302880128731e50228801701e95bc00037bca407bc9387bc8307bc7289567ff079577619568e01350208a0119de95670010827778f8956800017b873895670010827770f87b873095670010827768f87b872895670010827760f87b87209567ff0795774133084050208c01addb95670010827758f895680010828850f895690010829948f8956a001082aa40f850228e01411d5207370d95690001829720956800107b8720f8829728956800107b8728f8829730956800107b8730f89568ff07958821829738956900107b9738f864a77b6a3801502090017adc33082082673801502092013ddf837833092033070a0e9568b81028079568b8100149286004492858044928500449284804039567601095680015502094012cdd9568ff079588b900958900078297c0007b67488297b8007b67408297b0007b67388297a8007b67308267e8009777209877204928a0077b67707b9798008267f8007b9790006489956840108267f0007b978807330750209601dfdb9568ff079588b900492880074928780749286807046489330720956820104929700750209801b7db9517e08477e07b67e00064713309bc00023907bc000256173f0b2003bc000240017b69289517e08479e07b69880064913307d000027b6720837783993308407b671833009a010a09826a880033029c0128cc1b826a880050229c01c51b8268e0007b8a187b89107b8b087b879567001050209e0133dc9568ff079588b900958c000782c74882cb6082c95082ca587b67609577018878017b6958c89808d48709889901c8a9097b6a50d8a90a7b6b68c8ba0ad4a80bd4970cd4cb0b510b640c956bb81095bc00047bc7687bc8707bc9787bca8000956820158267e0005020a00148dc9567ff079577e1073308405020a2018ad9956cff0795ccb90082c2280782c3400782c4300782c03807952b20d82b07c87408d84809da7709c80909d80907c83707d49b0ad48707d47a0a98aa20d49707977720d4a7075207f50a956a00013a072800023a083000023a093800027bc720073a074000027bc818077bc910079568ff079588c1077bc708077bab3064b77b62e0007b6488007b6380007b60785020a40131da826b78826a88008268e0009587405022a601001a5208930a956aff0795aab900492a00078268f00095ab00067bb8e8008268f8007bb8f0009568ff079588a1078269707bb9f8005020a801e4d9826b78826a88008268e0009587605022aa01b3195208460a1409ffffffff000000008268d8007b692801d289098268d0008488ff826ac80084aaff956bff0795bbb900492be00695bc00067bcac8007bc8d0009568ff07958881077bc9d8005020ac017fd9826b78826a88008268e000958780005022ae014d195208e0098268a800956aff0795aab90095ab00067bb8a8008268b0007bb8b0008268b8007bb8b8009568ff07958861078269c0007bb9c0005020b0012cd9826b78826a88008268e0009587a0005022b201fa1852088d099569ff079599b900826860959b00067bb888008268587bb890008268507bb898009568ff0795884107826a687bbaa0005020b401ddd8826b78826a88008268e0009587c0005022b601ab1852083e09956b000182b8956aff0795aab90095ac00067bc86882b8087bc87082b8107bc8789568ff079588210782b9387bc980005020b8018ed8826c78826b8000826a88008267e000d4c709d4ba08d48909989920d4c808978820d498085208e0089569ff079599b9004929600649295806492950063302c0009568ff07958801077b9248065020ba013cd89568ff079588b90049282006492818064928100695890006491908e000826780007b97408267787b9738826788007b9730648a9567ff079577e1069568ff079588c1068269e0007ba928065020bc017f0a9567ff079577a1068268e0005020be019fd69568ff079588b90082870006958b000582baf80082b9f00082b8e8005022c001221952072d08826730017b6838015020c20175da5022c401721a0a09826830018287187b6710018287107b6708018287087b67000182877b67e0009567ff07957781063308405020c60133d69562ff079522b900952700058278c800827ce0008279d000827bd8009587207b683801d8870ac8a9087b693001d89809daaa09c8b9097b6b1801d8b90a7b6c2001c8ac0cd4970ad4c808d48a0a98aa20d49808978820d4a80852088a074922b8054922b0054922a805140900000000000001199568ff07958861067b29c0057b6788005020c801e4d6956c000182c8389587225022ca01841752084a079569ff079599b900826830959b00057bb888008268387bb890008268407bb898009568ff0795884106826a487bbaa0005020cc019ad6956c000182c8389587425022ce013a17520800078268e0006f89826800016f88826a08016faa826b10016fbb956cff0795ccb9007bcb680595cb00057bba707bb8789568ff07958821067bb980005020d00146d6956b000182b73882ba18d4a70782b83082b920d49808d48707987720d4a808978820d48707520797069569ff079599b9004929600549295805492950059568ff07958801064929480542826738015020d201f2d59568ff079588b9004928200549281805492810059589000549190862826720017b9740826718017b9738826730017b9730648a9567ff079577e1059568ff079588c105826938017ba928055020d40135089567ff079577a105826838015020d60155d4956aff0795aab90082a7000595ac000482c8f80082c9f00082cbe800d49707d48b09d47909989920d48707977720d497075207d40564ba8267880064b87b6a38015020d80118d85022da0115180a09826830018287187b67e0008287107b6700018287087b67080182877b6710019567ff07957781053308405020dc01d6d39567ff079577b900957c000482cae00082cbd80082c9d00082c8c800956c00017bc9307bca20d4a9077bc838d4b808d478089888207bcb18d4b707977720d48707520745058267e0006f77826800016f88826908016f99826a10016faa956bff0795bbb90095bc00047bcac0007bc9b8007bc8b0009568ff07958861057bc7a800826738015020de0185d4956a000182a72082a918d47909140700000000010000007ba7181407e0ffffff0000000082a838d8780782a83094877ba92094975107c7047c68a000826738018377209569ff079599b9004929a004492998047b9888049568ff0795884105492990045020e0011cd495670010837740053308a4000a0301956900018297189577c0829838d8780782983094878298209487510769049567b810957c000482c9880082c8900082ca980082cba00082673801837740956cff0795ccb9007bcb800495cb00047bba787bb8709568ff07958821057bb9685020e201a9d395670010837760053308c4000a03011407a0ffffff0000000095690001829838d87807829830948782982094875107f2039567b810957c000482c9a80082c8b00082cab80082cbc00082673801837760956cff0795ccb9007bcb600495cb00047bba587bb8509568ff07958801057bb9485020e40132d39567ff079577b9004927400449273804492730049568ff079588e1044927280433075020e6010ad30a0b3308d000032103d800032103d000037b6830012003e00003000000019567b8104927e0044927d8044927d0044927c80433088000826738015020e8019ad5826828818856181f0b826928480920019569b8104829e80420492920054929180549291005492908058268300197882098882014090000000018000000d49802956880159788209888209569c015979920d4890a97772098772014080000000080000000d4870b8267209777209877209568a015978820d4780c3308ff3309ff64270a0101520705029567ff079577a10433085020ea01f7d09569ff079599b900959a000382a7f00082a8f80082a9e8008477ff826b2801d2b8088499ffd4890ad47a0a510a21826af000d3a909826a70d3a808826af800d3a707d49707d487075107cd039567ff07957781043308405020ec019ad09567ff079577b900957c000382cae00082cbd80082c9d00082c8c800956c00017bc9307bca28d4a9077bc838d4b808d478089888207bcb20d4b707977720d48707520709029569ff079599b9004929b8034929b0034929a803140700000000a079c3089568ff07958861047b97c003826738015020ee015bd1956a000182a72882a920d47909140700000000010000007ba7201407fcffffff0000000082a838d8780782a83094877ba928949751079d01826738018377049569ff079599b9004929a0034929980349298803209568ff0795884104492990035020f001f5d0956900018297209577dc829838d878078298309487829828948751075101826738018377249569ff079599b9004929800349297803492968031c9568ff0795882104492970035020f201a9d01407bcffffff0000000095690001829838d878078298309487829828948751070101826738018377443a084800023a095000023a0a580002956bff0795bbb90095bc00037bc8607bc9587bca50140900000000455255549568ff07958801047bc94833007801283dd09567ff079577c1043308405020f401f5ce9567ff079577b900957900048298207b6830018298187b6828018298107b6820018297087b6738010a0d01956b000182b83082b920d4980882ba2882b938d4a909d48909989920d4a808978820d4980852085598782052084f64787b67280183777b673001826738015020f60190d29568b810826928017a8928058377956800108388e00533090a0c019567b8108177280582683001ac870f0a0d0164789877205107fe01003308d0000283883307012812838833070133090a0e3308d0000228f233090a0e3308d0000228e73308d0000228e03308d0000228d93308d0000228d23308d0000228cb3308d0000228c43308d0000228bd3308d0000228b63308d0000228af3308d0000228a83308d0000228a13308d00002289a3308d0000228933308d00002288c3308d0000228853308d00002287eff3308d000022876ff3308d00002286eff3308d000022866ff3308d00002285eff3308d000022856ff3308d00002284eff3308d000022846ff3308d00002283eff3308d000022836ff3308d00002282eff3308d000022826ff3308d00002281eff9567ff079577b9004927d8024927d0024927c8026479140700000000717b484e9568ff07958881037b97e00233075020f80164ce9568ff079588b9004928c0024928b8024928a8021164893307049568ff07958861034929b0025020fa0138ce826728817756173f0b826828480840013307013309248268180a0e01956aff0795aab9008267a80095a800027b87e8008267c80095ac00037bc7088267f0007bc7288267b0007b87f0008267d0007bc7108267f8007bc7308267b8007b87f8008267d8007bc7188267e8007bc7388267c0007bc7826790007bc7209567ff079577e1039568ff079588c1039569ff079599a103826b98007bcb405020fc01690433078268182826fe826738017b6830015020fe0152d0837881693001330701330000020a0e01951170ff7b1088007b1580007b1678951590008411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520657821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b307b13507b1a587b17603307409518507b1c6850200202abcc955170ff8210880082158000821678951190003200491140491138491130140700000000717b484e9518307b174833075020040275cc49112849112049111041330704951810491118502006025ccc3908bc000256183f0b2003bc000240013308d000028388330701330924330008020a0e019511e0fe7b1018017b1510017b160801951520018411f0828b10828a18828c0882827b1a687b1c78d4ac08d4b20ad48a0a98aa207b1b70d4b808978820d4a8087b170852084b028297187b17488296108297087b175082977b17584921f8004921f0004921e8009518e0004921e0002064277b126050200a02bdcb821858d46807821948821a50d4a909d497079877207b1620d46909979920d497075207f2019517c00050200c0254ca821770821868d47808140700000000010000007b17101407e0ffffff00000000821960d87907821a7894a77b181894875107b401821ad800821bd000821cc8008218c0008397207b18287b18a0007b1c307b1ca8007b1b387b1bb0009518a0007b1a407b1ab800649650200e021fcb8217109577c0d876078218789487821818948751076201821748821820d487071408e0ffffff00000000821a58d88a08821b5094b8947851083e016469821828821c38d4c807821b40821630d46b0bd4b707987720d4cb0b97bb20d4b7075207170183974083aa207b1a586486502010027ccd7b17508217586468502012026ecd6478821750646950201402d2c8821760c86707d86708821978821b30c8b909c88909d3b90ad8b90bdaa80b821870821a38c8a808d8a80a821c68821640c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ac0ffffff00000000d8a70a949a948a510a94008377404921980049219000492188009518800049218000502016021dca82162895661f1407e0ffffff01000000d26707821860c88707d88708821a78c88a09d8a90ada880a821870c88a0ad88a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87189551e0fe8210180182151001821608019511200132000033080433001a020a0333021c02283c0b50221c02390b510a0b50221e02190c32003308d0000283883307013309330020020a0e3302220228840c50222202810c330824330024020a033302260228fc0a50222602f90a510a0b50222802d90b32003308d000028388330701330933002a020a0e01951100fe7b10f8017b15f0017b16e801951500028411e06416828a107b6a9800828a087b6a900082887b6888008272827808807710829b18829c10829a0882997b6b287b6bd8017b6c207b6cd0017b6a187b6ac8017b69107b69c0011409ffffffff000000007b69784926b8017b67307b67b0017b68387b68a8019568a0017b62407b62a001330750202c02a7c849269801492690014926800102330720956880014926880150202e0289c83308bc00023907bc000256173f0b2003bc000240019517e08479e07b696864913307d00002837783997b6880003308407b67700a09826a6882a71882a81082a90882aa6f777b67606f877b67586f977b67506fa77b67489517e08477e07b67686471826788008477ff826890008488ff82699800826a78d2a909492678017b69787b6970017b6888007b686801956860017b6790007b676001330750203002e8c7826748956a00017ba7588267507ba7508267587ba748330720956840018269607ba94050203202bfc782688000818756173f08480840019517e08477e07b67980064718379330840826770330034020a09826a98003302360228ee09826a980050223602e7098267687b7a187b79107b78087b7b9568c00150203802ddc89567200133084050203a0223c6956b000182b73882b83082b92882ba2050223c02c7075207b600826710956900017b978267187b97088267207b9710956800018267287b971864a77b6a980050203e0218c74926b8008267787b67b000826788007b67a800826790007b67a0004926d8008267307b67d0008267387b67c8003a077800023a088000023a09880002826a407b6ac0007b67f8007b68f0007b69e8003a079000023308209569e000956ac000956ba0007b67e000826798005020400283c8955100fe8210f8018215f0018216e801951100023200009511807b10787b15707b1668951580008411f0829b828a829608828308829410828c10829918828818d363027b1608d863067b1b187b1a10d8ba0a7b1ada2a06d3980ad89800d84c02daa200d34c0bd4ba0adaa600520046c94c0ac99808c92808d86a09c99808c96a0a821908c99309821bc9b909821b18821c10c9bc0b7b7b7b79087b7a107b7818955180821078821570821668951180003200491150491148491140140700000000717b484e9518407b1758330750204202d4c54911384911304911201133070495182049112850204402bbc53908bc000256183f0b2003bc000240013308d000028388330701330924330046020a0e01951140fc951a00037ba0b8007ba5b0007ba6a8009515c0038411e06416829a187b6a68829a107b6a60829a087b6a5882997b69508289107b69308289087b692882887b682082798278088077104926f8027b67387b67f0027b68407b68e8029568e0027b69487b69e00233075020480225c54926d8024926d0024926c8023307209568c0024926c0020150204a0207c53308bc00023907bc000256173f0b2003bc000240011407ffffffff000000007b67189517e08479e07b691064913307d0000283777b687083993308407b677833004c020a09826a1033024e02282f07826a1050224e0229077b6a38037b6930037b6828037b6720039567a002956820035020500283c5826aa0028267a8028268b0028269b802826b687b6b5802826b607b6b5002826b587b6b4802826b507b6b40027b6978027b6870027b6768029567800295686002956940027b6a600250205202b9fd826798028268900282698802826a8002956b00037bb7187bb8107bb9087bba492638028267387b6730028267407b672802956820028267487b672002330750205402ffc349261802492610024926000201330720956800024926080250205602e1c3826870818756173f08480840019517e08477e07b671064718379330840826778330058020a09826a1033025a02284504826a1050225a023f047bba587bb9507bb8487bb740956740039568000350205c0201c58267208477ff8268288488ff826930826a18d2a9094926f8017b69207b69f0017b68287b68e8019568e0017b67307b67e001330750205e0254c34926d8014926d0014926c001013307209568c0014926c8015020600236c3826870818755174008480840019517e08477e07b671864718379330840826778330062020a09826a1833026402289a03826a185022640294037bba787bb9707bb8687bb7609567a0019568600350206602d5c38264b801956900018297b0008298a000829ba8009519e0849ae064a1826c58c8bc0c826250c882027b6218d88208c88c00d3b009d8b002da9802826960c87909c8290bd89b03826868c84808d87909c89808c83808d87b03d38409d8480cda930cd3b707d49707da720c7bab107ba0088267187ba77b6a187ba818520c7701492698018267307b6780018267287b678801956880018267207b6790013307502068023fc249267801492670014926600101330720956860014926680150206a0221c2826970819756173f08480940019517e08477e07b67706471837933084082677833006c020a09826a7033026e02288502826a7050226e027f027bba98007bb990007bb888007bb7800095678003826818502070023ec3956740013308405020720284c0956b000182b75882b85082b94882ba405022740228025207b6008267507b6720018267587b6728018267607b673001956820018267687b67380164a77b6a785020760279c14926d8008267207b67d0008267287b67c8008267307b67c0004926f8008267387b67f0008267407b67e8003a079800023a08a000023a09a80002826a487b6ae000956c00017bc7187bc8107bc9083a07b0000233082095690001956ae000956bc0007bc782677850207802e8c2955140fc951700038270b8008275b0008276a8009511c0033200004926b0004926a8004926a000140700000000717b484e9568a0007b67b800330750207a02cbc049269800492690004926800011330704956880004926880050207c02adc0826770817756173f0b826870480840013307013309248268780a0e330733007e02288bc3330750207e0286c3330701502080027dc39511b07b10487b15409515508411f08272827308827b10827718828c828908828a108288187b18187b1a107b19087b1c7b17387b1b307b132895172064187b122050208202c5f29551b08210488215409511503200d88708c88a09d8a90ada880ac8ba0ad8ba08826b8000c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b8083202d88708c88a09d8a90ada880ac8ba0ad8ba08826b68c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b80832028269100182970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820320282a71882a81082a90882aa6f776f8b6f996faa3202d49707d48a09d47909989920d48707977720d49707320282a71882a81082a90882aa6f776f886f996faa956b00033202d8870882ca30c88a09d8a90ada880a82c818c88a0ad88a0882cb20c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b80832026f877b67a0006f977b6798006fa77b6790009517e08477e032028269f80082970881981082996f77977a206f88988820d4a8089877206f99979a20d4a7079899203202826a380182a71882a81082a90882aa6f776f886f996faa956bb8103202956a000182a72882a820d487071408e0ffffff0000000082a938d8890882a930949894783202d49707d4a809d47909989920d4a707977720d497073202d49a0ad48709d4a909989920d4a808978820d4980832026471837933084082672001320282171082181814090000000001000000d37909d48909987a2088aa01948a939a3202826768826860d487071408e0ffffff00000000826978d8890882697094989478320295680001828b088289828718d4b707828a10d4a908d47808988820d4a707977720d4870732029518e08489e07b697064918377816878839932023307b810c8760a95ab000332023307b810c8760a95ab00023202956a000182a72082a830d4870782a92882a838d49808d47808988820d49707977720d48707320282a71882a81082a90882aa6f7b6f886f996faa320282a71882a81082a90882aa6f776f886f996faa32028219821a087b697b6a087b67107b68189551c08210388215308216289511403202826768826870d48707826960826878d49808d47808988820d49707977720d4870732029518e08489e07b69300164918377816838018399320282b75882b86082b95082ba48d49808d4a707d48707320282b77882b8800082b97082ba68d49808d4a707d4870732029511c07b10387b15307b16289515408411e064768317320249922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a498a88889424495292242925492409a592929222458a142952a44851922222a224491042c2509a9486442222222252440489482292448a8820112222a21111912422219224492222492212424444848410498888002212222122224224219424494a244424128944442489480811111112422411114044422444444488248492244989848888244992244912212284101191922424498894528a888808491222a594224924449a24424444442489849072920891a4529292442491902449922422228210114122918848844888880849424849122222424444448884888890a1549284aaa4509524448844944604040412484020010101010181444444a42444442449a22491442222222222a2101112114204932854521222222222442412894442444404492492249114918888886844904491481089442211114912912048222242044112091101444410092222222222222222222222220892222211892489888888224190449148101111411221848810115144222222a248102451928888444444444444448a888888880851140922a2482412894422111111111111414482888824499224890811119188888846444491248922111111414422914824882409924824492229221111115124089228120922222248222242442222221a11114592248a4444880822128944224124499044a22489a48844444444912048a248448288888888888808912422224190444444448820482221222222228848101111111111894422498a888848102445242299244922114924499224498aa0a8484444441409922449122589884444444444442222222222524422299148121189481444844404214430894245221a492a822844114582888828888888884444104526114411892092144144442409111111110511211141149944108d24154114512488888882884422894810452611441189209294441144492222222222222222888888a444444444144484440451641241349254045144912022220a221289242241149944104524824852041111912822222922924444444482481011114112111122121111118d08922849001111898888888848c488442291481489828811a14404214430894245a248525114451245221189888828888848a44424882293a844149108224911444c2449924810499224499248922492128988886844444492244a12118922914844a48888888888104591208a44229148241211111111448288880892888810914892888888281244442449a248222251444444444424222222222222524444444444448a8844241245442392241195443422492289241249924444828888884892244944041011111141244900012495242222444444104992549288881011412480a494248488480248440489a0a481444444449120499224519288884424291111110511111112111184082651a8449120922412414424221189482441444444441091884424229288224804a5a2181121228888482412892412114544414444281141128510c12451482551442288244510114992244992244922224944041109222222922449922449440821424444a4884890880411111111119108129120028848241211111111412222888888888888880812114144242291884804898820a28848924424824444922489888888880822222242248914111111444410111111414404419148248a88041111119148224924922449222202888808220922221189444422882488288aa288882422824892244912111111112288888888482452444444101141444444244992288a202812894411912022222222499224494451144544444444049124800490a41411898888880822a291242945444444242222894810110d2092942222222212119144248888888828288410012222222248918c10111149008924922480248924a9115110111191489244924812110922222222922449924444440410111144920012409252442222424404912429452422224444104024294524841011490288482422414424128944234992244992a28820228aa8119196184aa542150a8542a15028140a8542a150282424242424242424242424242422220a20220a22224289882045324923222222918848242212892211111191a0242228128d88442a29499224499224499224492a2949922449922449124444a2240124054924094204434934222292a4244992249124291111a1044992244922822401248024a588884822918844419294224900492a4a92244912490a92825290244992244992244900a94844440449004992244992244992942422229a2812242894a248902812242894a21111911289a224498944221140229188444144484410420493142a9292a4524a4952241249242222a2209124492441149944255144224892228804912441244a92488a20121111914884101211111211114144443449229524499224254992244992a424294992444902480a92481284088692684444444a92a424492989442212051191084108110c20490aa5244a24414444441011914824121111111144444492229188444144484490229354122592204922822449128944240a224222821499a4922891044912114444445292244992244992244992a424229188444144484490229354122592202222124482489220128944244a10894422128910422292844444092222221a11014414448444042992492a529020495292922429494a902425491249922425499224499222a994a42425a9aa24495292aaa22449922449925414455224959294a448525514490248522549929224499528092049aa240124a922254992a424958a4491289224499294a4aa925455294992a4244992242551514992a44492a424492a00"
            },
            "deployedBytecode": {
              "object": "50564d00001f52000000000000010700c1f000c000800380b82070617773696e553dfeb89bc6c3738b79cc59f74ccc2e51cafa0f9b177b9f230f40392b525da7a97fb9b112aeed716e1010ef0f37601f4d4a112601aefaa25fc926615d84649c165670617773696e554c41564e49203a32414e4749535f44495249505845203a32000032562d494e552070617773696e555b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af52804811c1200000000070000000b0000001900000027000000350000003b00000043000000500000005b0000006a0000006d0000007a0000008a0000009a000000a5000000b7000000c20000006164647265737363616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636861696e5f69646465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235366e6f777265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c03c410463616c6cc04441066465706c6f7906c01550814102c0ef449b00e30100040804de0429056105a505e905ee050f061406490655066e067d068206aa06f306f80619071e074e075a07730782078707af073208430878088908ba08c408d6080709160928096c09ac09e709f309080a160a1b0a290a310a630a6f0a840aa70abc0acd0af20a850b8a0bc90bfc0b190c4c0c510c720c9e0cb80c0e0d1c0d3c0d850d8b0db00db60dec0df90d5b0e610eb80ebe0ec40ee40efe0e660f6c0f720f9a0f131019108e109f1066119311a91105120b12111231124b12e1120e1324137f1385138b13af130e14141445144b148314941404150a158d15c315c91502163116b216d0160c17271749174f176b179c17ba17cb17d517ee173818561874187b189618ad18b318cf18fc181a192b1935195a19ab19f219101a2e1a351a501a671a6d1a891ab61ad41ae51aef1a081b771b841b9e1be31bf11b231c4e1c571c971ca01cc01c631d931dc71dd11dea1df31d1c1ed31e3f1f451fa21faf1fc91f24202a2068209d20cf213e22a422ee2250235d2397239d23da231024422477247d249e24de2404254b2558258b25e6250e2661266b268426f02601279427a827e127f52746285b289928ae28e828fd2837298929da29ec290e2a202a262a582ae12af12a2b2b3b2b7f2bd32b242c362c7d2c832cb52c402da92d1c2e932ebb2efb2e942ff12f6a30d0301c319631053261338d332d34433453341a35503569358d3508363736a636193727373437a8371c382c3832383b3856385c386c3872387b3890381e393c39dd39063a393a433a5b3a683a7e3aad3a1e3bf13b0a3c2e3ca03cbe3c0d3d163d343d823dc63de43d143e1d3e373e713e8f3ebf3ec83ee23e863fa43fd43fdd3ffa3f07401d404c40b940fa40184144414d419441aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f032003908c0000251083d0a3307f0000383770a0f28300a9511f07b10087b15648964753308206497501002f9037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004b1026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a08821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a109551a08210588215509511603200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020682ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b1910491138203300082892007b18385010088c006f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a07955120ff8210d8008215d0008216c8009511e00032008b7910520931c8780883881f8488e05638000001253309bc0002390abc0002ae8a093d08bc0002013308d000028377c887073200009511f07b10087b158475010a04013d07b8000251050750100a4f33000c951108f8951700077b70f0007b75e8007b76e0009515f807951100f89511b8f98411e064169569b81049294001492938014929280180003307409568e0114929300133006a2899fc9511e0fb951700047b70187b75107b7608951520048411e064164926780349267003492668034926600380003307409568600350100e63fc49269803492690034926880349268003836780030a1101956b000382b7900082b8980082b9880082ba8000d49808d4a707d487075207f30495674003330840501010e5fa956c000382c8587b686882c9507b696082cb487b6b7082ca407b6a78492618034926100349260803490c407bc8387bc9307bcb2895672003956800037bca205010126f2e501214863e520799044926f8024926f0024926e8029568e0024926e0020a826778501016b5fb501218783d510873048267788377203a080000024926c8024926c0027b68d802140900000000000032569568c0027b69d0027b677050101a7bfb9567a00282687850101c35fa956b000282b7b80082bab00082b9a80082b8a00050121ec13c520719048267707b687850102017fe501222523d0a098268708287187b67588287107b67508287087b674882877b674095678002330840501024e0f9956c000282c798007b676882c890007b686082ca88007b6a7082c980007b6978492658024926500249264802491c40407bc7787bc8707bca6895676002956840027bc960501026652d5012287c3d52078f0349263802492630024926280295682002492620020182677850102aabfa50122c6e3c5108690382677883772049261002492608024926000214090000000000000031956800027b6918027b677050102e76fa9567e00182687850103030f9956b000182b7f80082baf00082b9e80082b8e000501232bc3b520714038267707b687850103412fd5012364d3c0a098268708287187b67388287107b67308287087b672882877b67209567c001330840501038dbf88262c0018263d8018264c801826cd001952b20d82b07c87408d84809da7709c8c909d8c907c83707d49b0ad48707d47a0a98aa20d49707977720d4a70752079b023a07080002956a00017ba7b8003a071000023a081800023a092000027ba7b0007ba8a8009568a0017ba9a0007b6b1864b77b62787b64707b63687b6c6050103a92f9826b60826a7082687895874050123c9439520844028268406f898268486f88826a506faa826b586fbb956c00017bcb80007bca88007bc89000956880017bc9980050103e4cf9826b60826a708268789587605012404e395208fe018268206f898268286f88826a306faa826b386fbb956c00017bcb607bca687bc870956860017bc9785010420af98367a0033300440a0601826b60826a708268789587800050124601395208b101956c000382c9a00082c8a80082cab00082cbb800956c00017bcb587bca507bc848956840017bc940501048bdf83307d000037b6758837733004a0a01826b60826a708268789587a00050124caf3852085f01826a5882a80881a91082aa6f88978b206f99989920d4b9099888206faa97ab20d4b80898aa2049263801956b00017bba307bb828956820017bb92050104e58f8826c60826b68826a70826778d4c709d4ba08d48909989920d4c808978820d498085208fa004926180149261001492608019568000149260001a00050105018f84926d8004926d0004926c8004926c000c0008267687b67f8008267607b67f0008267707b67e8009567e0009568c0008269787b69e000501052712a9567a00082687850105497f68267b800826ab0008269a8008268a000501256273952077f8267187b68785010587efa50125ab93933005c0a09826a7033025e28133a826a7050125e0d3a4926d8034926d0034926c803956c0003492cc000037bcaf8007bc9f0007bc8e8007bc7e0009567c0039568e003501060d4f8956780003308405010621bf6826a9800826890008269880082678000501264c23851081b003308d00002838833070133090a0e7b677833006628f3f97b6778501066edf98377330833090a0228c1f58267783308501068d8f98378330733090a0e7b677833006628c5f93307b800027b6738013907b8000255170407285d279567001083770002330833006c0a03019562b810812764015147419bd89560085147bb9c05a93f045247cfac05d50a28de1452473eed62dd0a28a910514703defd06d1015247b3a75e090a2846135147dd0d1618c7055147dd72b823660a51471ff8ad304303514767e53c319806514715e54436210751473182a0700a2809184922e0024922d8024922d0024922c802956700108377800333006e0a11330270286e385012706b3882b7d80082b8e00082b9d00082bac800d49808d4a707d4870751070628bd26826738018177330823ac780628b5269567ff079577013300723302180228113995670010827700f895680010828808f895690010809910f84926f8077b69f0077b68e8079568e0077b67e0073307501074c8f54926d8074926d0074926c007013307209568c0074926c807501076abf53908bc000256183f0b2003bc000240019517e08479e07b69380164913307d00002837783993308403300780a0933027a289e3650127a9b367bba000395ba00027ba9f8007ba8f0007ba7e8009567a0079568a01350107c44f68267b807956800017b87388267b0077b87308267a8077b87288267a0077b87209567800733084050107eecf3956b000782b7980082b8900082b9880082ba8000502280008d3551070628802595690001829720956b00077bb7608297287bb7688297307bb770956860078297387bb77864a77b6a38013300900128d3f4492280014922780149227001492268019567001083772002330082000a1101956ab81095ab000150228400a93751070628522582673801817756170307284c2595674002330840502086004ff3956c000282c7587b67200182c8507b68280182ca487b6a300182c9407b693801492618024926100249260802490c407bc7387bc8307bca2895672002956800027bc92050208800d42650228a00783651070628ad244926f8014926f0014926e8019568e0014926e0010a8267380150208c0015f450228e005435520806288224826738018377203a087000024926c8017b68d801140800000000000032567b68d0019568c0014926c00150209000d9f39567a0013308405020920092f28269b8017b6918018268b0017b681001826aa8017b6a0801826ba0017b6b0001826720017b675801826728017b675001826730017b674801826738017b6740017b6978017b6870017b6a68019567800195686001956940017b6b6001502094003827502296004e3551070628d72364a2956c000182c7880082c898007bc8388263800182ca900028ac06956700017b79187b7c207b7b287b7a30492260024922580249225002492248029567001083770003330098000a1133029a00283b3550229a00383550229c00ea3551070628b8238267380181775617030728b2239567a00633084050209e00a7f1956b000682b7b80082b8b00082b9a80082baa0005022a0004733510706283a23956b00013a072800023a083000023a09380002956c00067bc798003a074000027bc890007bc98800956880067bc7800064a77b6a3801330090012881f24922800349227803492270034922680395670010837720043300a2000a113302a4002880345022a4007d345022a6005335510706281823826738018177330843ac78062810239567ff079577a1023300a800330218022840359568ff079588b900958900018297e8007b6738018297f0007b6730018297f8007b672801828700027b67200195670010837740043308240a039567b81095790003829888007b681801829890007b681001829898007b6808018297a0007b6700013307d000037b67f80083773300aa000a053302ac0028ae325022ac00ab32956aff0795aab900956c000182cb7baba00182cb087bab980182cb107bab900182cb187bab880182cb207babc00182cb287babb80182cb307babb00182cb3895ac00017bcba8007bc9d8007bc7d0007bc8c8009567ff07957781029568ff07958861029569ff0795994102492ae0015020ae00a62b9567ff07957721023308405020b000ecef956aff0795aab90095ac000182cb800082c87882c97082c768d49b0bd48709d4b909989920d4b808978820d49808510806286b21492a6001492a5801492a4801019568ff0795880102492a50017b6738013300900128cbf04922e0014922d8014922d0014922c80195670010837780020a1101956ab81095ac000182c7d80082c8e00082c9d00064ab82cac800d49808d4a707d4870751070628632182673801817756170307285d21492b0002492bf801492bf001492be801956760039568a0125020b20051f182677803956800017b8738826770037b8730826768037b8728826760037b8720956740033308405020b400f8ee956b000382b75882b85082b94882ba405022b6009c30510706288f2095690001829720956b00037bb7208297287bb7288297307bb730956820038297387bb73864a77b6a38013300900128e2ef4922800249227802492270024922680295670010837720033300b8000a113302ba0028ee315022ba00eb315022bc00b43251070628952082673801817756170307288f209567e0063308405020be005aee956b000682baf80082b8f00082b9e80082b7e0005022c000fc3051080628ed1f4926d8064926d0064926c8069568c0064926c006127b673801330090012851ef4922a00249229802492290024922880295670010837740030a1101956ab81095ac000282c7980082c8a00082c9900064ab82ca8800d49808d4a707d487075107062805208267380181785618030728ff1f492bc002492bb802492bb002492ba8020395674007956860135020c200d6ef82675807956800017b8738826750077b8730826748077b8728826740077b8720956720073308405020c4007ded956b000782b73882b83082b92882ba205022c600212f51070628141f95690001829720956b00077bb78297287bb7088297307bb710956800078297387bb71864a77b6a3801330090012868ee4922600349225803492250034922480395670010837700043300c8000a113302ca002867305022ca0064305022cc00233151070628371f8267380181775617030728321f9567ff079577e1013308405020ce00dcec9569ff079599b900829740017b672001829838017b682801829b30017b6b3001829a28017b6a3801492900014929f8004929f0004929e80040959c00017bc7207bc8187bcb109567ff079577c1019568ff079588a1017bca085020d0004b205022d200ef2f51070628241e9569ff079599b9004929e0004929d8004929d0009568ff07958881014929c80006826738015020d40080ed5022d600bf2e52080628ed1d826738018377203a086800029569ff079599b9004929b8004929b0007b98c0009568ff07958861014929a8005020d80042ed9567ff07957741013308405020da00f7eb9568ff079588b900828aa0007b6a1801828998007b691001828b90007b6b0801828c88007b6c0001826720017b8740826728017b8738826730017b8730826738017b87287b8a607b89587b8b50648a9567ff07957721019568ff07958801019569ff079599e1007bac485020dc008f205022de00a52e510706282e1d64a29568ff079588b900828770828a80007b6a3801828368828a7801d3b704d8b70cd89300da400cc92a08c9c804d8c8087b683001d82a0a826c180182683801c9c80cc9ac0c82683001c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a70751070628bd1c64977b6838015020e00008ef83788169380133070a0e9568b81028d10f49222002492218024922100249220802956700108377c0023300e2000a113302e40028302e5022e4002d2e82b71882b82082b91082ba08d49808d4a707d4870751070628f41c826738018177330863ac780628ed1c956760063300e6003302180228d82e826778067b67e800826770067b671801826768067b673801826760067b673001956740063300e8003302220228a92e826758067b67e000826750067b67d800826748067b67d000826740067b67c800956700108377e0023308440a039567b81095790002829840956a00017ba8088298387ba88298307b68f8008297287b67f00082a718977720987720492638067b67c0007b67300682a7387b6728069568200682a7307b67200633075020ea0013eb4926180649261006492600060233072095680006492608065020ec00f5ea3308bc00023907bc000256173f0b2003bc000240019517e08479e07b69100164913307d00002837783997b6828013308407b6720013300ee000a0901826a100182a71882a81082a90882aa6f777b67a8005022f000832b7b67b00064713307d000037b67100183777b67b8003300f2000a053302f40028bb2a5022f400b82a4926f8057b68f0057b67e8059568e0057b6ae00533075020f6005aea82679000956a00057ba7d800826798007ba7d0008267a0007ba7c8003307209568c0058269a8007ba9c0005020f80029ea82682801818756173f08480840019517e08477e07b67a8005022fa00a42b3300fc000a09826aa8003302fe0028622a826aa8005022fe005b2a8268b0007b8a187b89107b8b087b879567a00550200001c9ea956b000582b7b00082b8b80082b9a80082baa000d29808d2a707d287075117fffd0249269805826730017b678005826738017b678805956880058267c0007b6790053307502002018de9492678054926700549266005023307209568600549266805502004016fe982682801818756173f08480840019517e08477e07b67b00050220601ea2a330008010a0901826ab00082a71882a81082a90882aa6f777b67b00050220a01142a7b67a80064718267b80033000c010a0533020e0128572950220e015429492658057b6850057b674805956840057b6a4005330750201001f6e882679000956a00057ba738826798007ba7308267a0007ba728330720956820058269b0007ba92050201201c9e882682801818756173f08480840019517e08477e07b67b00050221401442a330016010a09826ab00033021801280229826ab00050221801fb288268a8007b8a187b89107b8b087b879517e08477e07b67b00064719567000550201a015de9956b000582ba82b70882b81082b918826b08017b6bb804826b00017b6bb004826bf8007b6ba804826bf0007b6ba0047b69d8047b68d0047b67c8049567e0049568c0049569a0047b6ac00450201c0190218267f0048268f8048269e004826ae804826bb0007bb7107bb8187bb97bba08492698048267c0007b679004826738017b67880495688004826730017b678004330750201e01d3e749267804492670044926600402330720956860044926680450202001b5e782682801818756173f08480840019517e08477e07b67c000502222013029330024010a0901826ac00082a71882a81082a90882aa6f777b67a800502226015a287b67c00064718267b800330028010a0533022a01289d2750222a019a27492658047b6850047b674804956840047b6a4004330750202c013ce782679000956a00047ba738826798007ba7308267a0007ba728330720956820048269a8007ba92050202e010fe782682801818756173f08480840019517e08477e07b672801502230018a28330032010a09826a280133023401284229826a2801502234013b298267c0007b7a187b79107b78087b7b8268b0005020360130e88267f0007b67c0038267c8007b67e00395680001828730956b00047bb78267f8007b67c8038267d0007b67e8038287387bb70882877b67d0038267d8007b67f0038287187bb7108287087b67d8038267e0007b67f803956700049568e0039569c003826ae8007bba1850203801bd209567a00333084050203a0107e5956b000382bab80082b8b00082b9a80082b7a00050223c01a927510806289a164926980349269003492688039568800349268003017b6738013300900128fee549226005492258054922500549224805956700108377000633003e010a1101956ab81095ab000550224001bd2851070628f116826738018177330843ac780628ea161407ffffffff000000007b6738019567c011330042013302180228b7289568b810828708017b673001828710017b671001808718017b6708019567a0113300440133022202288c28330246019568b810018287f800956a00017ba7288287f0007ba7208287e8007ba7184928e00082a7087b87d80082a7107b87d00064899568801182a7307b97c8003307502048012ee533024a019568b810014928c0004928b8004928a800026489330720956860114929b00050204c0105e53308bc00023907bc000256173f0b2003bc000240019517e08479e07b69080164913307d00002837783997b6830013308407b6710010a09826a080182a71882a81082a90882aa6f777b6700016f877b67f8006f977b67f0006fa77b67e8009517e08477e07b6708016471826718018477ff826920018498ff82693801826a2801d2a909956ab810492aa0007ba998007ba89000956840117ba78800330750204e0162e48267e8009568b8107b8780008267f0007b87788267f8007b8770648a33072095682011826900017ba9685020500132e482683001818756173f08480840019517e08477e07b6738016471837933084082671001330052010a09826a380133025401286624826a3801502254015f24826808017b8a187b89107b8b087b879567001150205601cde4330258019568b81001828760956900017b97388287587b97308287507b97288287487b97209567e01033084050205a016fe2956ab81082a74082a83882a93082ab28d49707d48b09d47909989920d48707977720d4970751070628f713956900018297207ba7088297287ba7108297307ba7189568c0108297387ba72064b77b9b3833009001284fe34922a00149229801492290014922880195670010837740020a1101956ab81095ab000182b7980082b8a00082b9900082ba8800d49808d4a707d48707510706284314826738018177330843ac7806283c149567000333005c01330218022807269568000382877b6738018287087b6730018287107b6728018287187b67200195670010837760023308240a039567b810957900018298a8007b6818018298b0007b6810018298b8007b6808018297c0007b6700013307d000037b67f800837733005e010a0533026001288223502260017f23956b000182ba7b6ab80282ba087b6ab00282ba107b6aa80282ba187b6aa00282ba207b6ad80282ba287b6ad00282ba307b6ac80282ba387b6ac0027b69f0027b67e8027b68e0029567e0029568c0029569a0024926f80250206201f4189567800233084050206401dce0956b000282ba980082b8900082b9880082b78000502266017e23510806286f124926780249267002492668029568600249266002017b6738013300900128d3e1956700017b79187b7c207b7b287b7a304922c0034922b8034922b0034922a8039567001083776004330068010a1133026a0128c22350226a01bf2382b7b80082b8c00082b9b00082baa800d49808d4a707d4870751070628bf128267380181773308e300ac780628b7129567a01033006c01330218022872249568b81082877b679800958900ff8297f8007b67e8008297f0007b67f8008297e8007b67f0009567801033006e0133022202283d249567ff079577b900957900078298e0007b6890008298d8007b68d8008298d0007b68d0008297c8007b67c80095670010837780043308440a039568b810958900038297e0007b67c0008297d8007b67b8008297d0007b67b0008297c8007b67a800956700108377a0043308640a039568b81082870004956900017b9738958a000382a7f8007b971082a7f0007b970882a7e8007b97956700108377c004330884000a03019569b810959b000482b72082b81882ba0882b910d487077b6aa00088a800019498947852080628ae11956700108377e0040a0a01956ab81095ab000482b73082b84082b92882ba38826c0801d37c0bd87c07826c0001d89c09dbb70982671001d8a702826c3801d38c0bd88c08dab208d3a707d4b707da79085108ad039567ff079577410333084050207001bcde9569ff079599b9008292a00295980002828c9800828b900082878800d42b0ad4c708d4a808988820d4ca0a97aa20d4a808510806283810492978024929700249296802140a00000000a079c3089568ff07958821037b9a80027b6738017b6b30017b6220017b6c28015020720187df956c000182c83882c72882ca20d47a0a140b00000000010000001407fcffffff00000000d8780782c930949794a752070628cc0f8387049569ff079599b900492960024929580249294802209568ff0795880103492950027b6a28017b6b20015020740121df956b000182ba2882b93082b83882b7209577dcd87807949794a7520706287a0f838724956aff0795aab900492a4002492a3802492a2802129568ff079588e102492a300250207601d7de95690001829a381407bcffffff00000000d87a0782983094878298289487520706282c0f83a7443a084800023a09600002956bff0795bbb90095ba00027ba8207ba918140800000000000044457ba8109568ff079588c102492b08025020780175de3308648267380150207a0138e183783307013309640a0e01514700bece7e0a28cd0e49222003492218034922100349220803956700108377c00333007c010a1133027e01284f2050227e014c2082b71882b82082b91082ba08d49808d4a707d4870751070628680f826738018177330823ac780628610f9567ff079577c1003300800133021802280021956aff0795aab90082a70882a81080a918490a7ba9f8956900107b98a8f89568ff079588a100956900107b97a0f8330750208201b5dd95670010492798f895670010492790f895680010492880f8043307209568ff079588810095690010492988f85020840183dd3908bc000256183f0b2003bc000240019517e08479e07b69380164913307d0000283778399330840330086010a093302880128731e50228801701e95bc00037bca407bc9387bc8307bc7289567ff079577619568e01350208a0119de95670010827778f8956800017b873895670010827770f87b873095670010827768f87b872895670010827760f87b87209567ff0795774133084050208c01addb95670010827758f895680010828850f895690010829948f8956a001082aa40f850228e01411d5207370d95690001829720956800107b8720f8829728956800107b8728f8829730956800107b8730f89568ff07958821829738956900107b9738f864a77b6a3801502090017adc33082082673801502092013ddf837833092033070a0e9568b81028079568b8100149286004492858044928500449284804039567601095680015502094012cdd9568ff079588b900958900078297c0007b67488297b8007b67408297b0007b67388297a8007b67308267e8009777209877204928a0077b67707b9798008267f8007b9790006489956840108267f0007b978807330750209601dfdb9568ff079588b900492880074928780749286807046489330720956820104929700750209801b7db9517e08477e07b67e00064713309bc00023907bc000256173f0b2003bc000240017b69289517e08479e07b69880064913307d000027b6720837783993308407b671833009a010a09826a880033029c0128cc1b826a880050229c01c51b8268e0007b8a187b89107b8b087b879567001050209e0133dc9568ff079588b900958c000782c74882cb6082c95082ca587b67609577018878017b6958c89808d48709889901c8a9097b6a50d8a90a7b6b68c8ba0ad4a80bd4970cd4cb0b510b640c956bb81095bc00047bc7687bc8707bc9787bca8000956820158267e0005020a00148dc9567ff079577e1073308405020a2018ad9956cff0795ccb90082c2280782c3400782c4300782c03807952b20d82b07c87408d84809da7709c80909d80907c83707d49b0ad48707d47a0a98aa20d49707977720d4a7075207f50a956a00013a072800023a083000023a093800027bc720073a074000027bc818077bc910079568ff079588c1077bc708077bab3064b77b62e0007b6488007b6380007b60785020a40131da826b78826a88008268e0009587405022a601001a5208930a956aff0795aab900492a00078268f00095ab00067bb8e8008268f8007bb8f0009568ff079588a1078269707bb9f8005020a801e4d9826b78826a88008268e0009587605022aa01b3195208460a1409ffffffff000000008268d8007b692801d289098268d0008488ff826ac80084aaff956bff0795bbb900492be00695bc00067bcac8007bc8d0009568ff07958881077bc9d8005020ac017fd9826b78826a88008268e000958780005022ae014d195208e0098268a800956aff0795aab90095ab00067bb8a8008268b0007bb8b0008268b8007bb8b8009568ff07958861078269c0007bb9c0005020b0012cd9826b78826a88008268e0009587a0005022b201fa1852088d099569ff079599b900826860959b00067bb888008268587bb890008268507bb898009568ff0795884107826a687bbaa0005020b401ddd8826b78826a88008268e0009587c0005022b601ab1852083e09956b000182b8956aff0795aab90095ac00067bc86882b8087bc87082b8107bc8789568ff079588210782b9387bc980005020b8018ed8826c78826b8000826a88008267e000d4c709d4ba08d48909989920d4c808978820d498085208e0089569ff079599b9004929600649295806492950063302c0009568ff07958801077b9248065020ba013cd89568ff079588b90049282006492818064928100695890006491908e000826780007b97408267787b9738826788007b9730648a9567ff079577e1069568ff079588c1068269e0007ba928065020bc017f0a9567ff079577a1068268e0005020be019fd69568ff079588b90082870006958b000582baf80082b9f00082b8e8005022c001221952072d08826730017b6838015020c20175da5022c401721a0a09826830018287187b6710018287107b6708018287087b67000182877b67e0009567ff07957781063308405020c60133d69562ff079522b900952700058278c800827ce0008279d000827bd8009587207b683801d8870ac8a9087b693001d89809daaa09c8b9097b6b1801d8b90a7b6c2001c8ac0cd4970ad4c808d48a0a98aa20d49808978820d4a80852088a074922b8054922b0054922a805140900000000000001199568ff07958861067b29c0057b6788005020c801e4d6956c000182c8389587225022ca01841752084a079569ff079599b900826830959b00057bb888008268387bb890008268407bb898009568ff0795884106826a487bbaa0005020cc019ad6956c000182c8389587425022ce013a17520800078268e0006f89826800016f88826a08016faa826b10016fbb956cff0795ccb9007bcb680595cb00057bba707bb8789568ff07958821067bb980005020d00146d6956b000182b73882ba18d4a70782b83082b920d49808d48707987720d4a808978820d48707520797069569ff079599b9004929600549295805492950059568ff07958801064929480542826738015020d201f2d59568ff079588b9004928200549281805492810059589000549190862826720017b9740826718017b9738826730017b9730648a9567ff079577e1059568ff079588c105826938017ba928055020d40135089567ff079577a105826838015020d60155d4956aff0795aab90082a7000595ac000482c8f80082c9f00082cbe800d49707d48b09d47909989920d48707977720d497075207d40564ba8267880064b87b6a38015020d80118d85022da0115180a09826830018287187b67e0008287107b6700018287087b67080182877b6710019567ff07957781053308405020dc01d6d39567ff079577b900957c000482cae00082cbd80082c9d00082c8c800956c00017bc9307bca20d4a9077bc838d4b808d478089888207bcb18d4b707977720d48707520745058267e0006f77826800016f88826908016f99826a10016faa956bff0795bbb90095bc00047bcac0007bc9b8007bc8b0009568ff07958861057bc7a800826738015020de0185d4956a000182a72082a918d47909140700000000010000007ba7181407e0ffffff0000000082a838d8780782a83094877ba92094975107c7047c68a000826738018377209569ff079599b9004929a004492998047b9888049568ff0795884105492990045020e0011cd495670010837740053308a4000a0301956900018297189577c0829838d8780782983094878298209487510769049567b810957c000482c9880082c8900082ca980082cba00082673801837740956cff0795ccb9007bcb800495cb00047bba787bb8709568ff07958821057bb9685020e201a9d395670010837760053308c4000a03011407a0ffffff0000000095690001829838d87807829830948782982094875107f2039567b810957c000482c9a80082c8b00082cab80082cbc00082673801837760956cff0795ccb9007bcb600495cb00047bba587bb8509568ff07958801057bb9485020e40132d39567ff079577b9004927400449273804492730049568ff079588e1044927280433075020e6010ad30a0b3308d000032103d800032103d000037b6830012003e00003000000019567b8104927e0044927d8044927d0044927c80433088000826738015020e8019ad5826828818856181f0b826928480920019569b8104829e80420492920054929180549291005492908058268300197882098882014090000000018000000d49802956880159788209888209569c015979920d4890a97772098772014080000000080000000d4870b8267209777209877209568a015978820d4780c3308ff3309ff64270a0101520705029567ff079577a10433085020ea01f7d09569ff079599b900959a000382a7f00082a8f80082a9e8008477ff826b2801d2b8088499ffd4890ad47a0a510a21826af000d3a909826a70d3a808826af800d3a707d49707d487075107cd039567ff07957781043308405020ec019ad09567ff079577b900957c000382cae00082cbd80082c9d00082c8c800956c00017bc9307bca28d4a9077bc838d4b808d478089888207bcb20d4b707977720d48707520709029569ff079599b9004929b8034929b0034929a803140700000000a079c3089568ff07958861047b97c003826738015020ee015bd1956a000182a72882a920d47909140700000000010000007ba7201407fcffffff0000000082a838d8780782a83094877ba928949751079d01826738018377049569ff079599b9004929a0034929980349298803209568ff0795884104492990035020f001f5d0956900018297209577dc829838d878078298309487829828948751075101826738018377249569ff079599b9004929800349297803492968031c9568ff0795882104492970035020f201a9d01407bcffffff0000000095690001829838d878078298309487829828948751070101826738018377443a084800023a095000023a0a580002956bff0795bbb90095bc00037bc8607bc9587bca50140900000000455255549568ff07958801047bc94833007801283dd09567ff079577c1043308405020f401f5ce9567ff079577b900957900048298207b6830018298187b6828018298107b6820018297087b6738010a0d01956b000182b83082b920d4980882ba2882b938d4a909d48909989920d4a808978820d4980852085598782052084f64787b67280183777b673001826738015020f60190d29568b810826928017a8928058377956800108388e00533090a0c019567b8108177280582683001ac870f0a0d0164789877205107fe01003308d0000283883307012812838833070133090a0e3308d0000228f233090a0e3308d0000228e73308d0000228e03308d0000228d93308d0000228d23308d0000228cb3308d0000228c43308d0000228bd3308d0000228b63308d0000228af3308d0000228a83308d0000228a13308d00002289a3308d0000228933308d00002288c3308d0000228853308d00002287eff3308d000022876ff3308d00002286eff3308d000022866ff3308d00002285eff3308d000022856ff3308d00002284eff3308d000022846ff3308d00002283eff3308d000022836ff3308d00002282eff3308d000022826ff3308d00002281eff9567ff079577b9004927d8024927d0024927c8026479140700000000717b484e9568ff07958881037b97e00233075020f80164ce9568ff079588b9004928c0024928b8024928a8021164893307049568ff07958861034929b0025020fa0138ce826728817756173f0b826828480840013307013309248268180a0e01956aff0795aab9008267a80095a800027b87e8008267c80095ac00037bc7088267f0007bc7288267b0007b87f0008267d0007bc7108267f8007bc7308267b8007b87f8008267d8007bc7188267e8007bc7388267c0007bc7826790007bc7209567ff079577e1039568ff079588c1039569ff079599a103826b98007bcb405020fc01690433078268182826fe826738017b6830015020fe0152d0837881693001330701330000020a0e01951170ff7b1088007b1580007b1678951590008411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520657821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b307b13507b1a587b17603307409518507b1c6850200202abcc955170ff8210880082158000821678951190003200491140491138491130140700000000717b484e9518307b174833075020040275cc49112849112049111041330704951810491118502006025ccc3908bc000256183f0b2003bc000240013308d000028388330701330924330008020a0e019511e0fe7b1018017b1510017b160801951520018411f0828b10828a18828c0882827b1a687b1c78d4ac08d4b20ad48a0a98aa207b1b70d4b808978820d4a8087b170852084b028297187b17488296108297087b175082977b17584921f8004921f0004921e8009518e0004921e0002064277b126050200a02bdcb821858d46807821948821a50d4a909d497079877207b1620d46909979920d497075207f2019517c00050200c0254ca821770821868d47808140700000000010000007b17101407e0ffffff00000000821960d87907821a7894a77b181894875107b401821ad800821bd000821cc8008218c0008397207b18287b18a0007b1c307b1ca8007b1b387b1bb0009518a0007b1a407b1ab800649650200e021fcb8217109577c0d876078218789487821818948751076201821748821820d487071408e0ffffff00000000821a58d88a08821b5094b8947851083e016469821828821c38d4c807821b40821630d46b0bd4b707987720d4cb0b97bb20d4b7075207170183974083aa207b1a586486502010027ccd7b17508217586468502012026ecd6478821750646950201402d2c8821760c86707d86708821978821b30c8b909c88909d3b90ad8b90bdaa80b821870821a38c8a808d8a80a821c68821640c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ac0ffffff00000000d8a70a949a948a510a94008377404921980049219000492188009518800049218000502016021dca82162895661f1407e0ffffff01000000d26707821860c88707d88708821a78c88a09d8a90ada880a821870c88a0ad88a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87189551e0fe8210180182151001821608019511200132000033080433001a020a0333021c02283c0b50221c02390b510a0b50221e02190c32003308d0000283883307013309330020020a0e3302220228840c50222202810c330824330024020a033302260228fc0a50222602f90a510a0b50222802d90b32003308d000028388330701330933002a020a0e01951100fe7b10f8017b15f0017b16e801951500028411e06416828a107b6a9800828a087b6a900082887b6888008272827808807710829b18829c10829a0882997b6b287b6bd8017b6c207b6cd0017b6a187b6ac8017b69107b69c0011409ffffffff000000007b69784926b8017b67307b67b0017b68387b68a8019568a0017b62407b62a001330750202c02a7c849269801492690014926800102330720956880014926880150202e0289c83308bc00023907bc000256173f0b2003bc000240019517e08479e07b696864913307d00002837783997b6880003308407b67700a09826a6882a71882a81082a90882aa6f777b67606f877b67586f977b67506fa77b67489517e08477e07b67686471826788008477ff826890008488ff82699800826a78d2a909492678017b69787b6970017b6888007b686801956860017b6790007b676001330750203002e8c7826748956a00017ba7588267507ba7508267587ba748330720956840018269607ba94050203202bfc782688000818756173f08480840019517e08477e07b67980064718379330840826770330034020a09826a98003302360228ee09826a980050223602e7098267687b7a187b79107b78087b7b9568c00150203802ddc89567200133084050203a0223c6956b000182b73882b83082b92882ba2050223c02c7075207b600826710956900017b978267187b97088267207b9710956800018267287b971864a77b6a980050203e0218c74926b8008267787b67b000826788007b67a800826790007b67a0004926d8008267307b67d0008267387b67c8003a077800023a088000023a09880002826a407b6ac0007b67f8007b68f0007b69e8003a079000023308209569e000956ac000956ba0007b67e000826798005020400283c8955100fe8210f8018215f0018216e801951100023200009511807b10787b15707b1668951580008411f0829b828a829608828308829410828c10829918828818d363027b1608d863067b1b187b1a10d8ba0a7b1ada2a06d3980ad89800d84c02daa200d34c0bd4ba0adaa600520046c94c0ac99808c92808d86a09c99808c96a0a821908c99309821bc9b909821b18821c10c9bc0b7b7b7b79087b7a107b7818955180821078821570821668951180003200491150491148491140140700000000717b484e9518407b1758330750204202d4c54911384911304911201133070495182049112850204402bbc53908bc000256183f0b2003bc000240013308d000028388330701330924330046020a0e01951140fc951a00037ba0b8007ba5b0007ba6a8009515c0038411e06416829a187b6a68829a107b6a60829a087b6a5882997b69508289107b69308289087b692882887b682082798278088077104926f8027b67387b67f0027b68407b68e8029568e0027b69487b69e00233075020480225c54926d8024926d0024926c8023307209568c0024926c0020150204a0207c53308bc00023907bc000256173f0b2003bc000240011407ffffffff000000007b67189517e08479e07b691064913307d0000283777b687083993308407b677833004c020a09826a1033024e02282f07826a1050224e0229077b6a38037b6930037b6828037b6720039567a002956820035020500283c5826aa0028267a8028268b0028269b802826b687b6b5802826b607b6b5002826b587b6b4802826b507b6b40027b6978027b6870027b6768029567800295686002956940027b6a600250205202b9fd826798028268900282698802826a8002956b00037bb7187bb8107bb9087bba492638028267387b6730028267407b672802956820028267487b672002330750205402ffc349261802492610024926000201330720956800024926080250205602e1c3826870818756173f08480840019517e08477e07b671064718379330840826778330058020a09826a1033025a02284504826a1050225a023f047bba587bb9507bb8487bb740956740039568000350205c0201c58267208477ff8268288488ff826930826a18d2a9094926f8017b69207b69f0017b68287b68e8019568e0017b67307b67e001330750205e0254c34926d8014926d0014926c001013307209568c0014926c8015020600236c3826870818755174008480840019517e08477e07b671864718379330840826778330062020a09826a1833026402289a03826a185022640294037bba787bb9707bb8687bb7609567a0019568600350206602d5c38264b801956900018297b0008298a000829ba8009519e0849ae064a1826c58c8bc0c826250c882027b6218d88208c88c00d3b009d8b002da9802826960c87909c8290bd89b03826868c84808d87909c89808c83808d87b03d38409d8480cda930cd3b707d49707da720c7bab107ba0088267187ba77b6a187ba818520c7701492698018267307b6780018267287b678801956880018267207b6790013307502068023fc249267801492670014926600101330720956860014926680150206a0221c2826970819756173f08480940019517e08477e07b67706471837933084082677833006c020a09826a7033026e02288502826a7050226e027f027bba98007bb990007bb888007bb7800095678003826818502070023ec3956740013308405020720284c0956b000182b75882b85082b94882ba405022740228025207b6008267507b6720018267587b6728018267607b673001956820018267687b67380164a77b6a785020760279c14926d8008267207b67d0008267287b67c8008267307b67c0004926f8008267387b67f0008267407b67e8003a079800023a08a000023a09a80002826a487b6ae000956c00017bc7187bc8107bc9083a07b0000233082095690001956ae000956bc0007bc782677850207802e8c2955140fc951700038270b8008275b0008276a8009511c0033200004926b0004926a8004926a000140700000000717b484e9568a0007b67b800330750207a02cbc049269800492690004926800011330704956880004926880050207c02adc0826770817756173f0b826870480840013307013309248268780a0e330733007e02288bc3330750207e0286c3330701502080027dc39511b07b10487b15409515508411f08272827308827b10827718828c828908828a108288187b18187b1a107b19087b1c7b17387b1b307b132895172064187b122050208202c5f29551b08210488215409511503200d88708c88a09d8a90ada880ac8ba0ad8ba08826b8000c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b8083202d88708c88a09d8a90ada880ac8ba0ad8ba08826b68c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b80832028269100182970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820320282a71882a81082a90882aa6f776f8b6f996faa3202d49707d48a09d47909989920d48707977720d49707320282a71882a81082a90882aa6f776f886f996faa956b00033202d8870882ca30c88a09d8a90ada880a82c818c88a0ad88a0882cb20c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b80832026f877b67a0006f977b6798006fa77b6790009517e08477e032028269f80082970881981082996f77977a206f88988820d4a8089877206f99979a20d4a7079899203202826a380182a71882a81082a90882aa6f776f886f996faa956bb8103202956a000182a72882a820d487071408e0ffffff0000000082a938d8890882a930949894783202d49707d4a809d47909989920d4a707977720d497073202d49a0ad48709d4a909989920d4a808978820d4980832026471837933084082672001320282171082181814090000000001000000d37909d48909987a2088aa01948a939a3202826768826860d487071408e0ffffff00000000826978d8890882697094989478320295680001828b088289828718d4b707828a10d4a908d47808988820d4a707977720d4870732029518e08489e07b697064918377816878839932023307b810c8760a95ab000332023307b810c8760a95ab00023202956a000182a72082a830d4870782a92882a838d49808d47808988820d49707977720d48707320282a71882a81082a90882aa6f7b6f886f996faa320282a71882a81082a90882aa6f776f886f996faa32028219821a087b697b6a087b67107b68189551c08210388215308216289511403202826768826870d48707826960826878d49808d47808988820d49707977720d4870732029518e08489e07b69300164918377816838018399320282b75882b86082b95082ba48d49808d4a707d48707320282b77882b8800082b97082ba68d49808d4a707d4870732029511c07b10387b15307b16289515408411e064768317320249922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a498a88889424495292242925492409a592929222458a142952a44851922222a224491042c2509a9486442222222252440489482292448a8820112222a21111912422219224492222492212424444848410498888002212222122224224219424494a244424128944442489480811111112422411114044422444444488248492244989848888244992244912212284101191922424498894528a888808491222a594224924449a24424444442489849072920891a4529292442491902449922422228210114122918848844888880849424849122222424444448884888890a1549284aaa4509524448844944604040412484020010101010181444444a42444442449a22491442222222222a2101112114204932854521222222222442412894442444404492492249114918888886844904491481089442211114912912048222242044112091101444410092222222222222222222222220892222211892489888888224190449148101111411221848810115144222222a248102451928888444444444444448a888888880851140922a2482412894422111111111111414482888824499224890811119188888846444491248922111111414422914824882409924824492229221111115124089228120922222248222242442222221a11114592248a4444880822128944224124499044a22489a48844444444912048a248448288888888888808912422224190444444448820482221222222228848101111111111894422498a888848102445242299244922114924499224498aa0a8484444441409922449122589884444444444442222222222524422299148121189481444844404214430894245221a492a822844114582888828888888884444104526114411892092144144442409111111110511211141149944108d24154114512488888882884422894810452611441189209294441144492222222222222222888888a444444444144484440451641241349254045144912022220a221289242241149944104524824852041111912822222922924444444482481011114112111122121111118d08922849001111898888888848c488442291481489828811a14404214430894245a248525114451245221189888828888848a44424882293a844149108224911444c2449924810499224499248922492128988886844444492244a12118922914844a48888888888104591208a44229148241211111111448288880892888810914892888888281244442449a248222251444444444424222222222222524444444444448a8844241245442392241195443422492289241249924444828888884892244944041011111141244900012495242222444444104992549288881011412480a494248488480248440489a0a481444444449120499224519288884424291111110511111112111184082651a8449120922412414424221189482441444444441091884424229288224804a5a2181121228888482412892412114544414444281141128510c12451482551442288244510114992244992244922224944041109222222922449922449440821424444a4884890880411111111119108129120028848241211111111412222888888888888880812114144242291884804898820a28848924424824444922489888888880822222242248914111111444410111111414404419148248a88041111119148224924922449222202888808220922221189444422882488288aa288882422824892244912111111112288888888482452444444101141444444244992288a202812894411912022222222499224494451144544444444049124800490a41411898888880822a291242945444444242222894810110d2092942222222212119144248888888828288410012222222248918c10111149008924922480248924a9115110111191489244924812110922222222922449924444440410111144920012409252442222424404912429452422224444104024294524841011490288482422414424128944234992244992a28820228aa8119196184aa542150a8542a15028140a8542a150282424242424242424242424242422220a20220a22224289882045324923222222918848242212892211111191a0242228128d88442a29499224499224499224492a2949922449922449124444a2240124054924094204434934222292a4244992249124291111a1044992244922822401248024a588884822918844419294224900492a4a92244912490a92825290244992244992244900a94844440449004992244992244992942422229a2812242894a248902812242894a21111911289a224498944221140229188444144484410420493142a9292a4524a4952241249242222a2209124492441149944255144224892228804912441244a92488a20121111914884101211111211114144443449229524499224254992244992a424294992444902480a92481284088692684444444a92a424492989442212051191084108110c20490aa5244a24414444441011914824121111111144444492229188444144484490229354122592204922822449128944240a224222821499a4922891044912114444445292244992244992244992a424229188444144484490229354122592202222124482489220128944244a10894422128910422292844444092222221a11014414448444042992492a529020495292922429494a902425491249922425499224499222a994a42425a9aa24495292aaa22449922449925414455224959294a448525514490248522549929224499528092049aa240124a922254992a424958a4491289224499294a4aa925455294992a4244992242551514992a44492a424492a00"
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": "/// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 5:\"contracts/interfaces/IUniswapV2ERC20.sol\"\nobject \"UniswapV2ERC20_375\" {\n    code {\n        {\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            let memPtr_1 := mload(64)\n            finalize_allocation(memPtr_1, 64)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 10)\n            let _1 := add(memPtr_1, 32)\n            mstore(_1, \"Uniswap V2\")\n            /// @src 0:1327:1349  \"keccak256(bytes(name))\"\n            let expr := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _1, mload(/** @src 0:1327:1349  \"keccak256(bytes(name))\" */ memPtr_1))\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            let memPtr_2 := /** @src -1:-1:-1 */ 0\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            let memPtr_3 := mload(64)\n            finalize_allocation(memPtr_3, 64)\n            memPtr_2 := memPtr_3\n            mstore(memPtr_3, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 1)\n            let _2 := add(memPtr_3, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 32)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_2, \"1\")\n            /// @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\"\n            let expr_1 := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _2, mload(/** @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\" */ memPtr_3))\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            let expr_mpos := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ mload(64)\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            let _3 := add(expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 32)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_3, /** @src 0:1176:1309  \"keccak256(...\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 64), /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ expr)\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 96), expr_1)\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 128), /** @src 0:1044:1097  \"assembly {...\" */ chainid())\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160), /** @src 0:1439:1443  \"this\" */ address())\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            mstore(expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160)\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            finalize_allocation(expr_mpos, 192)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            sstore(/** @src 0:1106:1468  \"DOMAIN_SEPARATOR = keccak256(...\" */ 0x03, /** @src 0:1125:1468  \"keccak256(...\" */ keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _3, mload(/** @src 0:1125:1468  \"keccak256(...\" */ expr_mpos)))\n            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"UniswapV2ERC20_375_deployed\")\n            codecopy(_4, dataoffset(\"UniswapV2ERC20_375_deployed\"), _5)\n            return(_4, _5)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 9:\"contracts/libraries/SafeMath.sol\"\n    object \"UniswapV2ERC20_375_deployed\" {\n        code {\n            {\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := 0\n                        let size := 0\n                        size := 0\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, 64)\n                        memPtr := memPtr_1\n                        mstore(memPtr_1, 10)\n                        mstore(add(memPtr_1, 32), \"Uniswap V2\")\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, memPtr_1), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_4481()\n                        /// @src 0:2393:2398  \"value\"\n                        fun_approve(/** @src 0:2372:2382  \"msg.sender\" */ caller(), /** @src 0:2393:2398  \"value\" */ value0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ calldataload(36))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(0)\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_4481()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        let _2 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _2)\n                        mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 0:2703:2730  \"allowance[from][msg.sender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)\n                        /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                        if /** @src 0:2703:2751  \"allowance[from][msg.sender] != type(uint256).max\" */ iszero(eq(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sload(/** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot_1), /** @src 0:2734:2751  \"type(uint256).max\" */ not(0)))\n                        /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                        {\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            mstore(0, _2)\n                            mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            let dataSlot_2 := keccak256(0, 64)\n                            /// @src 0:2797:2824  \"allowance[from][msg.sender]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2797:2812  \"allowance[from]\" */ dataSlot_2)\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)\n                            /// @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\"\n                            let expr := fun_sub(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sload(/** @src 0:2797:2824  \"allowance[from][msg.sender]\" */ dataSlot_3), /** @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\" */ value)\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            mstore(0, _2)\n                            mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            let dataSlot_4 := keccak256(0, 64)\n                            /// @src 0:2767:2794  \"allowance[from][msg.sender]\"\n                            let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2767:2782  \"allowance[from]\" */ dataSlot_4)\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)\n                            sstore(/** @src 0:2767:2794  \"allowance[from][msg.sender]\" */ dataSlot_5, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ expr)\n                        }\n                        /// @src 0:2905:2910  \"value\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x30adf81f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, /** @src 0:381:383  \"18\" */ 0x12)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _3 := sload(/** @src 0:533:564  \"bytes32 public DOMAIN_SEPARATOR\" */ 3)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _3)\n                        return(memPos_6, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_4481(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:418:459  \"mapping(address => uint) public balanceOf\" */ 1)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _4)\n                        return(memPos_7, 32)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_4481(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let _5 := sload(keccak256(0, 64))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _5)\n                        return(memPos_8, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_2 := 0\n                        let size_1 := 0\n                        size_1 := 0\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, 64)\n                        memPtr_2 := memPtr_3\n                        mstore(memPtr_3, 6)\n                        mstore(add(memPtr_3, 32), \"UNI-V2\")\n                        let memPos_9 := mload(64)\n                        return(memPos_9, sub(abi_encode_string(memPos_9, memPtr_3), memPos_9))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_4481()\n                        /// @src 0:2535:2540  \"value\"\n                        fun_transfer(/** @src 0:2519:2529  \"msg.sender\" */ caller(), /** @src 0:2535:2540  \"value\" */ value0_2, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ calldataload(36))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, 1)\n                        return(memPos_10, 32)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_4481()\n                        let value1_1 := abi_decode_address()\n                        let value_1 := calldataload(68)\n                        let value_2 := calldataload(100)\n                        let value_3 := calldataload(132)\n                        let _6 := and(value_3, 0xff)\n                        if iszero(eq(value_3, _6)) { revert(0, 0) }\n                        if /** @src 0:3140:3167  \"deadline >= block.timestamp\" */ lt(value_2, /** @src 0:3152:3167  \"block.timestamp\" */ timestamp())\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 18)\n                            mstore(add(memPtr_4, 68), \"UniswapV2: EXPIRED\")\n                            revert(memPtr_4, 100)\n                        }\n                        let _7 := sload(/** @src 0:3302:3318  \"DOMAIN_SEPARATOR\" */ 0x03)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let _8 := and(value0_3, sub(shl(160, 1), 1))\n                        mstore(0, _8)\n                        mstore(32, 4)\n                        let dataSlot_6 := keccak256(0, 64)\n                        let _9 := sload(/** @src 0:3539:3554  \"nonces[owner]++\" */ dataSlot_6)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        if eq(_9, /** @src 0:2734:2751  \"type(uint256).max\" */ not(0))\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot_6, add(_9, 1))\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        let expr_mpos := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        let _10 := add(expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 32)\n                        mstore(_10, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 64), _8)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 96), and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 128), value_1)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 160), _9)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 192), value_2)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        mstore(expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 192)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 224)\n                        /// @src 0:3336:3628  \"keccak256(...\"\n                        let expr_1 := keccak256(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _10, mload(/** @src 0:3336:3628  \"keccak256(...\" */ expr_mpos))\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        let expr_mpos_1 := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        let _11 := add(expr_mpos_1, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 32)\n                        mstore(_11, shl(240, 6401))\n                        mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 34), _7)\n                        mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 66), expr_1)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        mstore(expr_mpos_1, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 66)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        finalize_allocation(expr_mpos_1, 98)\n                        /// @src 0:3217:3652  \"keccak256(...\"\n                        let expr_2 := keccak256(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _11, mload(/** @src 0:3217:3652  \"keccak256(...\" */ expr_mpos_1))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        let _12 := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_12, expr_2)\n                        mstore(add(_12, 32), _6)\n                        mstore(add(_12, 64), calldataload(164))\n                        mstore(add(_12, 96), calldataload(196))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        mstore(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0, 0)\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        if iszero(staticcall(gas(), /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 1, /** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ _12, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 128, 0, 32))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        {\n                            /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:3746:3776  \"recoveredAddress != address(0)\"\n                        let _13 := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ mload(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0), sub(shl(160, 1), 1))\n                        /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        let expr_3 := /** @src 0:3746:3776  \"recoveredAddress != address(0)\" */ iszero(iszero(_13))\n                        /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        if expr_3\n                        {\n                            expr_3 := /** @src 0:3780:3805  \"recoveredAddress == owner\" */ eq(_13, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _8)\n                        }\n                        if iszero(expr_3)\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 28)\n                            mstore(add(memPtr_5, 68), \"UniswapV2: INVALID_SIGNATURE\")\n                            revert(memPtr_5, 100)\n                        }\n                        /// @src 0:3894:3899  \"value\"\n                        fun_approve(value0_3, value1_1, value_1)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_4481()\n                        let value1_2 := abi_decode_address()\n                        mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ 2)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ value1_2, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_7)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)\n                        let _14 := sload(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_8)\n                        /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _14)\n                        return(memPos_11, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_4481() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 168 @src 0:1889:2055  \"function _approve(address owner, address spender, uint value) private {...\"\n            function fun_approve(var_owner, var_spender, var_value)\n            {\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:1969:1978  \"allowance\" */ 0x02)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)\n                /// @src 0:1969:1994  \"allowance[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ var_spender, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:1969:1985  \"allowance[owner]\" */ dataSlot)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)\n                sstore(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ dataSlot_1, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ var_value)\n                /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                let _2 := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_2, var_value)\n                /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                log3(_2, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x20, /** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ and(/** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ var_spender, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 2269 @src 9:318:445  \"function sub(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_sub(var_x, var_y) -> var_z\n            {\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                let diff := sub(var_x, var_y)\n                let _1 := gt(diff, var_x)\n                if _1\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x24)\n                }\n                /// @src 9:397:406  \"z = x - y\"\n                var_z := diff\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 206 @src 0:2061:2277  \"function _transfer(address from, address to, uint value) private {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                let _1 := and(var_from, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:2154:2180  \"balanceOf[from].sub(value)\"\n                let _2 := fun_sub(/** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40)), /** @src 0:2154:2180  \"balanceOf[from].sub(value)\" */ var_value)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40), _2)\n                let _3 := and(var_to, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                let _4 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40))\n                let sum := add(_4, var_value)\n                if gt(_4, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x24)\n                }\n                if /** @src 9:264:280  \"(z = x + y) >= x\" */ lt(sum, _4)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"ds-math-add-overflow\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x40), sum)\n                /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                let _5 := /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_5, var_value)\n                /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                log3(_5, /** @src 0:175:3909  \"contract UniswapV2ERC20 is IUniswapV2ERC20 {...\" */ 0x20, /** @src 0:2245:2270  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202dc34ad929fdcf28be7d06a8df97110486d6a0b88eca02ac5a97e616b4333b6e64736f6c634300081a0033\"\n    }\n}\n",
          "hash": "26e3cbe7f48fb8c4bd2f1136b8a385bf381d92fc5304ba87e7a3514287cf7688",
          "factoryDependencies": {}
        }
      },
      "contracts/UniswapV2Factory.sol": {
        "UniswapV2Factory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeToSetter",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeTo",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_feeToSetter",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2Factory.sol\":\"UniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x650e75119c6096dd47324f28bf1b68934f16d04449f5683d182d45b37d9e8349\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f92f159daf0829baede379a21e5c6266e53f1b19b34984e0f37cd0c0079ffb2\",\"dweb:/ipfs/QmcM5nuCCgiEBELimmeRuwywb7thLSnUWeQmN9JxnoWxPA\"]},\"contracts/UniswapV2Factory.sol\":{\"keccak256\":\"0x5bf7ab096cec14a41a291e30c2ef7b969c560290f138cce975a015f880395180\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://785f0f41e674cbffb71c0182277af238ed64eebe7ce20f174784b9ebe5e21a74\",\"dweb:/ipfs/QmRCSpsz585nNoCWjvMJxJUz524DoVfjssseyXVJ7S2xX4\"]},\"contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0xfa5895d1fbf3437cf8ecaef3c09e419eee77e6374a1dbd9c4c846359ff84ae16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb60020a33711a583ab159e0bc6e2dbd891930367dc3cbfb845c31ebf96fa88\",\"dweb:/ipfs/QmfSRYBkt6Gi1EN2DLoXDHKMvahUJDv3JVsmNpgreAv2Rg\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xa35a5e8d25ccd83006ed1896228b451a6b36980e6f95c7e21d0d78a5e7302ef2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3138bf93c9b139decb6a078438675dbfe45aff2520992f76431bfaee8a57a54\",\"dweb:/ipfs/QmPZ1RGQzXVh51sGLkQYZn8pS62yizaCuLVBgX8eAnCfxA\"]},\"contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xfcb4599d13ff6a6f490f0b46c511bcc669d9ff7352b34d2620649248ae33a71c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a63c7c3f8a9769cdf2e2d253638467743bbc4c4e978469bdb43ae0a3829e45f4\",\"dweb:/ipfs/QmaWaLH2mqgL35diCYwbRcHEF29odWf1DBqtpx1Ru92MZQ\"]},\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x1ee410a23a1970896fdbc82047d8a830a0075caaee4ea0899cd6f8a62ab60f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6dba7e23e97d9a2d98410b2107d82d459340826a582e9861f8f9179c2c5d534\",\"dweb:/ipfs/QmNdwjhQetZEXytKnjRiRBwMqgwvcTAyLCiyqScoZvzdLd\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x880188619595a26a6910ed51c0fac0071e7e1d767b8cd6ec851d7647a613c9b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9e53895d85e430896f417a23718c68d46c25441fcdb7e1d10f22dff3e2fd6a\",\"dweb:/ipfs/QmPHCKG86BetisJNubJc8JVwHjKGmsMkPQMZhmJeWDotMs\"]},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x39344e3d1744107bdaa90160521d12b608ccdf3eb4e155d1e3a75643706fe75b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d464068de18dc02a920039e29854d70bdd9380eb1424e31483d68c54ea5b36\",\"dweb:/ipfs/QmdzateJhB55gPuN4Bmjwcn86XU6Xqq3B5JJ7EewKxEpDm\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xf6d1c239f6ef53a73589a8fc9a3489886d48164c4e817fc4432d9f2d6fa8d9c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efdb6ee1811b97fd5a96f1020f757fce95415cc47da33b8136ed39e4b103742\",\"dweb:/ipfs/QmWBcC4w3Hb4HoRuqEUse9T3deV5TKbwqPoAAkqXJnNXCT\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b980727960c67aeff9b83b7b760bd2b1e817f5464ddefd00b23fc926ab6cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4edd6ef81d4c39f34f10e8867fe396b44680c9f6025a0c5d0e265d7f6d5b126a\",\"dweb:/ipfs/Qmaod5Jufw7AXq85ZzNdmxRmLFkJGE5TSxtN6PqFon3pL8\"]},\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0xd4f32736df121a249b50aac630ed4f8d7a413da0a018fa1acf5942eabb62e4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8ba8f2ab1b30bcfc863c57a1ffbf3379ca1400e0412ed026d5cdbf8b9a0264\",\"dweb:/ipfs/QmTiuEzjGevdWCue8wpwMwyxAfN3YjfujqN3D6M4SD6BAq\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 192/65776 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 3740\n// Code size = 12464 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x200c8]\n     5: jump @41 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x300f0\n    14: i32 a0 = a0 + 0\n    16: ecalli 14 // 'set_immutable_data'\n    18: jump @41\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @12\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @12\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 [@dyn 3] (gas: 32)\n   577: a0 = reverse a0\n   579: a2 = reverse a2\n   581: a3 = reverse a3\n   583: a1 = reverse a1\n   585: u64 [sp + 0x18] = a1\n   588: u64 [sp + 0x10] = a3\n   591: u64 [sp + 0x8] = a2\n   594: u64 [sp] = a0\n   596: u64 [sp + 56] = 0\n   599: u64 [sp + 48] = 0\n   602: u64 [sp + 40] = 0\n   605: u64 [sp + 32] = 0\n   608: u32 [sp + 64] = 0x20\n   612: i32 a1 = sp + 0\n   614: i32 a3 = sp + 0x20\n   617: i32 a4 = sp + 0x40\n   620: a2 = 0xffffffffffffffff\n   623: a0 = 0\n   625: ecalli 7 // 'get_storage'\n   627: a0 = u64 [sp + 0x38]\n   630: a1 = u64 [sp + 0x30]\n   633: a2 = u64 [sp + 0x28]\n   636: a3 = u64 [sp + 0x20]\n   639: a0 = reverse a0\n   641: a1 = reverse a1\n   643: a2 = reverse a2\n   645: a3 = reverse a3\n   647: u64 [s1 + 0x18] = a3\n   650: u64 [s1 + 0x10] = a2\n   653: u64 [s1 + 0x8] = a1\n   656: u64 [s1] = a0\n   658: t0 = 8, jump @446\n      : @7 [@dyn 4] (gas: 1)\n   663: ret\n      : @8 (gas: 40)\n   665: sp = sp + 0xffffffffffffffa0\n   668: u64 [sp + 0x58] = ra\n   671: u64 [sp + 0x50] = s0\n   674: s0 = sp + 0x60\n   677: sp = sp & 0xffffffffffffffe0\n   680: t0 = u64 [a0]\n   682: a3 = u64 [a0 + 0x8]\n   685: a4 = u64 [a0 + 0x10]\n   688: a0 = u64 [a0 + 0x18]\n   691: t1 = u64 [a1]\n   693: a2 = u64 [a1 + 0x8]\n   696: a5 = u64 [a1 + 0x10]\n   699: a1 = u64 [a1 + 0x18]\n   702: t2 = reverse a0\n   704: a4 = reverse a4\n   706: a3 = reverse a3\n   708: a0 = reverse t0\n   710: t0 = reverse a1\n   712: a5 = reverse a5\n   714: a2 = reverse a2\n   716: a1 = reverse t1\n   718: u64 [sp + 0x18] = a0\n   721: u64 [sp + 0x10] = a3\n   724: u64 [sp + 0x8] = a4\n   727: u64 [sp] = t2\n   729: u64 [sp + 0x38] = a1\n   732: u64 [sp + 0x30] = a2\n   735: u64 [sp + 0x28] = a5\n   738: u64 [sp + 0x20] = t0\n   741: i32 a1 = sp + 0\n   743: i32 a3 = sp + 0x20\n   746: a2 = 0xffffffffffffffff\n   749: a4 = 0x20\n   752: a0 = 0\n   754: ecalli 15 // 'set_storage'\n   756: sp = s0 + 0xffffffffffffffa0\n   759: ra = u64 [sp + 0x58]\n   762: s0 = u64 [sp + 0x50]\n   765: sp = sp + 0x60\n   768: ret\n      : @9 [@dyn 5] (gas: 2)\n   770: u64 [sp + 0x38] = a1\n   773: ra = 12, jump @12\n      : @10 [@dyn 6] (gas: 41)\n   777: a1 = reverse s1\n   779: u64 [sp + 0x78] = a1\n   782: a1 = u64 [sp]\n   784: a1 = reverse a1\n   786: u64 [sp + 0x70] = a1\n   789: a1 = u64 [sp + 0x8]\n   792: a1 = reverse a1\n   794: u64 [sp + 0x68] = a1\n   797: a1 = u64 [sp + 0x10]\n   800: a1 = reverse a1\n   802: u64 [sp + 0x60] = a1\n   805: a1 = u64 [sp + 0x18]\n   808: a1 = reverse a1\n   810: u64 [sp + 0x98] = a1\n   814: a1 = u64 [sp + 0x20]\n   817: a1 = reverse a1\n   819: u64 [sp + 0x90] = a1\n   823: a1 = u64 [sp + 0x28]\n   826: a1 = reverse a1\n   828: u64 [sp + 0x88] = a1\n   832: a1 = u64 [sp + 0x30]\n   835: a1 = reverse a1\n   837: u64 [sp + 0x80] = a1\n   841: a1 = u64 [sp + 0x40]\n   844: a1 = reverse a1\n   846: u64 [sp + 0xb8] = a1\n   850: a1 = u64 [sp + 0x48]\n   853: a1 = reverse a1\n   855: u64 [sp + 0xb0] = a1\n   859: a1 = u64 [sp + 0x50]\n   862: a1 = reverse a1\n   864: u64 [sp + 0xa8] = a1\n   868: a1 = u64 [sp + 0x58]\n   871: a1 = reverse a1\n   873: u64 [sp + 0xa0] = a1\n   877: i32 a2 = a0 + 0\n   879: a3 = i32 [sp + 0x38]\n   882: i32 a0 = sp + 0x60\n   885: a1 = 0x3\n   888: ecalli 6 // 'deposit_event'\n   890: t0 = 14, jump @448\n      : @11 [@dyn 7] (gas: 1)\n   895: ret\n      : @12 (gas: 2)\n   897: i32 a2 = a0 >> 0x10\n   900: jump @17 if a2 != 0\n      : @13 (gas: 4)\n   903: a1 = a1 + a0\n   906: i32 a1 = a1 + 0x1f\n   909: a1 = a1 & 0xffffffffffffffe0\n   912: jump @17 if a1 >u 65536\n      : @14 (gas: 3)\n   918: a2 = 0x200c4\n   923: a3 = i32 [0x200c4]\n   928: jump @16 if a3 >=u a1\n      : @15 (gas: 2)\n   931: u32 [0x200c4] = a1\n   936: fallthrough\n      : @16 (gas: 4)\n   937: a1 = 0x200d0\n   942: i32 a0 = a0 + 0\n   944: a0 = a0 + a1\n   947: ret\n      : @17 (gas: 1)\n   949: trap\n      : @18 (gas: 6)\n   950: sp = sp + 0xfffffffffffffff0\n   953: u64 [sp + 0x8] = ra\n   956: u64 [sp] = s0\n   958: s0 = a0 & 0x1\n   961: ecalli 3 // 'call_data_size'\n   963: fallthrough\n      : @19 (gas: 3)\n   964: a1 = 0x200c0\n   969: u32 [0x200c0] = a0\n   974: jump @21 if s0 == 0\n      : @20 (gas: 3)\n   977: ra = 0x10\n   980: t0 = 0x14\n   983: jump @443\n      : @21 [@dyn 8] (gas: 1)\n   986: ra = 18, jump @44\n      : @22 [@dyn 9] (gas: 1)\n   991: t0 = 20, jump @443\n      : @23 [@dyn 10] (gas: 2)\n   996: ecalli 16 // 'value_transferred'\n   998: fallthrough\n      : @24 (gas: 8)\n   999: a0 = u64 [sp + 0xb0]\n  1003: a1 = u64 [sp + 0xb8]\n  1007: a2 = u64 [sp + 0xa8]\n  1011: a3 = u64 [sp + 0xa0]\n  1015: a1 = a1 | a2\n  1018: a0 = a0 | a3\n  1021: a0 = a0 | a1\n  1024: jump @36 if a0 != 0\n      : @25 (gas: 15)\n  1028: s1 = i32 [0x200c0]\n  1033: a0 = s1 << 0x20\n  1036: a0 = a0 >> 0x20\n  1039: a0 = a0 + 0x1f\n  1042: a0 = a0 & 0xffffffffffffffe0\n  1045: a1 = a0 + 0x80\n  1049: a0 = a1 <u a0\n  1052: u64 [sp + 0x80] = a1\n  1056: u64 [sp + 0x88] = a0\n  1060: a0 = 0 if a0 != 0\n  1062: u64 [sp + 0x90] = a0\n  1066: a0 = 0x40\n  1069: a1 = sp + 0x80\n  1073: u64 [sp + 152] = 0\n  1077: ra = 22, jump @4\n      : @26 [@dyn 11] (gas: 3)\n  1082: a0 = 0x80\n  1086: a1 = s1\n  1088: ra = 24, jump @12\n      : @27 [@dyn 12] (gas: 5)\n  1093: i32 a0 = a0 + 0\n  1095: a1 = s1\n  1097: a2 = 0\n  1099: ecalli 1 // 'call_data_copy'\n  1101: fallthrough\n      : @28 (gas: 1)\n  1102: jump @37 if s1 <=u 31\n      : @29 (gas: 3)\n  1107: a0 = sp + 0x60\n  1110: a1 = 0x80\n  1114: ra = 26, jump @2\n      : @30 [@dyn 13] (gas: 11)\n  1119: s1 = u64 [sp + 0x70]\n  1122: a3 = u64 [sp + 0x78]\n  1125: a0 = 0x100000000\n  1135: a0 = a0 ^ s1\n  1138: a0 = a0 | a3\n  1141: a1 = s1 >> 0x20\n  1144: a1 = a1 <u 0x1\n  1147: u64 [sp + 0x18] = a3\n  1150: a1 = 0 if a3 != 0\n  1152: a1 = 0 if a0 == 0\n  1154: jump @38 if a1 == 0\n      : @31 (gas: 13)\n  1158: a0 = u64 [sp + 0x68]\n  1161: u64 [sp + 0x8] = a0\n  1164: a0 = u64 [sp + 0x60]\n  1167: u64 [sp + 0x10] = a0\n  1170: u64 [sp + 216] = 0\n  1174: u64 [sp + 208] = 0\n  1178: u64 [sp + 200] = 0\n  1182: u64 [sp + 192] = 0x1\n  1187: a0 = sp + 0x40\n  1190: a1 = sp + 0xc0\n  1194: ra = 0x1c\n  1197: t0 = 0x6\n  1200: jump @438\n      : @32 [@dyn 14] (gas: 19)\n  1203: a0 = u32 [sp + 0x54]\n  1206: a1 = u64 [sp + 0x58]\n  1209: a0 = a0 << 0x20\n  1212: a0 = a0 | s1\n  1215: a2 = u64 [sp + 0x18]\n  1218: a1 = a1 | a2\n  1221: u64 [sp + 248] = 0\n  1225: u64 [sp + 240] = 0\n  1229: u64 [sp + 232] = 0\n  1233: u64 [sp + 224] = 0x1\n  1238: a2 = u64 [sp + 0x8]\n  1241: u64 [sp + 0x108] = a2\n  1245: a2 = u64 [sp + 0x10]\n  1248: u64 [sp + 0x100] = a2\n  1252: u64 [sp + 0x118] = a1\n  1256: u64 [sp + 0x110] = a0\n  1260: a0 = sp + 0xe0\n  1264: a1 = sp + 0x100\n  1268: ra = 30, jump @8\n      : @33 [@dyn 15] (gas: 3)\n  1273: a0 = sp + 0x20\n  1276: a1 = 0x40\n  1279: ra = 32, jump @2\n      : @34 [@dyn 16] (gas: 12)\n  1284: a0 = u64 [sp + 0x38]\n  1287: a1 = u64 [sp + 0x30]\n  1290: a2 = u64 [sp + 0x28]\n  1293: s1 = u64 [sp + 0x20]\n  1296: a0 = a0 | a2\n  1299: a2 = s1 | a1\n  1302: a2 = a2 | a0\n  1305: a2 = a2 >> 0x20\n  1308: a0 = a0 | a1\n  1311: a0 = a0 << 0x20\n  1314: a0 = a0 | a2\n  1317: jump @39 if a0 == 0\n      : @35 (gas: 1)\n  1320: trap\n      : @36 (gas: 4)\n  1321: a1 = 0x200d0\n  1326: i32 a1 = a1 + 0\n  1328: a0 = 0x1\n  1331: jump @43\n      : @37 (gas: 4)\n  1333: a1 = 0x200d0\n  1338: i32 a1 = a1 + 0\n  1340: a0 = 0x1\n  1343: jump @43\n      : @38 (gas: 4)\n  1345: a1 = 0x200d0\n  1350: i32 a1 = a1 + 0\n  1352: a0 = 0x1\n  1355: jump @43\n      : @39 (gas: 3)\n  1357: a0 = s1\n  1359: a1 = 0\n  1361: ra = 34, jump @12\n      : @40 [@dyn 17] (gas: 5)\n  1366: i32 a0 = a0 + 0\n  1368: a1 = 0\n  1370: a2 = 0\n  1372: ecalli 1 // 'call_data_copy'\n  1374: jump @0\n      : @41 (gas: 3)\n  1377: a0 = s1\n  1379: a1 = 0\n  1381: ra = 36, jump @12\n      : @42 [@dyn 18] (gas: 6)\n  1386: i32 a1 = a0 + 0\n  1388: a0 = 0\n  1390: a2 = 0\n  1392: ra = 0x26\n  1395: ecalli 13 // 'seal_return'\n  1397: jump @44\n      : @43 (gas: 4)\n  1399: a2 = 0\n  1401: ra = 0x26\n  1404: ecalli 13 // 'seal_return'\n  1406: fallthrough\n      : @44 [@dyn 19] (gas: 13)\n  1407: sp = sp + 0xffffffffffffff20\n  1411: u64 [sp + 0xd8] = ra\n  1415: u64 [sp + 0xd0] = s0\n  1419: u64 [sp + 0xc8] = s1\n  1423: s0 = sp + 0xe0\n  1427: sp = sp & 0xffffffffffffffe0\n  1430: u64 [sp + 88] = 0\n  1433: u64 [sp + 80] = 0\n  1436: u64 [sp + 64] = 0x80\n  1441: a0 = 0x40\n  1444: a1 = sp + a0\n  1447: u64 [sp + 72] = 0\n  1450: ra = 40, jump @4\n      : @45 [@dyn 20] (gas: 3)\n  1455: s1 = 0x200c0\n  1460: a0 = i32 [0x200c0]\n  1465: jump @66 if a0 <u 4\n      : @46 (gas: 5)\n  1470: i32 a0 = sp + 0x60\n  1473: a1 = 0\n  1475: ra = 0x2a\n  1478: ecalli 2 // 'call_data_load'\n  1480: fallthrough\n      : @47 [@dyn 21] (gas: 3)\n  1481: a0 = i32 [sp + 0x7c]\n  1484: a1 = 0xffffffffa2e74af6\n  1490: jump @60 if a0 == a1\n      : @48 (gas: 1)\n  1494: jump @59 if a0 == 3385217942\n      : @49 (gas: 1)\n  1501: jump @54 if a0 == 3869522181\n      : @50 (gas: 1)\n  1508: jump @56 if a0 == 4100522477\n      : @51 (gas: 2)\n  1515: a1 = 0x94b7415\n  1521: jump @55 if a0 == a1\n      : @52 (gas: 1)\n  1524: jump @57 if a0 != 507367819\n      : @53 (gas: 1)\n  1531: ra = 44, jump @100\n      : @54 [@dyn 22] (gas: 15)\n  1536: ra = 0x2e\n  1539: sp = sp + 0xfffffffffffffe20\n  1543: u64 [sp + 0x1d8] = ra\n  1547: u64 [sp + 0x1d0] = s0\n  1551: u64 [sp + 0x1c8] = s1\n  1555: s0 = sp + 0x1e0\n  1559: sp = sp & 0xffffffffffffffe0\n  1562: s1 = sp\n  1564: u64 [s1 + 408] = 0\n  1568: u64 [s1 + 400] = 0\n  1572: u64 [s1 + 392] = 0\n  1576: u64 [s1 + 384] = 0\n  1580: i32 a0 = s1 + 0x180\n  1584: ecalli 16 // 'value_transferred'\n  1586: jump @243\n      : @55 [@dyn 23] (gas: 3)\n  1589: ra = 0x30\n  1592: t0 = 0x4a\n  1595: jump @444\n      : @56 [@dyn 24] (gas: 1)\n  1598: ra = 50, jump @262\n      : @57 [@dyn 25] (gas: 2)\n  1603: a1 = 0x574f2ba3\n  1609: jump @61 if a0 != a1\n      : @58 (gas: 3)\n  1612: ra = 0x34\n  1615: t0 = 0x74\n  1618: jump @444\n      : @59 [@dyn 26] (gas: 20)\n  1621: ra = 0x36\n  1624: sp = sp + 0xfffffffffffff808\n  1628: a0 = sp + 0x700\n  1632: u64 [a0 + 0xf0] = ra\n  1636: u64 [a0 + 0xe8] = s0\n  1640: u64 [a0 + 0xe0] = s1\n  1644: s0 = sp + 0x7f8\n  1648: sp = sp + 0xfffffffffffffdf8\n  1652: sp = sp & 0xffffffffffffffe0\n  1655: s1 = sp\n  1657: a0 = s1 + 0x7ff\n  1661: a0 = a0 + 0x31\n  1664: u64 [a0 + 168] = 0\n  1668: u64 [a0 + 160] = 0\n  1672: u64 [a0 + 152] = 0\n  1676: u64 [a0 + 144] = 0\n  1680: a0 = s1 + 0x1000\n  1684: i32 a0 = a0 + 0xfffffffffffff8c0\n  1688: ecalli 16 // 'value_transferred'\n  1690: jump @162\n      : @60 [@dyn 27] (gas: 3)\n  1693: ra = 0x38\n  1696: t0 = 0x9a\n  1700: jump @443\n      : @61 [@dyn 28] (gas: 1)\n  1703: jump @66 if a0 != 25067096\n      : @62 (gas: 9)\n  1710: u64 [sp + 152] = 0\n  1714: u64 [sp + 144] = 0\n  1718: u64 [sp + 136] = 0\n  1722: u64 [sp + 128] = 0\n  1726: i32 a0 = sp + 0x80\n  1730: ra = 0x3a\n  1733: ecalli 16 // 'value_transferred'\n  1735: t0 = 0x3c\n  1738: jump @452\n      : @63 [@dyn 29] (gas: 1)\n  1741: t0 = 60, jump @452\n      : @64 [@dyn 30] (gas: 1)\n  1746: jump @68 if a0 == 0\n      : @65 (gas: 2)\n  1749: a1 = 0x200d0\n  1754: jump @67\n      : @66 (gas: 2)\n  1756: a1 = 0x200d0\n  1761: fallthrough\n      : @67 (gas: 5)\n  1762: i32 a1 = a1 + 0\n  1764: a0 = 0x1\n  1767: a2 = 0\n  1769: ecalli 13 // 'seal_return'\n  1771: fallthrough\n      : @68 (gas: 2)\n  1772: a0 = i32 [s1]\n  1774: jump @70 if a0 >u 3\n      : @69 (gas: 2)\n  1778: a1 = 0x200d0\n  1783: jump @67\n      : @70 (gas: 9)\n  1785: u64 [sp + 184] = 0\n  1789: u64 [sp + 176] = 0\n  1793: u64 [sp + 168] = 0\n  1797: u64 [sp + 160] = 0\n  1801: a0 = sp + 0x20\n  1804: a1 = sp + 0xa0\n  1808: ra = 0x3e\n  1811: t0 = 0x6\n  1814: jump @438\n      : @71 [@dyn 31] (gas: 10)\n  1817: a2 = u64 [sp + 0x20]\n  1820: a0 = u64 [sp + 0x28]\n  1823: a1 = u32 [sp + 0x30]\n  1826: u64 [sp + 24] = 0\n  1829: u64 [sp + 0x10] = a1\n  1832: u64 [sp + 0x8] = a0\n  1835: a0 = 0x80\n  1839: a1 = sp\n  1841: u64 [sp] = a2\n  1843: ra = 64, jump @4\n      : @72 [@dyn 32] (gas: 2)\n  1848: a1 = i32 [0x200c4]\n  1853: jump @74 if a1 >u 159\n      : @73 (gas: 2)\n  1858: u32 [0x200c4] = 0xa0\n  1865: fallthrough\n      : @74 (gas: 7)\n  1866: a0 = 0x200d0\n  1871: i32 a1 = a0 + 0x80\n  1875: a2 = 0x20\n  1878: a0 = 0\n  1880: ra = 0x42\n  1883: ecalli 13 // 'seal_return'\n  1885: fallthrough\n      : @75 [@dyn 33] (gas: 19)\n  1886: t0 = u64 [a0 + 0x18]\n  1889: t1 = u64 [a1 + 0x18]\n  1892: a4 = u64 [a0 + 0x10]\n  1895: a5 = u64 [a0 + 0x8]\n  1898: a2 = u64 [a1 + 0x8]\n  1901: t2 = u64 [a0]\n  1903: a3 = u64 [a1]\n  1905: a1 = u64 [a1 + 0x10]\n  1908: a0 = a2 ^ a5\n  1911: a2 = a2 <u a5\n  1914: a3 = a3 <u t2\n  1917: a3 = a2 if a0 != 0\n  1920: a0 = a1 - a4\n  1923: a0 = a0 <u a3\n  1926: a1 = a1 <u a4\n  1929: a2 = t1 - t0\n  1932: a2 = a2 - a1\n  1935: a2 = a2 - a0\n  1938: jump @77 if a2 <s 0\n      : @76 (gas: 1)\n  1941: ret\n      : @77 (gas: 9)\n  1943: sp = sp + 0xfffffffffffffff8\n  1946: u64 [sp] = ra\n  1948: a1 = 0x200d0\n  1953: i32 a1 = a1 + 0\n  1955: a0 = 0x1\n  1958: a2 = 0\n  1960: ra = 0x44\n  1963: ecalli 13 // 'seal_return'\n  1965: fallthrough\n      : @78 [@dyn 34] (gas: 8)\n  1966: a2 = u32 [a1 + 0x10]\n  1969: a3 = u64 [a1 + 0x8]\n  1972: a1 = u64 [a1]\n  1974: u64 [a0 + 24] = 0\n  1977: u64 [a0 + 0x10] = a2\n  1980: u64 [a0 + 0x8] = a3\n  1983: u64 [a0] = a1\n  1985: ret\n      : @79 (gas: 12)\n  1987: a4 = u64 [a1 + 0x10]\n  1990: t0 = u64 [a1 + 0x18]\n  1993: a5 = u64 [a1 + 0x8]\n  1996: t1 = u64 [a1]\n  1998: a1 = a5 | t0\n  2001: a3 = t1 | a4\n  2004: a3 = a3 | a1\n  2007: a3 = a3 >> 0x20\n  2010: a1 = a1 | a4\n  2013: a1 = a1 << 0x20\n  2016: a1 = a1 | a3\n  2019: jump @83 if a1 != 0\n      : @80 (gas: 31)\n  2022: sp = sp + 0xffffffffffffffa0\n  2025: u64 [sp + 0x58] = ra\n  2028: u64 [sp + 0x50] = s0\n  2031: u64 [sp + 0x48] = s1\n  2034: s0 = sp + 0x60\n  2037: sp = sp & 0xfffffffffffffff0\n  2040: s1 = a0\n  2042: a0 = u64 [a2 + 0x10]\n  2045: a1 = u64 [a2 + 0x8]\n  2048: a2 = u64 [a2]\n  2050: a0 = a0 << 0x20\n  2053: t2 = a0 >> 0x20\n  2056: a0 = t1 + 0x20\n  2059: u64 [sp + 0x18] = a0\n  2062: a3 = a0 <u t1\n  2065: a0 = a5 + a3\n  2068: u64 [sp + 0x10] = a0\n  2071: a5 = a0 <u a5\n  2074: a5 = a3 if a3 == 0\n  2077: a5 = a5 + a4\n  2080: u64 [sp] = a5\n  2082: a3 = a5 <u a4\n  2085: a3 = a3 + t0\n  2088: u64 [sp + 0x8] = a3\n  2091: u64 [sp + 56] = 0\n  2094: u64 [sp + 0x20] = a2\n  2097: u64 [sp + 0x28] = a1\n  2100: a1 = sp + 0x20\n  2103: u64 [sp + 0x30] = t2\n  2106: a0 = t1\n  2108: ra = 70, jump @4\n      : @81 [@dyn 35] (gas: 9)\n  2113: a0 = u64 [sp]\n  2115: u64 [s1 + 0x10] = a0\n  2118: a0 = u64 [sp + 0x10]\n  2121: u64 [s1 + 0x8] = a0\n  2124: a0 = u64 [sp + 0x18]\n  2127: u64 [s1] = a0\n  2129: a0 = u64 [sp + 0x8]\n  2132: u64 [s1 + 0x18] = a0\n  2135: t0 = 72, jump @446\n      : @82 [@dyn 36] (gas: 1)\n  2140: ret\n      : @83 (gas: 1)\n  2142: trap\n      : @84 [@dyn 37] (gas: 4)\n  2143: ra = 0x4c\n  2146: ecalli 16 // 'value_transferred'\n  2148: t0 = 0x4e\n  2151: jump @452\n      : @85 [@dyn 38] (gas: 1)\n  2154: t0 = 78, jump @452\n      : @86 [@dyn 39] (gas: 1)\n  2159: jump @93 if a0 != 0\n      : @87 (gas: 2)\n  2162: a0 = i32 [0x200c0]\n  2167: jump @94 if a0 <=u 3\n      : @88 (gas: 9)\n  2171: u64 [sp + 184] = 0\n  2175: u64 [sp + 176] = 0\n  2179: u64 [sp + 168] = 0\n  2183: u64 [sp + 160] = 0x1\n  2188: a0 = sp + 0x60\n  2191: a1 = sp + 0xa0\n  2195: ra = 0x50\n  2198: t0 = 0x6\n  2201: jump @438\n      : @89 [@dyn 40] (gas: 9)\n  2204: a0 = u64 [sp + 0x70]\n  2207: u64 [sp + 0x8] = a0\n  2210: a0 = u64 [sp + 0x68]\n  2213: u64 [sp + 0x18] = a0\n  2216: a0 = u64 [sp + 0x60]\n  2219: u64 [sp + 0x10] = a0\n  2222: a0 = sp + 0x40\n  2225: a1 = 0x40\n  2228: ra = 82, jump @2\n      : @90 [@dyn 41] (gas: 1)\n  2233: t0 = 84, jump @439\n      : @91 [@dyn 42] (gas: 1)\n  2238: jump @96 if a0 == 0\n      : @92 (gas: 1)\n  2241: trap\n      : @93 (gas: 2)\n  2242: a1 = 0x200d0\n  2247: jump @95\n      : @94 (gas: 2)\n  2249: a1 = 0x200d0\n  2254: fallthrough\n      : @95 (gas: 7)\n  2255: i32 a1 = a1 + 0\n  2257: a0 = 0x1\n  2260: a2 = 0\n  2262: ra = 0x56\n  2265: ecalli 13 // 'seal_return'\n  2267: t0 = 0x58\n  2270: jump @450\n      : @96 [@dyn 43] (gas: 1)\n  2273: t0 = 88, jump @450\n      : @97 [@dyn 44] (gas: 1)\n  2278: ra = 90, jump @4\n      : @98 [@dyn 45] (gas: 3)\n  2283: a1 = 0x20\n  2286: a0 = s1\n  2288: ra = 92, jump @12\n      : @99 [@dyn 46] (gas: 6)\n  2293: i32 a1 = a0 + 0\n  2295: a2 = 0x20\n  2298: a0 = 0\n  2300: ra = 0x5e\n  2303: ecalli 13 // 'seal_return'\n  2305: fallthrough\n      : @100 [@dyn 47] (gas: 13)\n  2306: sp = sp + 0xfffffffffffffea0\n  2310: u64 [sp + 0x158] = ra\n  2314: u64 [sp + 0x150] = s0\n  2318: u64 [sp + 0x148] = s1\n  2322: s0 = sp + 0x160\n  2326: sp = sp & 0xffffffffffffffe0\n  2329: u64 [sp + 216] = 0\n  2333: u64 [sp + 208] = 0\n  2337: u64 [sp + 200] = 0\n  2341: u64 [sp + 192] = 0\n  2345: i32 a0 = sp + 0xc0\n  2349: ecalli 16 // 'value_transferred'\n  2351: fallthrough\n      : @101 (gas: 8)\n  2352: a0 = u64 [sp + 0xd0]\n  2356: a1 = u64 [sp + 0xd8]\n  2360: a2 = u64 [sp + 0xc8]\n  2364: a3 = u64 [sp + 0xc0]\n  2368: a1 = a1 | a2\n  2371: a0 = a0 | a3\n  2374: a0 = a0 | a1\n  2377: jump @111 if a0 != 0\n      : @102 (gas: 2)\n  2381: a0 = i32 [0x200c0]\n  2386: jump @112 if a0 <=u 35\n      : @103 (gas: 19)\n  2391: i32 a0 = sp + 0xe0\n  2395: a1 = 0x4\n  2398: ecalli 2 // 'call_data_load'\n  2400: s1 = u64 [sp + 0xf8]\n  2404: a0 = u64 [sp + 0xf0]\n  2408: u64 [sp + 0x8] = a0\n  2411: a0 = u64 [sp + 0xe8]\n  2415: u64 [sp + 0x18] = a0\n  2418: a0 = u64 [sp + 0xe0]\n  2422: u64 [sp + 0x10] = a0\n  2425: u64 [sp + 280] = 0\n  2429: u64 [sp + 272] = 0\n  2433: u64 [sp + 264] = 0\n  2437: u64 [sp + 256] = 0x3\n  2442: a0 = sp + 0xa0\n  2446: a1 = sp + 0x100\n  2450: ra = 0x60\n  2453: t0 = 0x6\n  2456: jump @438\n      : @104 [@dyn 48] (gas: 20)\n  2459: a0 = u64 [sp + 0xb8]\n  2463: a1 = u64 [sp + 0xa0]\n  2467: a2 = u64 [sp + 0xb0]\n  2471: a3 = u64 [sp + 0xa8]\n  2475: a4 = s1 ^ a0\n  2478: u64 [sp] = s1\n  2480: a0 = s1 <u a0\n  2483: s1 = u64 [sp + 0x8]\n  2486: a5 = s1 <u a2\n  2489: a5 = a0 if a4 != 0\n  2492: a0 = u64 [sp + 0x18]\n  2495: t0 = a0 ^ a3\n  2498: a3 = a0 <u a3\n  2501: a0 = u64 [sp + 0x10]\n  2504: a1 = a0 <u a1\n  2507: a1 = a3 if t0 != 0\n  2510: a0 = s1 ^ a2\n  2513: a0 = a0 | a4\n  2516: a1 = a5 if a0 != 0\n  2519: jump @113 if a1 == 0\n      : @105 (gas: 7)\n  2523: u64 [sp + 152] = 0\n  2527: u64 [sp + 144] = 0\n  2531: u64 [sp + 136] = 0\n  2535: a1 = sp + 0x80\n  2539: u64 [sp + 128] = 0x3\n  2544: a0 = 0\n  2546: ra = 98, jump @4\n      : @106 [@dyn 49] (gas: 31)\n  2551: a0 = u64 [0x20000]\n  2556: a1 = u64 [0x20008]\n  2561: a2 = u64 [sp + 0x10]\n  2564: a0 = a0 + a2\n  2567: a2 = a0 <u a2\n  2570: a5 = u64 [sp + 0x18]\n  2573: a1 = a1 + a5\n  2576: a1 = a1 + a2\n  2579: a3 = u64 [0x20010]\n  2584: a4 = a1 ^ a5\n  2587: a5 = a1 <u a5\n  2590: a5 = a2 if a4 == 0\n  2593: a4 = u64 [sp + 0x8]\n  2596: a3 = a3 + a4\n  2599: a5 = a5 + a3\n  2602: a2 = u64 [0x20018]\n  2607: s1 = a3 <u a4\n  2610: a3 = a5 <u a3\n  2613: a4 = u64 [sp]\n  2615: a4 = a4 + s1\n  2618: a2 = a2 + a4\n  2621: a2 = a2 + a3\n  2624: u64 [sp + 0x120] = a0\n  2628: u64 [sp + 0x128] = a1\n  2632: u64 [sp + 0x130] = a5\n  2636: u64 [sp + 0x138] = a2\n  2640: a0 = sp + 0x60\n  2643: a1 = sp + 0x120\n  2647: ra = 0x64\n  2650: t0 = 0x6\n  2653: jump @438\n      : @107 [@dyn 50] (gas: 9)\n  2656: a0 = u64 [sp + 0x70]\n  2659: u64 [sp + 0x8] = a0\n  2662: a0 = u64 [sp + 0x68]\n  2665: u64 [sp + 0x18] = a0\n  2668: a0 = u64 [sp + 0x60]\n  2671: u64 [sp + 0x10] = a0\n  2674: a0 = sp + 0x40\n  2677: a1 = 0x40\n  2680: ra = 102, jump @2\n      : @108 [@dyn 51] (gas: 1)\n  2685: t0 = 104, jump @439\n      : @109 [@dyn 52] (gas: 1)\n  2690: jump @115 if a0 == 0\n      : @110 (gas: 1)\n  2693: trap\n      : @111 (gas: 2)\n  2694: a1 = 0x200d0\n  2699: jump @114\n      : @112 (gas: 2)\n  2701: a1 = 0x200d0\n  2706: jump @114\n      : @113 (gas: 2)\n  2708: a1 = 0x200d0\n  2713: fallthrough\n      : @114 (gas: 7)\n  2714: i32 a1 = a1 + 0\n  2716: a0 = 0x1\n  2719: a2 = 0\n  2721: ra = 0x6a\n  2724: ecalli 13 // 'seal_return'\n  2726: t0 = 0x6c\n  2729: jump @450\n      : @115 [@dyn 53] (gas: 1)\n  2732: t0 = 108, jump @450\n      : @116 [@dyn 54] (gas: 1)\n  2737: ra = 110, jump @4\n      : @117 [@dyn 55] (gas: 3)\n  2742: a1 = 0x20\n  2745: a0 = s1\n  2747: ra = 112, jump @12\n      : @118 [@dyn 56] (gas: 7)\n  2752: i32 a1 = a0 + 0\n  2754: a2 = 0x20\n  2757: a0 = 0\n  2759: ra = 0x72\n  2762: ecalli 13 // 'seal_return'\n  2764: t0 = 0x74\n  2767: jump @444\n      : @119 [@dyn 57] (gas: 1)\n  2770: t0 = 116, jump @444\n      : @120 [@dyn 58] (gas: 4)\n  2775: ra = 0x76\n  2778: ecalli 16 // 'value_transferred'\n  2780: t0 = 0x78\n  2783: jump @452\n      : @121 [@dyn 59] (gas: 1)\n  2786: t0 = 120, jump @452\n      : @122 [@dyn 60] (gas: 1)\n  2791: jump @129 if a0 != 0\n      : @123 (gas: 2)\n  2794: a1 = i32 [0x200c0]\n  2799: jump @130 if a1 <=u 3\n      : @124 (gas: 9)\n  2803: u64 [sp + 184] = 0\n  2807: u64 [sp + 176] = 0\n  2811: u64 [sp + 168] = 0\n  2815: u64 [sp + 160] = 0x3\n  2820: a0 = sp + 0x60\n  2823: a1 = sp + 0xa0\n  2827: ra = 0x7a\n  2830: t0 = 0x6\n  2833: jump @438\n      : @125 [@dyn 61] (gas: 11)\n  2836: a0 = u64 [sp + 0x78]\n  2839: u64 [sp + 0x18] = a0\n  2842: a0 = u64 [sp + 0x70]\n  2845: u64 [sp + 0x10] = a0\n  2848: a0 = u64 [sp + 0x68]\n  2851: u64 [sp + 0x8] = a0\n  2854: a0 = u64 [sp + 0x60]\n  2857: u64 [sp] = a0\n  2859: a0 = sp + 0x40\n  2862: a1 = 0x40\n  2865: ra = 124, jump @2\n      : @126 [@dyn 62] (gas: 1)\n  2870: t0 = 126, jump @439\n      : @127 [@dyn 63] (gas: 1)\n  2875: jump @132 if a0 == 0\n      : @128 (gas: 1)\n  2878: trap\n      : @129 (gas: 2)\n  2879: a1 = 0x200d0\n  2884: jump @131\n      : @130 (gas: 2)\n  2886: a1 = 0x200d0\n  2891: fallthrough\n      : @131 (gas: 5)\n  2892: i32 a1 = a1 + 0\n  2894: a0 = 0x1\n  2897: a2 = 0\n  2899: ecalli 13 // 'seal_return'\n  2901: fallthrough\n      : @132 (gas: 11)\n  2902: a0 = u64 [sp]\n  2904: u64 [sp + 0x20] = a0\n  2907: a0 = u64 [sp + 0x8]\n  2910: u64 [sp + 0x28] = a0\n  2913: a0 = u64 [sp + 0x10]\n  2916: u64 [sp + 0x30] = a0\n  2919: a1 = sp + 0x20\n  2922: a0 = u64 [sp + 0x18]\n  2925: u64 [sp + 0x38] = a0\n  2928: a0 = s1\n  2930: ra = 128, jump @4\n      : @133 [@dyn 64] (gas: 3)\n  2936: a1 = 0x20\n  2939: a0 = s1\n  2941: ra = 130, jump @12\n      : @134 [@dyn 65] (gas: 7)\n  2947: i32 a1 = a0 + 0\n  2949: a2 = 0x20\n  2952: a0 = 0\n  2954: ra = 0x84\n  2958: ecalli 13 // 'seal_return'\n  2960: t0 = 0x86\n  2964: jump @451\n      : @135 [@dyn 66] (gas: 1)\n  2967: t0 = 134, jump @451\n      : @136 [@dyn 67] (gas: 5)\n  2973: a1 = 0x4\n  2976: ra = 0x88\n  2980: ecalli 2 // 'call_data_load'\n  2982: t0 = 0x8a\n  2986: jump @442\n      : @137 [@dyn 68] (gas: 1)\n  2989: t0 = 138, jump @442\n      : @138 [@dyn 69] (gas: 1)\n  2995: jump @141 if a3 == 0\n      : @139 (gas: 1)\n  2998: t0 = 140, jump @447\n      : @140 [@dyn 70] (gas: 1)\n  3004: ret\n      : @141 (gas: 8)\n  3006: a1 = 0x200d0\n  3011: i32 a1 = a1 + 0\n  3013: a0 = 0x1\n  3016: a2 = 0\n  3018: ra = 0x8e\n  3022: ecalli 13 // 'seal_return'\n  3024: t0 = 0x90\n  3028: jump @451\n      : @142 [@dyn 71] (gas: 1)\n  3031: t0 = 144, jump @451\n      : @143 [@dyn 72] (gas: 5)\n  3037: a1 = 0x24\n  3040: ra = 0x92\n  3044: ecalli 2 // 'call_data_load'\n  3046: t0 = 0x94\n  3050: jump @442\n      : @144 [@dyn 73] (gas: 1)\n  3053: t0 = 148, jump @442\n      : @145 [@dyn 74] (gas: 1)\n  3059: jump @148 if a3 == 0\n      : @146 (gas: 1)\n  3062: t0 = 150, jump @447\n      : @147 [@dyn 75] (gas: 1)\n  3068: ret\n      : @148 (gas: 8)\n  3070: a1 = 0x200d0\n  3075: i32 a1 = a1 + 0\n  3077: a0 = 0x1\n  3080: a2 = 0\n  3082: ra = 0x98\n  3086: ecalli 13 // 'seal_return'\n  3088: t0 = 0x9a\n  3092: jump @443\n      : @149 [@dyn 76] (gas: 1)\n  3095: t0 = 154, jump @443\n      : @150 [@dyn 77] (gas: 2)\n  3101: ecalli 16 // 'value_transferred'\n  3103: fallthrough\n      : @151 (gas: 8)\n  3104: a0 = u64 [sp + 0xb0]\n  3108: a1 = u64 [sp + 0xb8]\n  3112: a2 = u64 [sp + 0xa8]\n  3116: a3 = u64 [sp + 0xa0]\n  3120: a1 = a1 | a2\n  3123: a0 = a0 | a3\n  3126: a0 = a0 | a1\n  3129: jump @153 if a0 == 0\n      : @152 (gas: 6)\n  3132: a1 = 0x200d0\n  3137: i32 a1 = a1 + 0\n  3139: a0 = 0x1\n  3142: a2 = 0\n  3144: ecalli 13 // 'seal_return'\n  3146: jump @155\n      : @153 (gas: 3)\n  3148: a0 = i32 [0x200c0]\n  3153: a1 = 0x23\n  3156: jump @155 if a1 <u a0\n      : @154 (gas: 6)\n  3159: a1 = 0x200d0\n  3164: i32 a1 = a1 + 0\n  3166: a0 = 0x1\n  3169: a2 = 0\n  3171: ecalli 13 // 'seal_return'\n  3173: fallthrough\n      : @155 (gas: 4)\n  3174: a0 = sp + 0x80\n  3178: ra = 0x9c\n  3182: t0 = 0x86\n  3186: jump @451\n      : @156 [@dyn 78] (gas: 15)\n  3189: a0 = u64 [sp + 0x80]\n  3193: u64 [sp + 0x38] = a0\n  3196: a0 = u64 [sp + 0x88]\n  3200: u64 [sp + 0x30] = a0\n  3203: a0 = u32 [sp + 0x90]\n  3207: u64 [sp + 0x28] = a0\n  3210: u64 [sp + 216] = 0\n  3214: u64 [sp + 208] = 0\n  3218: u64 [sp + 200] = 0\n  3222: u64 [sp + 192] = 0x1\n  3227: a0 = sp + 0x60\n  3230: a1 = sp + 0xc0\n  3234: ra = 0x9e\n  3238: t0 = 0x6\n  3241: jump @438\n      : @157 [@dyn 79] (gas: 14)\n  3244: a0 = u64 [sp + 0x78]\n  3247: u64 [sp + 0x20] = a0\n  3250: a0 = u64 [sp + 0x68]\n  3253: u64 [sp + 0x18] = a0\n  3256: a0 = u64 [sp + 0x60]\n  3259: u64 [sp + 0x10] = a0\n  3262: a0 = u64 [sp + 0x70]\n  3265: u64 [sp + 0x8] = a0\n  3268: s1 = 0x300d0\n  3273: i32 a0 = s1 + 0\n  3275: ra = 0xa0\n  3279: ecalli 4 // 'caller'\n  3281: t0 = 0xa2\n  3285: jump @441\n      : @158 [@dyn 80] (gas: 1)\n  3288: t0 = 162, jump @441\n      : @159 [@dyn 81] (gas: 19)\n  3294: s1 = u64 [sp + 0x8]\n  3297: a2 = s1 << 0x20\n  3300: a2 = a2 >> 0x20\n  3303: a1 = a1 ^ a2\n  3306: a2 = u64 [sp + 0x10]\n  3309: a0 = a0 ^ a2\n  3312: a0 = a0 | a1\n  3315: a1 = u64 [sp + 0x18]\n  3318: a1 = a1 ^ a3\n  3321: a0 = a0 | a1\n  3324: a0 = a0 <u 0x1\n  3327: u64 [sp + 88] = 0\n  3330: u64 [sp + 80] = 0\n  3333: u64 [sp + 0x40] = a0\n  3336: a0 = sp + 0x40\n  3339: u64 [sp + 72] = 0\n  3342: ra = 0xa4\n  3346: t0 = 0x138\n  3350: jump @434\n      : @160 [@dyn 82] (gas: 18)\n  3353: a0 = s1 >> 0x20\n  3356: a0 = a0 << 0x20\n  3359: a1 = u64 [sp + 0x28]\n  3362: a0 = a0 | a1\n  3365: u64 [sp + 248] = 0\n  3369: u64 [sp + 240] = 0\n  3373: u64 [sp + 232] = 0\n  3377: u64 [sp + 224] = 0x1\n  3382: a1 = u64 [sp + 0x20]\n  3385: u64 [sp + 0x118] = a1\n  3389: u64 [sp + 0x110] = a0\n  3393: a0 = u64 [sp + 0x30]\n  3396: u64 [sp + 0x108] = a0\n  3400: a0 = u64 [sp + 0x38]\n  3403: u64 [sp + 0x100] = a0\n  3407: a0 = sp + 0xe0\n  3411: a1 = sp + 0x100\n  3415: ra = 166, jump @8\n      : @161 [@dyn 83] (gas: 6)\n  3421: a1 = 0x200d0\n  3426: i32 a1 = a1 + 0\n  3428: a0 = 0\n  3430: a2 = 0\n  3432: ecalli 13 // 'seal_return'\n  3434: jump @155\n      : @162 (gas: 10)\n  3437: a3 = s1 + 0x7ff\n  3441: a3 = a3 + 0x31\n  3444: a0 = u64 [a3 + 0xa0]\n  3448: a1 = u64 [a3 + 0xa8]\n  3452: a2 = u64 [a3 + 0x98]\n  3456: a3 = u64 [a3 + 0x90]\n  3460: a1 = a1 | a2\n  3463: a0 = a0 | a3\n  3466: a0 = a0 | a1\n  3469: jump @222 if a0 != 0\n      : @163 (gas: 3)\n  3473: a0 = i32 [0x200c0]\n  3478: a1 = 0x43\n  3481: jump @223 if a1 >=u a0\n      : @164 (gas: 5)\n  3485: a0 = s1 + 0x7ff\n  3489: a0 = a0 + 0xa1\n  3493: ra = 0xa8\n  3497: t0 = 0x86\n  3501: jump @451\n      : @165 [@dyn 84] (gas: 15)\n  3504: a1 = s1 + 0x7ff\n  3508: a1 = a1 + 0x31\n  3511: a0 = u64 [a1 + 0x88]\n  3515: u64 [s1 + 0x78] = a0\n  3518: a0 = u64 [a1 + 0x78]\n  3521: u64 [s1 + 0x90] = a0\n  3525: a0 = u64 [a1 + 0x70]\n  3528: u64 [s1 + 0x88] = a0\n  3532: a0 = u64 [a1 + 0x80]\n  3536: u64 [s1 + 0x98] = a0\n  3540: a0 = s1 + 0x7ff\n  3544: a0 = a0 + 0x81\n  3548: ra = 0xaa\n  3552: t0 = 0x90\n  3556: jump @451\n      : @166 [@dyn 85] (gas: 36)\n  3559: a1 = s1 + 0x7ff\n  3563: a1 = a1 + 0x31\n  3566: a2 = u64 [a1 + 0x60]\n  3569: u64 [s1 + 0xb8] = a2\n  3573: a0 = u64 [a1 + 0x68]\n  3576: u64 [s1 + 0xa0] = a0\n  3580: a3 = u64 [a1 + 0x58]\n  3583: u64 [s1 + 0xb0] = a3\n  3587: a4 = u64 [a1 + 0x50]\n  3590: u64 [s1 + 0xa8] = a4\n  3594: a0 = a2 << 0x20\n  3597: a2 = a0 >> 0x20\n  3600: u64 [s1 + 0x80] = a2\n  3604: a0 = u64 [s1 + 0x98]\n  3608: a0 = a0 << 0x20\n  3611: a5 = a0 >> 0x20\n  3614: u64 [s1 + 0x70] = a5\n  3617: a0 = u64 [s1 + 0x88]\n  3621: a0 = a0 ^ a4\n  3624: a5 = a5 ^ a2\n  3627: u64 [s1 + 0x68] = a5\n  3630: a2 = u64 [s1 + 0x90]\n  3634: a2 = a2 ^ a3\n  3637: u64 [s1 + 0x60] = a2\n  3640: a0 = a0 | a2\n  3643: a0 = a0 | a5\n  3646: a0 = a0 >u 0\n  3648: u64 [a1 + 72] = 0\n  3651: u64 [a1 + 64] = 0\n  3654: u64 [a1 + 0x30] = a0\n  3657: a0 = s1 + 0x7ff\n  3661: a0 = a0 + 0x61\n  3664: u64 [a1 + 56] = 0\n  3667: ra = 0xac\n  3671: t0 = 0x15e\n  3675: jump @434\n      : @167 [@dyn 86] (gas: 56)\n  3678: a2 = u64 [s1 + 0x90]\n  3682: t0 = u64 [s1 + 0xb0]\n  3686: a0 = a2 <u t0\n  3689: a3 = u64 [s1 + 0x88]\n  3693: a5 = u64 [s1 + 0xa8]\n  3697: a1 = a3 <u a5\n  3700: a4 = u64 [s1 + 0x60]\n  3703: a1 = a0 if a4 != 0\n  3706: a0 = u64 [s1 + 0x80]\n  3710: a4 = u64 [s1 + 0x70]\n  3713: a0 = a4 <u a0\n  3716: a4 = u64 [s1 + 0x68]\n  3719: a0 = a1 if a4 == 0\n  3722: a4 = a3\n  3724: a1 = a5\n  3726: a4 = a5 if a0 == 0\n  3729: u64 [s1 + 0x80] = a4\n  3733: a1 = a3 if a0 == 0\n  3736: u64 [s1 + 0xa8] = a1\n  3740: a3 = a2\n  3742: a1 = t0\n  3744: a3 = t0 if a0 == 0\n  3747: u64 [s1 + 0x88] = a3\n  3751: a1 = a2 if a0 == 0\n  3754: u64 [s1 + 0xb0] = a1\n  3758: a2 = u64 [s1 + 0x98]\n  3762: a5 = a2\n  3764: a1 = u64 [s1 + 0xb8]\n  3768: a5 = a1 if a0 == 0\n  3771: u64 [s1 + 0x90] = a5\n  3775: a1 = a2 if a0 == 0\n  3778: u64 [s1 + 0xb8] = a1\n  3782: t0 = u64 [s1 + 0x78]\n  3785: a2 = t0\n  3787: a1 = u64 [s1 + 0xa0]\n  3791: a2 = a1 if a0 == 0\n  3794: u64 [s1 + 0x98] = a2\n  3798: a1 = t0 if a0 == 0\n  3801: u64 [s1 + 0xa0] = a1\n  3805: a0 = a5 << 0x20\n  3808: a1 = a0 >> 0x20\n  3811: a0 = a4 | a3\n  3814: u64 [s1 + 0x70] = a1\n  3817: a0 = a0 | a1\n  3820: a0 = a0 >u 0\n  3822: a1 = s1 + 0x7ff\n  3826: a1 = a1 + 0x31\n  3829: u64 [a1 + 40] = 0\n  3832: u64 [a1 + 32] = 0\n  3835: u64 [a1 + 0x10] = a0\n  3838: a0 = s1 + 0x7ff\n  3842: a0 = a0 + 0x41\n  3845: u64 [a1 + 24] = 0\n  3848: ra = 0xae\n  3852: t0 = 0x17c\n  3856: jump @434\n      : @168 [@dyn 87] (gas: 17)\n  3859: a0 = u64 [s1 + 0x98]\n  3863: a1 = s1 + 0x1000\n  3867: u64 [a1 + 0xfffffffffffff818] = a0\n  3871: a0 = u64 [s1 + 0x90]\n  3875: a1 = s1 + 0x1000\n  3879: u64 [a1 + 0xfffffffffffff810] = a0\n  3883: a0 = u64 [s1 + 0x88]\n  3887: a1 = s1 + 0x1000\n  3891: u64 [a1 + 0xfffffffffffff808] = a0\n  3895: a0 = s1 + 0x7ff\n  3899: a0 = a0 + 0x21\n  3902: a1 = s1 + 0x7ff\n  3906: a1 = a1 + 0x1\n  3909: a2 = u64 [s1 + 0x80]\n  3913: a3 = s1 + 0x1000\n  3917: u64 [a3 + 0xfffffffffffff800] = a2\n  3921: ra = 176, jump @228\n      : @169 [@dyn 88] (gas: 26)\n  3927: a0 = s1 + 0x1000\n  3931: a3 = u64 [a0 + 0xfffffffffffff820]\n  3935: a0 = s1 + 0x1000\n  3939: a0 = u64 [a0 + 0xfffffffffffff828]\n  3943: a2 = s1 + 0x7ff\n  3947: a2 = a2 + 0x31\n  3950: a1 = u64 [a2]\n  3952: a2 = u64 [a2 + 0x8]\n  3955: a4 = u64 [s1 + 0xa0]\n  3959: u64 [s1 + 0x7b8] = a4\n  3963: a4 = u64 [s1 + 0xb8]\n  3967: u64 [s1 + 0x7b0] = a4\n  3971: a4 = u64 [s1 + 0xb0]\n  3975: u64 [s1 + 0x7a8] = a4\n  3979: a4 = u64 [s1 + 0xa8]\n  3983: u64 [s1 + 0x7a0] = a4\n  3987: u64 [s1 + 0x7d8] = a2\n  3991: u64 [s1 + 0x7d0] = a1\n  3995: u64 [s1 + 0x7c8] = a0\n  3999: a0 = s1 + 0x7e0\n  4003: a1 = s1 + 0x7c0\n  4007: a2 = s1 + 0x7a0\n  4011: u64 [s1 + 0x7c0] = a3\n  4015: ra = 0xb2\n  4019: t0 = 0x104\n  4023: jump @454\n      : @170 [@dyn 89] (gas: 13)\n  4026: a2 = u64 [s1 + 0x7e0]\n  4030: a0 = u64 [s1 + 0x7e8]\n  4034: a1 = u64 [s1 + 0x7f0]\n  4038: a3 = u64 [s1 + 0x7f8]\n  4042: u64 [s1 + 0x778] = a3\n  4046: u64 [s1 + 0x770] = a1\n  4050: u64 [s1 + 0x768] = a0\n  4054: a0 = s1 + 0x780\n  4058: a1 = s1 + 0x760\n  4062: u64 [s1 + 0x760] = a2\n  4066: ra = 0xb4\n  4070: t0 = 0x132\n  4074: jump @438\n      : @171 [@dyn 90] (gas: 16)\n  4077: a0 = u64 [s1 + 0x790]\n  4081: a1 = u64 [s1 + 0x798]\n  4085: a2 = u64 [s1 + 0x788]\n  4089: a3 = u64 [s1 + 0x780]\n  4093: a1 = a1 | a2\n  4096: a0 = a0 | a3\n  4099: a0 = a0 | a1\n  4102: a0 = a0 <u 0x1\n  4105: u64 [s1 + 1880] = 0\n  4109: u64 [s1 + 1872] = 0\n  4113: u64 [s1 + 0x740] = a0\n  4117: a0 = s1 + 0x740\n  4121: u64 [s1 + 1864] = 0\n  4125: ra = 0xb6\n  4129: t0 = 0x19a\n  4133: jump @434\n      : @172 [@dyn 91] (gas: 7)\n  4136: u64 [s1 + 1816] = 0\n  4140: u64 [s1 + 1808] = 0\n  4144: u64 [s1 + 1792] = 0x40\n  4149: a0 = s1 + 0x720\n  4153: a1 = s1 + 0x700\n  4157: u64 [s1 + 1800] = 0\n  4161: ra = 184, jump @379\n      : @173 [@dyn 92] (gas: 13)\n  4167: a1 = s1 + 0x700\n  4171: a4 = u64 [a1 + 0x38]\n  4174: a5 = u64 [a1 + 0x30]\n  4177: a3 = u64 [a1 + 0x28]\n  4180: a0 = u64 [a1 + 0x20]\n  4183: a2 = a3 | a4\n  4186: a1 = a0 | a5\n  4189: a1 = a1 | a2\n  4192: a1 = a1 >> 0x20\n  4195: a2 = a2 | a5\n  4198: a2 = a2 << 0x20\n  4201: a1 = a1 | a2\n  4204: jump @220 if a1 != 0\n      : @174 (gas: 10)\n  4208: u64 [s1 + 1784] = 0\n  4212: u64 [s1 + 1776] = 0\n  4216: u64 [s1 + 1768] = 0\n  4220: a1 = s1 + 0x6e0\n  4224: u64 [s1 + 1760] = 0x20\n  4229: u64 [s1 + 0x78] = a0\n  4232: u64 [s1 + 0x68] = a3\n  4235: u64 [s1 + 0x60] = a4\n  4238: u64 [s1 + 0x58] = a5\n  4241: ra = 186, jump @4\n      : @175 [@dyn 93] (gas: 10)\n  4247: a2 = u64 [s1 + 0x78]\n  4250: a0 = u64 [s1 + 0x60]\n  4253: a1 = u64 [s1 + 0x58]\n  4256: a0 = a0 | a1\n  4259: a1 = 0xffffffe0\n  4269: a1 = a2 <u a1\n  4272: a3 = u64 [s1 + 0x68]\n  4275: a1 = 0 if a3 != 0\n  4277: a1 = 0 if a0 != 0\n  4279: jump @220 if a1 == 0\n      : @176 (gas: 12)\n  4283: i32 a0 = a2 + 0x20\n  4286: a1 = u64 [0x20020]\n  4291: u64 [s1 + 0x6d8] = a1\n  4295: a3 = u64 [0x20028]\n  4300: a1 = u64 [0x20030]\n  4305: a2 = u64 [0x20038]\n  4310: u64 [s1 + 0x6d0] = a3\n  4314: u64 [s1 + 0x6c8] = a1\n  4318: a1 = s1 + 0x6c0\n  4322: u64 [s1 + 0x6c0] = a2\n  4326: u64 [s1 + 0x28] = a0\n  4329: ra = 188, jump @4\n      : @177 [@dyn 94] (gas: 3)\n  4335: a0 = s1 + 0x6a0\n  4339: a1 = 0x40\n  4342: ra = 190, jump @2\n      : @178 [@dyn 95] (gas: 48)\n  4348: a5 = s1 + 0x600\n  4352: a0 = u64 [a5 + 0xa0]\n  4356: u64 [s1 + 0x68] = a0\n  4359: a4 = u64 [a5 + 0xb8]\n  4363: u64 [s1 + 0x58] = a4\n  4366: a1 = u64 [a5 + 0xa8]\n  4370: u64 [s1 + 0x50] = a1\n  4373: t0 = u64 [s1 + 0x6b0]\n  4377: a2 = a0 + 0x20\n  4380: a0 = a2 <u a0\n  4383: a3 = a1 + a0\n  4386: a1 = a3 <u a1\n  4389: a1 = a0 if a0 == 0\n  4392: u64 [s1 + 0x60] = t0\n  4395: a1 = a1 + t0\n  4398: a0 = a1 <u t0\n  4401: a4 = a4 + a0\n  4404: a0 = u64 [s1 + 0xa0]\n  4408: u64 [a5 + 0x38] = a0\n  4411: a0 = u64 [s1 + 0xb8]\n  4415: u64 [a5 + 0x30] = a0\n  4418: a0 = u64 [s1 + 0xb0]\n  4422: u64 [a5 + 0x28] = a0\n  4425: a0 = u64 [s1 + 0xa8]\n  4429: u64 [a5 + 0x20] = a0\n  4432: a0 = u64 [s1 + 0x98]\n  4436: u64 [a5 + 0x58] = a0\n  4439: a0 = u64 [s1 + 0x90]\n  4443: u64 [a5 + 0x50] = a0\n  4446: a0 = u64 [s1 + 0x88]\n  4450: u64 [a5 + 0x48] = a0\n  4453: a0 = u64 [s1 + 0x80]\n  4457: u64 [a5 + 0x40] = a0\n  4460: u64 [s1 + 0x48] = a2\n  4463: u64 [a5 + 0x60] = a2\n  4466: u64 [s1 + 0x40] = a3\n  4469: u64 [a5 + 0x68] = a3\n  4472: u64 [s1 + 0x38] = a1\n  4475: u64 [a5 + 0x70] = a1\n  4478: a0 = s1 + 0x680\n  4482: a1 = s1 + 0x660\n  4486: a2 = s1 + 0x640\n  4490: a3 = s1 + 0x620\n  4494: u64 [s1 + 0x30] = a4\n  4497: u64 [a5 + 0x78] = a4\n  4500: ra = 0xc0\n  4504: t0 = 0x1c6\n  4508: jump @453\n      : @179 [@dyn 96] (gas: 15)\n  4511: a1 = u64 [s1 + 0x50]\n  4514: a4 = a1\n  4516: a0 = u64 [s1 + 0x58]\n  4519: t0 = a0\n  4521: a0 = a0 | a1\n  4524: a1 = u64 [s1 + 0x68]\n  4527: a2 = a1\n  4529: a3 = u64 [s1 + 0x60]\n  4532: a1 = a1 | a3\n  4535: a1 = a1 | a0\n  4538: a1 = a1 >> 0x20\n  4541: a0 = a0 | a3\n  4544: a0 = a0 << 0x20\n  4547: a0 = a0 | a1\n  4550: jump @220 if a0 != 0\n      : @180 (gas: 47)\n  4554: t1 = a3\n  4556: t2 = u64 [s1 + 0x680]\n  4560: a1 = u64 [s1 + 0x688]\n  4564: a0 = u64 [s1 + 0x698]\n  4568: u64 [s1 + 0x20] = a0\n  4571: a3 = u64 [s1 + 0x690]\n  4575: ra = t2 <u a2\n  4578: a5 = a1 ^ a4\n  4581: a2 = a1 <u a4\n  4584: a2 = ra if a5 == 0\n  4587: a0 = t1\n  4589: a5 = a3 - t1\n  4592: t1 = a5 <u a2\n  4595: a3 = a3 <u a0\n  4598: a0 = u64 [s1 + 0x20]\n  4601: a0 = a0 - t0\n  4604: a0 = a0 - a3\n  4607: t1 = a0 - t1\n  4610: u64 [s1 + 0x10] = t1\n  4613: a3 = a5 - a2\n  4616: a0 = a1 - a4\n  4619: a4 = a0 - ra\n  4622: u64 [s1 + 0x18] = a4\n  4625: a0 = u64 [s1 + 0x68]\n  4628: a1 = t2 - a0\n  4631: u64 [s1 + 0x20] = a1\n  4634: t2 = a1 + 0xffffffffffffffe0\n  4637: a1 = t2 <u a1\n  4640: a2 = a4 + a1\n  4643: a2 = a2 + 0xffffffffffffffff\n  4646: t0 = a2 ^ a4\n  4649: a4 = a2 <u a4\n  4652: a4 = a1 if t0 == 0\n  4655: u64 [s1 + 0x8] = a3\n  4658: a1 = a3 <u 0x1\n  4661: t0 = t1 - a1\n  4664: a1 = a3 + 0xffffffffffffffff\n  4667: a4 = a4 + a1\n  4670: a3 = a4 <u a1\n  4673: a3 = a3 + t0\n  4676: u64 [s1 + 0x600] = t2\n  4680: a5 = s1 + 0x600\n  4684: u64 [a5 + 0x8] = a2\n  4687: u64 [a5 + 0x10] = a4\n  4690: a1 = s1 + 0x600\n  4694: u64 [a5 + 0x18] = a3\n  4697: ra = 194, jump @4\n      : @181 [@dyn 97] (gas: 20)\n  4703: a0 = u64 [s1 + 0x10]\n  4706: a3 = s1 + 0x500\n  4710: u64 [a3 + 0xd8] = a0\n  4714: a0 = u64 [s1 + 0x8]\n  4717: u64 [a3 + 0xd0] = a0\n  4721: a0 = u64 [s1 + 0x18]\n  4724: u64 [a3 + 0xc8] = a0\n  4728: a0 = u64 [s1 + 0x20]\n  4731: u64 [a3 + 0xc0] = a0\n  4735: a0 = u64 [s1 + 0x58]\n  4738: u64 [a3 + 0xf8] = a0\n  4742: a0 = u64 [s1 + 0x60]\n  4745: u64 [a3 + 0xf0] = a0\n  4749: a0 = u64 [s1 + 0x50]\n  4752: u64 [a3 + 0xe8] = a0\n  4756: a0 = s1 + 0x5e0\n  4760: a1 = s1 + 0x5c0\n  4764: a2 = u64 [s1 + 0x68]\n  4767: u64 [a3 + 0xe0] = a2\n  4771: ra = 196, jump @374\n      : @182 [@dyn 98] (gas: 3)\n  4777: a0 = s1 + 0x5a0\n  4781: a1 = u64 [s1 + 0x68]\n  4784: ra = 198, jump @2\n      : @183 [@dyn 99] (gas: 12)\n  4790: a2 = u64 [s1 + 0x48]\n  4793: a3 = u64 [s1 + 0x38]\n  4796: a0 = a2 | a3\n  4799: a1 = u64 [s1 + 0x40]\n  4802: a4 = u64 [s1 + 0x30]\n  4805: a1 = a1 | a4\n  4808: a0 = a0 | a1\n  4811: a0 = a0 >> 0x20\n  4814: a1 = a1 | a3\n  4817: a1 = a1 << 0x20\n  4820: a1 = a1 | a0\n  4823: jump @220 if a1 != 0\n      : @184 (gas: 14)\n  4827: a0 = a2\n  4829: a3 = s1 + 0x500\n  4833: a4 = u64 [a3 + 0xb8]\n  4837: a5 = u64 [a3 + 0xb0]\n  4841: a1 = u64 [a3 + 0xa0]\n  4845: a2 = u64 [a3 + 0xa8]\n  4849: a3 = a1 | a5\n  4852: a2 = a2 | a4\n  4855: a3 = a3 | a2\n  4858: a3 = a3 >> 0x20\n  4861: a2 = a2 | a5\n  4864: a2 = a2 << 0x20\n  4867: a2 = a2 | a3\n  4870: jump @220 if a2 != 0\n      : @185 (gas: 2)\n  4874: u64 [s1 + 0x68] = a1\n  4877: ra = 200, jump @12\n      : @186 [@dyn 100] (gas: 20)\n  4883: a1 = sp + 0xffffffffffffffe0\n  4886: a2 = a1 & 0xffffffffffffffe0\n  4889: u64 [s1 + 0x60] = a2\n  4892: sp = a2\n  4894: i32 a0 = a0 + 0\n  4896: a1 = i32 [s1 + 0x68]\n  4899: i32 a2 = a2 + 0\n  4901: ecalli 8 // 'hash_keccak_256'\n  4903: a1 = u64 [s1 + 0x60]\n  4906: a0 = u64 [a1 + 0x18]\n  4909: u64 [s1 + 0x68] = a0\n  4912: a0 = u64 [a1 + 0x10]\n  4915: u64 [s1 + 0x58] = a0\n  4918: a0 = u64 [a1 + 0x8]\n  4921: u64 [s1 + 0x50] = a0\n  4924: a0 = u64 [a1]\n  4926: u64 [s1 + 0x60] = a0\n  4929: a0 = s1 + 0x580\n  4933: a1 = u64 [s1 + 0x78]\n  4936: ra = 202, jump @2\n      : @187 [@dyn 101] (gas: 13)\n  4942: a4 = s1 + 0x500\n  4946: a0 = u64 [a4 + 0x98]\n  4950: a3 = u64 [a4 + 0x90]\n  4954: a2 = u64 [a4 + 0x88]\n  4958: a1 = u64 [a4 + 0x80]\n  4962: a0 = a0 | a2\n  4965: a2 = a1 | a3\n  4968: a2 = a2 | a0\n  4971: a2 = a2 >> 0x20\n  4974: a0 = a0 | a3\n  4977: a0 = a0 << 0x20\n  4980: a0 = a0 | a2\n  4983: jump @220 if a0 != 0\n      : @188 (gas: 3)\n  4987: a0 = u64 [s1 + 0x28]\n  4990: u64 [s1 + 0x78] = a1\n  4993: ra = 204, jump @12\n      : @189 [@dyn 102] (gas: 64)\n  4999: a2 = s1 + 0x7ff\n  5003: a2 = a2 + 0x31\n  5006: u64 [a2 + 200] = 0\n  5010: u64 [a2 + 192] = 0\n  5014: u64 [a2 + 184] = 0\n  5018: u64 [a2 + 176] = 0\n  5022: a1 = u64 [s1 + 0x50]\n  5025: u64 [a2 + 0xd8] = a1\n  5029: a1 = u64 [s1 + 0x60]\n  5032: u64 [a2 + 0xd0] = a1\n  5036: a1 = u64 [s1 + 0x58]\n  5039: u64 [a2 + 0xe0] = a1\n  5043: a1 = u64 [s1 + 0x68]\n  5046: u64 [a2 + 0xe8] = a1\n  5050: u64 [a2 + 264] = 0\n  5054: u64 [a2 + 256] = 0\n  5058: u64 [a2 + 248] = 0\n  5062: u64 [a2 + 240] = 0\n  5066: a3 = a2 + 0x100\n  5070: u64 [a3 + 40] = 0xffffffffffffffff\n  5074: u64 [a3 + 32] = 0xffffffffffffffff\n  5078: u64 [a3 + 24] = 0xffffffffffffffff\n  5082: u64 [a3 + 16] = 0xffffffffffffffff\n  5086: a1 = s1 + 0x7ff\n  5090: a1 = a1 + 0xe1\n  5094: a1 = a1 << 0x20\n  5097: a1 = a1 >> 0x20\n  5100: a2 = s1 + 0x7ff\n  5104: a2 = a2 + 0x141\n  5108: a2 = a2 << 0x20\n  5111: a2 = a2 | a1\n  5114: a0 = a0 << 0x20\n  5117: a0 = a0 >> 0x20\n  5120: a3 = u64 [s1 + 0x78]\n  5123: a3 = a3 << 0x20\n  5126: a3 = a3 | a0\n  5129: a0 = s1 + 0x7ff\n  5133: a0 = a0 + 0x101\n  5137: a0 = a0 << 0x20\n  5140: a0 = a0 >> 0x20\n  5143: a1 = s1 + 0x7ff\n  5147: a1 = a1 + 0x121\n  5151: a1 = a1 << 0x20\n  5154: a5 = a1 | a0\n  5157: a0 = 0xffffffffffffffff\n  5160: a1 = 0xffffffffffffffff\n  5163: a4 = 0xffffffffffffffff\n  5166: ecalli 9 // 'instantiate'\n  5168: a4 = s1 + 0x7ff\n  5172: a4 = a4 + 0x31\n  5175: a1 = u64 [a4 + 0xf8]\n  5179: a3 = 0x300d0\n  5184: a2 = u64 [a4 + 0xf0]\n  5188: a0 = u32 [a4 + 0x100]\n  5192: u64 [s1 + 0x40] = a1\n  5195: u64 [0x300d8] = a1\n  5200: u64 [s1 + 0x38] = a2\n  5203: u64 [0x300d0] = a2\n  5208: u64 [s1 + 0x48] = a0\n  5211: u32 [0x300e0] = a0\n  5216: u64 [s1 + 0x50] = a3\n  5219: i32 a0 = a3 + 0\n  5221: ecalli 5 // 'code_size'\n  5223: fallthrough\n      : @190 (gas: 1)\n  5224: jump @225 if a0 == 0\n      : @191 (gas: 3)\n  5228: a0 = s1 + 0x560\n  5232: a1 = 0x40\n  5235: ra = 206, jump @2\n      : @192 [@dyn 103] (gas: 14)\n  5241: a0 = s1 + 0x500\n  5245: a4 = u64 [a0 + 0x78]\n  5248: a3 = u64 [a0 + 0x70]\n  5251: a2 = u64 [a0 + 0x68]\n  5254: a1 = u64 [a0 + 0x60]\n  5257: a0 = a2 | a4\n  5260: u64 [s1 + 0x78] = a1\n  5263: a1 = a1 | a3\n  5266: a1 = a1 | a0\n  5269: a1 = a1 >> 0x20\n  5272: a0 = a0 | a3\n  5275: a0 = a0 << 0x20\n  5278: a0 = a0 | a1\n  5281: jump @220 if a0 != 0\n      : @193 (gas: 11)\n  5285: u64 [s1 + 1360] = 0\n  5289: u64 [s1 + 1352] = 0\n  5293: u64 [s1 + 1344] = 0\n  5297: a0 = 0x485cc95500000000\n  5307: a1 = s1 + 0x540\n  5311: u64 [s1 + 0x558] = a0\n  5315: a0 = u64 [s1 + 0x78]\n  5318: u64 [s1 + 0x68] = a2\n  5321: u64 [s1 + 0x60] = a3\n  5324: u64 [s1 + 0x58] = a4\n  5327: ra = 208, jump @4\n      : @194 [@dyn 104] (gas: 40)\n  5333: a1 = u64 [s1 + 0x78]\n  5336: a0 = a1 + 0x4\n  5339: a1 = a0 <u a1\n  5342: a3 = u64 [s1 + 0x68]\n  5345: a2 = a3 + a1\n  5348: a3 = a2 <u a3\n  5351: a3 = a1 if a1 == 0\n  5354: a1 = u64 [s1 + 0x60]\n  5357: a3 = a3 + a1\n  5360: a4 = a3 <u a1\n  5363: a1 = u64 [s1 + 0x58]\n  5366: a4 = a4 + a1\n  5369: a1 = u64 [s1 + 0xa0]\n  5373: a5 = s1 + 0x400\n  5377: u64 [a5 + 0xd8] = a1\n  5381: a1 = u64 [s1 + 0xb8]\n  5385: u64 [a5 + 0xd0] = a1\n  5389: a1 = u64 [s1 + 0xb0]\n  5393: u64 [a5 + 0xc8] = a1\n  5397: a1 = u64 [s1 + 0xa8]\n  5401: u64 [a5 + 0xc0] = a1\n  5405: a1 = u64 [s1 + 0x98]\n  5409: u64 [a5 + 0xf8] = a1\n  5413: a1 = u64 [s1 + 0x90]\n  5417: u64 [a5 + 0xf0] = a1\n  5421: a1 = u64 [s1 + 0x88]\n  5425: u64 [a5 + 0xe8] = a1\n  5429: a1 = u64 [s1 + 0x80]\n  5433: u64 [a5 + 0xe0] = a1\n  5437: u64 [s1 + 0x508] = a2\n  5441: u64 [s1 + 0x500] = a0\n  5445: u64 [s1 + 0x510] = a3\n  5449: a0 = s1 + 0x520\n  5453: a1 = s1 + 0x500\n  5457: a2 = s1 + 0x4e0\n  5461: a3 = s1 + 0x4c0\n  5465: u64 [s1 + 0x518] = a4\n  5469: ra = 0xd2\n  5473: t0 = 0x1ce\n  5477: jump @453\n      : @195 [@dyn 105] (gas: 28)\n  5480: a0 = u64 [s1 + 0x528]\n  5484: t0 = u64 [s1 + 0x538]\n  5488: t1 = u64 [s1 + 0x520]\n  5492: a3 = u64 [s1 + 0x530]\n  5496: a1 = u64 [s1 + 0x68]\n  5499: a4 = a0 ^ a1\n  5502: a5 = a0 <u a1\n  5505: ra = u64 [s1 + 0x78]\n  5508: t2 = t1 <u ra\n  5511: a5 = t2 if a4 == 0\n  5514: a2 = u64 [s1 + 0x60]\n  5517: a4 = a3 - a2\n  5520: a3 = a3 <u a2\n  5523: a2 = u64 [s1 + 0x58]\n  5526: a2 = t0 - a2\n  5529: a2 = a2 - a3\n  5532: a3 = a4 <u a5\n  5535: a2 = a2 - a3\n  5538: u64 [s1 + 0x28] = a2\n  5541: a4 = a4 - a5\n  5544: u64 [s1 + 0x20] = a4\n  5547: a0 = a0 - a1\n  5550: a0 = a0 - t2\n  5553: u64 [s1 + 0x18] = a0\n  5556: a0 = t1 - ra\n  5559: u64 [s1 + 0x30] = a0\n  5562: ecalli 10 // 'ref_time_left'\n  5564: fallthrough\n      : @196 (gas: 27)\n  5565: a4 = a0\n  5567: a0 = u64 [s1 + 0x28]\n  5570: a1 = u64 [s1 + 0x18]\n  5573: a0 = a0 | a1\n  5576: a1 = u64 [s1 + 0x30]\n  5579: a3 = a1\n  5581: a2 = u64 [s1 + 0x20]\n  5584: a1 = a1 | a2\n  5587: a1 = a1 | a0\n  5590: a0 = a0 | a2\n  5593: a1 = a1 >> 0x20\n  5596: a0 = a0 << 0x20\n  5599: a0 = a0 | a1\n  5602: a1 = u64 [s1 + 0x40]\n  5605: a2 = u64 [s1 + 0x50]\n  5608: u64 [a2 + 0x8] = a1\n  5611: a1 = u64 [s1 + 0x38]\n  5614: u64 [a2] = a1\n  5616: a1 = u64 [s1 + 0x48]\n  5619: u32 [a2 + 0x10] = a1\n  5622: a1 = s1 + 0x7ff\n  5626: a1 = a1 + 0x31\n  5629: u64 [a1 + 328] = 0\n  5633: u64 [a1 + 320] = 0\n  5637: u64 [a1 + 312] = 0\n  5641: u64 [a1 + 304] = 0\n  5645: jump @220 if a0 != 0\n      : @197 (gas: 6)\n  5649: i32 a0 = a3 + 0\n  5651: u64 [s1 + 0x20] = a0\n  5654: a0 = u64 [s1 + 0x78]\n  5657: a1 = a3\n  5659: u64 [s1 + 0x18] = a4\n  5662: ra = 212, jump @12\n      : @198 [@dyn 106] (gas: 4)\n  5668: u64 [s1 + 0x28] = a0\n  5671: a0 = u64 [s1 + 0x78]\n  5674: a1 = 0\n  5676: ra = 214, jump @12\n      : @199 [@dyn 107] (gas: 44)\n  5682: a3 = s1 + 0x7ff\n  5686: a3 = a3 + 0x31\n  5689: u32 [a3 + 336] = 0\n  5693: a1 = u64 [s1 + 0x20]\n  5696: a1 = a1 >u 0\n  5698: a4 = u64 [s1 + 0x18]\n  5701: a2 = a4 >u 0x8fc\n  5705: a1 = a1 | a2\n  5708: a2 = -a1\n  5710: a4 = a3 + 0x100\n  5714: u64 [a4 + 0x88] = a2\n  5718: u64 [a4 + 0x80] = a2\n  5722: u64 [a4 + 0x78] = a2\n  5725: u64 [a4 + 0x70] = a2\n  5728: a2 = u64 [s1 + 0x50]\n  5731: a2 = a2 << 0x20\n  5734: a2 = a2 >> 0x20\n  5737: a1 = a1 << 0x23\n  5740: t0 = a1 | a2\n  5743: a1 = s1 + 0x7ff\n  5747: a1 = a1 + 0x161\n  5751: a1 = a1 << 0x20\n  5754: a1 = a1 >> 0x20\n  5757: a2 = s1 + 0x7ff\n  5761: a2 = a2 + 0x1a1\n  5765: a2 = a2 << 0x20\n  5768: a3 = a2 | a1\n  5771: a1 = u64 [s1 + 0x28]\n  5774: a1 = a1 << 0x20\n  5777: a1 = a1 >> 0x20\n  5780: a4 = u64 [s1 + 0x30]\n  5783: a4 = a4 << 0x20\n  5786: a4 = a4 | a1\n  5789: a0 = a0 << 0x20\n  5792: a0 = a0 >> 0x20\n  5795: a1 = s1 + 0x7ff\n  5799: a1 = a1 + 0x181\n  5803: a1 = a1 << 0x20\n  5806: a5 = a1 | a0\n  5809: a1 = 0xffffffffffffffff\n  5812: a2 = 0xffffffffffffffff\n  5815: a0 = t0\n  5817: ecalli 0 // 'call'\n  5818: fallthrough\n      : @200 (gas: 1)\n  5819: jump @221 if a0 != 0\n      : @201 (gas: 31)\n  5823: a0 = u64 [s1 + 0x40]\n  5826: a0 = reverse a0\n  5828: a1 = a0 >> 0x20\n  5831: a2 = u64 [s1 + 0x38]\n  5834: a2 = reverse a2\n  5836: a3 = a2 << 0x20\n  5839: a1 = a1 | a3\n  5842: u64 [s1 + 0x50] = a1\n  5845: a0 = a0 << 0x20\n  5848: a1 = u64 [s1 + 0x48]\n  5851: a1 = reverse a1\n  5853: a1 = a1 >> 0x20\n  5856: a0 = a0 | a1\n  5859: u64 [s1 + 0x48] = a0\n  5862: a2 = a2 >> 0x20\n  5865: u64 [s1 + 0x40] = a2\n  5868: u64 [s1 + 1176] = 0\n  5872: u64 [s1 + 1168] = 0\n  5876: u64 [s1 + 1160] = 0\n  5880: u64 [s1 + 1152] = 0\n  5884: a0 = u64 [s1 + 0x78]\n  5887: u64 [s1 + 0x4a0] = a0\n  5891: a0 = u64 [s1 + 0x68]\n  5894: u64 [s1 + 0x4a8] = a0\n  5898: a0 = u64 [s1 + 0x60]\n  5901: u64 [s1 + 0x4b0] = a0\n  5905: a0 = s1 + 0x4a0\n  5909: a1 = s1 + 0x480\n  5913: a2 = u64 [s1 + 0x58]\n  5916: u64 [s1 + 0x4b8] = a2\n  5920: ra = 216, jump @374\n      : @202 [@dyn 108] (gas: 15)\n  5926: a3 = u64 [s1 + 0x58]\n  5929: u64 [s1 + 0x458] = a3\n  5933: a1 = u64 [s1 + 0x60]\n  5936: u64 [s1 + 0x450] = a1\n  5940: a0 = u64 [s1 + 0x68]\n  5943: u64 [s1 + 0x448] = a0\n  5947: a2 = u64 [s1 + 0x78]\n  5950: u64 [s1 + 0x440] = a2\n  5954: u64 [s1 + 0x478] = a3\n  5958: u64 [s1 + 0x470] = a1\n  5962: u64 [s1 + 0x468] = a0\n  5966: a0 = s1 + 0x460\n  5970: a1 = s1 + 0x440\n  5974: u64 [s1 + 0x460] = a2\n  5978: ra = 218, jump @75\n      : @203 [@dyn 109] (gas: 11)\n  5984: a0 = u64 [s1 + 0x98]\n  5988: u64 [s1 + 0x418] = a0\n  5992: a0 = u64 [s1 + 0x90]\n  5996: u64 [s1 + 0x410] = a0\n  6000: a0 = u64 [s1 + 0x88]\n  6004: u64 [s1 + 0x408] = a0\n  6008: a0 = s1 + 0x420\n  6012: a1 = s1 + 0x400\n  6016: a2 = u64 [s1 + 0x80]\n  6020: u64 [s1 + 0x400] = a2\n  6024: ra = 220, jump @228\n      : @204 [@dyn 110] (gas: 23)\n  6030: a4 = s1 + 0x400\n  6034: a3 = u64 [a4 + 0x20]\n  6037: a0 = u64 [a4 + 0x28]\n  6040: a1 = u64 [a4 + 0x30]\n  6043: a2 = u64 [a4 + 0x38]\n  6046: a4 = u64 [s1 + 0xa0]\n  6050: u64 [s1 + 0x3b8] = a4\n  6054: a4 = u64 [s1 + 0xb8]\n  6058: u64 [s1 + 0x3b0] = a4\n  6062: a4 = u64 [s1 + 0xb0]\n  6066: u64 [s1 + 0x3a8] = a4\n  6070: a4 = u64 [s1 + 0xa8]\n  6074: u64 [s1 + 0x3a0] = a4\n  6078: u64 [s1 + 0x3d8] = a2\n  6082: u64 [s1 + 0x3d0] = a1\n  6086: u64 [s1 + 0x3c8] = a0\n  6090: a0 = s1 + 0x3e0\n  6094: a1 = s1 + 0x3c0\n  6098: a2 = s1 + 0x3a0\n  6102: u64 [s1 + 0x3c0] = a3\n  6106: ra = 0xde\n  6110: t0 = 0x104\n  6114: jump @454\n      : @205 [@dyn 111] (gas: 20)\n  6117: a2 = u64 [s1 + 0x3e0]\n  6121: a0 = u64 [s1 + 0x3e8]\n  6125: a1 = u64 [s1 + 0x3f0]\n  6129: a3 = u64 [s1 + 0x3f8]\n  6133: u64 [s1 + 888] = 0\n  6137: a4 = u64 [s1 + 0x40]\n  6140: u64 [s1 + 0x370] = a4\n  6144: a4 = u64 [s1 + 0x50]\n  6147: u64 [s1 + 0x368] = a4\n  6151: a4 = u64 [s1 + 0x48]\n  6154: u64 [s1 + 0x360] = a4\n  6158: u64 [s1 + 0x398] = a3\n  6162: u64 [s1 + 0x390] = a1\n  6166: u64 [s1 + 0x388] = a0\n  6170: a0 = s1 + 0x380\n  6174: a1 = s1 + 0x360\n  6178: u64 [s1 + 0x380] = a2\n  6182: ra = 0xe0\n  6186: t0 = 0x156\n  6190: jump @454\n      : @206 [@dyn 112] (gas: 11)\n  6193: a0 = u64 [s1 + 0xa0]\n  6197: u64 [s1 + 0x338] = a0\n  6201: a0 = u64 [s1 + 0xb8]\n  6205: u64 [s1 + 0x330] = a0\n  6209: a0 = u64 [s1 + 0xb0]\n  6213: u64 [s1 + 0x328] = a0\n  6217: a0 = s1 + 0x340\n  6221: a1 = s1 + 0x320\n  6225: a2 = u64 [s1 + 0xa8]\n  6229: u64 [s1 + 0x320] = a2\n  6233: ra = 226, jump @228\n      : @207 [@dyn 113] (gas: 22)\n  6239: a3 = u64 [s1 + 0x340]\n  6243: a0 = u64 [s1 + 0x348]\n  6247: a1 = u64 [s1 + 0x350]\n  6251: a2 = u64 [s1 + 0x358]\n  6255: a4 = u64 [s1 + 0x98]\n  6259: u64 [s1 + 0x2d8] = a4\n  6263: a4 = u64 [s1 + 0x90]\n  6267: u64 [s1 + 0x2d0] = a4\n  6271: a4 = u64 [s1 + 0x88]\n  6275: u64 [s1 + 0x2c8] = a4\n  6279: a4 = u64 [s1 + 0x80]\n  6283: u64 [s1 + 0x2c0] = a4\n  6287: u64 [s1 + 0x2f8] = a2\n  6291: u64 [s1 + 0x2f0] = a1\n  6295: u64 [s1 + 0x2e8] = a0\n  6299: a0 = s1 + 0x300\n  6303: a1 = s1 + 0x2e0\n  6307: a2 = s1 + 0x2c0\n  6311: u64 [s1 + 0x2e0] = a3\n  6315: ra = 0xe4\n  6319: t0 = 0x104\n  6323: jump @454\n      : @208 [@dyn 114] (gas: 21)\n  6326: a4 = s1 + 0x300\n  6330: a2 = u64 [a4]\n  6332: a0 = u64 [a4 + 0x8]\n  6335: a1 = u64 [a4 + 0x10]\n  6338: a3 = u64 [a4 + 0x18]\n  6341: u64 [s1 + 664] = 0\n  6345: a4 = u64 [s1 + 0x40]\n  6348: u64 [s1 + 0x290] = a4\n  6352: a4 = u64 [s1 + 0x50]\n  6355: u64 [s1 + 0x288] = a4\n  6359: a4 = u64 [s1 + 0x48]\n  6362: u64 [s1 + 0x280] = a4\n  6366: u64 [s1 + 0x2b8] = a3\n  6370: u64 [s1 + 0x2b0] = a1\n  6374: u64 [s1 + 0x2a8] = a0\n  6378: a0 = s1 + 0x2a0\n  6382: a1 = s1 + 0x280\n  6386: u64 [s1 + 0x2a0] = a2\n  6390: ra = 0xe6\n  6394: t0 = 0x156\n  6398: jump @454\n      : @209 [@dyn 115] (gas: 9)\n  6401: u64 [s1 + 632] = 0\n  6405: a0 = u64 [s1 + 0x40]\n  6408: u64 [s1 + 0x270] = a0\n  6412: a0 = u64 [s1 + 0x50]\n  6415: u64 [s1 + 0x268] = a0\n  6419: a0 = s1 + 0x260\n  6423: a1 = u64 [s1 + 0x48]\n  6426: u64 [s1 + 0x260] = a1\n  6430: ra = 232, jump @407\n      : @210 [@dyn 116] (gas: 12)\n  6436: a1 = s1 + 0x7ff\n  6440: a1 = a1 + 0x31\n  6443: u64 [a1 + 424] = 0\n  6447: u64 [a1 + 416] = 0\n  6451: u64 [a1 + 408] = 0\n  6455: u64 [a1 + 400] = 0x3\n  6460: a0 = s1 + 0x240\n  6464: a1 = s1 + 0x7ff\n  6468: a1 = a1 + 0x1c1\n  6472: ra = 0xea\n  6476: t0 = 0x6\n  6479: jump @438\n      : @211 [@dyn 117] (gas: 11)\n  6482: a0 = u64 [s1 + 0x240]\n  6486: u64 [s1 + 0x90] = a0\n  6490: a0 = u64 [s1 + 0x248]\n  6494: u64 [s1 + 0x78] = a0\n  6497: a0 = u64 [s1 + 0x250]\n  6501: u64 [s1 + 0x68] = a0\n  6504: a0 = u64 [s1 + 0x258]\n  6508: u64 [s1 + 0x58] = a0\n  6511: a0 = s1 + 0x220\n  6515: a1 = 0x40\n  6518: ra = 236, jump @2\n      : @212 [@dyn 118] (gas: 34)\n  6524: a0 = s1 + 0x200\n  6528: a2 = u64 [a0 + 0x38]\n  6531: u64 [s1 + 0x98] = a2\n  6535: a1 = u64 [a0 + 0x30]\n  6538: u64 [s1 + 0x60] = a1\n  6541: a3 = u64 [a0 + 0x28]\n  6544: u64 [s1 + 0x38] = a3\n  6547: a4 = u64 [a0 + 0x20]\n  6550: u64 [s1 + 0xa0] = a4\n  6554: a0 = u64 [s1 + 0x58]\n  6557: a5 = s1 + 0x100\n  6561: u64 [a5 + 0xb8] = a0\n  6565: a0 = u64 [s1 + 0x68]\n  6568: u64 [a5 + 0xb0] = a0\n  6572: a0 = u64 [s1 + 0x78]\n  6575: u64 [a5 + 0xa8] = a0\n  6579: a0 = u64 [s1 + 0x90]\n  6583: u64 [a5 + 0xa0] = a0\n  6587: u64 [s1 + 472] = 0\n  6591: a0 = u64 [s1 + 0x40]\n  6594: u64 [a5 + 0xd0] = a0\n  6598: a0 = u64 [s1 + 0x50]\n  6601: u64 [a5 + 0xc8] = a0\n  6605: a0 = u64 [s1 + 0x48]\n  6608: u64 [a5 + 0xc0] = a0\n  6612: u64 [a5 + 0xf8] = a2\n  6616: u64 [a5 + 0xf0] = a1\n  6620: u64 [a5 + 0xe8] = a3\n  6624: a0 = s1 + 0x200\n  6628: a1 = s1 + 0x1e0\n  6632: a2 = s1 + 0x1c0\n  6636: a3 = s1 + 0x1a0\n  6640: u64 [a5 + 0xe0] = a4\n  6644: ra = 238, jump @424\n      : @213 [@dyn 119] (gas: 12)\n  6650: a4 = u64 [s1 + 0x38]\n  6653: a0 = u64 [s1 + 0x98]\n  6657: a0 = a0 | a4\n  6660: a3 = u64 [s1 + 0x60]\n  6663: a1 = u64 [s1 + 0xa0]\n  6667: a1 = a1 | a3\n  6670: a1 = a1 | a0\n  6673: a1 = a1 >> 0x20\n  6676: a0 = a0 | a3\n  6679: a0 = a0 << 0x20\n  6682: a0 = a0 | a1\n  6685: jump @220 if a0 != 0\n      : @214 (gas: 34)\n  6689: t0 = a3\n  6691: a2 = s1 + 0x200\n  6695: a0 = u64 [a2 + 0x8]\n  6698: a1 = u64 [a2 + 0x18]\n  6701: u64 [s1 + 0x90] = a1\n  6705: t2 = u64 [s1 + 0x200]\n  6709: a3 = u64 [a2 + 0x10]\n  6712: ra = a0 ^ a4\n  6715: a5 = a0 <u a4\n  6718: t1 = u64 [s1 + 0xa0]\n  6722: a1 = t2 <u t1\n  6725: a5 = a1 if ra == 0\n  6728: a2 = a3 - t0\n  6731: ra = a2 - a5\n  6734: a2 = a2 <u a5\n  6737: u64 [s1 + 0x78] = a2\n  6740: a3 = a3 <u t0\n  6743: a5 = u64 [s1 + 0x98]\n  6747: a2 = u64 [s1 + 0x90]\n  6751: a5 = a2 - a5\n  6754: a5 = a5 - a3\n  6757: a2 = u64 [s1 + 0x78]\n  6760: a5 = a5 - a2\n  6763: a0 = a0 - a4\n  6766: a0 = a0 - a1\n  6769: a1 = t2 - t1\n  6772: a0 = a0 | a5\n  6775: a3 = a1 | ra\n  6778: a3 = a3 | a0\n  6781: a0 = a0 | ra\n  6784: a3 = a3 >> 0x20\n  6787: a0 = a0 << 0x20\n  6790: a0 = a0 | a3\n  6793: jump @220 if a0 != 0\n      : @215 (gas: 64)\n  6797: a2 = 0xffffffff\n  6807: a3 = u64 [s1 + 0xa8]\n  6811: a3 = a3 & 0xffffffffffffffff\n  6814: a4 = u64 [s1 + 0xb0]\n  6818: a4 = a4 & 0xffffffffffffffff\n  6821: a0 = u64 [s1 + 0xb8]\n  6825: a0 = a0 & a2\n  6828: u64 [s1 + 344] = 0\n  6832: u64 [s1 + 0x140] = a3\n  6836: u64 [s1 + 376] = 0\n  6840: a2 = u64 [s1 + 0x80]\n  6844: u64 [s1 + 0x160] = a2\n  6848: u64 [s1 + 0x148] = a4\n  6852: a2 = u64 [s1 + 0x88]\n  6856: u64 [s1 + 0x168] = a2\n  6860: a2 = u64 [0x20040]\n  6865: a3 = u64 [0x20048]\n  6870: a4 = u64 [0x20050]\n  6875: a5 = u64 [0x20058]\n  6880: u64 [s1 + 0x198] = a2\n  6884: u64 [s1 + 0x190] = a3\n  6888: u64 [s1 + 0x188] = a4\n  6892: u64 [s1 + 0x180] = a5\n  6896: u64 [s1 + 0x150] = a0\n  6900: a2 = s1 + 0x180\n  6904: a3 = s1 + 0x160\n  6908: a4 = s1 + 0x140\n  6912: a0 = u64 [s1 + 0x70]\n  6915: u64 [s1 + 0x170] = a0\n  6919: a0 = u64 [s1 + 0xa0]\n  6923: ra = 0xf0\n  6927: sp = sp + 0xffffffffffffff20\n  6931: u64 [sp + 0xd8] = ra\n  6935: u64 [sp + 0xd0] = s0\n  6939: u64 [sp + 0xc8] = s1\n  6943: s0 = sp + 0xe0\n  6947: sp = sp & 0xffffffffffffffe0\n  6950: a5 = u64 [a4]\n  6952: u64 [sp + 0x40] = a5\n  6955: a5 = u64 [a4 + 0x8]\n  6958: u64 [sp + 0x48] = a5\n  6961: a5 = u64 [a4 + 0x10]\n  6964: u64 [sp + 0x50] = a5\n  6967: a4 = u64 [a4 + 0x18]\n  6970: u64 [sp + 0x58] = a4\n  6973: t0 = 0xa\n  6976: a4 = u64 [a3]\n  6978: u64 [sp + 0x18] = a4\n  6981: a4 = u64 [a3 + 0x8]\n  6984: u64 [sp + 0x20] = a4\n  6987: a4 = u64 [a3 + 0x10]\n  6990: u64 [sp + 0x28] = a4\n  6993: a3 = u64 [a3 + 0x18]\n  6996: u64 [sp + 0x30] = a3\n  6999: s1 = u64 [a2]\n  7001: a3 = u64 [a2 + 0x8]\n  7004: u64 [sp] = a3\n  7006: a3 = u64 [a2 + 0x10]\n  7009: u64 [sp + 0x8] = a3\n  7012: a2 = u64 [a2 + 0x18]\n  7015: u64 [sp + 0x10] = a2\n  7018: u64 [sp + 0x38] = a1\n  7021: ra = 0xc\n  7024: jump @12\n      : @216 [@dyn 120] (gas: 3)\n  7027: a0 = s1 + 0x120\n  7031: a1 = 0x40\n  7034: ra = 242, jump @2\n      : @217 [@dyn 121] (gas: 24)\n  7040: a0 = s1 + 0x100\n  7044: a2 = u64 [a0 + 0x38]\n  7047: u64 [s1 + 0xb8] = a2\n  7051: a1 = u64 [a0 + 0x30]\n  7054: u64 [s1 + 0xb0] = a1\n  7058: a3 = u64 [a0 + 0x28]\n  7061: u64 [s1 + 0xa8] = a3\n  7065: a4 = u64 [a0 + 0x20]\n  7068: u64 [s1 + 0xa0] = a4\n  7072: u64 [s1 + 216] = 0\n  7076: a0 = u64 [s1 + 0x40]\n  7079: u64 [s1 + 0xd0] = a0\n  7083: a0 = u64 [s1 + 0x50]\n  7086: u64 [s1 + 0xc8] = a0\n  7090: a0 = u64 [s1 + 0x48]\n  7093: u64 [s1 + 0xc0] = a0\n  7097: u64 [s1 + 0xf8] = a2\n  7101: u64 [s1 + 0xf0] = a1\n  7105: u64 [s1 + 0xe8] = a3\n  7109: a0 = s1 + 0x100\n  7113: a1 = s1 + 0xe0\n  7117: a2 = s1 + 0xc0\n  7121: u64 [s1 + 0xe0] = a4\n  7125: ra = 244, jump @79\n      : @218 [@dyn 122] (gas: 12)\n  7131: a4 = u64 [s1 + 0xa8]\n  7135: a2 = u64 [s1 + 0xa0]\n  7139: a0 = u64 [s1 + 0xb8]\n  7143: a0 = a0 | a4\n  7146: a3 = u64 [s1 + 0xb0]\n  7150: a1 = a2 | a3\n  7153: a1 = a1 | a0\n  7156: a1 = a1 >> 0x20\n  7159: a0 = a0 | a3\n  7162: a0 = a0 << 0x20\n  7165: a0 = a0 | a1\n  7168: jump @220 if a0 != 0\n      : @219 (gas: 33)\n  7171: t0 = a3\n  7173: a5 = s1 + 0x100\n  7177: a0 = u64 [a5 + 0x8]\n  7180: a1 = u64 [a5 + 0x18]\n  7183: u64 [s1 + 0x98] = a1\n  7187: t1 = u64 [s1 + 0x100]\n  7191: a3 = u64 [a5 + 0x10]\n  7194: t2 = a0 ^ a4\n  7197: a5 = a0 <u a4\n  7200: ra = t1 <u a2\n  7203: a5 = ra if t2 == 0\n  7206: a1 = a3 - t0\n  7209: t2 = a1 - a5\n  7212: a1 = a1 <u a5\n  7215: u64 [s1 + 0x90] = a1\n  7219: a3 = a3 <u t0\n  7222: a5 = u64 [s1 + 0xb8]\n  7226: a1 = u64 [s1 + 0x98]\n  7230: a5 = a1 - a5\n  7233: a5 = a5 - a3\n  7236: a1 = u64 [s1 + 0x90]\n  7240: a5 = a5 - a1\n  7243: a0 = a0 - a4\n  7246: a0 = a0 - ra\n  7249: a1 = t1 - a2\n  7252: a0 = a0 | a5\n  7255: a3 = a1 | t2\n  7258: a3 = a3 | a0\n  7261: a0 = a0 | t2\n  7264: a3 = a3 >> 0x20\n  7267: a0 = a0 << 0x20\n  7270: a0 = a0 | a3\n  7273: jump @226 if a0 == 0\n      : @220 (gas: 1)\n  7276: trap\n      : @221 (gas: 11)\n  7277: ra = 0xf6\n  7281: sp = sp + 0xffffffffffffffa0\n  7284: u64 [sp + 0x58] = ra\n  7287: u64 [sp + 0x50] = s0\n  7290: u64 [sp + 0x48] = s1\n  7293: s0 = sp + 0x60\n  7296: sp = sp & 0xffffffffffffffe0\n  7299: a0 = sp + 0x20\n  7302: a1 = 0x40\n  7305: ra = 0x1d6\n  7309: jump @2\n      : @222 [@dyn 123] (gas: 2)\n  7312: a1 = 0x200d0\n  7317: jump @224\n      : @223 (gas: 2)\n  7319: a1 = 0x200d0\n  7324: fallthrough\n      : @224 (gas: 6)\n  7325: i32 a1 = a1 + 0\n  7327: a0 = 0x1\n  7330: a2 = 0\n  7332: ecalli 13 // 'seal_return'\n  7334: a1 = 0x200d0\n  7339: jump @224\n      : @225 (gas: 2)\n  7341: a1 = 0x200d0\n  7346: jump @224\n      : @226 (gas: 3)\n  7348: a0 = a2\n  7350: u64 [s1 + 0xb8] = a1\n  7354: ra = 248, jump @12\n      : @227 [@dyn 124] (gas: 6)\n  7360: i32 a1 = a0 + 0\n  7362: a2 = i32 [s1 + 0xb8]\n  7366: a0 = 0\n  7368: ra = 0xfa\n  7372: ecalli 13 // 'seal_return'\n  7374: fallthrough\n      : @228 [@dyn 125] (gas: 18)\n  7375: sp = sp + 0xffffffffffffff80\n  7378: u64 [sp + 0x78] = ra\n  7381: u64 [sp + 0x70] = s0\n  7384: u64 [sp + 0x68] = s1\n  7387: s0 = sp + 0x80\n  7391: sp = sp & 0xffffffffffffffe0\n  7394: s1 = sp\n  7396: a2 = u64 [a1]\n  7398: a3 = u64 [a1 + 0x8]\n  7401: a1 = u32 [a1 + 0x10]\n  7404: u64 [s1 + 0x18] = a0\n  7407: u64 [s1 + 88] = 0\n  7410: u64 [s1 + 0x50] = a1\n  7413: u64 [s1 + 0x48] = a3\n  7416: a1 = s1 + 0x40\n  7419: u64 [s1 + 0x40] = a2\n  7422: a0 = 0\n  7424: ra = 252, jump @4\n      : @229 [@dyn 126] (gas: 7)\n  7430: u64 [s1 + 56] = 0\n  7433: u64 [s1 + 48] = 0\n  7436: u64 [s1 + 32] = 0x2\n  7440: a0 = 0x20\n  7443: a1 = s1 + a0\n  7446: u64 [s1 + 40] = 0\n  7449: ra = 254, jump @4\n      : @230 [@dyn 127] (gas: 2)\n  7455: a1 = i32 [0x200c4]\n  7460: jump @232 if a1 >u 63\n      : @231 (gas: 2)\n  7464: u32 [0x200c4] = 0x40\n  7470: fallthrough\n      : @232 (gas: 13)\n  7471: a0 = sp + 0xffffffffffffffe0\n  7474: a2 = a0 & 0xffffffffffffffe0\n  7477: u64 [s1 + 0x10] = a2\n  7480: sp = a2\n  7482: a0 = 0x200d0\n  7487: i32 a0 = a0 + 0\n  7489: i32 a2 = a2 + 0\n  7491: a1 = 0x40\n  7494: ra = 0x100\n  7498: ecalli 8 // 'hash_keccak_256'\n  7500: a3 = u64 [s1 + 0x10]\n  7503: t0 = 0x102\n  7507: jump @445\n      : @233 [@dyn 128] (gas: 2)\n  7510: a3 = u64 [s1 + 0x10]\n  7513: t0 = 258, jump @445\n      : @234 [@dyn 129] (gas: 11)\n  7519: a4 = u64 [s1 + 0x18]\n  7522: u64 [a4 + 0x18] = a3\n  7525: u64 [a4 + 0x10] = a2\n  7528: u64 [a4 + 0x8] = a1\n  7531: u64 [a4] = a0\n  7533: sp = s0 + 0xffffffffffffff80\n  7536: ra = u64 [sp + 0x78]\n  7539: s0 = u64 [sp + 0x70]\n  7542: s1 = u64 [sp + 0x68]\n  7545: sp = sp + 0x80\n  7549: ret\n      : @235 [@dyn 130] (gas: 20)\n  7551: s1 = sp\n  7553: a3 = u64 [a1]\n  7555: u64 [s1 + 0x30] = a3\n  7558: a3 = u64 [a1 + 0x8]\n  7561: u64 [s1 + 0x28] = a3\n  7564: a3 = u64 [a1 + 0x10]\n  7567: u64 [s1 + 0x20] = a3\n  7570: a1 = u64 [a1 + 0x18]\n  7573: u64 [s1 + 0x18] = a1\n  7576: a3 = u64 [a2]\n  7578: a1 = u64 [a2 + 0x8]\n  7581: a2 = u32 [a2 + 0x10]\n  7584: u64 [s1 + 0x38] = a0\n  7587: u64 [s1 + 120] = 0\n  7590: u64 [s1 + 0x70] = a2\n  7593: u64 [s1 + 0x68] = a1\n  7596: a1 = s1 + 0x60\n  7599: u64 [s1 + 0x60] = a3\n  7602: a0 = 0\n  7604: ra = 262, jump @4\n      : @236 [@dyn 131] (gas: 11)\n  7610: a0 = u64 [s1 + 0x18]\n  7613: u64 [s1 + 0x58] = a0\n  7616: a0 = u64 [s1 + 0x20]\n  7619: u64 [s1 + 0x50] = a0\n  7622: a0 = u64 [s1 + 0x28]\n  7625: u64 [s1 + 0x48] = a0\n  7628: a0 = 0x20\n  7631: a1 = s1 + 0x40\n  7634: a2 = u64 [s1 + 0x30]\n  7637: u64 [s1 + 0x40] = a2\n  7640: ra = 264, jump @4\n      : @237 [@dyn 132] (gas: 2)\n  7646: a1 = i32 [0x200c4]\n  7651: jump @239 if a1 >u 63\n      : @238 (gas: 2)\n  7655: u32 [0x200c4] = 0x40\n  7661: fallthrough\n      : @239 (gas: 13)\n  7662: a0 = sp + 0xffffffffffffffe0\n  7665: a2 = a0 & 0xffffffffffffffe0\n  7668: u64 [s1 + 0x30] = a2\n  7671: sp = a2\n  7673: a0 = 0x200d0\n  7678: i32 a0 = a0 + 0\n  7680: i32 a2 = a2 + 0\n  7682: a1 = 0x40\n  7685: ra = 0x10a\n  7689: ecalli 8 // 'hash_keccak_256'\n  7691: a3 = u64 [s1 + 0x30]\n  7694: t0 = 0x10c\n  7698: jump @445\n      : @240 [@dyn 133] (gas: 2)\n  7701: a3 = u64 [s1 + 0x30]\n  7704: t0 = 268, jump @445\n      : @241 [@dyn 134] (gas: 6)\n  7710: a4 = u64 [s1 + 0x38]\n  7713: u64 [a4 + 0x18] = a3\n  7716: u64 [a4 + 0x10] = a2\n  7719: u64 [a4 + 0x8] = a1\n  7722: u64 [a4] = a0\n  7724: t0 = 270, jump @449\n      : @242 [@dyn 135] (gas: 1)\n  7730: ret\n      : @243 (gas: 9)\n  7732: a4 = s1 + 0x100\n  7736: a0 = u64 [a4 + 0x90]\n  7740: a1 = u64 [a4 + 0x98]\n  7744: a2 = u64 [a4 + 0x88]\n  7748: a3 = u64 [a4 + 0x80]\n  7752: a1 = a1 | a2\n  7755: a0 = a0 | a3\n  7758: a0 = a0 | a1\n  7761: jump @256 if a0 != 0\n      : @244 (gas: 3)\n  7765: a0 = i32 [0x200c0]\n  7770: a1 = 0x43\n  7773: jump @257 if a1 >=u a0\n      : @245 (gas: 4)\n  7777: a0 = s1 + 0x160\n  7781: ra = 0x110\n  7785: t0 = 0x86\n  7789: jump @451\n      : @246 [@dyn 136] (gas: 10)\n  7792: a0 = u64 [s1 + 0x160]\n  7796: u64 [s1 + 0x18] = a0\n  7799: a0 = u64 [s1 + 0x168]\n  7803: u64 [s1 + 0x10] = a0\n  7806: a0 = u32 [s1 + 0x170]\n  7810: u64 [s1 + 0x8] = a0\n  7813: a0 = s1 + 0x140\n  7817: ra = 0x112\n  7821: t0 = 0x90\n  7825: jump @451\n      : @247 [@dyn 137] (gas: 18)\n  7828: a0 = u64 [s1 + 0x158]\n  7832: u64 [s1 + 0x20] = a0\n  7835: a0 = u64 [s1 + 0x150]\n  7839: u64 [s1 + 0x28] = a0\n  7842: a0 = u64 [s1 + 0x148]\n  7846: u64 [s1 + 0x30] = a0\n  7849: a0 = u64 [s1 + 0x140]\n  7853: u64 [s1 + 0x38] = a0\n  7856: u64 [s1 + 312] = 0\n  7860: a0 = u64 [s1 + 0x8]\n  7863: u64 [s1 + 0x130] = a0\n  7867: a0 = u64 [s1 + 0x10]\n  7870: u64 [s1 + 0x128] = a0\n  7874: a1 = s1 + 0x120\n  7878: a0 = u64 [s1 + 0x18]\n  7881: u64 [s1 + 0x120] = a0\n  7885: a0 = 0\n  7887: ra = 276, jump @4\n      : @248 [@dyn 138] (gas: 7)\n  7893: u64 [s1 + 280] = 0\n  7897: u64 [s1 + 272] = 0\n  7901: u64 [s1 + 256] = 0x2\n  7906: a0 = 0x20\n  7909: a1 = s1 + 0x100\n  7913: u64 [s1 + 264] = 0\n  7917: ra = 278, jump @4\n      : @249 [@dyn 139] (gas: 2)\n  7923: a1 = i32 [0x200c4]\n  7928: jump @251 if a1 >u 63\n      : @250 (gas: 2)\n  7932: u32 [0x200c4] = 0x40\n  7938: fallthrough\n      : @251 (gas: 36)\n  7939: a0 = sp + 0xffffffffffffffe0\n  7942: a2 = a0 & 0xffffffffffffffe0\n  7945: u64 [s1 + 0x18] = a2\n  7948: sp = a2\n  7950: a0 = 0x200d0\n  7955: i32 a0 = a0 + 0\n  7957: i32 a2 = a2 + 0\n  7959: a1 = 0x40\n  7962: ecalli 8 // 'hash_keccak_256'\n  7964: a3 = u64 [s1 + 0x18]\n  7967: a0 = u64 [a3 + 0x18]\n  7970: a1 = u64 [a3 + 0x10]\n  7973: a2 = u64 [a3 + 0x8]\n  7976: a3 = u64 [a3]\n  7978: a4 = reverse a0\n  7980: a0 = reverse a1\n  7982: a1 = reverse a2\n  7984: a2 = reverse a3\n  7986: a3 = u64 [s1 + 0x20]\n  7989: u64 [s1 + 0xb8] = a3\n  7993: a3 = u64 [s1 + 0x28]\n  7996: u64 [s1 + 0xb0] = a3\n  8000: a3 = u64 [s1 + 0x30]\n  8003: u64 [s1 + 0xa8] = a3\n  8007: a3 = u64 [s1 + 0x38]\n  8010: u64 [s1 + 0xa0] = a3\n  8014: u64 [s1 + 0xd8] = a2\n  8018: u64 [s1 + 0xd0] = a1\n  8022: u64 [s1 + 0xc8] = a0\n  8026: a0 = s1 + 0xe0\n  8030: a1 = s1 + 0xc0\n  8034: a2 = s1 + 0xa0\n  8038: u64 [s1 + 0xc0] = a4\n  8042: ra = 0x118\n  8046: t0 = 0x104\n  8050: jump @454\n      : @252 [@dyn 140] (gas: 14)\n  8053: a0 = u64 [s1 + 0xf8]\n  8057: a1 = u64 [s1 + 0xf0]\n  8061: a2 = u64 [s1 + 0xe8]\n  8065: a3 = u64 [s1 + 0xe0]\n  8069: a4 = s1 + 0x100\n  8073: u64 [a4 + 0xb8] = a0\n  8077: u64 [a4 + 0xb0] = a1\n  8081: u64 [a4 + 0xa8] = a2\n  8085: u64 [a4 + 0xa0] = a3\n  8089: a0 = s1 + 0x80\n  8093: a1 = s1 + 0x1a0\n  8097: ra = 0x11a\n  8101: t0 = 0x6\n  8104: jump @438\n      : @253 [@dyn 141] (gas: 9)\n  8107: a0 = u64 [s1 + 0x90]\n  8111: u64 [s1 + 0x28] = a0\n  8114: a0 = u64 [s1 + 0x88]\n  8118: u64 [s1 + 0x30] = a0\n  8121: a0 = u64 [s1 + 0x80]\n  8125: u64 [s1 + 0x38] = a0\n  8128: a0 = s1 + 0x60\n  8131: a1 = 0x40\n  8134: ra = 284, jump @2\n      : @254 [@dyn 142] (gas: 12)\n  8140: a3 = u64 [s1 + 0x78]\n  8143: a1 = u64 [s1 + 0x70]\n  8146: a2 = u64 [s1 + 0x68]\n  8149: a0 = u64 [s1 + 0x60]\n  8152: a3 = a3 | a2\n  8155: a2 = a0 | a1\n  8158: a2 = a2 | a3\n  8161: a2 = a2 >> 0x20\n  8164: a1 = a1 | a3\n  8167: a1 = a1 << 0x20\n  8170: a1 = a1 | a2\n  8173: jump @259 if a1 == 0\n      : @255 (gas: 1)\n  8176: trap\n      : @256 (gas: 2)\n  8177: a1 = 0x200d0\n  8182: jump @258\n      : @257 (gas: 2)\n  8184: a1 = 0x200d0\n  8189: fallthrough\n      : @258 (gas: 5)\n  8190: i32 a1 = a1 + 0\n  8192: a0 = 0x1\n  8195: a2 = 0\n  8197: ecalli 13 // 'seal_return'\n  8199: fallthrough\n      : @259 (gas: 14)\n  8200: a1 = 0xffffffff\n  8210: a2 = u64 [s1 + 0x28]\n  8213: a2 = a2 & a1\n  8216: a1 = u64 [s1 + 0x30]\n  8219: a1 = a1 & 0xffffffffffffffff\n  8222: a4 = u64 [s1 + 0x38]\n  8225: a3 = a4 & 0xffffffffffffffff\n  8228: u64 [s1 + 88] = 0\n  8231: u64 [s1 + 0x40] = a3\n  8234: u64 [s1 + 0x48] = a1\n  8237: a1 = s1 + 0x40\n  8240: u64 [s1 + 0x50] = a2\n  8243: u64 [s1 + 0x38] = a0\n  8246: ra = 286, jump @4\n      : @260 [@dyn 143] (gas: 3)\n  8252: a1 = 0x20\n  8255: a0 = u64 [s1 + 0x38]\n  8258: ra = 288, jump @12\n      : @261 [@dyn 144] (gas: 6)\n  8264: i32 a1 = a0 + 0\n  8266: a2 = 0x20\n  8269: a0 = 0\n  8271: ra = 0x122\n  8275: ecalli 13 // 'seal_return'\n  8277: fallthrough\n      : @262 [@dyn 145] (gas: 13)\n  8278: sp = sp + 0xfffffffffffffe80\n  8282: u64 [sp + 0x178] = ra\n  8286: u64 [sp + 0x170] = s0\n  8290: u64 [sp + 0x168] = s1\n  8294: s0 = sp + 0x180\n  8298: sp = sp & 0xffffffffffffffe0\n  8301: u64 [sp + 216] = 0\n  8305: u64 [sp + 208] = 0\n  8309: u64 [sp + 200] = 0\n  8313: u64 [sp + 192] = 0\n  8317: i32 a0 = sp + 0xc0\n  8321: ecalli 16 // 'value_transferred'\n  8323: fallthrough\n      : @263 (gas: 8)\n  8324: a0 = u64 [sp + 0xd0]\n  8328: a1 = u64 [sp + 0xd8]\n  8332: a2 = u64 [sp + 0xc8]\n  8336: a3 = u64 [sp + 0xc0]\n  8340: a1 = a1 | a2\n  8343: a0 = a0 | a3\n  8346: a0 = a0 | a1\n  8349: jump @265 if a0 == 0\n      : @264 (gas: 6)\n  8352: a1 = 0x200d0\n  8357: i32 a1 = a1 + 0\n  8359: a0 = 0x1\n  8362: a2 = 0\n  8364: ecalli 13 // 'seal_return'\n  8366: jump @267\n      : @265 (gas: 3)\n  8368: a0 = i32 [0x200c0]\n  8373: a1 = 0x23\n  8376: jump @267 if a1 <u a0\n      : @266 (gas: 6)\n  8379: a1 = 0x200d0\n  8384: i32 a1 = a1 + 0\n  8386: a0 = 0x1\n  8389: a2 = 0\n  8391: ecalli 13 // 'seal_return'\n  8393: fallthrough\n      : @267 (gas: 4)\n  8394: a0 = sp + 0xa0\n  8398: ra = 0x124\n  8402: t0 = 0x86\n  8406: jump @451\n      : @268 [@dyn 146] (gas: 15)\n  8409: a0 = u64 [sp + 0xa0]\n  8413: u64 [sp + 0x38] = a0\n  8416: a0 = u64 [sp + 0xa8]\n  8420: u64 [sp + 0x30] = a0\n  8423: a0 = u32 [sp + 0xb0]\n  8427: u64 [sp + 0x28] = a0\n  8430: u64 [sp + 248] = 0\n  8434: u64 [sp + 240] = 0\n  8438: u64 [sp + 232] = 0\n  8442: u64 [sp + 224] = 0x1\n  8447: a0 = sp + 0x80\n  8451: a1 = sp + 0xe0\n  8455: ra = 0x126\n  8459: t0 = 0x6\n  8462: jump @438\n      : @269 [@dyn 147] (gas: 12)\n  8465: a0 = u64 [sp + 0x88]\n  8469: u64 [sp + 0x20] = a0\n  8472: a0 = u64 [sp + 0x80]\n  8476: u64 [sp + 0x18] = a0\n  8479: a0 = u32 [sp + 0x90]\n  8483: u64 [sp + 0x10] = a0\n  8486: s1 = 0x300d0\n  8491: i32 a0 = s1 + 0\n  8493: ra = 0x128\n  8497: ecalli 4 // 'caller'\n  8499: t0 = 0x12a\n  8503: jump @441\n      : @270 [@dyn 148] (gas: 1)\n  8506: t0 = 298, jump @441\n      : @271 [@dyn 149] (gas: 17)\n  8512: a2 = u64 [sp + 0x10]\n  8515: a1 = a1 ^ a2\n  8518: a2 = u64 [sp + 0x18]\n  8521: a0 = a0 ^ a2\n  8524: a0 = a0 | a1\n  8527: a1 = u64 [sp + 0x20]\n  8530: a1 = a1 ^ a3\n  8533: a0 = a0 | a1\n  8536: a0 = a0 <u 0x1\n  8539: u64 [sp + 120] = 0\n  8542: u64 [sp + 112] = 0\n  8545: u64 [sp + 0x60] = a0\n  8548: a0 = sp + 0x60\n  8551: u64 [sp + 104] = 0\n  8554: ra = 0x12c\n  8558: t0 = 0x138\n  8562: jump @434\n      : @272 [@dyn 150] (gas: 9)\n  8565: u64 [sp + 280] = 0\n  8569: u64 [sp + 272] = 0\n  8573: u64 [sp + 264] = 0\n  8577: u64 [sp + 256] = 0\n  8581: a0 = sp + 0x40\n  8584: a1 = sp + 0x100\n  8588: ra = 0x12e\n  8592: t0 = 0x6\n  8595: jump @438\n      : @273 [@dyn 151] (gas: 18)\n  8598: a0 = u32 [sp + 0x54]\n  8601: a0 = a0 << 0x20\n  8604: a1 = u64 [sp + 0x58]\n  8607: a2 = u64 [sp + 0x28]\n  8610: a0 = a0 | a2\n  8613: u64 [sp + 312] = 0\n  8617: u64 [sp + 304] = 0\n  8621: u64 [sp + 296] = 0\n  8625: u64 [sp + 288] = 0\n  8629: a2 = u64 [sp + 0x30]\n  8632: u64 [sp + 0x148] = a2\n  8636: a2 = u64 [sp + 0x38]\n  8639: u64 [sp + 0x140] = a2\n  8643: u64 [sp + 0x158] = a1\n  8647: u64 [sp + 0x150] = a0\n  8651: a0 = sp + 0x120\n  8655: a1 = sp + 0x140\n  8659: ra = 304, jump @8\n      : @274 [@dyn 152] (gas: 6)\n  8665: a1 = 0x200d0\n  8670: i32 a1 = a1 + 0\n  8672: a0 = 0\n  8674: a2 = 0\n  8676: ecalli 13 // 'seal_return'\n  8678: jump @267\n      : @275 [@dyn 153] (gas: 9)\n  8681: u64 [sp + 0x38] = a0\n  8684: u64 [sp + 0x30] = a2\n  8687: u64 [sp + 0x28] = a3\n  8690: u64 [sp + 0x20] = a1\n  8693: a0 = sp\n  8695: a1 = sp + 0x20\n  8698: ra = 0x134\n  8702: t0 = 0x6\n  8705: jump @438\n      : @276 [@dyn 154] (gas: 8)\n  8708: a0 = u32 [sp + 0x10]\n  8711: a1 = u64 [sp]\n  8713: a2 = u64 [sp + 0x8]\n  8716: u64 [s1 + 0x10] = a0\n  8719: u64 [s1 + 24] = 0\n  8722: u64 [s1] = a1\n  8724: u64 [s1 + 0x8] = a2\n  8727: t0 = 310, jump @446\n      : @277 [@dyn 155] (gas: 1)\n  8733: ret\n      : @278 [@dyn 156] (gas: 1)\n  8735: jump @281 if a0 == 0\n      : @279 (gas: 1)\n  8738: t0 = 314, jump @448\n      : @280 [@dyn 157] (gas: 1)\n  8744: ret\n      : @281 (gas: 3)\n  8746: a0 = sp + 0xa0\n  8750: a1 = 0x40\n  8753: ra = 316, jump @2\n      : @282 [@dyn 158] (gas: 1)\n  8759: t0 = 318, jump @433\n      : @283 [@dyn 159] (gas: 1)\n  8765: jump @295 if a0 != 0\n      : @284 (gas: 1)\n  8768: t0 = 320, jump @437\n      : @285 [@dyn 160] (gas: 1)\n  8774: ra = 322, jump @4\n      : @286 [@dyn 161] (gas: 1)\n  8780: t0 = 324, jump @432\n      : @287 [@dyn 162] (gas: 1)\n  8786: jump @295 if a0 == 0\n      : @288 (gas: 1)\n  8789: t0 = 326, jump @440\n      : @289 [@dyn 163] (gas: 1)\n  8795: ra = 328, jump @4\n      : @290 [@dyn 164] (gas: 1)\n  8801: t0 = 330, jump @436\n      : @291 [@dyn 165] (gas: 1)\n  8807: jump @295 if a0 == 0\n      : @292 (gas: 8)\n  8810: s1 = u64 [sp + 0x18]\n  8813: i32 a0 = s1 + 0x24\n  8816: u64 [sp + 88] = 0\n  8819: u64 [sp + 80] = 0\n  8822: u64 [sp + 64] = 0x14\n  8826: a1 = sp + 0x40\n  8829: u64 [sp + 72] = 0\n  8832: ra = 332, jump @4\n      : @293 [@dyn 166] (gas: 1)\n  8838: t0 = 334, jump @435\n      : @294 [@dyn 167] (gas: 1)\n  8844: jump @296 if a0 != 0\n      : @295 (gas: 1)\n  8847: trap\n      : @296 (gas: 11)\n  8848: s1 = u64 [sp + 0x18]\n  8851: i32 a0 = s1 + 0x44\n  8854: a1 = u64 [0x20060]\n  8859: a2 = u64 [0x20068]\n  8864: u64 [sp + 0x38] = a1\n  8867: u64 [sp + 0x30] = a2\n  8870: a1 = 0x4444454e00000000\n  8880: u64 [sp + 0x28] = a1\n  8883: a1 = sp + 0x20\n  8886: u64 [sp + 32] = 0\n  8889: ra = 336, jump @4\n      : @297 [@dyn 168] (gas: 3)\n  8895: a1 = 0x64\n  8898: a0 = s1\n  8900: ra = 338, jump @12\n      : @298 [@dyn 169] (gas: 7)\n  8906: i32 a1 = a0 + 0\n  8908: a0 = 0x1\n  8911: a2 = 0x64\n  8914: ra = 0x154\n  8918: ecalli 13 // 'seal_return'\n  8920: t0 = 0x156\n  8924: jump @454\n      : @299 [@dyn 170] (gas: 1)\n  8927: t0 = 342, jump @454\n      : @300 [@dyn 171] (gas: 18)\n  8933: a2 = u64 [a1]\n  8935: u64 [sp + 0x18] = a2\n  8938: a2 = u64 [a1 + 0x8]\n  8941: u64 [sp + 0x10] = a2\n  8944: s1 = u32 [a1 + 0x10]\n  8947: a1 = u64 [a0 + 0x18]\n  8950: a2 = u64 [a0 + 0x10]\n  8953: a3 = u64 [a0 + 0x8]\n  8956: a0 = u64 [a0]\n  8958: u64 [sp + 0x58] = a1\n  8961: u64 [sp + 0x50] = a2\n  8964: u64 [sp + 0x48] = a3\n  8967: u64 [sp + 0x40] = a0\n  8970: a0 = sp + 0x20\n  8973: a1 = sp + 0x40\n  8976: ra = 0x158\n  8980: t0 = 0x6\n  8983: jump @438\n      : @301 [@dyn 172] (gas: 13)\n  8986: a0 = u32 [sp + 0x34]\n  8989: a0 = a0 << 0x20\n  8992: a1 = u64 [sp + 0x38]\n  8995: a0 = a0 | s1\n  8998: a2 = u64 [sp + 0x10]\n  9001: u64 [sp + 0x68] = a2\n  9004: a2 = u64 [sp + 0x18]\n  9007: u64 [sp + 0x60] = a2\n  9010: u64 [sp + 0x78] = a1\n  9013: u64 [sp + 0x70] = a0\n  9016: a0 = sp + 0x40\n  9019: a1 = sp + 0x60\n  9022: ra = 346, jump @8\n      : @302 [@dyn 173] (gas: 1)\n  9028: t0 = 348, jump @449\n      : @303 [@dyn 174] (gas: 1)\n  9034: ret\n      : @304 [@dyn 175] (gas: 1)\n  9036: jump @307 if a0 == 0\n      : @305 (gas: 1)\n  9039: t0 = 352, jump @448\n      : @306 [@dyn 176] (gas: 1)\n  9045: ret\n      : @307 (gas: 3)\n  9047: a0 = sp + 0xa0\n  9051: a1 = 0x40\n  9054: ra = 354, jump @2\n      : @308 [@dyn 177] (gas: 1)\n  9060: t0 = 356, jump @433\n      : @309 [@dyn 178] (gas: 1)\n  9066: jump @321 if a0 != 0\n      : @310 (gas: 1)\n  9069: t0 = 358, jump @437\n      : @311 [@dyn 179] (gas: 1)\n  9075: ra = 360, jump @4\n      : @312 [@dyn 180] (gas: 1)\n  9081: t0 = 362, jump @432\n      : @313 [@dyn 181] (gas: 1)\n  9087: jump @321 if a0 == 0\n      : @314 (gas: 1)\n  9090: t0 = 364, jump @440\n      : @315 [@dyn 182] (gas: 1)\n  9096: ra = 366, jump @4\n      : @316 [@dyn 183] (gas: 1)\n  9102: t0 = 368, jump @436\n      : @317 [@dyn 184] (gas: 1)\n  9108: jump @321 if a0 == 0\n      : @318 (gas: 8)\n  9111: s1 = u64 [sp + 0x18]\n  9114: i32 a0 = s1 + 0x24\n  9117: u64 [sp + 88] = 0\n  9120: u64 [sp + 80] = 0\n  9123: u64 [sp + 64] = 0x1e\n  9127: a1 = sp + 0x40\n  9130: u64 [sp + 72] = 0\n  9133: ra = 370, jump @4\n      : @319 [@dyn 185] (gas: 1)\n  9139: t0 = 372, jump @435\n      : @320 [@dyn 186] (gas: 1)\n  9145: jump @322 if a0 != 0\n      : @321 (gas: 1)\n  9148: trap\n      : @322 (gas: 12)\n  9149: s1 = u64 [sp + 0x18]\n  9152: i32 a0 = s1 + 0x44\n  9155: a1 = u64 [0x20070]\n  9160: u64 [sp + 0x38] = a1\n  9163: a1 = u64 [0x20078]\n  9168: a2 = u64 [0x20080]\n  9173: a3 = u64 [0x20088]\n  9178: u64 [sp + 0x30] = a1\n  9181: u64 [sp + 0x28] = a2\n  9184: a1 = sp + 0x20\n  9187: u64 [sp + 0x20] = a3\n  9190: ra = 374, jump @4\n      : @323 [@dyn 187] (gas: 3)\n  9196: a1 = 0x64\n  9199: a0 = s1\n  9201: ra = 376, jump @12\n      : @324 [@dyn 188] (gas: 7)\n  9207: i32 a1 = a0 + 0\n  9209: a0 = 0x1\n  9212: a2 = 0x64\n  9215: ra = 0x17a\n  9219: ecalli 13 // 'seal_return'\n  9221: t0 = 0x17c\n  9225: jump @434\n      : @325 [@dyn 189] (gas: 1)\n  9228: t0 = 380, jump @434\n      : @326 [@dyn 190] (gas: 1)\n  9234: jump @329 if a0 == 0\n      : @327 (gas: 1)\n  9237: t0 = 382, jump @448\n      : @328 [@dyn 191] (gas: 1)\n  9243: ret\n      : @329 (gas: 3)\n  9245: a0 = sp + 0xa0\n  9249: a1 = 0x40\n  9252: ra = 384, jump @2\n      : @330 [@dyn 192] (gas: 1)\n  9258: t0 = 386, jump @433\n      : @331 [@dyn 193] (gas: 1)\n  9264: jump @343 if a0 != 0\n      : @332 (gas: 1)\n  9267: t0 = 388, jump @437\n      : @333 [@dyn 194] (gas: 1)\n  9273: ra = 390, jump @4\n      : @334 [@dyn 195] (gas: 1)\n  9279: t0 = 392, jump @432\n      : @335 [@dyn 196] (gas: 1)\n  9285: jump @343 if a0 == 0\n      : @336 (gas: 1)\n  9288: t0 = 394, jump @440\n      : @337 [@dyn 197] (gas: 1)\n  9294: ra = 396, jump @4\n      : @338 [@dyn 198] (gas: 1)\n  9300: t0 = 398, jump @436\n      : @339 [@dyn 199] (gas: 1)\n  9306: jump @343 if a0 == 0\n      : @340 (gas: 8)\n  9309: s1 = u64 [sp + 0x18]\n  9312: i32 a0 = s1 + 0x24\n  9315: u64 [sp + 88] = 0\n  9318: u64 [sp + 80] = 0\n  9321: u64 [sp + 64] = 0x17\n  9325: a1 = sp + 0x40\n  9328: u64 [sp + 72] = 0\n  9331: ra = 400, jump @4\n      : @341 [@dyn 200] (gas: 1)\n  9337: t0 = 402, jump @435\n      : @342 [@dyn 201] (gas: 1)\n  9343: jump @344 if a0 != 0\n      : @343 (gas: 1)\n  9346: trap\n      : @344 (gas: 11)\n  9347: s1 = u64 [sp + 0x18]\n  9350: i32 a0 = s1 + 0x44\n  9353: a1 = u64 [0x20090]\n  9358: a2 = u64 [0x20098]\n  9363: a3 = u64 [0x200a0]\n  9368: u64 [sp + 0x38] = a1\n  9371: u64 [sp + 0x30] = a2\n  9374: u64 [sp + 0x28] = a3\n  9377: a1 = sp + 0x20\n  9380: u64 [sp + 32] = 0\n  9383: ra = 404, jump @4\n      : @345 [@dyn 202] (gas: 3)\n  9389: a1 = 0x64\n  9392: a0 = s1\n  9394: ra = 406, jump @12\n      : @346 [@dyn 203] (gas: 7)\n  9400: i32 a1 = a0 + 0\n  9402: a0 = 0x1\n  9405: a2 = 0x64\n  9408: ra = 0x198\n  9412: ecalli 13 // 'seal_return'\n  9414: t0 = 0x19a\n  9418: jump @434\n      : @347 [@dyn 204] (gas: 1)\n  9421: t0 = 410, jump @434\n      : @348 [@dyn 205] (gas: 1)\n  9427: jump @351 if a0 == 0\n      : @349 (gas: 1)\n  9430: t0 = 412, jump @448\n      : @350 [@dyn 206] (gas: 1)\n  9436: ret\n      : @351 (gas: 3)\n  9438: a0 = sp + 0xa0\n  9442: a1 = 0x40\n  9445: ra = 414, jump @2\n      : @352 [@dyn 207] (gas: 1)\n  9451: t0 = 416, jump @433\n      : @353 [@dyn 208] (gas: 1)\n  9457: jump @365 if a0 != 0\n      : @354 (gas: 1)\n  9460: t0 = 418, jump @437\n      : @355 [@dyn 209] (gas: 1)\n  9466: ra = 420, jump @4\n      : @356 [@dyn 210] (gas: 1)\n  9472: t0 = 422, jump @432\n      : @357 [@dyn 211] (gas: 1)\n  9478: jump @365 if a0 == 0\n      : @358 (gas: 1)\n  9481: t0 = 424, jump @440\n      : @359 [@dyn 212] (gas: 1)\n  9487: ra = 426, jump @4\n      : @360 [@dyn 213] (gas: 1)\n  9493: t0 = 428, jump @436\n      : @361 [@dyn 214] (gas: 1)\n  9499: jump @365 if a0 == 0\n      : @362 (gas: 8)\n  9502: s1 = u64 [sp + 0x18]\n  9505: i32 a0 = s1 + 0x24\n  9508: u64 [sp + 88] = 0\n  9511: u64 [sp + 80] = 0\n  9514: u64 [sp + 64] = 0x16\n  9518: a1 = sp + 0x40\n  9521: u64 [sp + 72] = 0\n  9524: ra = 430, jump @4\n      : @363 [@dyn 215] (gas: 1)\n  9530: t0 = 432, jump @435\n      : @364 [@dyn 216] (gas: 1)\n  9536: jump @366 if a0 != 0\n      : @365 (gas: 1)\n  9539: trap\n      : @366 (gas: 11)\n  9540: s1 = u64 [sp + 0x18]\n  9543: i32 a0 = s1 + 0x44\n  9546: a1 = u64 [0x200a8]\n  9551: a2 = u64 [0x200b0]\n  9556: a3 = u64 [0x200b8]\n  9561: u64 [sp + 0x38] = a1\n  9564: u64 [sp + 0x30] = a2\n  9567: u64 [sp + 0x28] = a3\n  9570: a1 = sp + 0x20\n  9573: u64 [sp + 32] = 0\n  9576: ra = 434, jump @4\n      : @367 [@dyn 217] (gas: 3)\n  9582: a1 = 0x64\n  9585: a0 = s1\n  9587: ra = 436, jump @12\n      : @368 [@dyn 218] (gas: 6)\n  9593: i32 a1 = a0 + 0\n  9595: a0 = 0x1\n  9598: a2 = 0x64\n  9601: ra = 0x1b6\n  9605: ecalli 13 // 'seal_return'\n  9607: fallthrough\n      : @369 [@dyn 219] (gas: 13)\n  9608: sp = sp + 0xffffffffffffffb0\n  9611: u64 [sp + 0x48] = ra\n  9614: u64 [sp + 0x40] = s0\n  9617: s0 = sp + 0x50\n  9620: sp = sp & 0xfffffffffffffff0\n  9623: u64 [sp + 48] = 0\n  9626: u64 [sp + 40] = 0\n  9629: u64 [sp + 32] = 0\n  9632: a0 = 0x4e487b7100000000\n  9642: a1 = sp + 0x20\n  9645: u64 [sp + 0x38] = a0\n  9648: a0 = 0\n  9650: ra = 440, jump @4\n      : @370 [@dyn 220] (gas: 7)\n  9656: u64 [sp + 24] = 0\n  9659: u64 [sp + 16] = 0\n  9662: u64 [sp + 0] = 0x41\n  9665: a0 = 0x4\n  9668: a1 = sp\n  9670: u64 [sp + 8] = 0\n  9673: ra = 442, jump @4\n      : @371 [@dyn 221] (gas: 2)\n  9679: a1 = i32 [0x200c4]\n  9684: jump @373 if a1 >u 63\n      : @372 (gas: 2)\n  9688: u32 [0x200c4] = 0x40\n  9694: fallthrough\n      : @373 (gas: 7)\n  9695: a1 = 0x200d0\n  9700: i32 a1 = a1 + 0\n  9702: a0 = 0x1\n  9705: a2 = 0x24\n  9708: ra = 0x1bc\n  9712: ecalli 13 // 'seal_return'\n  9714: fallthrough\n      : @374 [@dyn 222] (gas: 46)\n  9715: sp = sp + 0xffffffffffffffb0\n  9718: u64 [sp + 0x48] = ra\n  9721: u64 [sp + 0x40] = s0\n  9724: u64 [sp + 0x38] = s1\n  9727: s0 = sp + 0x50\n  9730: sp = sp & 0xfffffffffffffff0\n  9733: t0 = a0\n  9735: a2 = u64 [a1]\n  9737: t2 = u64 [a0 + 0x8]\n  9740: a5 = u64 [a1 + 0x8]\n  9743: t1 = u64 [a0]\n  9745: a3 = a2 + 0x1f\n  9748: ra = a3 <u a2\n  9751: a2 = a5 + ra\n  9754: a3 = a3 & 0xffffffffffffffe0\n  9757: u64 [sp + 0x8] = t1\n  9760: t1 = t1 + a3\n  9763: a4 = t1 <u a3\n  9766: a3 = a2 + t2\n  9769: a3 = a3 + a4\n  9772: s1 = a3 ^ a2\n  9775: a0 = a3 <u a2\n  9778: a0 = a4 if s1 == 0\n  9781: a4 = u64 [t0 + 0x18]\n  9784: a5 = a2 <u a5\n  9787: s1 = u64 [a1 + 0x10]\n  9790: t0 = u64 [t0 + 0x10]\n  9793: a1 = u64 [a1 + 0x18]\n  9796: a5 = ra if ra == 0\n  9799: a5 = a5 + s1\n  9802: s1 = a5 <u s1\n  9805: a2 = a5 + t0\n  9808: a0 = a0 + a2\n  9811: a5 = a2 <u a5\n  9814: a2 = a0 <u a2\n  9817: a1 = a1 + a4\n  9820: a1 = a1 + s1\n  9823: a1 = a1 + a5\n  9826: a5 = a1 + a2\n  9829: a1 = a5 >u 0\n  9831: a2 = a0 >u 0\n  9833: a2 = a1 if a5 != 0\n  9836: a1 = a0 | a5\n  9839: s1 = a3 >u 0\n  9841: s1 = a2 if a1 != 0\n  9844: jump @378 if s1 != 0\n      : @375 (gas: 13)\n  9847: a1 = u64 [sp + 0x8]\n  9850: a1 = t1 <u a1\n  9853: a2 = a3 ^ t2\n  9856: s1 = a3 <u t2\n  9859: s1 = a1 if a2 == 0\n  9862: a1 = a0 <u t0\n  9865: a2 = a5 ^ a4\n  9868: a4 = a5 <u a4\n  9871: a4 = a1 if a2 == 0\n  9874: a1 = a0 ^ t0\n  9877: a1 = a1 | a2\n  9880: a4 = s1 if a1 == 0\n  9883: jump @378 if a4 != 0\n      : @376 (gas: 7)\n  9886: u64 [sp + 0x10] = t1\n  9889: u64 [sp + 0x18] = a3\n  9892: u64 [sp + 0x20] = a0\n  9895: a0 = 0x40\n  9898: a1 = sp + 0x10\n  9901: u64 [sp + 0x28] = a5\n  9904: ra = 446, jump @4\n      : @377 [@dyn 223] (gas: 6)\n  9910: sp = s0 + 0xffffffffffffffb0\n  9913: ra = u64 [sp + 0x48]\n  9916: s0 = u64 [sp + 0x40]\n  9919: s1 = u64 [sp + 0x38]\n  9922: sp = sp + 0x50\n  9925: ret\n      : @378 (gas: 1)\n  9927: ra = 448, jump @369\n      : @379 [@dyn 224] (gas: 18)\n  9933: sp = sp + 0xffffffffffffff40\n  9937: u64 [sp + 0xb8] = ra\n  9941: u64 [sp + 0xb0] = s0\n  9945: u64 [sp + 0xa8] = s1\n  9949: s0 = sp + 0xc0\n  9953: sp = sp & 0xfffffffffffffff0\n  9956: a2 = u64 [a1]\n  9958: u64 [sp + 0x38] = a2\n  9961: a2 = u64 [a1 + 0x8]\n  9964: u64 [sp + 0x30] = a2\n  9967: a2 = u64 [a1 + 0x10]\n  9970: u64 [sp + 0x28] = a2\n  9973: a1 = u64 [a1 + 0x18]\n  9976: u64 [sp + 0x20] = a1\n  9979: s1 = a0\n  9981: a0 = sp + 0x80\n  9985: a1 = 0x40\n  9988: ra = 450, jump @2\n      : @380 [@dyn 225] (gas: 23)\n  9994: a2 = u64 [sp + 0x80]\n  9998: u64 [sp] = a2\n 10000: a1 = u64 [sp + 0x88]\n 10004: u64 [sp + 0x18] = a1\n 10007: a3 = u64 [sp + 0x90]\n 10011: u64 [sp + 0x10] = a3\n 10014: a4 = u64 [sp + 0x98]\n 10018: u64 [sp + 0x8] = a4\n 10021: a0 = u64 [sp + 0x20]\n 10024: u64 [sp + 0x58] = a0\n 10027: a0 = u64 [sp + 0x28]\n 10030: u64 [sp + 0x50] = a0\n 10033: a0 = u64 [sp + 0x30]\n 10036: u64 [sp + 0x48] = a0\n 10039: a0 = u64 [sp + 0x38]\n 10042: u64 [sp + 0x40] = a0\n 10045: u64 [sp + 0x78] = a4\n 10048: u64 [sp + 0x70] = a3\n 10051: u64 [sp + 0x68] = a1\n 10054: a0 = sp + 0x60\n 10057: a1 = sp + 0x40\n 10060: u64 [sp + 0x60] = a2\n 10063: ra = 452, jump @374\n      : @381 [@dyn 226] (gas: 14)\n 10069: a0 = u64 [sp + 0x8]\n 10072: u64 [s1 + 0x18] = a0\n 10075: a0 = u64 [sp + 0x10]\n 10078: u64 [s1 + 0x10] = a0\n 10081: a0 = u64 [sp + 0x18]\n 10084: u64 [s1 + 0x8] = a0\n 10087: a0 = u64 [sp]\n 10089: u64 [s1] = a0\n 10091: sp = s0 + 0xffffffffffffff40\n 10095: ra = u64 [sp + 0xb8]\n 10099: s0 = u64 [sp + 0xb0]\n 10103: s1 = u64 [sp + 0xa8]\n 10107: sp = sp + 0xc0\n 10111: ret\n      : @382 [@dyn 227] (gas: 13)\n 10113: t0 = u64 [a1]\n 10115: u64 [sp + 0x30] = a4\n 10118: u64 [sp + 0x28] = s1\n 10121: a1 = s1 | a4\n 10124: a4 = t0 | a5\n 10127: a4 = a4 | a1\n 10130: a4 = a4 >> 0x20\n 10133: u64 [sp + 0x38] = a5\n 10136: a1 = a1 | a5\n 10139: a1 = a1 << 0x20\n 10142: a1 = a1 | a4\n 10145: u64 [sp + 0x20] = a0\n 10148: jump @388 if a1 != 0\n      : @383 (gas: 24)\n 10152: a0 = u64 [a3 + 0x10]\n 10155: u64 [sp + 0x10] = a0\n 10158: a0 = u64 [a3 + 0x8]\n 10161: u64 [sp + 0x18] = a0\n 10164: a0 = u64 [a2 + 0x8]\n 10167: a1 = u64 [a2 + 0x10]\n 10170: a3 = u64 [a3]\n 10172: u64 [sp + 0x8] = a3\n 10175: a2 = u64 [a2]\n 10177: a3 = a0 >> 0x20\n 10180: a1 = a1 << 0x20\n 10183: a3 = a3 | a1\n 10186: a1 = a2 >> 0x20\n 10189: a0 = a0 << 0x20\n 10192: a0 = a0 | a1\n 10195: a2 = a2 << 0x20\n 10198: u64 [sp + 96] = 0\n 10201: u64 [sp + 0x68] = a2\n 10204: u64 [sp + 0x70] = a0\n 10207: a1 = sp + 0x60\n 10210: u64 [sp + 0x78] = a3\n 10213: a0 = t0\n 10215: s1 = t0\n 10217: ra = 456, jump @4\n      : @384 [@dyn 228] (gas: 9)\n 10223: a0 = u64 [sp + 0x38]\n 10226: a1 = u64 [sp + 0x30]\n 10229: a0 = a0 | a1\n 10232: a1 = 0xffffffec\n 10242: a1 = s1 <u a1\n 10245: a2 = u64 [sp + 0x28]\n 10248: a1 = 0 if a2 != 0\n 10250: a1 = 0 if a0 != 0\n 10252: jump @388 if a1 == 0\n      : @385 (gas: 17)\n 10255: a3 = u64 [sp + 0x18]\n 10258: a0 = a3 >> 0x20\n 10261: a1 = u64 [sp + 0x10]\n 10264: a1 = a1 << 0x20\n 10267: a2 = a1 | a0\n 10270: a5 = u64 [sp + 0x8]\n 10273: a0 = a5 >> 0x20\n 10276: a1 = a3 << 0x20\n 10279: a1 = a1 | a0\n 10282: a3 = a5 << 0x20\n 10285: i32 a0 = s1 + 0x14\n 10288: u64 [sp + 64] = 0\n 10291: u64 [sp + 0x48] = a3\n 10294: u64 [sp + 0x50] = a1\n 10297: a1 = sp + 0x40\n 10300: u64 [sp + 0x58] = a2\n 10303: ra = 458, jump @4\n      : @386 [@dyn 229] (gas: 17)\n 10309: a0 = s1 + 0x28\n 10312: a1 = a0 <u s1\n 10315: a3 = u64 [sp + 0x28]\n 10318: a2 = a3 + a1\n 10321: a3 = a2 <u a3\n 10324: a3 = a1 if a1 == 0\n 10327: a1 = u64 [sp + 0x38]\n 10330: a3 = a3 + a1\n 10333: a1 = a3 <u a1\n 10336: a4 = u64 [sp + 0x30]\n 10339: a1 = a1 + a4\n 10342: a4 = u64 [sp + 0x20]\n 10345: u64 [a4 + 0x10] = a3\n 10348: u64 [a4 + 0x8] = a2\n 10351: u64 [a4] = a0\n 10353: u64 [a4 + 0x18] = a1\n 10356: t0 = 460, jump @449\n      : @387 [@dyn 230] (gas: 1)\n 10362: ret\n      : @388 (gas: 1)\n 10364: trap\n      : @389 [@dyn 231] (gas: 13)\n 10365: t0 = u64 [a1]\n 10367: u64 [sp + 0x30] = a4\n 10370: u64 [sp + 0x28] = s1\n 10373: a1 = s1 | a4\n 10376: a4 = t0 | a5\n 10379: a4 = a4 | a1\n 10382: a4 = a4 >> 0x20\n 10385: u64 [sp + 0x38] = a5\n 10388: a1 = a1 | a5\n 10391: a1 = a1 << 0x20\n 10394: a1 = a1 | a4\n 10397: u64 [sp + 0x20] = a0\n 10400: jump @395 if a1 != 0\n      : @390 (gas: 19)\n 10404: s1 = t0\n 10406: a0 = u64 [a3 + 0x10]\n 10409: u64 [sp + 0x8] = a0\n 10412: a0 = u64 [a3 + 0x8]\n 10415: u64 [sp + 0x10] = a0\n 10418: a0 = u64 [a3]\n 10420: u64 [sp + 0x18] = a0\n 10423: a0 = u64 [a2 + 0x10]\n 10426: a1 = u64 [a2 + 0x8]\n 10429: a2 = u64 [a2]\n 10431: a0 = a0 << 0x20\n 10434: a0 = a0 >> 0x20\n 10437: u64 [sp + 120] = 0\n 10440: u64 [sp + 0x60] = a2\n 10443: u64 [sp + 0x68] = a1\n 10446: a1 = sp + 0x60\n 10449: u64 [sp + 0x70] = a0\n 10452: a0 = t0\n 10454: ra = 464, jump @4\n      : @391 [@dyn 232] (gas: 9)\n 10460: a5 = u64 [sp + 0x38]\n 10463: a2 = u64 [sp + 0x30]\n 10466: a0 = a5 | a2\n 10469: a1 = 0xffffffe0\n 10479: a1 = s1 <u a1\n 10482: a4 = u64 [sp + 0x28]\n 10485: a1 = 0 if a4 != 0\n 10487: a1 = 0 if a0 != 0\n 10489: jump @395 if a1 == 0\n      : @392 (gas: 26)\n 10492: a1 = 0xffffffff\n 10502: a3 = u64 [sp + 0x8]\n 10505: t0 = a3 & a1\n 10508: a1 = u64 [sp + 0x10]\n 10511: t1 = a1 & 0xffffffffffffffff\n 10514: a3 = u64 [sp + 0x18]\n 10517: a3 = a3 & 0xffffffffffffffff\n 10520: a0 = s1 + 0x40\n 10523: u64 [sp + 0x18] = a0\n 10526: a0 = a0 <u s1\n 10529: a1 = a4 + a0\n 10532: u64 [sp + 0x10] = a1\n 10535: a4 = a1 <u a4\n 10538: a4 = a0 if a0 == 0\n 10541: a4 = a4 + a5\n 10544: u64 [sp + 0x28] = a4\n 10547: a0 = a4 <u a5\n 10550: a0 = a0 + a2\n 10553: u64 [sp + 0x38] = a0\n 10556: i32 a0 = s1 + 0x20\n 10559: u64 [sp + 88] = 0\n 10562: u64 [sp + 0x40] = a3\n 10565: u64 [sp + 0x48] = t1\n 10568: a1 = sp + 0x40\n 10571: u64 [sp + 0x50] = t0\n 10574: ra = 466, jump @4\n      : @393 [@dyn 233] (gas: 10)\n 10580: a0 = u64 [sp + 0x20]\n 10583: a1 = u64 [sp + 0x28]\n 10586: u64 [a0 + 0x10] = a1\n 10589: a1 = u64 [sp + 0x10]\n 10592: u64 [a0 + 0x8] = a1\n 10595: a1 = u64 [sp + 0x18]\n 10598: u64 [a0] = a1\n 10600: a1 = u64 [sp + 0x38]\n 10603: u64 [a0 + 0x18] = a1\n 10606: t0 = 468, jump @449\n      : @394 [@dyn 234] (gas: 1)\n 10612: ret\n      : @395 (gas: 1)\n 10614: trap\n      : @396 [@dyn 235] (gas: 9)\n 10615: a0 = u64 [sp + 0x38]\n 10618: u64 [sp + 0x18] = a0\n 10621: a0 = u64 [sp + 0x30]\n 10624: u64 [sp + 0x10] = a0\n 10627: a0 = u64 [sp + 0x28]\n 10630: u64 [sp + 0x8] = a0\n 10633: s1 = u64 [sp + 0x20]\n 10636: ecalli 12 // 'return_data_size'\n 10638: fallthrough\n      : @397 (gas: 12)\n 10639: a1 = u64 [sp + 0x18]\n 10642: a2 = u64 [sp + 0x8]\n 10645: a1 = a1 | a2\n 10648: u64 [sp + 0x18] = s1\n 10651: a3 = u64 [sp + 0x10]\n 10654: a2 = s1 | a3\n 10657: a2 = a2 | a1\n 10660: a2 = a2 >> 0x20\n 10663: a1 = a1 | a3\n 10666: a1 = a1 << 0x20\n 10669: a1 = a1 | a2\n 10672: jump @404 if a1 != 0\n      : @398 (gas: 3)\n 10675: s1 = a0\n 10677: a0 = a0 >> 0x20\n 10680: jump @404 if a0 != 0\n      : @399 (gas: 5)\n 10683: i32 a0 = s1 + 0\n 10685: u64 [sp + 0x10] = a0\n 10688: a0 = u64 [sp + 0x18]\n 10691: a1 = s1\n 10693: ra = 472, jump @12\n      : @400 [@dyn 236] (gas: 6)\n 10699: u32 [sp + 0x40] = s1\n 10702: i32 a0 = a0 + 0\n 10704: i32 a1 = sp + 0x40\n 10707: a2 = 0\n 10709: ecalli 11 // 'return_data_copy'\n 10711: fallthrough\n      : @401 (gas: 3)\n 10712: a0 = i32 [sp + 0x40]\n 10715: a1 = u64 [sp + 0x10]\n 10718: jump @404 if a0 <u a1\n      : @402 (gas: 2)\n 10721: ecalli 12 // 'return_data_size'\n 10723: fallthrough\n      : @403 (gas: 3)\n 10724: s1 = a0\n 10726: a0 = a0 >> 0x20\n 10729: jump @405 if a0 == 0\n      : @404 (gas: 1)\n 10732: trap\n      : @405 (gas: 3)\n 10733: a0 = u64 [sp + 0x18]\n 10736: a1 = s1\n 10738: ra = 474, jump @12\n      : @406 [@dyn 237] (gas: 6)\n 10744: i32 a1 = a0 + 0\n 10746: i32 a2 = s1 + 0\n 10748: a0 = 0x1\n 10751: ra = 0x1dc\n 10755: ecalli 13 // 'seal_return'\n 10757: fallthrough\n      : @407 [@dyn 238] (gas: 22)\n 10758: sp = sp + 0xfffffffffffffe20\n 10762: u64 [sp + 0x1d8] = ra\n 10766: u64 [sp + 0x1d0] = s0\n 10770: u64 [sp + 0x1c8] = s1\n 10774: s0 = sp + 0x1e0\n 10778: sp = sp & 0xffffffffffffffe0\n 10781: s1 = sp\n 10783: a1 = u64 [a0 + 0x10]\n 10786: u64 [s1 + 0x20] = a1\n 10789: a1 = u64 [a0 + 0x8]\n 10792: u64 [s1 + 0x28] = a1\n 10795: a0 = u64 [a0]\n 10797: u64 [s1 + 0x30] = a0\n 10800: u64 [s1 + 312] = 0\n 10804: u64 [s1 + 304] = 0\n 10808: u64 [s1 + 296] = 0\n 10812: u64 [s1 + 288] = 0x3\n 10817: a0 = s1 + 0x100\n 10821: a1 = s1 + 0x120\n 10825: ra = 0x1de\n 10829: t0 = 0x6\n 10832: jump @438\n      : @408 [@dyn 239] (gas: 8)\n 10835: a0 = s1 + 0x100\n 10839: a5 = u64 [a0 + 0x18]\n 10842: a4 = u64 [a0 + 0x10]\n 10845: a2 = u64 [a0 + 0x8]\n 10848: a0 = a4 | a5\n 10851: a1 = a2 <u 0x1\n 10854: a1 = 0 if a0 != 0\n 10856: jump @418 if a1 == 0\n      : @409 (gas: 24)\n 10860: a0 = u64 [s1 + 0x100]\n 10864: u64 [s1 + 0x38] = a0\n 10867: a0 = a0 + 0x1\n 10870: a1 = a0 <u 0x1\n 10873: a1 = a1 + a2\n 10876: u64 [s1 + 0x40] = a2\n 10879: a2 = a0 | a1\n 10882: a2 = a2 <u 0x1\n 10885: a2 = a2 + a4\n 10888: a3 = a2 <u a4\n 10891: t0 = a5 + a3\n 10894: u64 [s1 + 344] = 0\n 10898: u64 [s1 + 336] = 0\n 10902: u64 [s1 + 328] = 0\n 10906: u64 [s1 + 320] = 0x3\n 10911: u64 [s1 + 0x160] = a0\n 10915: u64 [s1 + 0x168] = a1\n 10919: u64 [s1 + 0x170] = a2\n 10923: u64 [s1 + 0x178] = t0\n 10927: a0 = s1 + 0x140\n 10931: a1 = s1 + 0x160\n 10935: u64 [s1 + 0x58] = a4\n 10938: u64 [s1 + 0x50] = a5\n 10941: ra = 480, jump @8\n      : @410 [@dyn 240] (gas: 13)\n 10947: a0 = sp + 0xffffffffffffffe0\n 10950: a0 = a0 & 0xffffffffffffffe0\n 10953: u64 [s1 + 0x48] = a0\n 10956: sp = a0\n 10958: u64 [s1 + 408] = 0\n 10962: u64 [s1 + 400] = 0\n 10966: u64 [s1 + 392] = 0\n 10970: u64 [s1 + 384] = 0x3\n 10975: a0 = s1 + 0xe0\n 10979: a1 = s1 + 0x180\n 10983: ra = 0x1e2\n 10987: t0 = 0x6\n 10990: jump @438\n      : @411 [@dyn 241] (gas: 20)\n 10993: a0 = u64 [s1 + 0xf8]\n 10997: t0 = u64 [s1 + 0xe0]\n 11001: a2 = u64 [s1 + 0xf0]\n 11005: a3 = u64 [s1 + 0xe8]\n 11009: a1 = u64 [s1 + 0x50]\n 11012: a4 = a1 ^ a0\n 11015: a1 = a1 <u a0\n 11018: a0 = u64 [s1 + 0x58]\n 11021: a5 = a0 <u a2\n 11024: a5 = a1 if a4 != 0\n 11027: a1 = u64 [s1 + 0x40]\n 11030: t1 = a1 ^ a3\n 11033: a3 = a1 <u a3\n 11036: a1 = u64 [s1 + 0x38]\n 11039: a1 = a1 <u t0\n 11042: a1 = a3 if t1 != 0\n 11045: a0 = a0 ^ a2\n 11048: a0 = a0 | a4\n 11051: a1 = a5 if a0 != 0\n 11054: jump @419 if a1 == 0\n      : @412 (gas: 7)\n 11058: u64 [s1 + 152] = 0\n 11062: u64 [s1 + 144] = 0\n 11066: u64 [s1 + 136] = 0\n 11070: a1 = s1 + 0x80\n 11074: u64 [s1 + 128] = 0x3\n 11079: a0 = 0\n 11081: ra = 484, jump @4\n      : @413 [@dyn 242] (gas: 2)\n 11087: a1 = i32 [0x200c4]\n 11092: jump @415 if a1 >u 31\n      : @414 (gas: 2)\n 11096: u32 [0x200c4] = 0x20\n 11102: fallthrough\n      : @415 (gas: 50)\n 11103: a0 = sp + 0xffffffffffffffe0\n 11106: a2 = a0 & 0xffffffffffffffe0\n 11109: u64 [s1 + 0x18] = a2\n 11112: sp = a2\n 11114: a0 = 0x200d0\n 11119: i32 a0 = a0 + 0\n 11121: i32 a2 = a2 + 0\n 11123: a1 = 0x20\n 11126: ecalli 8 // 'hash_keccak_256'\n 11128: a2 = u64 [s1 + 0x18]\n 11131: a0 = u64 [a2 + 0x18]\n 11134: a1 = u64 [a2 + 0x10]\n 11137: t0 = u64 [a2 + 0x8]\n 11140: a3 = u64 [a2]\n 11142: a0 = reverse a0\n 11144: a1 = reverse a1\n 11146: a4 = u64 [s1 + 0x40]\n 11149: a4 = a4 + a1\n 11152: a5 = u64 [s1 + 0x38]\n 11155: a5 = a5 + a0\n 11158: a0 = a5 <u a0\n 11161: a4 = a4 + a0\n 11164: a2 = a4 ^ a1\n 11167: a1 = a4 <u a1\n 11170: a1 = a0 if a2 == 0\n 11173: a0 = reverse a3\n 11175: a2 = u64 [s1 + 0x50]\n 11178: a0 = a0 + a2\n 11181: a2 = reverse t0\n 11183: a3 = u64 [s1 + 0x58]\n 11186: a3 = a3 + a2\n 11189: a2 = a3 <u a2\n 11192: a0 = a0 + a2\n 11195: a1 = a1 + a3\n 11198: a2 = a1 <u a3\n 11201: a0 = a0 + a2\n 11204: a2 = u64 [s1 + 0x48]\n 11207: u64 [a2] = a5\n 11209: u64 [a2 + 0x8] = a4\n 11212: u64 [a2 + 0x10] = a1\n 11215: u64 [a2 + 0x18] = a0\n 11218: a1 = a2\n 11220: a0 = u64 [s1 + 0x20]\n 11223: a0 = a0 << 0x20\n 11226: a0 = a0 >> 0x20\n 11229: u64 [s1 + 0x58] = a0\n 11232: a0 = s1 + 0x60\n 11235: ra = 0x1e6\n 11239: t0 = 0x6\n 11242: jump @438\n      : @416 [@dyn 243] (gas: 15)\n 11245: a0 = u32 [s1 + 0x74]\n 11248: a0 = a0 << 0x20\n 11251: a1 = u64 [s1 + 0x78]\n 11254: a2 = u64 [s1 + 0x58]\n 11257: a0 = a0 | a2\n 11260: a2 = u64 [s1 + 0x28]\n 11263: a3 = s1 + 0x100\n 11267: u64 [a3 + 0xa8] = a2\n 11271: a2 = u64 [s1 + 0x30]\n 11274: u64 [a3 + 0xa0] = a2\n 11278: u64 [a3 + 0xb8] = a1\n 11282: u64 [a3 + 0xb0] = a0\n 11286: a1 = s1 + 0x1a0\n 11290: a0 = u64 [s1 + 0x48]\n 11293: ra = 488, jump @8\n      : @417 [@dyn 244] (gas: 6)\n 11299: sp = s0 + 0xfffffffffffffe20\n 11303: ra = u64 [sp + 0x1d8]\n 11307: s0 = u64 [sp + 0x1d0]\n 11311: s1 = u64 [sp + 0x1c8]\n 11315: sp = sp + 0x1e0\n 11319: ret\n      : @418 (gas: 1)\n 11321: ra = 490, jump @369\n      : @419 [@dyn 245] (gas: 8)\n 11327: u64 [s1 + 208] = 0\n 11331: u64 [s1 + 200] = 0\n 11335: u64 [s1 + 192] = 0\n 11339: a0 = 0x4e487b7100000000\n 11349: a1 = s1 + 0xc0\n 11353: u64 [s1 + 0xd8] = a0\n 11357: a0 = 0\n 11359: ra = 492, jump @4\n      : @420 [@dyn 246] (gas: 7)\n 11365: u64 [s1 + 184] = 0\n 11369: u64 [s1 + 176] = 0\n 11373: u64 [s1 + 160] = 0x32\n 11378: a0 = 0x4\n 11381: a1 = s1 + 0xa0\n 11385: u64 [s1 + 168] = 0\n 11389: ra = 494, jump @4\n      : @421 [@dyn 247] (gas: 2)\n 11395: a1 = i32 [0x200c4]\n 11400: jump @423 if a1 >u 63\n      : @422 (gas: 2)\n 11404: u32 [0x200c4] = 0x40\n 11410: fallthrough\n      : @423 (gas: 7)\n 11411: a1 = 0x200d0\n 11416: i32 a1 = a1 + 0\n 11418: a0 = 0x1\n 11421: a2 = 0x24\n 11424: ra = 0x1f0\n 11428: ecalli 13 // 'seal_return'\n 11430: fallthrough\n      : @424 [@dyn 248] (gas: 22)\n 11431: sp = sp + 0xffffffffffffff50\n 11435: u64 [sp + 0xa8] = ra\n 11439: u64 [sp + 0xa0] = s0\n 11443: u64 [sp + 0x98] = s1\n 11447: s0 = sp + 0xb0\n 11451: sp = sp & 0xfffffffffffffff0\n 11454: a5 = u64 [a1 + 0x10]\n 11457: a4 = u64 [a1 + 0x18]\n 11460: s1 = u64 [a1 + 0x8]\n 11463: t0 = u64 [a1]\n 11465: u64 [sp + 0x40] = a4\n 11468: u64 [sp + 0x38] = s1\n 11471: a1 = s1 | a4\n 11474: a4 = t0 | a5\n 11477: a4 = a4 | a1\n 11480: a4 = a4 >> 0x20\n 11483: u64 [sp + 0x48] = a5\n 11486: a1 = a1 | a5\n 11489: a1 = a1 << 0x20\n 11492: a1 = a1 | a4\n 11495: u64 [sp + 0x30] = a0\n 11498: jump @429 if a1 != 0\n      : @425 (gas: 21)\n 11502: s1 = t0\n 11504: a0 = u64 [a3 + 0x18]\n 11507: u64 [sp + 0x28] = a0\n 11510: a0 = u64 [a3 + 0x10]\n 11513: u64 [sp + 0x20] = a0\n 11516: a0 = u64 [a3 + 0x8]\n 11519: u64 [sp + 0x18] = a0\n 11522: a0 = u64 [a3]\n 11524: u64 [sp + 0x10] = a0\n 11527: a0 = u64 [a2 + 0x10]\n 11530: a1 = u64 [a2 + 0x8]\n 11533: a2 = u64 [a2]\n 11535: a0 = a0 << 0x20\n 11538: a0 = a0 >> 0x20\n 11541: u64 [sp + 136] = 0\n 11545: u64 [sp + 0x70] = a2\n 11548: u64 [sp + 0x78] = a1\n 11551: a1 = sp + 0x70\n 11554: u64 [sp + 0x80] = a0\n 11558: a0 = t0\n 11560: ra = 498, jump @4\n      : @426 [@dyn 249] (gas: 9)\n 11566: a2 = u64 [sp + 0x48]\n 11569: a3 = u64 [sp + 0x40]\n 11572: a0 = a2 | a3\n 11575: a1 = 0xffffffe0\n 11585: a1 = s1 <u a1\n 11588: a4 = u64 [sp + 0x38]\n 11591: a1 = 0 if a4 != 0\n 11593: a1 = 0 if a0 != 0\n 11595: jump @429 if a1 == 0\n      : @427 (gas: 23)\n 11598: a0 = s1 + 0x40\n 11601: u64 [sp + 0x8] = a0\n 11604: a0 = a0 <u s1\n 11607: a1 = a4 + a0\n 11610: u64 [sp] = a1\n 11612: a1 = a1 <u a4\n 11615: a1 = a0 if a0 == 0\n 11618: a1 = a1 + a2\n 11621: u64 [sp + 0x38] = a1\n 11624: a0 = a1 <u a2\n 11627: a0 = a0 + a3\n 11630: u64 [sp + 0x48] = a0\n 11633: i32 a0 = s1 + 0x20\n 11636: a1 = u64 [sp + 0x10]\n 11639: u64 [sp + 0x50] = a1\n 11642: a1 = u64 [sp + 0x18]\n 11645: u64 [sp + 0x58] = a1\n 11648: a1 = u64 [sp + 0x20]\n 11651: u64 [sp + 0x60] = a1\n 11654: a1 = sp + 0x50\n 11657: a2 = u64 [sp + 0x28]\n 11660: u64 [sp + 0x68] = a2\n 11663: ra = 500, jump @4\n      : @428 [@dyn 250] (gas: 15)\n 11669: a0 = u64 [sp + 0x30]\n 11672: a1 = u64 [sp + 0x38]\n 11675: u64 [a0 + 0x10] = a1\n 11678: a1 = u64 [sp]\n 11680: u64 [a0 + 0x8] = a1\n 11683: a1 = u64 [sp + 0x8]\n 11686: u64 [a0] = a1\n 11688: a1 = u64 [sp + 0x48]\n 11691: u64 [a0 + 0x18] = a1\n 11694: sp = s0 + 0xffffffffffffff50\n 11698: ra = u64 [sp + 0xa8]\n 11702: s0 = u64 [sp + 0xa0]\n 11706: s1 = u64 [sp + 0x98]\n 11710: sp = sp + 0xb0\n 11714: ret\n      : @429 (gas: 1)\n 11716: trap\n      : @430 [export #0: 'call'] (gas: 2)\n 11717: a0 = 0\n 11719: ra = 502, jump @18\n      : @431 [@dyn 251] [export #1: 'deploy'] (gas: 2)\n 11725: a0 = 0x1\n 11728: ra = 504, jump @18\n      : @432 [@dyn 252] (gas: 11)\n 11734: a2 = u64 [sp + 0x8]\n 11737: a2 = a2 | s1\n 11740: s1 = 0x100000000\n 11750: a0 = 0xfffffffc\n 11760: a1 = u64 [sp + 0x18]\n 11763: a0 = a1 <u a0\n 11766: a1 = u64 [sp + 0x10]\n 11769: a0 = 0 if a1 != 0\n 11771: u64 [sp + 0x8] = a2\n 11774: a0 = 0 if a2 != 0\n 11776: jump [t0]\n      : @433 (gas: 15)\n 11778: a2 = u64 [sp + 0xb8]\n 11782: s1 = u64 [sp + 0xb0]\n 11786: a0 = u64 [sp + 0xa8]\n 11790: a1 = u64 [sp + 0xa0]\n 11794: u64 [sp + 0x10] = a0\n 11797: u64 [sp + 0x8] = a2\n 11800: a0 = a0 | a2\n 11803: u64 [sp + 0x18] = a1\n 11806: a1 = a1 | s1\n 11809: a1 = a1 | a0\n 11812: a1 = a1 >> 0x20\n 11815: a0 = a0 | s1\n 11818: a0 = a0 << 0x20\n 11821: a0 = a0 | a1\n 11824: jump [t0]\n      : @434 (gas: 14)\n 11826: sp = sp + 0xffffffffffffff20\n 11830: u64 [sp + 0xd8] = ra\n 11834: u64 [sp + 0xd0] = s0\n 11838: u64 [sp + 0xc8] = s1\n 11842: s0 = sp + 0xe0\n 11846: sp = sp & 0xfffffffffffffff0\n 11849: a1 = u64 [a0 + 0x10]\n 11852: a2 = u64 [a0 + 0x18]\n 11855: a3 = u64 [a0 + 0x8]\n 11858: a0 = u64 [a0]\n 11860: a2 = a2 | a3\n 11863: a0 = a0 | a1\n 11866: a0 = a0 | a2\n 11869: jump [t0]\n      : @435 (gas: 7)\n 11871: a0 = 0xffffffbc\n 11881: a0 = s1 <u a0\n 11884: a1 = u64 [sp + 0x10]\n 11887: a0 = 0 if a1 != 0\n 11889: a1 = u64 [sp + 0x8]\n 11892: a0 = 0 if a1 != 0\n 11894: jump [t0]\n      : @436 (gas: 8)\n 11896: a0 = s1 + 0xffffffffffffffdc\n 11899: a1 = u64 [sp + 0x18]\n 11902: a0 = a1 <u a0\n 11905: a1 = u64 [sp + 0x10]\n 11908: a0 = 0 if a1 != 0\n 11910: a1 = u64 [sp + 0x8]\n 11913: a0 = 0 if a1 != 0\n 11915: jump [t0]\n      : @437 (gas: 8)\n 11917: u64 [sp + 144] = 0\n 11921: u64 [sp + 136] = 0\n 11925: u64 [sp + 128] = 0\n 11929: a0 = 0x8c379a000000000\n 11939: a1 = sp + 0x80\n 11943: u64 [sp + 0x98] = a0\n 11947: a0 = u64 [sp + 0x18]\n 11950: jump [t0]\n      : @438 (gas: 12)\n 11952: sp = sp + 0xffffffffffffffa0\n 11955: u64 [sp + 0x58] = ra\n 11958: u64 [sp + 0x50] = s0\n 11961: u64 [sp + 0x48] = s1\n 11964: s0 = sp + 0x60\n 11967: sp = sp & 0xffffffffffffffe0\n 11970: s1 = a0\n 11972: a0 = u64 [a1 + 0x18]\n 11975: a2 = u64 [a1 + 0x10]\n 11978: a3 = u64 [a1 + 0x8]\n 11981: a1 = u64 [a1]\n 11983: jump [t0]\n      : @439 (gas: 12)\n 11985: a0 = u64 [sp + 0x58]\n 11988: a1 = u64 [sp + 0x50]\n 11991: a2 = u64 [sp + 0x48]\n 11994: s1 = u64 [sp + 0x40]\n 11997: a0 = a0 | a2\n 12000: a2 = s1 | a1\n 12003: a2 = a2 | a0\n 12006: a2 = a2 >> 0x20\n 12009: a0 = a0 | a1\n 12012: a0 = a0 << 0x20\n 12015: a0 = a0 | a2\n 12018: jump [t0]\n      : @440 (gas: 8)\n 12020: a0 = u64 [sp + 0x18]\n 12023: i32 a0 = a0 + 0x4\n 12026: u64 [sp + 120] = 0\n 12029: u64 [sp + 112] = 0\n 12032: u64 [sp + 96] = 0x20\n 12036: a1 = sp + 0x60\n 12039: u64 [sp + 104] = 0\n 12042: jump [t0]\n      : @441 (gas: 14)\n 12044: a0 = u64 [s1 + 0x8]\n 12047: a1 = u64 [s1]\n 12049: a2 = i32 [s1 + 0x10]\n 12052: a0 = reverse a0\n 12054: a3 = a0 >> 0x20\n 12057: a1 = reverse a1\n 12059: a4 = a1 << 0x20\n 12062: a3 = a3 | a4\n 12065: a0 = a0 << 0x20\n 12068: a2 = reverse a2\n 12070: a2 = a2 >> 0x20\n 12073: a0 = a0 | a2\n 12076: a1 = a1 >> 0x20\n 12079: jump [t0]\n      : @442 (gas: 10)\n 12081: a0 = u64 [sp + 0x10]\n 12084: a1 = u64 [sp + 0x18]\n 12087: a2 = 0x100000000\n 12097: a2 = a2 ^ a0\n 12100: a2 = a2 | a1\n 12103: a3 = a0 >> 0x20\n 12106: a3 = a3 <u 0x1\n 12109: a3 = 0 if a1 != 0\n 12111: a3 = 0 if a2 == 0\n 12113: jump [t0]\n      : @443 (gas: 12)\n 12115: sp = sp + 0xfffffffffffffec0\n 12119: u64 [sp + 0x138] = ra\n 12123: u64 [sp + 0x130] = s0\n 12127: u64 [sp + 0x128] = s1\n 12131: s0 = sp + 0x140\n 12135: sp = sp & 0xffffffffffffffe0\n 12138: u64 [sp + 184] = 0\n 12142: u64 [sp + 176] = 0\n 12146: u64 [sp + 168] = 0\n 12150: u64 [sp + 160] = 0\n 12154: i32 a0 = sp + 0xa0\n 12158: jump [t0]\n      : @444 (gas: 12)\n 12160: sp = sp + 0xffffffffffffff20\n 12164: u64 [sp + 0xd8] = ra\n 12168: u64 [sp + 0xd0] = s0\n 12172: u64 [sp + 0xc8] = s1\n 12176: s0 = sp + 0xe0\n 12180: sp = sp & 0xffffffffffffffe0\n 12183: u64 [sp + 152] = 0\n 12187: u64 [sp + 144] = 0\n 12191: u64 [sp + 136] = 0\n 12195: u64 [sp + 128] = 0\n 12199: i32 a0 = sp + 0x80\n 12203: jump [t0]\n      : @445 (gas: 9)\n 12205: a0 = u64 [a3 + 0x18]\n 12208: a1 = u64 [a3 + 0x10]\n 12211: a2 = u64 [a3 + 0x8]\n 12214: a3 = u64 [a3]\n 12216: a0 = reverse a0\n 12218: a1 = reverse a1\n 12220: a2 = reverse a2\n 12222: a3 = reverse a3\n 12224: jump [t0]\n      : @446 (gas: 6)\n 12226: sp = s0 + 0xffffffffffffffa0\n 12229: ra = u64 [sp + 0x58]\n 12232: s0 = u64 [sp + 0x50]\n 12235: s1 = u64 [sp + 0x48]\n 12238: sp = sp + 0x60\n 12241: jump [t0]\n      : @447 (gas: 12)\n 12243: a2 = u64 [sp]\n 12245: a3 = u64 [sp + 0x8]\n 12248: u64 [s1] = a2\n 12250: u64 [s1 + 0x8] = a3\n 12253: u64 [s1 + 0x10] = a0\n 12256: u64 [s1 + 0x18] = a1\n 12259: sp = s0 + 0xffffffffffffffc0\n 12262: ra = u64 [sp + 0x38]\n 12265: s0 = u64 [sp + 0x30]\n 12268: s1 = u64 [sp + 0x28]\n 12271: sp = sp + 0x40\n 12274: jump [t0]\n      : @448 (gas: 6)\n 12276: sp = s0 + 0xffffffffffffff20\n 12280: ra = u64 [sp + 0xd8]\n 12284: s0 = u64 [sp + 0xd0]\n 12288: s1 = u64 [sp + 0xc8]\n 12292: sp = sp + 0xe0\n 12296: jump [t0]\n      : @449 (gas: 6)\n 12298: sp = s0 + 0xffffffffffffff60\n 12302: ra = u64 [sp + 0x98]\n 12306: s0 = u64 [sp + 0x90]\n 12310: s1 = u64 [sp + 0x88]\n 12314: sp = sp + 0xa0\n 12318: jump [t0]\n      : @450 (gas: 12)\n 12320: a0 = u64 [sp + 0x8]\n 12323: a0 = a0 << 0x20\n 12326: a0 = a0 >> 0x20\n 12329: u64 [sp + 56] = 0\n 12332: a1 = u64 [sp + 0x10]\n 12335: u64 [sp + 0x20] = a1\n 12338: a1 = u64 [sp + 0x18]\n 12341: u64 [sp + 0x28] = a1\n 12344: a1 = sp + 0x20\n 12347: u64 [sp + 0x30] = a0\n 12350: a0 = s1\n 12352: jump [t0]\n      : @451 (gas: 9)\n 12354: sp = sp + 0xffffffffffffffc0\n 12357: u64 [sp + 0x38] = ra\n 12360: u64 [sp + 0x30] = s0\n 12363: u64 [sp + 0x28] = s1\n 12366: s0 = sp + 0x40\n 12369: sp = sp & 0xffffffffffffffe0\n 12372: s1 = a0\n 12374: i32 a0 = sp + 0\n 12376: jump [t0]\n      : @452 (gas: 8)\n 12378: a0 = u64 [sp + 0x90]\n 12382: a1 = u64 [sp + 0x98]\n 12386: a2 = u64 [sp + 0x88]\n 12390: a3 = u64 [sp + 0x80]\n 12394: a1 = a1 | a2\n 12397: a0 = a0 | a3\n 12400: a0 = a0 | a1\n 12403: jump [t0]\n      : @453 (gas: 10)\n 12405: sp = sp + 0xffffffffffffff60\n 12409: u64 [sp + 0x98] = ra\n 12413: u64 [sp + 0x90] = s0\n 12417: u64 [sp + 0x88] = s1\n 12421: s0 = sp + 0xa0\n 12425: sp = sp & 0xfffffffffffffff0\n 12428: a5 = u64 [a1 + 0x10]\n 12431: a4 = u64 [a1 + 0x18]\n 12434: s1 = u64 [a1 + 0x8]\n 12437: jump [t0]\n      : @454 (gas: 7)\n 12439: sp = sp + 0xffffffffffffff60\n 12443: u64 [sp + 0x98] = ra\n 12447: u64 [sp + 0x90] = s0\n 12451: u64 [sp + 0x88] = s1\n 12455: s0 = sp + 0xa0\n 12459: sp = sp & 0xffffffffffffffe0\n 12462: jump [t0]\n",
            "bytecode": {
              "object": "50564d0000d03a000000000000010700c1f000c000800380c05bf8716f4416255ed002053b5a39c36928db122fc9f859f9003c599e0e5a57c23fef161409f4f4b18ef6c01cd7dde7b92a942a267d3c8a3b0385058e5304da0f01a86b0fbd48360d85c55a27a93ba334cd5583adf015d3d9e9d028fa1ae3fdde5670617773696e554942524f46203a325670617773696e55544e454449203a324444415f4c41434900005345535345525670617773696e555f4f52455a203a3200535345524444415670617773696e555f52494150203a32000053545349584504811a11000000000400000012000000200000002e000000340000003d0000004a00000055000000640000006f0000007c0000008c0000009c000000a7000000b9000000c400000063616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636f64655f73697a656465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f323536696e7374616e74696174657265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102adc50463616c6cadcd066465706c6f7906b8c380fc02b0b02b00730141029702020309037f03da03df03e4033a0445045f04b304f904040556056a057f05af05c905000635063e06430655069d06a706cd06d206190738075e07ae0741085c085f086a086f089c08b908be08e108e608eb08f50802099b09f709600a7d0a820aac0ab10ab60ac00ad20ad70ae20ae70a140b360b3b0b780b830b970b9d0bad0bb30bbc0bd70bdd0bed0bf30bfc0b170c1d0c750cac0cd80cde0c190d5d0db00de70d5e0e130f570fba0fed0f281047109710ef10fc109f115f12a912b61213134e1387137914d514681524163216261760178e17e51731185f18b6180119241952197c19fa19731b801bdb1b901cc01ccf1c061d1f1d561d5f1d7f1dba1dde1d151e1e1e321e701e941ed51ef31e751fab1fcc1f3c2048205620d92011213a21402175219621d921e92104221d221f22282237223d2246224c2252225b226122672286228c22bf22ca22df22e5221a2344234a234c23552364236a23732379237f2388238e239423b323b923ec23f7230c2412241b242a24302439243f2445244e2454245a2479247f24ad24b824cd24d324dc24eb24f124fa24002506250f2515251b253a2540256e2579258825b825cf25f325b626cd260a2755278127ef2745287a287d28dc28542974297729cb29f829062a532ac32af12a4f2bed2b232c3f2c652c832ca72c2e2d952dcd2dd62d3908c8000251085c053307f0000383770a0e284f059511f07b10087b156489647533082064975010025b037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100413026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832006f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a07821738821830821928821a206f776f886f996faa7b6a187b69107b68087b67501208302d32009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a0f9551a082105882155095116032007b183850100c7c6f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a0650120e7a2c32008b7910520931c8780883881f8488e05638000001253309c40002390ac40002ae8a093d08c40002013308d000028377c887073200009511f07b10087b158475010a03013308c000023d07c0000251050c330010330214287c2b501012a501501214742b0a10018217b0008218b8008219a800821aa000d49808d4a707d48707520729013906c0000297672098772095771f8477e095788000d878077b1880007b17880094777b17900033074095188000492198005010161afd33078000646850101841ff8377646833090a010154161fe7009517603308800050101abbfb821670821a7814070000000001000000d36707d4a7079868208888017b1a1894a893785108bf008217687b17088217607b17104921d8004921d0004921c8004921c000019517409518c00033001c33020628002a801754821858977720d46707821918d498084921f8004921f0004921e8004921e000018219087b1908018219107b1900017b1818017b1710019517e0009518000150101ea5fd95172033084050102016fb821738821830821928821620d49707d48609d47909989920d48707977720d49707510728003308d00002838833070128443308d00002838833070128383308d000028388330701282c6467330850102230fe8377330833090a0128a2fa646733085010241cfe8378330733093300260a0d280a33093300260a0d01951120ff7b10d8007b15d0007b16c8009515e0008411e04911584911504911408000330740c87108491148501028a5fb3306c000023907c000025317042301831760330833002a0a020181177c3308f64ae7a2aa87cb0051479653c6c97f51470539a4e6235147ed0169f45a330815744b09aa874452478bd13d1e4f50102c070333002e951120fe7b10d8017b15d0017b16c8019515e0018411e0641649269801492690014926880149268001836780010a1028021833003033024a284529501032181a3308a32b4f57ab875e330034330274282e29330036951108f8951700077b70f0007b75e8007b76e0009515f8079511f8fd8411e064169567ff079577314927a8004927a0004927980049279000956700108377c0f80a1028d30633003833029a0028af285247587e7e0135492198004921900049218800492180008317800033003a0a1033023c28902950123c8d2951071a3308d0000228083308d0000201838833070133090a0d0181675617030b3308d0000228eb4921b8004921b0004921a8004921a0009517209518a00033003e330206289a278219208217288018304911187b18107b17083307800064187b195010401cfa3908c4000256289f000d2003c40002a000013307d000028378800033092033073300420a0d01827218828318827b10827c088289088274828a828810d3c907d8c909d84a0adb790ac9b807d8a707d8b808c92309c98909c9790957090532009511f87b103308d00002838833070133093300440a0d01808910828a0882884917187b79107b7a087b783200828b10828218828c088283d42c08d4b30ad48a0a98aa20d4b808978820d4a80852087b9511a07b10587b15507b16489515608411f0647682971082980882999777209874209537207b1718d8370ac8ac077b1710d8c70cdaaa0cc8bc0c7b1cd8bc0ac82a0a7b1a084911387b19207b18289518207b1430643750104613f982177b67108217107b67088217187b678217087b67185012486b2732000033004c0a1033024e28f32750124ef0275207533907c00002541703524921b8004921b0004921a8004921a000019517609518a0003300503302062817268217707b17088217687b17188217607b171095174033084050105261f75012541826510723003308d0000228083308d0000201838833070133093300560a0d3302582842275012583f2750105a69f8330820646750105c91fa8378330920330733005e0a0d019511a0fe7b1058017b1550017b164801951560018411e04921d8004921d0004921c8004921c0008317c0000a10018217d0008218d8008219c800821ac000d49808d4a707d4870752073d013907c000025417233b018317e0003308040a028216f8008217f0007b17088217e8007b17188217e0007b171049211801492110014921080149210001039517a000951800013300603302062818258217b8008218a0008219b000821aa800d3760b7b16d87607821608d8960cdbb70c821718d3a702d8a70a821710d88708db2a08d39607d4b707db7c085108bd0049219800492190004921880095188000492180000333075010625df73a070000023a08080002821910c89707d89709821c18c8c808c898083a0a100002d3c80bd8c80cdab90c821b08c8ba0ac8ac0c3a09180002d8ba06d8ac0a821bc86b0bc8b909c8a9097b1720017b1828017b1c30017b193801951760951820013300643302062853248217707b17088217687b17188217607b17109517403308405010669df5501268542451072a003308d00002280f3308d0000228083308d00002018388330701330933006a0a0d33026c28772550126c742550106e9ef63308206467501070c6f8837833092033073300720a0d33027428b124501274ae243300760a10330278287b2550127878255207583908c00002541803574921b8004921b0004921a8004921a000039517609518a00033007a330206289f238217787b17188217707b17108217687b17088217607b1795174033084050107ce4f450127e9b2351071b003308d0000228083308d0000201838833070133090a0d0182177b17208217087b17288217107b17309518208217187b1738646750208000ddf533082064675020820004f883783309203307330084000a0d3302860028ae2450228600ab24330804330088000a0233028a0028872350228a008423510a0b50228c001d2432003308d000028388330701330933008e000a0d33029000286e24502290006b24330824330092000a0233029400284723502294004423510a0b50229600dd2332003308d0000283883307013309330098000a0d33029a00283f2350229a003c230a10018217b0008218b8008219a800821aa000d49808d4a707d487075107133308d00002838833070133090a0d281c3907c00002330823ac78123308d00002838833070133090a0d019517800033009c003302860028d023821780007b1738821788007b1730801790007b17284921d8004921d0004921c8004921c000019517609518c00033009e003302062807228217787b17208217687b17188217607b17108217707b17083306d0000383673300a0000a043302a2002837225022a2003422821608976920989920d39808821910d39707d48707821818d3a808d487078877014911584911507b17409517404911483300a40033023801281c21986720977720821828d487074921f8004921f0004921e8004921e000018218207b1818017b1710018217307b1708018217387b1700019517e000951800015020a60042f53308d000028388330733090a0d28fcfe956aff0795aa3182a7a00082a8a80082a9980082aa9000d49808d4a707d487075207030f3907c00002330843ae78fe0e9567ff079577a1003300a800330286002895229568ff07958831828788007b67788287787b6790008287707b678800828780007b6798009567ff07957781003300aa0033029000285e229568ff079588318289607b69b8008287687b67a000828a587b6ab000828b507b6ba8009797209879207b69800082679800977720987c207b6c7082678800d3b707d39c0c7b6c6882699000d3a9097b6960d49707d4c7078e774918484918407b87309567ff079577614918383300ac0033025e0128d71f826990008262b000d82907826a8800826ca800d8ca08826b60dbb70882678000826b70d87b07826b68dab80764ab64c8da7c0b7b6b8000da7a087b68a800649a6428da720a7b6a8800da79087b68b00082699800649c8268b800da780c7b6c9000da79087b68b80082627864298268a000da78097b699800da72087b68a00097c720987820d4ab077b6870d487078e779568ff079588314918284918207b87109567ff079577414918183300ae0033027c0128221f82679800956800107b8718f882679000956800107b8710f882678800956800107b8708f89567ff079577219568ff0795880182698000956a00107ba900f85020b0007e0d95670010827a20f895670010827728f89569ff079599318298829908826ba0007b6bb807826bb8007b6bb007826bb0007b6ba807826ba8007b6ba0077b69d8077b68d0077b67c8079567e0079568c0079569a0077b6ac0073300b2003302040128e0208269e0078267e8078268f007826af8077b6a78077b6870077b67680795678007956860077b6960073300b4003302320128c61e826790078268980782698807826a8007d49808d4a707d4870788770149265807492650077b67400795674007492648073300b60033029a01280d1e492618074926100749260007409567200795680007492608075020b8008c1695680007828b38828c30828a28828720d4ba09d4c708d49808988820d4c909979920d498085208000c4926f8064926f0064926e8069568e0064926e006207b67787b6a687b6b607b6c585020ba00bef0826978826760826858d487071408e0ffffff00000000d88908826a6894a894785108b50b8397203a082000027b68d8063a0a2800023a083000023a093800027b6ad0067b68c8069568c0067b69c0067b67285020bc0066f09567a0063308405020be001fef956c000682c7a0007b676882cbb8007b6b5882c8a8007b68508262b006957920d87907c8780ad88a08da77087b6260c82808d82807c87b0b8267a0007bc7388267b8007bc7308267b0007bc7288267a8007bc720826798007bc758826790007bc750826788007bc748826780007bc7407b69487bc9607b6a407bca687b68387bc870956780069568600695694006956a20067b6b307bcb783300c0003302c60128d91e826850648b8267586472d487078268686489826a60d4a808d47808988820d4a707977720d487075207a60a64a38264800682688806826798067b6720826a9006d89400d3b80cd8b809dac0096437c93a0cd89c03d87a0a826720c92707c9a707c937037b6310c99c0ac9b807c9070b7b6b18826768c974087b68209584e0d88408c88b099599ffd3b902d8b90bda280b7b6a0888a801c9830295a8ffc88b0bd88b0ac82a0a7b640006956c00067bc9087bcb10956800067bca185020c200f6ee826710956a00057ba7d8008267087ba7d0008267187ba7c8008267207ba7c0008267587ba7f8008267607ba7f0008267507ba7e8009567e0059568c0058269687ba9e0005020c40050139567a0058268685020c60065ed826948826a38d4a907826840826b30d4b808d48707987720d4a808978820d47808520895096497956a000582abb80082acb00082a8a00082a9a800d4c80ad4b909d49a0a98aa20d4c909979920d4a909520966097b68685020c80074f09518e08489e07b69606491837781686883990a088268608287187b67688287107b67588287087b675082877b6760956780058268785020ca00cdec956b000582b7980082ba900082b9880082b88000d49707d4a809d47909989920d4a707977720d497075207f5088267287b68785020cc0000f09569ff079599314929c8004929c0004929b8004929b0008268507b98d8008268607b98d0008268587b98e0008268687b98e80049290801492900014929f8004929f000959a0001491a28ff491a20ff491a18ff491a10ff9568ff079588e1009788209888209569ff0795994101979920d48909977720987720826a7897aa20d47a0a9567ff07957701019777209877209568ff0795882101978820d4780c3307ff3308ff330bff0a09956bff0795bb3182b8f800330ad0000382b9f00080b700017b68403e08d800037b69383e09d000037b67483d07e000037b6a5083a70a050151074508956760053308405020ce00a2eb95670005827b78827a70827968827860d4b9077b6878d4a808d47808988820d4a707977720d487075207cb0749265005492648054926400514070000000055c95c48956840057b6758058267787b69687b6a607b6b585020d00080ec826878958704d88708826a68c88a09d8a90ada880a826860c88a0ad88a0b826858c88b0b8268a000956c00047bc8d8008268b8007bc8d0008268b0007bc8c8008268a8007bc8c000826898007bc8f800826890007bc8f000826888007bc8e800826880007bc8e0007b6908057b6700057b6a100595672005956800059569e004956ac0047b6b18053300d2003302ce0128101b826728058262380582632005826a3005826868d3870bd8870c826078d80304dab40c826960c99a0bd89a0a826958c99209c9a909d8cb0ac9a9097b6928c9cb0b7b6b20c98707c947077b6718c903077b67300a0a01647b826728826818d48707826830648a826920d49808d47808d49707988820977720d487078268408269507b98088268387b988268487a98109568ff079588314928480149284001492838014928300152075f0683a77b672082677864a87b6b185020d40063ed7b672882677833085020d60055ed956aff0795aa31482a50018268208e88826b188eb9fc08d498089a8995ab00017bb988007bb980007bb9787bb970826950979920989920978823d498029568ff07958861019788209888209569ff079599a101979920d4890a826828978820988820826b3097bb20d48b0b9777209877209568ff0795888101978820d4780c3308ff3309ff64270a015207b2058267406f779878208269386f99979a20d4a8087b68509777208268486f88988820d487077b67489899207b6940492698044926900449268804492680048267787b67a0048267687b67a8048267607b67b0049567a004956880048269587b69b8045020d800d30e826a587b6a58048268607b6850048267687b6748048269787b6940047b6a78047b6870047b67680495676004956840047b6960045020da0004f0826798007b671804826790007b671004826788007b6708049567200495680004826980007b6900045020dc004705956b000482ba2082b72882b83082b938826ba0007b6bb803826bb8007b6bb003826bb0007b6ba803826ba8007b6ba0037b69d8037b68d0037b67c8039567e0039568c0039569a0037b6ac0033300de003302040128b5188269e0038267e8038268f003826af80349267803826b407b6b7003826b507b6b6803826b487b6b60037b6a98037b6890037b67880395678003956860037b6980033300e000330256012869188267a0007b6738038267b8007b6730038267b0007b67280395674003956820038269a8007b6920035020e2007604826a4003826748038268500382695803826b98007b6bd802826b90007b6bd002826b88007b6bc802826b80007b6bc0027b69f8027b68f0027b67e802956700039568e0029569c0027b6ae0023300e4003302040128e417956b000382b982b70882b81082ba1849269802826b407b6b9002826b507b6b8802826b487b6b80027b6ab8027b68b0027b67a8029567a002956880027b69a0023300e60033025601289917492678028267407b6770028267507b676802956760028268487b6860025020e800e8109568ff079588314928a8014928a001492898014928900103956740029568ff079588c1013300ea00330206286115826740027b679000826748027b6778826750027b6768826758027b6758956720023308405020ec009fe6956700028279387b6998008278307b6860827a287b6a38827b207b6ba000826758956c00017bc7b8008267687bc7b0008267787bc7a800826790007bc7a0004926d8018267407bc7d0008267507bc7c8008267487bc7c0007bc9f8007bc8f0007bcae800956700029568e0019569c001956aa0017bcbe0005020ee00b312826b3882679800d4b707826a608268a000d4a808d47808988820d4a707977720d4870752074f0264a2956900028297088298187b68900082640002829a10d3b700d8b70c8263a000d83408da080cc92a09c9c900d8c9097b6978d82a0a826c980082699000c9c90cc9ac0c826978c99c0cc9b707c98707c93408d4c707d4080ad47a0ad4070798aa20977720d4a7075207e3011409ffffffff00000000826aa80084aaff826bb00084bbff8267b800d29707492658017b6a400149267801826980007b6960017b6b4801826988007b6968013a094000023a0a4800023a0b5000023a0c5800027b6998017b6a90017b6b88017b6c80017b67500195698001956a6001956b40018267707b6770018267a0003300f000951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020a82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19107b183833000c2811e8956720013308405020f2009be4956700018279387b69b8008278307b68b000827a287b6aa800827b207b6ba0004926d8008267407b67d0008267507b67c8008267487b67c0007b69f8007b68f0007b6ae800956700019568e0009569c0007b6be0005020f400eeeb826ba8008269a0008267b800d4b707826ab000d4a908d47808988820d4a707977720d4870752076c64a2956c000182c70882c8187b6898008263000182ca10d3b704d8b70cd89300da400cc92a08c9c804d8c8087b689000d82a0a826cb80082689800c9c80cc9ac0c82689000c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a70751074b003300f6009511a07b10587b15507b16489515608411e09517203308403300d6012888e33308d0000228083308d0000201838833070133090a0d3308d0000228f23308d0000228eb64977b68b8005020f800c7e683788169b80033073300fa000a0d019511807b10787b15707b1668951580008411e064168289828a088088107b67184916587b68507b6a489568407b694033075020fc004fe449163849163049162002330720c876084916285020fe0036e43908c4000256183f0b2003c4000240019517e08479e07b691064913307d0000283778399330840330000010a08826a1033020201285a12826a10502202015412826b187bba187bb9107bb8087bb79551808210788215708216689511800032006416828a7b6a30828a087b6a28828a107b6a208288187b6818829a8298088099107b67384916787b69707b68689568607b6a603307502006019be38267187b67588267207b67508267287b67483307209568408269307b69405020080177e33908c4000256183f0b2003c4000240019517e08479e07b693064913307d000028377839933084033000a010a08826a3033020c01289b11826a3050220c019511826b387bba187bb9107bb8087bb750220e01de113200956b000182b7900082b8980082b9880082ba8000d49808d4a707d487075207a0013907c00002330843ae789b0195676001330010013302860028d511826760017b6718826768017b6710806770017b670895674001330012013302900028b111826758017b6720826750017b6728826748017b6730826740017b6738492638018267087b6730018267107b672801956820018267187b67200133075020140180e24926180149261001492600010233072095680001492608015020160162e23908c4000256183f0b2003c4000240019517e08479e07b691864913307d00002837783993308400a08826a1882a71882a81082a90882aa6f7b6f876f986fa9826a207b6ab800826a287b6ab000826a307b6aa800826a387b6aa0007b69d8007b68d0007b67c8009567e0009568c0009569a0007b6bc00033001801330204012825118267f8008268f0008269e800826ae000956b00017bb7b8007bb8b0007bb9a8007bbaa000956780009568a00133001a0133020628080f826790007b6728826788007b6730826780007b673895676033084050201c014fe0826a78826870826968826760d49a0ad48709d4a909989920d4a808978820d4980851081b003308d0000228083308d0000201838833070133090a0d011408ffffffff00000000826928d289098268308488ff826b3884baff4916587b6a407b68489568407b69507b673850201e0119e1330820826738502020013fe383783309203307330022010a0d01951180fe7b1078017b1570017b166801951580018411e04921d8004921d0004921c8004921c0008317c0000a10018217d0008218d8008219c800821ac000d49808d4a707d487075107133308d00002838833070133090a0d281c3907c00002330823ac78123308d00002838833070133090a0d019517a0003300240133028600286c0f8217a0007b17388217a8007b17308017b0007b17284921f8004921f0004921e8004921e00001951780009518e0003300260133020628a20d821788007b1720821780007b1718801790007b17103306d000038367330028010a0433022a0128d50d50222a01d20d821910d39808821918d39707d48707821820d3a808d487078877014911784911707b176095176049116833002c013302380128c00c492118014921100149210801492100019517409518000133002e01330206281d0d801754977720821858821928d49707492138014921300149212801492120018219307b1948018219387b1940017b1858017b175001951720019518400150203001c6e03308d000028388330733090a0d28e4fe7b17387b19307b1a287b182064179518203300340133020628af0c80171082188219087b67104916187b687b690850223601ab0d320051070b50223a01d20d32009517a00033084050203c01e4dd50223e01cb0b520752502240014d0c5020420109df502244018a0b51073d502246019f0c50204801f4de50224a01170c5107288216188367244911584911504911401495184049114850204c01cfde50224e01d90b520704008216188367443a086000023a096800027b18387b19301408000000004e4544447b18289518204911205020500196de330864646750205201bde08378330701330964330054010a0d3302560128bb0d50225601b80d82897b19188289087b1910808610827818827910827a0882777b18587b19507b1a487b17409517209518403300580133020628990b801734977720821838d467078219107b19688219187b19607b18787b177095174095186050205a015bdf50225c01c60c320051070b50226001a50c32009517a00033084050206201b7dc502264019e0a52075250226601200b50206801dcdd50226a015d0a51073d50226c01720b50206e01c7dd50227001ea0a5107288216188367244911584911504911401e95184049114850207201a2dd50227401ac0a520704008216188367443a087000027b18383a087800023a098000023a0a8800027b18307b19289518207b1a205020760169dd33086464675020780190df837833070133096433007a010a0d33027c0128290a50227c01260a51070b50227e01df0b32009517a00033084050208001f1db50228201d809520752502284015a0a5020860116dd50228801970951073d50228a01ac0a50208c0101dd50228e01240a5107288216188367244911584911504911401795184049114850209001dcdc50229201e609520704008216188367443a089000023a099800023a0aa000027b18387b19307b1a2895182049112050209401a8dc330864646750209601cfde8378330701330964330098010a0d33029a0128680950229a01650951070b50229c011e0b32009517a00033084050209e0130db5022a00117095207525022a20199095020a40155dc5022a601d60851073d5022a801eb095020aa0140dc5022ac016309510728821618836724491158491150491140169518404911485020ae011bdc5022b0012509520704008216188367443a08a800023a09b000023a0ab800027b18387b19307b1a289518204911205020b201e7db33086464675020b4010ede83783307013309643300b6010a0d019511b07b10487b15409515508411f0491130491128491120140700000000717b484e9518207b173833075020b8019ddb49111849111049014133070464184911085020ba0186db3908c4000256183f0b2003c4000240013308d0000283883307013309243300bc010a0d019511b07b10487b15407b16389515508411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520653821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b2c7b13107b1a187b17203307409518107b1c285020be019fda9551b082104882154082163895115032005020c001c1fe951140ff7b10b8007b15b0007b16a8009515c0008411f082897b19388289087b19308289107b19288288187b18206476951780003308405020c20111d9821980007b19821888007b1818821a90007b1a10821b98007b1b088217207b17588217287b17508217307b17488217387b17407b1b787b1a707b18689517609518407b19605020c401a4fe8217087b67188217107b67108217187b670882177b67955140ff8210b8008215b0008216a8009511c000320082827b1b307b1628d4b608d4c20bd48b0b98bb207b1c38d4c808978820d4b8087b17205208d80082a7107b171082a7087b171882970882981082aa7b1a088299987a20978820d48a0a989820977720d487079799204911607b19687b17709518607b1a78642764265020c80166d9821738821830d487071408ecffffff00000000d8860882192894989478510870821a1898a720821810978820d47809821c0898c72097a820d4780897ca208367144911407b1a487b18509518407b19585020ca0110d9956728d86708821a28c88a09d8a90ada880a821838c88a0ad88a08821b30c8b808821b207bba107bb9087bb77bb8185022cc01960732000082827b1b307b1628d4b608d4c20bd48b0b98bb207b1c38d4c808978820d4b8087b17205208d600642682a7107b170882a7087b171082a77b171882971082980882999777209877204911787b19607b18689518607b177064275020d00179d8821c38821930d49c071408e0ffffff00000000d88608821b2894b8947851087d1408ffffffff00000000821a08d28a028218108483ff821a1884aaff9567407b1718d86707c87b087b1810d8b80bda770bc8cb0b7b1b28d8cb07c897077b17388367204911587b1a407b13489518407b12505020d20101d88217208218287b78108218107b78088218187b788218387b78185022d4019c063200008217387b17188217307b17108217287b17088216200a0c01821818821908d498087b1618821a10d4a609d48909989920d4a808978820d4980852083c647698772052073483677b171082171864685020d801bcd97a1640837783184033090a0b01811740821810ac870e0a0c0164769877205107040082171864685020da018fd9837883693307013300dc010a0d01951120fe7b10d8017b15d0017b16c8019515e0018411e064168278107b68208278087b682882777b6730492638014926300149262801492620010395670001956820013300de0133020628600495670001827c18827b10827908d4cb0788980194785108d101826700017b6738957701887801c898087b6940d48709889901c8b909d8b90ac8ac0249265801492650014926480149264001037b6760017b6868017b6970017b62780195674001956860017b6b587b6c505020e001dcd79517e08477e07b6748647149269801492690014926880149268001039567e000956880013300e20133020628c2038267f8008262e0008269f000826ae800826850d3780bd87808826758d8970cdbb80c826840d3a803d8a80a826838d82808db3a08d39707d4b707db7c085108110149269800492690004926880095688000492680000333075020e40106d63908c4000256181f0b2003c4000220019517e08479e07b691864913307d00002837783993308200a08826918829718829810829208829a6f776f88826b40c88b0b826c38c87c0cd87c07c87b0bd38b09d88b08da97086fa7826950c897076f29826a58c89a0ad89a09c89707c8a808d8a809c897078269487b9c7b9b087b98107b971864988267209777209877207b67589567603300e60133020628c602806774977720826878826958d49707826928956a00017ba9a8008269307ba9a0007ba8b8007ba7b0009568a0018267485020e8017cd6955120fe8210d8018215d0018216c8019511e00132005020ea014ff94926d0004926c8004926c000140700000000717b484e9568c0007b67d80033075020ec01f0d44926b8004926b0004926a000323307049568a0004926a8005020ee01d2d43908c4000256183f0b2003c4000240013308d0000283883307013309243300f0010a0d01951150ff7b10a8007b15a0007b1698009515b0008411f0828c10828b1882860882827b1b407b1638d4b608d4c20bd48b0b98bb207b1c48d4c808978820d4b8087b17305208da00642682a7187b172882a7107b172082a7087b171882a77b17108297108298088299977720987720492188007b19707b18789518707b17800064275020f20127d4821948821a40d4a9071408e0ffffff00000000d88608821b3894b894785108799567407b1708d86707c87b087b18d8b808da7708c898087b1838d89807c8a7077b17488367208218107b18508218187b18588218207b18609518508219287b19685020f401c0d38217308218387b781082187b78088218087b788218487b7818955150ff8210a8008215a000821698009511b00032000033075020f601efd53307015020f801e6d5821908d46909140600000000010000001407fcffffff00000000821818d8780782181094877b1908949732028219b8008216b0008217a8008218a0007b17107b1908d497077b1818d46808d47808988820d46707977720d487073202951120ff7b10d8007b15d0007b16c8009515e0008411f0827810827918827a088277d4a909d48707d4970732021407bcffffff00000000d876078218109487821808948732029567dc821818d87807821810948782180894873202492190004921880049218000140700000000a079c308951880007b17980082171832029511a07b10587b15507b16489515608411e06476828718828910828a0882883202821758821850821948821640d49707d48609d47909989920d48707977720d49707320282171883770449117849117049116020951860491168320282670882688169106f77987a206f88978b20d4ba0a9777206f99989920d49707988820320282171082181814090000000001000000d37909d48909987a2088aa01948a939a32029511c0fe7b1038017b1530017b162801951540018411e04921b8004921b0004921a8004921a0008317a0003202951120ff7b10d8007b15d0007b16c8009515e0008411e04921980049219000492188004921800083178000320282a71882a81082a90882aa6f776f886f996faa32029551a082105882155082164895116032028219821a087b697b6a087b67107b68189551c08210388215308216289511403202955120ff8210d8008215d0008216c8009511e0003202955160ff8210980082159000821688009511a00032028217089777209877204911388218107b18208218187b18289518207b1730646732029511c07b10387b15307b16289515408411e0647683173202821790008218980082198800821a8000d49808d4a707d487073202951160ff7b1098007b1590007b1688009515a0008411f0828c10828b188286083202951160ff7b1098007b1590007b1688009515a0008411e03202214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a92244992244992244992244992244992244992244992aa92942451924a92aa2485922425294955559292a4249524254a252525458a142952a44891a2248592244108094369521a429284d08888241192241251242244a16a48842480244945924444482449922422422211111192902449922443299442a942552a54a9d288884812928410424a13442010081208898888141111254908922411111191221111112591404444a4242414965a84222212499224890a210486486992a492244992a4144a6952924a5292244992242525499224254992144a9292d094848488889048922449124286c2524a4248a1944644442222a21111492284481189442222442489884849922449928888088510922409499284a4241111892449922421642814965212420aa59484948484888890489224494a42c850586a499224052928459120512448502845912051244850284591a0111149124a1592506a4424128944444844922449128a2241922449922449449224224222128988205425121191244222222291482211111191482291482411492249244949228948442292449254225189441489448a442249522449241189888888884824228288884889888888888888888844444444444424222249222222221121228248922449121111214982240920a94888104244448248109148249224491289442291482492244944441291949292244914118924294992244992244992244912914482442412894422119108224192244992282222922449244852a9244952224144442449924882484444229148444444444444129124492292882449910811090909a9110922499224492222028848922049922449222222222222222222222222222211114992244992244992b4242949922449492422224a4a901444222552442449928824224992248948928e9494242949121191482422124122914844444404111111111141244944444444444444442422221289444444444422222222228288888888888888888888489424128944444444442291884410898810119144442291481089244924229188884422111111111124924892248a2422492449928824499224492280482412111111114208111111118988888848499224254992529224890491482412914824222222228888449224299288244992484412499224493292244922a1b05428540445d12489549224494112498210c124854a944882242949a24a922425499214244992244188609242254a2441921414111149222422229148242212894422914844a22022242208114c52a89424552512894444444444242222222222228944224990244992244361a90124499224499004a56844442422221a119124a1542109a5464422914844848848229148288a0449922449924424222211499224222291888808425592a444929294a0044582204110240882244924419049084900498214944491a024495292249124499224491094a0481024088204419024892408320909212449908292281224281204098220411024492209824c42084992200525512448502408120441822048924412049984109224410a4aa249922401240549528210c150124d92a49292244992244992244992a49292244992244992244192a420222252922429124491482449922449922049928a88884a9224491249929492244992a4822401249524499224499220499224499212b424499224519294a4244952902480a4124092244992244992244990244949d02449d22449922429292948a9495a320595684444a4242911112222892449114992244944848888882448524484884822229224499224494444848210c124854a4952254992a4a4244992929424892449928844442488888882880820a22022242208110c25d1888848929224499244499294a4249244419200924a9294244992244992204949494444b42041124000494a4544244992244544449294a400925249522a22028848499294a49224499294249194524a5292920092a48a8888444444111191888828495525492a2549921411114544444992244925495245442429222292a488884800"
            },
            "deployedBytecode": {
              "object": "50564d0000d03a000000000000010700c1f000c000800380c05bf8716f4416255ed002053b5a39c36928db122fc9f859f9003c599e0e5a57c23fef161409f4f4b18ef6c01cd7dde7b92a942a267d3c8a3b0385058e5304da0f01a86b0fbd48360d85c55a27a93ba334cd5583adf015d3d9e9d028fa1ae3fdde5670617773696e554942524f46203a325670617773696e55544e454449203a324444415f4c41434900005345535345525670617773696e555f4f52455a203a3200535345524444415670617773696e555f52494150203a32000053545349584504811a11000000000400000012000000200000002e000000340000003d0000004a00000055000000640000006f0000007c0000008c0000009c000000a7000000b9000000c400000063616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636f64655f73697a656465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f323536696e7374616e74696174657265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102adc50463616c6cadcd066465706c6f7906b8c380fc02b0b02b00730141029702020309037f03da03df03e4033a0445045f04b304f904040556056a057f05af05c905000635063e06430655069d06a706cd06d206190738075e07ae0741085c085f086a086f089c08b908be08e108e608eb08f50802099b09f709600a7d0a820aac0ab10ab60ac00ad20ad70ae20ae70a140b360b3b0b780b830b970b9d0bad0bb30bbc0bd70bdd0bed0bf30bfc0b170c1d0c750cac0cd80cde0c190d5d0db00de70d5e0e130f570fba0fed0f281047109710ef10fc109f115f12a912b61213134e1387137914d514681524163216261760178e17e51731185f18b6180119241952197c19fa19731b801bdb1b901cc01ccf1c061d1f1d561d5f1d7f1dba1dde1d151e1e1e321e701e941ed51ef31e751fab1fcc1f3c2048205620d92011213a21402175219621d921e92104221d221f22282237223d2246224c2252225b226122672286228c22bf22ca22df22e5221a2344234a234c23552364236a23732379237f2388238e239423b323b923ec23f7230c2412241b242a24302439243f2445244e2454245a2479247f24ad24b824cd24d324dc24eb24f124fa24002506250f2515251b253a2540256e2579258825b825cf25f325b626cd260a2755278127ef2745287a287d28dc28542974297729cb29f829062a532ac32af12a4f2bed2b232c3f2c652c832ca72c2e2d952dcd2dd62d3908c8000251085c053307f0000383770a0e284f059511f07b10087b156489647533082064975010025b037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100413026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832006f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a07821738821830821928821a206f776f886f996faa7b6a187b69107b68087b67501208302d32009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a0f9551a082105882155095116032007b183850100c7c6f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a0650120e7a2c32008b7910520931c8780883881f8488e05638000001253309c40002390ac40002ae8a093d08c40002013308d000028377c887073200009511f07b10087b158475010a03013308c000023d07c0000251050c330010330214287c2b501012a501501214742b0a10018217b0008218b8008219a800821aa000d49808d4a707d48707520729013906c0000297672098772095771f8477e095788000d878077b1880007b17880094777b17900033074095188000492198005010161afd33078000646850101841ff8377646833090a010154161fe7009517603308800050101abbfb821670821a7814070000000001000000d36707d4a7079868208888017b1a1894a893785108bf008217687b17088217607b17104921d8004921d0004921c8004921c000019517409518c00033001c33020628002a801754821858977720d46707821918d498084921f8004921f0004921e8004921e000018219087b1908018219107b1900017b1818017b1710019517e0009518000150101ea5fd95172033084050102016fb821738821830821928821620d49707d48609d47909989920d48707977720d49707510728003308d00002838833070128443308d00002838833070128383308d000028388330701282c6467330850102230fe8377330833090a0128a2fa646733085010241cfe8378330733093300260a0d280a33093300260a0d01951120ff7b10d8007b15d0007b16c8009515e0008411e04911584911504911408000330740c87108491148501028a5fb3306c000023907c000025317042301831760330833002a0a020181177c3308f64ae7a2aa87cb0051479653c6c97f51470539a4e6235147ed0169f45a330815744b09aa874452478bd13d1e4f50102c070333002e951120fe7b10d8017b15d0017b16c8019515e0018411e0641649269801492690014926880149268001836780010a1028021833003033024a284529501032181a3308a32b4f57ab875e330034330274282e29330036951108f8951700077b70f0007b75e8007b76e0009515f8079511f8fd8411e064169567ff079577314927a8004927a0004927980049279000956700108377c0f80a1028d30633003833029a0028af285247587e7e0135492198004921900049218800492180008317800033003a0a1033023c28902950123c8d2951071a3308d0000228083308d0000201838833070133090a0d0181675617030b3308d0000228eb4921b8004921b0004921a8004921a0009517209518a00033003e330206289a278219208217288018304911187b18107b17083307800064187b195010401cfa3908c4000256289f000d2003c40002a000013307d000028378800033092033073300420a0d01827218828318827b10827c088289088274828a828810d3c907d8c909d84a0adb790ac9b807d8a707d8b808c92309c98909c9790957090532009511f87b103308d00002838833070133093300440a0d01808910828a0882884917187b79107b7a087b783200828b10828218828c088283d42c08d4b30ad48a0a98aa20d4b808978820d4a80852087b9511a07b10587b15507b16489515608411f0647682971082980882999777209874209537207b1718d8370ac8ac077b1710d8c70cdaaa0cc8bc0c7b1cd8bc0ac82a0a7b1a084911387b19207b18289518207b1430643750104613f982177b67108217107b67088217187b678217087b67185012486b2732000033004c0a1033024e28f32750124ef0275207533907c00002541703524921b8004921b0004921a8004921a000019517609518a0003300503302062817268217707b17088217687b17188217607b171095174033084050105261f75012541826510723003308d0000228083308d0000201838833070133093300560a0d3302582842275012583f2750105a69f8330820646750105c91fa8378330920330733005e0a0d019511a0fe7b1058017b1550017b164801951560018411e04921d8004921d0004921c8004921c0008317c0000a10018217d0008218d8008219c800821ac000d49808d4a707d4870752073d013907c000025417233b018317e0003308040a028216f8008217f0007b17088217e8007b17188217e0007b171049211801492110014921080149210001039517a000951800013300603302062818258217b8008218a0008219b000821aa800d3760b7b16d87607821608d8960cdbb70c821718d3a702d8a70a821710d88708db2a08d39607d4b707db7c085108bd0049219800492190004921880095188000492180000333075010625df73a070000023a08080002821910c89707d89709821c18c8c808c898083a0a100002d3c80bd8c80cdab90c821b08c8ba0ac8ac0c3a09180002d8ba06d8ac0a821bc86b0bc8b909c8a9097b1720017b1828017b1c30017b193801951760951820013300643302062853248217707b17088217687b17188217607b17109517403308405010669df5501268542451072a003308d00002280f3308d0000228083308d00002018388330701330933006a0a0d33026c28772550126c742550106e9ef63308206467501070c6f8837833092033073300720a0d33027428b124501274ae243300760a10330278287b2550127878255207583908c00002541803574921b8004921b0004921a8004921a000039517609518a00033007a330206289f238217787b17188217707b17108217687b17088217607b1795174033084050107ce4f450127e9b2351071b003308d0000228083308d0000201838833070133090a0d0182177b17208217087b17288217107b17309518208217187b1738646750208000ddf533082064675020820004f883783309203307330084000a0d3302860028ae2450228600ab24330804330088000a0233028a0028872350228a008423510a0b50228c001d2432003308d000028388330701330933008e000a0d33029000286e24502290006b24330824330092000a0233029400284723502294004423510a0b50229600dd2332003308d0000283883307013309330098000a0d33029a00283f2350229a003c230a10018217b0008218b8008219a800821aa000d49808d4a707d487075107133308d00002838833070133090a0d281c3907c00002330823ac78123308d00002838833070133090a0d019517800033009c003302860028d023821780007b1738821788007b1730801790007b17284921d8004921d0004921c8004921c000019517609518c00033009e003302062807228217787b17208217687b17188217607b17108217707b17083306d0000383673300a0000a043302a2002837225022a2003422821608976920989920d39808821910d39707d48707821818d3a808d487078877014911584911507b17409517404911483300a40033023801281c21986720977720821828d487074921f8004921f0004921e8004921e000018218207b1818017b1710018217307b1708018217387b1700019517e000951800015020a60042f53308d000028388330733090a0d28fcfe956aff0795aa3182a7a00082a8a80082a9980082aa9000d49808d4a707d487075207030f3907c00002330843ae78fe0e9567ff079577a1003300a800330286002895229568ff07958831828788007b67788287787b6790008287707b678800828780007b6798009567ff07957781003300aa0033029000285e229568ff079588318289607b69b8008287687b67a000828a587b6ab000828b507b6ba8009797209879207b69800082679800977720987c207b6c7082678800d3b707d39c0c7b6c6882699000d3a9097b6960d49707d4c7078e774918484918407b87309567ff079577614918383300ac0033025e0128d71f826990008262b000d82907826a8800826ca800d8ca08826b60dbb70882678000826b70d87b07826b68dab80764ab64c8da7c0b7b6b8000da7a087b68a800649a6428da720a7b6a8800da79087b68b00082699800649c8268b800da780c7b6c9000da79087b68b80082627864298268a000da78097b699800da72087b68a00097c720987820d4ab077b6870d487078e779568ff079588314918284918207b87109567ff079577414918183300ae0033027c0128221f82679800956800107b8718f882679000956800107b8710f882678800956800107b8708f89567ff079577219568ff0795880182698000956a00107ba900f85020b0007e0d95670010827a20f895670010827728f89569ff079599318298829908826ba0007b6bb807826bb8007b6bb007826bb0007b6ba807826ba8007b6ba0077b69d8077b68d0077b67c8079567e0079568c0079569a0077b6ac0073300b2003302040128e0208269e0078267e8078268f007826af8077b6a78077b6870077b67680795678007956860077b6960073300b4003302320128c61e826790078268980782698807826a8007d49808d4a707d4870788770149265807492650077b67400795674007492648073300b60033029a01280d1e492618074926100749260007409567200795680007492608075020b8008c1695680007828b38828c30828a28828720d4ba09d4c708d49808988820d4c909979920d498085208000c4926f8064926f0064926e8069568e0064926e006207b67787b6a687b6b607b6c585020ba00bef0826978826760826858d487071408e0ffffff00000000d88908826a6894a894785108b50b8397203a082000027b68d8063a0a2800023a083000023a093800027b6ad0067b68c8069568c0067b69c0067b67285020bc0066f09567a0063308405020be001fef956c000682c7a0007b676882cbb8007b6b5882c8a8007b68508262b006957920d87907c8780ad88a08da77087b6260c82808d82807c87b0b8267a0007bc7388267b8007bc7308267b0007bc7288267a8007bc720826798007bc758826790007bc750826788007bc748826780007bc7407b69487bc9607b6a407bca687b68387bc870956780069568600695694006956a20067b6b307bcb783300c0003302c60128d91e826850648b8267586472d487078268686489826a60d4a808d47808988820d4a707977720d487075207a60a64a38264800682688806826798067b6720826a9006d89400d3b80cd8b809dac0096437c93a0cd89c03d87a0a826720c92707c9a707c937037b6310c99c0ac9b807c9070b7b6b18826768c974087b68209584e0d88408c88b099599ffd3b902d8b90bda280b7b6a0888a801c9830295a8ffc88b0bd88b0ac82a0a7b640006956c00067bc9087bcb10956800067bca185020c200f6ee826710956a00057ba7d8008267087ba7d0008267187ba7c8008267207ba7c0008267587ba7f8008267607ba7f0008267507ba7e8009567e0059568c0058269687ba9e0005020c40050139567a0058268685020c60065ed826948826a38d4a907826840826b30d4b808d48707987720d4a808978820d47808520895096497956a000582abb80082acb00082a8a00082a9a800d4c80ad4b909d49a0a98aa20d4c909979920d4a909520966097b68685020c80074f09518e08489e07b69606491837781686883990a088268608287187b67688287107b67588287087b675082877b6760956780058268785020ca00cdec956b000582b7980082ba900082b9880082b88000d49707d4a809d47909989920d4a707977720d497075207f5088267287b68785020cc0000f09569ff079599314929c8004929c0004929b8004929b0008268507b98d8008268607b98d0008268587b98e0008268687b98e80049290801492900014929f8004929f000959a0001491a28ff491a20ff491a18ff491a10ff9568ff079588e1009788209888209569ff0795994101979920d48909977720987720826a7897aa20d47a0a9567ff07957701019777209877209568ff0795882101978820d4780c3307ff3308ff330bff0a09956bff0795bb3182b8f800330ad0000382b9f00080b700017b68403e08d800037b69383e09d000037b67483d07e000037b6a5083a70a050151074508956760053308405020ce00a2eb95670005827b78827a70827968827860d4b9077b6878d4a808d47808988820d4a707977720d487075207cb0749265005492648054926400514070000000055c95c48956840057b6758058267787b69687b6a607b6b585020d00080ec826878958704d88708826a68c88a09d8a90ada880a826860c88a0ad88a0b826858c88b0b8268a000956c00047bc8d8008268b8007bc8d0008268b0007bc8c8008268a8007bc8c000826898007bc8f800826890007bc8f000826888007bc8e800826880007bc8e0007b6908057b6700057b6a100595672005956800059569e004956ac0047b6b18053300d2003302ce0128101b826728058262380582632005826a3005826868d3870bd8870c826078d80304dab40c826960c99a0bd89a0a826958c99209c9a909d8cb0ac9a9097b6928c9cb0b7b6b20c98707c947077b6718c903077b67300a0a01647b826728826818d48707826830648a826920d49808d47808d49707988820977720d487078268408269507b98088268387b988268487a98109568ff079588314928480149284001492838014928300152075f0683a77b672082677864a87b6b185020d40063ed7b672882677833085020d60055ed956aff0795aa31482a50018268208e88826b188eb9fc08d498089a8995ab00017bb988007bb980007bb9787bb970826950979920989920978823d498029568ff07958861019788209888209569ff079599a101979920d4890a826828978820988820826b3097bb20d48b0b9777209877209568ff0795888101978820d4780c3308ff3309ff64270a015207b2058267406f779878208269386f99979a20d4a8087b68509777208268486f88988820d487077b67489899207b6940492698044926900449268804492680048267787b67a0048267687b67a8048267607b67b0049567a004956880048269587b69b8045020d800d30e826a587b6a58048268607b6850048267687b6748048269787b6940047b6a78047b6870047b67680495676004956840047b6960045020da0004f0826798007b671804826790007b671004826788007b6708049567200495680004826980007b6900045020dc004705956b000482ba2082b72882b83082b938826ba0007b6bb803826bb8007b6bb003826bb0007b6ba803826ba8007b6ba0037b69d8037b68d0037b67c8039567e0039568c0039569a0037b6ac0033300de003302040128b5188269e0038267e8038268f003826af80349267803826b407b6b7003826b507b6b6803826b487b6b60037b6a98037b6890037b67880395678003956860037b6980033300e000330256012869188267a0007b6738038267b8007b6730038267b0007b67280395674003956820038269a8007b6920035020e2007604826a4003826748038268500382695803826b98007b6bd802826b90007b6bd002826b88007b6bc802826b80007b6bc0027b69f8027b68f0027b67e802956700039568e0029569c0027b6ae0023300e4003302040128e417956b000382b982b70882b81082ba1849269802826b407b6b9002826b507b6b8802826b487b6b80027b6ab8027b68b0027b67a8029567a002956880027b69a0023300e60033025601289917492678028267407b6770028267507b676802956760028268487b6860025020e800e8109568ff079588314928a8014928a001492898014928900103956740029568ff079588c1013300ea00330206286115826740027b679000826748027b6778826750027b6768826758027b6758956720023308405020ec009fe6956700028279387b6998008278307b6860827a287b6a38827b207b6ba000826758956c00017bc7b8008267687bc7b0008267787bc7a800826790007bc7a0004926d8018267407bc7d0008267507bc7c8008267487bc7c0007bc9f8007bc8f0007bcae800956700029568e0019569c001956aa0017bcbe0005020ee00b312826b3882679800d4b707826a608268a000d4a808d47808988820d4a707977720d4870752074f0264a2956900028297088298187b68900082640002829a10d3b700d8b70c8263a000d83408da080cc92a09c9c900d8c9097b6978d82a0a826c980082699000c9c90cc9ac0c826978c99c0cc9b707c98707c93408d4c707d4080ad47a0ad4070798aa20977720d4a7075207e3011409ffffffff00000000826aa80084aaff826bb00084bbff8267b800d29707492658017b6a400149267801826980007b6960017b6b4801826988007b6968013a094000023a0a4800023a0b5000023a0c5800027b6998017b6a90017b6b88017b6c80017b67500195698001956a6001956b40018267707b6770018267a0003300f000951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020a82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19107b183833000c2811e8956720013308405020f2009be4956700018279387b69b8008278307b68b000827a287b6aa800827b207b6ba0004926d8008267407b67d0008267507b67c8008267487b67c0007b69f8007b68f0007b6ae800956700019568e0009569c0007b6be0005020f400eeeb826ba8008269a0008267b800d4b707826ab000d4a908d47808988820d4a707977720d4870752076c64a2956c000182c70882c8187b6898008263000182ca10d3b704d8b70cd89300da400cc92a08c9c804d8c8087b689000d82a0a826cb80082689800c9c80cc9ac0c82689000c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a70751074b003300f6009511a07b10587b15507b16489515608411e09517203308403300d6012888e33308d0000228083308d0000201838833070133090a0d3308d0000228f23308d0000228eb64977b68b8005020f800c7e683788169b80033073300fa000a0d019511807b10787b15707b1668951580008411e064168289828a088088107b67184916587b68507b6a489568407b694033075020fc004fe449163849163049162002330720c876084916285020fe0036e43908c4000256183f0b2003c4000240019517e08479e07b691064913307d0000283778399330840330000010a08826a1033020201285a12826a10502202015412826b187bba187bb9107bb8087bb79551808210788215708216689511800032006416828a7b6a30828a087b6a28828a107b6a208288187b6818829a8298088099107b67384916787b69707b68689568607b6a603307502006019be38267187b67588267207b67508267287b67483307209568408269307b69405020080177e33908c4000256183f0b2003c4000240019517e08479e07b693064913307d000028377839933084033000a010a08826a3033020c01289b11826a3050220c019511826b387bba187bb9107bb8087bb750220e01de113200956b000182b7900082b8980082b9880082ba8000d49808d4a707d487075207a0013907c00002330843ae789b0195676001330010013302860028d511826760017b6718826768017b6710806770017b670895674001330012013302900028b111826758017b6720826750017b6728826748017b6730826740017b6738492638018267087b6730018267107b672801956820018267187b67200133075020140180e24926180149261001492600010233072095680001492608015020160162e23908c4000256183f0b2003c4000240019517e08479e07b691864913307d00002837783993308400a08826a1882a71882a81082a90882aa6f7b6f876f986fa9826a207b6ab800826a287b6ab000826a307b6aa800826a387b6aa0007b69d8007b68d0007b67c8009567e0009568c0009569a0007b6bc00033001801330204012825118267f8008268f0008269e800826ae000956b00017bb7b8007bb8b0007bb9a8007bbaa000956780009568a00133001a0133020628080f826790007b6728826788007b6730826780007b673895676033084050201c014fe0826a78826870826968826760d49a0ad48709d4a909989920d4a808978820d4980851081b003308d0000228083308d0000201838833070133090a0d011408ffffffff00000000826928d289098268308488ff826b3884baff4916587b6a407b68489568407b69507b673850201e0119e1330820826738502020013fe383783309203307330022010a0d01951180fe7b1078017b1570017b166801951580018411e04921d8004921d0004921c8004921c0008317c0000a10018217d0008218d8008219c800821ac000d49808d4a707d487075107133308d00002838833070133090a0d281c3907c00002330823ac78123308d00002838833070133090a0d019517a0003300240133028600286c0f8217a0007b17388217a8007b17308017b0007b17284921f8004921f0004921e8004921e00001951780009518e0003300260133020628a20d821788007b1720821780007b1718801790007b17103306d000038367330028010a0433022a0128d50d50222a01d20d821910d39808821918d39707d48707821820d3a808d487078877014911784911707b176095176049116833002c013302380128c00c492118014921100149210801492100019517409518000133002e01330206281d0d801754977720821858821928d49707492138014921300149212801492120018219307b1948018219387b1940017b1858017b175001951720019518400150203001c6e03308d000028388330733090a0d28e4fe7b17387b19307b1a287b182064179518203300340133020628af0c80171082188219087b67104916187b687b690850223601ab0d320051070b50223a01d20d32009517a00033084050203c01e4dd50223e01cb0b520752502240014d0c5020420109df502244018a0b51073d502246019f0c50204801f4de50224a01170c5107288216188367244911584911504911401495184049114850204c01cfde50224e01d90b520704008216188367443a086000023a096800027b18387b19301408000000004e4544447b18289518204911205020500196de330864646750205201bde08378330701330964330054010a0d3302560128bb0d50225601b80d82897b19188289087b1910808610827818827910827a0882777b18587b19507b1a487b17409517209518403300580133020628990b801734977720821838d467078219107b19688219187b19607b18787b177095174095186050205a015bdf50225c01c60c320051070b50226001a50c32009517a00033084050206201b7dc502264019e0a52075250226601200b50206801dcdd50226a015d0a51073d50226c01720b50206e01c7dd50227001ea0a5107288216188367244911584911504911401e95184049114850207201a2dd50227401ac0a520704008216188367443a087000027b18383a087800023a098000023a0a8800027b18307b19289518207b1a205020760169dd33086464675020780190df837833070133096433007a010a0d33027c0128290a50227c01260a51070b50227e01df0b32009517a00033084050208001f1db50228201d809520752502284015a0a5020860116dd50228801970951073d50228a01ac0a50208c0101dd50228e01240a5107288216188367244911584911504911401795184049114850209001dcdc50229201e609520704008216188367443a089000023a099800023a0aa000027b18387b19307b1a2895182049112050209401a8dc330864646750209601cfde8378330701330964330098010a0d33029a0128680950229a01650951070b50229c011e0b32009517a00033084050209e0130db5022a00117095207525022a20199095020a40155dc5022a601d60851073d5022a801eb095020aa0140dc5022ac016309510728821618836724491158491150491140169518404911485020ae011bdc5022b0012509520704008216188367443a08a800023a09b000023a0ab800027b18387b19307b1a289518204911205020b201e7db33086464675020b4010ede83783307013309643300b6010a0d019511b07b10487b15409515508411f0491130491128491120140700000000717b484e9518207b173833075020b8019ddb49111849111049014133070464184911085020ba0186db3908c4000256183f0b2003c4000240013308d0000283883307013309243300bc010a0d019511b07b10487b15407b16389515508411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520653821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b2c7b13107b1a187b17203307409518107b1c285020be019fda9551b082104882154082163895115032005020c001c1fe951140ff7b10b8007b15b0007b16a8009515c0008411f082897b19388289087b19308289107b19288288187b18206476951780003308405020c20111d9821980007b19821888007b1818821a90007b1a10821b98007b1b088217207b17588217287b17508217307b17488217387b17407b1b787b1a707b18689517609518407b19605020c401a4fe8217087b67188217107b67108217187b670882177b67955140ff8210b8008215b0008216a8009511c000320082827b1b307b1628d4b608d4c20bd48b0b98bb207b1c38d4c808978820d4b8087b17205208d80082a7107b171082a7087b171882970882981082aa7b1a088299987a20978820d48a0a989820977720d487079799204911607b19687b17709518607b1a78642764265020c80166d9821738821830d487071408ecffffff00000000d8860882192894989478510870821a1898a720821810978820d47809821c0898c72097a820d4780897ca208367144911407b1a487b18509518407b19585020ca0110d9956728d86708821a28c88a09d8a90ada880a821838c88a0ad88a08821b30c8b808821b207bba107bb9087bb77bb8185022cc01960732000082827b1b307b1628d4b608d4c20bd48b0b98bb207b1c38d4c808978820d4b8087b17205208d600642682a7107b170882a7087b171082a77b171882971082980882999777209877204911787b19607b18689518607b177064275020d00179d8821c38821930d49c071408e0ffffff00000000d88608821b2894b8947851087d1408ffffffff00000000821a08d28a028218108483ff821a1884aaff9567407b1718d86707c87b087b1810d8b80bda770bc8cb0b7b1b28d8cb07c897077b17388367204911587b1a407b13489518407b12505020d20101d88217208218287b78108218107b78088218187b788218387b78185022d4019c063200008217387b17188217307b17108217287b17088216200a0c01821818821908d498087b1618821a10d4a609d48909989920d4a808978820d4980852083c647698772052073483677b171082171864685020d801bcd97a1640837783184033090a0b01811740821810ac870e0a0c0164769877205107040082171864685020da018fd9837883693307013300dc010a0d01951120fe7b10d8017b15d0017b16c8019515e0018411e064168278107b68208278087b682882777b6730492638014926300149262801492620010395670001956820013300de0133020628600495670001827c18827b10827908d4cb0788980194785108d101826700017b6738957701887801c898087b6940d48709889901c8b909d8b90ac8ac0249265801492650014926480149264001037b6760017b6868017b6970017b62780195674001956860017b6b587b6c505020e001dcd79517e08477e07b6748647149269801492690014926880149268001039567e000956880013300e20133020628c2038267f8008262e0008269f000826ae800826850d3780bd87808826758d8970cdbb80c826840d3a803d8a80a826838d82808db3a08d39707d4b707db7c085108110149269800492690004926880095688000492680000333075020e40106d63908c4000256181f0b2003c4000220019517e08479e07b691864913307d00002837783993308200a08826918829718829810829208829a6f776f88826b40c88b0b826c38c87c0cd87c07c87b0bd38b09d88b08da97086fa7826950c897076f29826a58c89a0ad89a09c89707c8a808d8a809c897078269487b9c7b9b087b98107b971864988267209777209877207b67589567603300e60133020628c602806774977720826878826958d49707826928956a00017ba9a8008269307ba9a0007ba8b8007ba7b0009568a0018267485020e8017cd6955120fe8210d8018215d0018216c8019511e00132005020ea014ff94926d0004926c8004926c000140700000000717b484e9568c0007b67d80033075020ec01f0d44926b8004926b0004926a000323307049568a0004926a8005020ee01d2d43908c4000256183f0b2003c4000240013308d0000283883307013309243300f0010a0d01951150ff7b10a8007b15a0007b1698009515b0008411f0828c10828b1882860882827b1b407b1638d4b608d4c20bd48b0b98bb207b1c48d4c808978820d4b8087b17305208da00642682a7187b172882a7107b172082a7087b171882a77b17108297108298088299977720987720492188007b19707b18789518707b17800064275020f20127d4821948821a40d4a9071408e0ffffff00000000d88608821b3894b894785108799567407b1708d86707c87b087b18d8b808da7708c898087b1838d89807c8a7077b17488367208218107b18508218187b18588218207b18609518508219287b19685020f401c0d38217308218387b781082187b78088218087b788218487b7818955150ff8210a8008215a000821698009511b00032000033075020f601efd53307015020f801e6d5821908d46909140600000000010000001407fcffffff00000000821818d8780782181094877b1908949732028219b8008216b0008217a8008218a0007b17107b1908d497077b1818d46808d47808988820d46707977720d487073202951120ff7b10d8007b15d0007b16c8009515e0008411f0827810827918827a088277d4a909d48707d4970732021407bcffffff00000000d876078218109487821808948732029567dc821818d87807821810948782180894873202492190004921880049218000140700000000a079c308951880007b17980082171832029511a07b10587b15507b16489515608411e06476828718828910828a0882883202821758821850821948821640d49707d48609d47909989920d48707977720d49707320282171883770449117849117049116020951860491168320282670882688169106f77987a206f88978b20d4ba0a9777206f99989920d49707988820320282171082181814090000000001000000d37909d48909987a2088aa01948a939a32029511c0fe7b1038017b1530017b162801951540018411e04921b8004921b0004921a8004921a0008317a0003202951120ff7b10d8007b15d0007b16c8009515e0008411e04921980049219000492188004921800083178000320282a71882a81082a90882aa6f776f886f996faa32029551a082105882155082164895116032028219821a087b697b6a087b67107b68189551c08210388215308216289511403202955120ff8210d8008215d0008216c8009511e0003202955160ff8210980082159000821688009511a00032028217089777209877204911388218107b18208218187b18289518207b1730646732029511c07b10387b15307b16289515408411e0647683173202821790008218980082198800821a8000d49808d4a707d487073202951160ff7b1098007b1590007b1688009515a0008411f0828c10828b188286083202951160ff7b1098007b1590007b1688009515a0008411e03202214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a92244992244992244992244992244992244992244992aa92942451924a92aa2485922425294955559292a4249524254a252525458a142952a44891a2248592244108094369521a429284d08888241192241251242244a16a48842480244945924444482449922422422211111192902449922443299442a942552a54a9d288884812928410424a13442010081208898888141111254908922411111191221111112591404444a4242414965a84222212499224890a210486486992a492244992a4144a6952924a5292244992242525499224254992144a9292d094848488889048922449124286c2524a4248a1944644442222a21111492284481189442222442489884849922449928888088510922409499284a4241111892449922421642814965212420aa59484948484888890489224494a42c850586a499224052928459120512448502845912051244850284591a0111149124a1592506a4424128944444844922449128a2241922449922449449224224222128988205425121191244222222291482211111191482291482411492249244949228948442292449254225189441489448a442249522449241189888888884824228288884889888888888888888844444444444424222249222222221121228248922449121111214982240920a94888104244448248109148249224491289442291482492244944441291949292244914118924294992244992244992244912914482442412894422119108224192244992282222922449244852a9244952224144442449924882484444229148444444444444129124492292882449910811090909a9110922499224492222028848922049922449222222222222222222222222222211114992244992244992b4242949922449492422224a4a901444222552442449928824224992248948928e9494242949121191482422124122914844444404111111111141244944444444444444442422221289444444444422222222228288888888888888888888489424128944444444442291884410898810119144442291481089244924229188884422111111111124924892248a2422492449928824499224492280482412111111114208111111118988888848499224254992529224890491482412914824222222228888449224299288244992484412499224493292244922a1b05428540445d12489549224494112498210c124854a944882242949a24a922425499214244992244188609242254a2441921414111149222422229148242212894422914844a22022242208114c52a89424552512894444444444242222222222228944224990244992244361a90124499224499004a56844442422221a119124a1542109a5464422914844848848229148288a0449922449924424222211499224222291888808425592a444929294a0044582204110240882244924419049084900498214944491a024495292249124499224491094a0481024088204419024892408320909212449908292281224281204098220411024492209824c42084992200525512448502408120441822048924412049984109224410a4aa249922401240549528210c150124d92a49292244992244992244992a49292244992244992244192a420222252922429124491482449922449922049928a88884a9224491249929492244992a4822401249524499224499220499224499212b424499224519294a4244952902480a4124092244992244992244990244949d02449d22449922429292948a9495a320595684444a4242911112222892449114992244944848888882448524484884822229224499224494444848210c124854a4952254992a4a4244992929424892449928844442488888882880820a22022242208110c25d1888848929224499244499294a4249244419200924a9294244992244992204949494444b42041124000494a4544244992244544449294a400925249522a22028848499294a49224499294249194524a5292920092a48a8888444444111191888828495525492a2549921411114544444992244925495245442429222292a488884800"
            },
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          },
          "irOptimized": "/// @use-src 1:\"contracts/UniswapV2Factory.sol\", 6:\"contracts/interfaces/IUniswapV2Factory.sol\"\nobject \"UniswapV2Factory_576\" {\n    code {\n        {\n            /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"UniswapV2Factory_576\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n            sstore(/** @src 1:591:617  \"feeToSetter = _feeToSetter\" */ 0x01, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ or(and(sload(/** @src 1:591:617  \"feeToSetter = _feeToSetter\" */ 0x01), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"UniswapV2Factory_576_deployed\")\n            codecopy(_3, dataoffset(\"UniswapV2Factory_576_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 1:\"contracts/UniswapV2Factory.sol\"\n    object \"UniswapV2Factory_576_deployed\" {\n        code {\n            {\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x017e7e58 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(128, and(sload(0), sub(shl(160, 1), 1)))\n                        return(128, 32)\n                    }\n                    case 0x094b7415 { external_fun_feeToSetter() }\n                    case 0x1e3dd18b { external_fun_allPairs() }\n                    case 0x574f2ba3 { external_fun_allPairsLength() }\n                    case 0xa2e74af6 { external_fun_setFeeToSetter() }\n                    case 0xc9c65396 { external_fun_createPair() }\n                    case 0xe6a43905 { external_fun_getPair() }\n                    case 0xf46901ed { external_fun_setFeeTo() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            function external_fun_feeToSetter()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 1:322:348  \"address public feeToSetter\" */ 1), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_allPairs()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value := calldataload(4)\n                /// @src 1:423:448  \"address[] public allPairs\"\n                let _1 := iszero(lt(value, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sload(/** @src 1:423:448  \"address[] public allPairs\" */ 3)))\n                if _1\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:423:448  \"address[] public allPairs\" */ 3)\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value_1 := and(sload(add(87903029871075914254377627908054574944891091886930582284385770809450030037083, value)), sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                let tail := /** @src -1:-1:-1 */ 0\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                tail := add(memPos, 32)\n                mstore(memPos, and(value_1, sub(shl(160, 1), 1)))\n                return(memPos, sub(tail, memPos))\n            }\n            function external_fun_allPairsLength()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 1:702:710  \"allPairs\" */ 0x03)\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let memPos := mload(64)\n                mstore(memPos, length)\n                return(memPos, 32)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_1977() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_setFeeToSetter()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value0 := abi_decode_address()\n                let _1 := sload(/** @src 1:1999:2010  \"feeToSetter\" */ 0x01)\n                /// @src 1:1977:2035  \"require(msg.sender == feeToSetter, \\\"UniswapV2: FORBIDDEN\\\")\"\n                require_helper_stringliteral_6e6d(/** @src 1:1985:2010  \"msg.sender == feeToSetter\" */ eq(/** @src 1:1985:1995  \"msg.sender\" */ caller(), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ and(_1, sub(shl(160, 1), 1))))\n                sstore(/** @src 1:1999:2010  \"feeToSetter\" */ 0x01, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), and(value0, sub(shl(160, 1), 1))))\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n            function external_fun_createPair()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_1977()\n                /// @src 1:854:870  \"tokenA != tokenB\"\n                let _1 := /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ and(/** @src 1:854:870  \"tokenA != tokenB\" */ value1, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:854:870  \"tokenA != tokenB\"\n                let _2 := /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ and(/** @src 1:854:870  \"tokenA != tokenB\" */ value0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:846:905  \"require(tokenA != tokenB, \\\"UniswapV2: IDENTICAL_ADDRESSES\\\")\"\n                require_helper_stringliteral_1af2(/** @src 1:854:870  \"tokenA != tokenB\" */ iszero(eq(_2, _1)))\n                /// @src 1:950:1027  \"tokenA < tokenB...\"\n                let expr_component := /** @src -1:-1:-1 */ 0\n                let expr_component_1 := 0\n                /// @src 1:950:1027  \"tokenA < tokenB...\"\n                switch /** @src 1:950:965  \"tokenA < tokenB\" */ lt(_2, _1)\n                case /** @src 1:950:1027  \"tokenA < tokenB...\" */ 0 {\n                    expr_component := value1\n                    expr_component_1 := value0\n                }\n                default {\n                    expr_component := value0\n                    expr_component_1 := value1\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let _3 := and(/** @src 1:1045:1065  \"token0 != address(0)\" */ expr_component, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:1037:1093  \"require(token0 != address(0), \\\"UniswapV2: ZERO_ADDRESS\\\")\"\n                require_helper_stringliteral_9fd3(/** @src 1:1045:1065  \"token0 != address(0)\" */ iszero(iszero(/** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ _3)))\n                /// @src 1:1103:1209  \"require(...\"\n                require_helper_stringliteral(/** @src 1:1124:1161  \"getPair[token0][token1] == address(0)\" */ iszero(cleanup_address(/** @src 1:1124:1147  \"getPair[token0][token1]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_address_mapping_address_address_of_address(/** @src 1:1124:1139  \"getPair[token0]\" */ mapping_index_access_mapping_address_mapping_address_address_of_address_1978(expr_component), /** @src 1:1124:1147  \"getPair[token0][token1]\" */ expr_component_1)))))\n                /// @src 1:1273:1305  \"type(UniswapV2Pair).creationCode\"\n                let _4 := datasize(\"UniswapV2Pair_1652\")\n                let expr_mpos := allocate_memory(add(_4, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 32))\n                /// @src 1:1273:1305  \"type(UniswapV2Pair).creationCode\"\n                mstore(expr_mpos, _4)\n                let _5 := add(expr_mpos, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 32)\n                /// @src 1:1273:1305  \"type(UniswapV2Pair).creationCode\"\n                datacopy(_5, dataoffset(\"UniswapV2Pair_1652\"), _4)\n                /// @src 1:1340:1372  \"abi.encodePacked(token0, token1)\"\n                let expr_mpos_1 := /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ mload(64)\n                /// @src 1:1340:1372  \"abi.encodePacked(token0, token1)\"\n                let _6 := add(expr_mpos_1, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 32)\n                /// @src 1:1340:1372  \"abi.encodePacked(token0, token1)\"\n                let _7 := sub(abi_encode_packed_address_address(_6, expr_component, expr_component_1), expr_mpos_1)\n                mstore(expr_mpos_1, add(_7, not(31)))\n                finalize_allocation(expr_mpos_1, _7)\n                /// @src 1:1383:1476  \"assembly {...\"\n                let var_pair := create2(/** @src -1:-1:-1 */ 0, /** @src 1:1383:1476  \"assembly {...\" */ _5, mload(expr_mpos), /** @src 1:1330:1373  \"keccak256(abi.encodePacked(token0, token1))\" */ keccak256(/** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ _6, mload(/** @src 1:1330:1373  \"keccak256(abi.encodePacked(token0, token1))\" */ expr_mpos_1)))\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let _8 := and(/** @src 1:1485:1505  \"IUniswapV2Pair(pair)\" */ var_pair, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\"\n                if iszero(extcodesize(_8))\n                {\n                    /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\"\n                let _9 := /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ mload(64)\n                /// @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\"\n                mstore(_9, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ shl(224, 0x485cc955))\n                /// @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\"\n                let _10 := call(gas(), _8, /** @src -1:-1:-1 */ 0, /** @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\" */ _9, sub(abi_encode_address_address(add(_9, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 4), /** @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\" */ expr_component, expr_component_1), _9), _9, /** @src -1:-1:-1 */ 0)\n                /// @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\"\n                if iszero(_10) { revert_forward() }\n                if _10\n                {\n                    finalize_allocation(_9, /** @src -1:-1:-1 */ 0)\n                    /// @src 1:1485:1532  \"IUniswapV2Pair(pair).initialize(token0, token1)\"\n                    abi_decode(_9, _9)\n                }\n                /// @src 1:1542:1572  \"getPair[token0][token1] = pair\"\n                update_storage_value_offsett_address_to_address(/** @src 1:1542:1565  \"getPair[token0][token1]\" */ mapping_index_access_mapping_address_mapping_address_address_of_address(/** @src 1:1542:1557  \"getPair[token0]\" */ mapping_index_access_mapping_address_mapping_address_address_of_address_1978(expr_component), /** @src 1:1542:1565  \"getPair[token0][token1]\" */ expr_component_1), /** @src 1:1542:1572  \"getPair[token0][token1] = pair\" */ var_pair)\n                /// @src 1:1582:1612  \"getPair[token1][token0] = pair\"\n                update_storage_value_offsett_address_to_address(/** @src 1:1582:1605  \"getPair[token1][token0]\" */ mapping_index_access_mapping_address_mapping_address_address_of_address(/** @src 1:1582:1597  \"getPair[token1]\" */ mapping_index_access_mapping_address_mapping_address_address_of_address_1978(expr_component_1), /** @src 1:1582:1605  \"getPair[token1][token0]\" */ expr_component), /** @src 1:1582:1612  \"getPair[token1][token0] = pair\" */ var_pair)\n                /// @src 1:1667:1686  \"allPairs.push(pair)\"\n                array_push_from_address_to_array_address_dyn_storage_ptr(var_pair)\n                /// @src 1:1735:1750  \"allPairs.length\"\n                let expr := /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sload(/** @src 1:1667:1675  \"allPairs\" */ 0x03)\n                /// @src 1:1701:1751  \"PairCreated(token0, token1, pair, allPairs.length)\"\n                let _11 := /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ mload(64)\n                /// @src 1:1701:1751  \"PairCreated(token0, token1, pair, allPairs.length)\"\n                log3(_11, sub(abi_encode_address_uint256(_11, var_pair, expr), _11), 0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9, _3, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ and(/** @src 1:1701:1751  \"PairCreated(token0, token1, pair, allPairs.length)\" */ expr_component_1, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1)))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_address(memPos, var_pair), memPos))\n            }\n            function mapping_index_access_mapping_address_mapping_address_address_of_address_1978(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:1124:1131  \"getPair\" */ 0x02)\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_mapping_address_address_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function external_fun_getPair()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_1977()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 1:355:417  \"mapping(address => mapping(address => address)) public getPair\" */ 2)\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value := and(sload(/** @src 1:355:417  \"mapping(address => mapping(address => address)) public getPair\" */ mapping_index_access_mapping_address_mapping_address_address_of_address(/** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 64), /** @src 1:355:417  \"mapping(address => mapping(address => address)) public getPair\" */ value1)), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, value)\n                return(memPos, 32)\n            }\n            function external_fun_setFeeTo()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let value0 := abi_decode_address()\n                /// @src 1:1817:1875  \"require(msg.sender == feeToSetter, \\\"UniswapV2: FORBIDDEN\\\")\"\n                require_helper_stringliteral_6e6d(/** @src 1:1825:1850  \"msg.sender == feeToSetter\" */ eq(/** @src 1:1825:1835  \"msg.sender\" */ caller(), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ and(sload(/** @src 1:1839:1850  \"feeToSetter\" */ 0x01), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ sub(shl(160, 1), 1))))\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value0, sub(shl(160, 1), 1))))\n                return(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_6e6d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"UniswapV2: FORBIDDEN\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function require_helper_stringliteral_1af2(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 30)\n                    mstore(add(memPtr, 68), \"UniswapV2: IDENTICAL_ADDRESSES\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_9fd3(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 23)\n                    mstore(add(memPtr, 68), \"UniswapV2: ZERO_ADDRESS\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"UniswapV2: PAIR_EXISTS\")\n                    revert(memPtr, 100)\n                }\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 1:1340:1372  \"abi.encodePacked(token0, token1)\" */ not(31)))\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory(size) -> memPtr\n            {\n                memPtr := mload(64)\n                finalize_allocation(memPtr, size)\n            }\n            function abi_encode_packed_address_address(pos, value0, value1) -> end\n            {\n                mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n                mstore(add(pos, 20), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n                end := add(pos, 40)\n            }\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function array_push_from_address_to_array_address_dyn_storage_ptr(value0)\n            {\n                let oldLen := sload(/** @src 1:1667:1675  \"allPairs\" */ 0x03)\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                if iszero(lt(oldLen, 18446744073709551616)) { panic_error_0x41() }\n                sstore(/** @src 1:1667:1675  \"allPairs\" */ 0x03, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ add(oldLen, 1))\n                let slot := /** @src -1:-1:-1 */ 0\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                let offset := /** @src -1:-1:-1 */ 0\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                if iszero(lt(oldLen, sload(/** @src 1:1667:1675  \"allPairs\" */ 0x03)))\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1667:1675  \"allPairs\" */ 0x03)\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\" */ 0x20), oldLen)\n                offset := /** @src -1:-1:-1 */ 0\n                /// @src 1:243:2080  \"contract UniswapV2Factory is IUniswapV2Factory {...\"\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value0, sub(shl(160, 1), 1))))\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n        }\n        /// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 2:\"contracts/UniswapV2Pair.sol\", 5:\"contracts/interfaces/IUniswapV2ERC20.sol\"\n        object \"UniswapV2Pair_1652\" {\n            code {\n                {\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    let memPtr := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    size := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, 64)\n                    memPtr := memPtr_1\n                    mstore(memPtr_1, 10)\n                    let _1 := add(memPtr_1, 32)\n                    mstore(_1, \"Uniswap V2\")\n                    /// @src 0:1327:1349  \"keccak256(bytes(name))\"\n                    let expr := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _1, mload(/** @src 0:1327:1349  \"keccak256(bytes(name))\" */ memPtr_1))\n                    /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n                    let memPtr_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let memPtr_3 := mload(64)\n                    finalize_allocation(memPtr_3, 64)\n                    memPtr_2 := memPtr_3\n                    mstore(memPtr_3, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 1)\n                    let _2 := add(memPtr_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                    /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n                    mstore(_2, \"1\")\n                    /// @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\"\n                    let expr_1 := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _2, mload(/** @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\" */ memPtr_3))\n                    /// @src 0:1148:1458  \"abi.encode(...\"\n                    let expr_mpos := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                    /// @src 0:1148:1458  \"abi.encode(...\"\n                    let _3 := add(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                    /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n                    mstore(_3, /** @src 0:1176:1309  \"keccak256(...\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n                    mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64), /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ expr)\n                    mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 96), expr_1)\n                    mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 128), /** @src 0:1044:1097  \"assembly {...\" */ chainid())\n                    /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n                    mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160), /** @src 0:1439:1443  \"this\" */ address())\n                    /// @src 0:1148:1458  \"abi.encode(...\"\n                    mstore(expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160)\n                    /// @src 0:1148:1458  \"abi.encode(...\"\n                    finalize_allocation(expr_mpos, 192)\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    sstore(/** @src 0:1106:1468  \"DOMAIN_SEPARATOR = keccak256(...\" */ 0x03, /** @src 0:1125:1468  \"keccak256(...\" */ keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _3, mload(/** @src 0:1125:1468  \"keccak256(...\" */ expr_mpos)))\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    sstore(/** @src 2:1262:1263  \"1\" */ 0x0c, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 1)\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    sstore(/** @src 2:2482:2502  \"factory = msg.sender\" */ 0x05, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ or(and(sload(/** @src 2:2482:2502  \"factory = msg.sender\" */ 0x05), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ not(sub(shl(160, 1), 1))), /** @src 2:2492:2502  \"msg.sender\" */ caller()))\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let _4 := mload(64)\n                    let _5 := datasize(\"UniswapV2Pair_1652_deployed\")\n                    codecopy(_4, dataoffset(\"UniswapV2Pair_1652_deployed\"), _5)\n                    return(_4, _5)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n            }\n            /// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 2:\"contracts/UniswapV2Pair.sol\", 8:\"contracts/libraries/Math.sol\", 9:\"contracts/libraries/SafeMath.sol\", 10:\"contracts/libraries/UQ112x112.sol\"\n            object \"UniswapV2Pair_1652_deployed\" {\n                code {\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _1 := 0\n                            switch shr(224, calldataload(0))\n                            case 0x022c0d9f {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                                let value := calldataload(4)\n                                let value_1 := calldataload(36)\n                                let value_2 := 0\n                                value_2 := calldataload(68)\n                                let _2 := and(value_2, sub(shl(160, 1), 1))\n                                if iszero(eq(value_2, _2)) { revert(0, 0) }\n                                let offset := calldataload(100)\n                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                                let length := calldataload(add(4, offset))\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                                /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                                require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 1))\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0)\n                                /// @src 2:7969:7983  \"amount0Out > 0\"\n                                let _3 := iszero(value)\n                                /// @src 2:7969:8001  \"amount0Out > 0 || amount1Out > 0\"\n                                let expr := /** @src 2:7969:7983  \"amount0Out > 0\" */ iszero(_3)\n                                let expr_1 := /** @src 2:7969:8001  \"amount0Out > 0 || amount1Out > 0\" */ expr\n                                if _3\n                                {\n                                    expr := /** @src 2:7987:8001  \"amount1Out > 0\" */ iszero(iszero(value_1))\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if iszero(expr)\n                                {\n                                    let memPtr := mload(64)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, 4), 32)\n                                    mstore(add(memPtr, 36), 37)\n                                    mstore(add(memPtr, 68), \"UniswapV2: INSUFFICIENT_OUTPUT_A\")\n                                    mstore(add(memPtr, 100), \"MOUNT\")\n                                    revert(memPtr, 132)\n                                }\n                                /// @src 2:8116:8129  \"getReserves()\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_getReserves()\n                                /// @src 2:8175:8197  \"amount0Out < _reserve0\"\n                                let _4 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:8175:8197  \"amount0Out < _reserve0\" */ expr_component, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                                /// @src 2:8175:8223  \"amount0Out < _reserve0 && amount1Out < _reserve1\"\n                                let expr_2 := /** @src 2:8175:8197  \"amount0Out < _reserve0\" */ lt(value, _4)\n                                /// @src 2:8175:8223  \"amount0Out < _reserve0 && amount1Out < _reserve1\"\n                                if expr_2\n                                {\n                                    expr_2 := /** @src 2:8201:8223  \"amount1Out < _reserve1\" */ lt(value_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:8201:8223  \"amount1Out < _reserve1\" */ expr_component_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff))\n                                }\n                                if iszero(expr_2)\n                                {\n                                    let memPtr_1 := mload(64)\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, 4), 32)\n                                    mstore(add(memPtr_1, 36), 33)\n                                    mstore(add(memPtr_1, 68), \"UniswapV2: INSUFFICIENT_LIQUIDIT\")\n                                    mstore(add(memPtr_1, 100), \"Y\")\n                                    revert(memPtr_1, 132)\n                                }\n                                let cleaned := and(sload(/** @src 2:8438:8444  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                let cleaned_1 := and(sload(/** @src 2:8476:8482  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:8504:8534  \"to != _token0 && to != _token1\"\n                                let expr_3 := /** @src 2:8504:8517  \"to != _token0\" */ iszero(eq(_2, cleaned))\n                                /// @src 2:8504:8534  \"to != _token0 && to != _token1\"\n                                if expr_3\n                                {\n                                    expr_3 := /** @src 2:8521:8534  \"to != _token1\" */ iszero(eq(_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ cleaned_1))\n                                }\n                                if iszero(expr_3)\n                                {\n                                    let memPtr_2 := mload(64)\n                                    mstore(memPtr_2, shl(229, 4594637))\n                                    mstore(add(memPtr_2, 4), 32)\n                                    mstore(add(memPtr_2, 36), 21)\n                                    mstore(add(memPtr_2, 68), \"UniswapV2: INVALID_TO\")\n                                    revert(memPtr_2, 100)\n                                }\n                                /// @src 2:8574:8632  \"if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out)\"\n                                if expr_1\n                                {\n                                    /// @src 2:8621:8631  \"amount0Out\"\n                                    fun_safeTransfer(cleaned, value_2, value)\n                                }\n                                /// @src 2:8680:8738  \"if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out)\"\n                                if /** @src 2:8684:8698  \"amount1Out > 0\" */ iszero(iszero(value_1))\n                                /// @src 2:8680:8738  \"if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out)\"\n                                {\n                                    /// @src 2:8727:8737  \"amount1Out\"\n                                    fun_safeTransfer(cleaned_1, value_2, value_1)\n                                }\n                                /// @src 2:8786:8997  \"if (data.length > 0)...\"\n                                if /** @src 2:8790:8805  \"data.length > 0\" */ iszero(iszero(/** @src 2:8790:8801  \"data.length\" */ length))\n                                /// @src 2:8786:8997  \"if (data.length > 0)...\"\n                                {\n                                    /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                                    if iszero(extcodesize(_2))\n                                    {\n                                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                                    let _5 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                    /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                                    mstore(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(226, 0x04347a17))\n                                    mstore(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ add(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:8879:8889  \"msg.sender\" */ caller())\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 36), value)\n                                    mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 68), value_1)\n                                    mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 100), 128)\n                                    mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 132), length)\n                                    calldatacopy(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 164), add(offset, 36), length)\n                                    mstore(add(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ length), 164), 0)\n                                    /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                                    let _6 := call(gas(), _2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0, /** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, add(sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(add(length, 0x1f), not(31))), /** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 164), /** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0)\n                                    /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                                    if iszero(_6)\n                                    {\n                                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                        let pos := mload(64)\n                                        returndatacopy(pos, 0, returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                                    if _6\n                                    {\n                                        finalize_allocation(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0)\n                                        _1 := 0\n                                    }\n                                }\n                                /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _7 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ add(_7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:9056:9060  \"this\" */ address())\n                                /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _8 := staticcall(gas(), cleaned, _7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 36, /** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ _7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_8)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_1 := mload(64)\n                                    returndatacopy(pos_1, _1, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_4 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                if _8\n                                {\n                                    let _9 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _9 := returndatasize() }\n                                    finalize_allocation(_7, _9)\n                                    let value0 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ add(_7, _9), _7), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0 := mload(/** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ _7)\n                                    expr_4 := value0\n                                }\n                                /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _10 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ add(_10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:9056:9060  \"this\" */ address())\n                                /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _11 := staticcall(gas(), cleaned_1, _10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 36, /** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ _10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_11)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_2 := mload(64)\n                                    returndatacopy(pos_2, _1, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_5 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                if _11\n                                {\n                                    let _12 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _12 := returndatasize() }\n                                    finalize_allocation(_10, _12)\n                                    let value0_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ add(_10, _12), _10), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_1 := mload(/** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ _10)\n                                    expr_5 := value0_1\n                                }\n                                /// @src 2:9164:9197  \"balance0 > _reserve0 - amount0Out\"\n                                let expr_6 := gt(expr_4, /** @src 2:9175:9197  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_4, value))\n                                /// @src 2:9164:9263  \"balance0 > _reserve0 - amount0Out...\"\n                                let expr_7 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:9164:9263  \"balance0 > _reserve0 - amount0Out...\"\n                                switch expr_6\n                                case 0 {\n                                    expr_7 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                }\n                                default /// @src 2:9164:9263  \"balance0 > _reserve0 - amount0Out...\"\n                                {\n                                    expr_7 := /** @src 2:9212:9247  \"balance0 - (_reserve0 - amount0Out)\" */ checked_sub_uint256(expr_4, /** @src 2:9224:9246  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_4, value))\n                                }\n                                /// @src 2:9301:9323  \"_reserve1 - amount1Out\"\n                                let _13 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:9301:9323  \"_reserve1 - amount1Out\" */ expr_component_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                                /// @src 2:9290:9323  \"balance1 > _reserve1 - amount1Out\"\n                                let expr_8 := gt(expr_5, /** @src 2:9301:9323  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_13, value_1))\n                                /// @src 2:9290:9389  \"balance1 > _reserve1 - amount1Out...\"\n                                let expr_9 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:9290:9389  \"balance1 > _reserve1 - amount1Out...\"\n                                switch expr_8\n                                case 0 {\n                                    expr_9 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                }\n                                default /// @src 2:9290:9389  \"balance1 > _reserve1 - amount1Out...\"\n                                {\n                                    expr_9 := /** @src 2:9338:9373  \"balance1 - (_reserve1 - amount1Out)\" */ checked_sub_uint256(expr_5, /** @src 2:9350:9372  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_13, value_1))\n                                }\n                                /// @src 2:9420:9433  \"amount0In > 0\"\n                                let _14 := iszero(expr_7)\n                                /// @src 2:9420:9450  \"amount0In > 0 || amount1In > 0\"\n                                let expr_10 := /** @src 2:9420:9433  \"amount0In > 0\" */ iszero(_14)\n                                /// @src 2:9420:9450  \"amount0In > 0 || amount1In > 0\"\n                                if _14\n                                {\n                                    expr_10 := /** @src 2:9437:9450  \"amount1In > 0\" */ iszero(iszero(expr_9))\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if iszero(expr_10)\n                                {\n                                    let memPtr_3 := mload(64)\n                                    mstore(memPtr_3, shl(229, 4594637))\n                                    mstore(add(memPtr_3, 4), 32)\n                                    mstore(add(memPtr_3, 36), 36)\n                                    mstore(add(memPtr_3, 68), \"UniswapV2: INSUFFICIENT_INPUT_AM\")\n                                    mstore(add(memPtr_3, 100), \"OUNT\")\n                                    revert(memPtr_3, 132)\n                                }\n                                /// @src 2:9636:9654  \"balance0.mul(1000)\"\n                                let expr_11 := fun_mul_19946(expr_4)\n                                /// @src 2:9636:9676  \"balance0.mul(1000).sub(amount0In.mul(3))\"\n                                let expr_12 := fun_sub(expr_11, /** @src 2:9659:9675  \"amount0In.mul(3)\" */ fun_mul_19947(expr_7))\n                                /// @src 2:9714:9732  \"balance1.mul(1000)\"\n                                let expr_13 := fun_mul_19946(expr_5)\n                                /// @src 2:9793:9831  \"balance0Adjusted.mul(balance1Adjusted)\"\n                                let expr_14 := fun_mul(expr_12, /** @src 2:9714:9754  \"balance1.mul(1000).sub(amount1In.mul(3))\" */ fun_sub(expr_13, /** @src 2:9737:9753  \"amount1In.mul(3)\" */ fun_mul_19947(expr_9)))\n                                /// @src 2:9851:9881  \"uint(_reserve0).mul(_reserve1)\"\n                                let expr_15 := fun_mul(_4, _13)\n                                /// @src 2:9851:9896  \"uint(_reserve0).mul(_reserve1).mul(1000 ** 2)\"\n                                let var_z := /** @src -1:-1:-1 */ _1\n                                /// @src 9:503:509  \"uint z\"\n                                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                                let expr_16 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 9:544:549  \"x * y\"\n                                let y := /** @src 2:9886:9895  \"1000 ** 2\" */ 0x0f4240\n                                /// @src 9:544:549  \"x * y\"\n                                let product := /** @src -1:-1:-1 */ 0\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                product := mul(/** @src 9:544:549  \"x * y\" */ expr_15, /** @src 2:9886:9895  \"1000 ** 2\" */ y)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ expr_15), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:9886:9895  \"1000 ** 2\" */ y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ expr_15))))\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 9:540:549  \"z = x * y\"\n                                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                                /// @src 9:539:554  \"(z = x * y) / y\"\n                                let r := /** @src -1:-1:-1 */ _1\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if _1\n                                {\n                                    mstore(_1, shl(224, 0x4e487b71))\n                                    mstore(4, 0x12)\n                                    revert(_1, 36)\n                                }\n                                r := div(product, /** @src 2:9886:9895  \"1000 ** 2\" */ y)\n                                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                                expr_16 := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, expr_15)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if iszero(expr_16)\n                                {\n                                    let memPtr_4 := mload(64)\n                                    mstore(memPtr_4, shl(229, 4594637))\n                                    mstore(add(memPtr_4, 4), 32)\n                                    mstore(add(memPtr_4, 36), 20)\n                                    mstore(add(memPtr_4, 68), \"ds-math-mul-overflow\")\n                                    revert(memPtr_4, 100)\n                                }\n                                if /** @src 2:9793:9896  \"balance0Adjusted.mul(balance1Adjusted) >=...\" */ lt(expr_14, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product)\n                                {\n                                    let memPtr_5 := mload(64)\n                                    mstore(memPtr_5, shl(229, 4594637))\n                                    mstore(add(memPtr_5, 4), 32)\n                                    mstore(add(memPtr_5, 36), /** @src 2:1303:1311  \"unlocked\" */ 0x0c)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(add(memPtr_5, 68), \"UniswapV2: K\")\n                                    revert(memPtr_5, 100)\n                                }\n                                /// @src 2:10002:10011  \"_reserve1\"\n                                fun_update(expr_4, expr_5, expr_component, expr_component_1)\n                                /// @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\"\n                                let _15 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                mstore(_15, expr_7)\n                                mstore(add(_15, 32), expr_9)\n                                mstore(add(_15, 64), value)\n                                mstore(add(_15, 96), value_1)\n                                /// @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\"\n                                log3(_15, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 128, /** @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\" */ 0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822, /** @src 2:10032:10042  \"msg.sender\" */ caller(), /** @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\" */ _2)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 1)\n                                return(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            case /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x06fdde03 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let size := /** @src -1:-1:-1 */ _1\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _16 := _1\n                                _16 := /** @src -1:-1:-1 */ _1\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                size := 64\n                                let memPtr_6 := mload(64)\n                                finalize_allocation(memPtr_6, 64)\n                                mstore(memPtr_6, 10)\n                                mstore(add(memPtr_6, 32), \"Uniswap V2\")\n                                let memPos := mload(64)\n                                return(memPos, sub(abi_encode_string(memPos, memPtr_6), memPos))\n                            }\n                            case 0x0902f1ac {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let ret, ret_1, ret_2 := fun_getReserves()\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, and(ret, 0xffffffffffffffffffffffffffff))\n                                mstore(add(memPos_1, 32), and(ret_1, 0xffffffffffffffffffffffffffff))\n                                mstore(add(memPos_1, 64), and(ret_2, 0xffffffff))\n                                return(memPos_1, 96)\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0_2 := abi_decode_address()\n                                /// @src 0:2393:2398  \"value\"\n                                fun_approve(/** @src 0:2372:2382  \"msg.sender\" */ caller(), /** @src 0:2393:2398  \"value\" */ value0_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ calldataload(36))\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x0dfe1681 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_3 := and(sload(/** @src 2:735:756  \"address public token0\" */ 6), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, value_3)\n                                return(memPos_3, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _17 := sload(_1)\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, _17)\n                                return(memPos_4, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                                let value0_3 := abi_decode_address()\n                                let value1 := abi_decode_address_19954()\n                                let value_4 := calldataload(68)\n                                let _18 := and(value0_3, sub(shl(160, 1), 1))\n                                mstore(_1, _18)\n                                mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let dataSlot := keccak256(_1, 64)\n                                /// @src 0:2703:2730  \"allowance[from][msg.sender]\"\n                                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                                /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                                if /** @src 0:2703:2751  \"allowance[from][msg.sender] != type(uint256).max\" */ iszero(eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot_1), /** @src 0:2734:2751  \"type(uint256).max\" */ not(0)))\n                                /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(_1, _18)\n                                    mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let dataSlot_2 := keccak256(_1, 64)\n                                    /// @src 0:2797:2824  \"allowance[from][msg.sender]\"\n                                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                                    mstore(0x20, /** @src 0:2797:2812  \"allowance[from]\" */ dataSlot_2)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                                    /// @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\"\n                                    let expr_17 := fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 0:2797:2824  \"allowance[from][msg.sender]\" */ dataSlot_3), /** @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\" */ value_4)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(_1, _18)\n                                    mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let dataSlot_4 := keccak256(_1, 64)\n                                    /// @src 0:2767:2794  \"allowance[from][msg.sender]\"\n                                    let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                                    mstore(0x20, /** @src 0:2767:2782  \"allowance[from]\" */ dataSlot_4)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                                    sstore(/** @src 0:2767:2794  \"allowance[from][msg.sender]\" */ dataSlot_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ expr_17)\n                                }\n                                /// @src 0:2905:2910  \"value\"\n                                fun_transfer(value0_3, value1, value_4)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, 1)\n                                return(memPos_5, 32)\n                            }\n                            case 0x30adf81f {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                return(memPos_6, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, /** @src 0:381:383  \"18\" */ 0x12)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                return(memPos_7, 32)\n                            }\n                            case 0x3644e515 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _19 := sload(/** @src 0:533:564  \"bytes32 public DOMAIN_SEPARATOR\" */ 3)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, _19)\n                                return(memPos_8, 32)\n                            }\n                            case 0x485cc955 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0_4 := abi_decode_address()\n                                let value1_1 := abi_decode_address_19954()\n                                if iszero(/** @src 2:2652:2673  \"msg.sender == factory\" */ eq(/** @src 2:2652:2662  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(sload(/** @src 2:2666:2673  \"factory\" */ 0x05), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))))\n                                {\n                                    let memPtr_7 := mload(64)\n                                    mstore(memPtr_7, shl(229, 4594637))\n                                    mstore(add(memPtr_7, 4), 32)\n                                    mstore(add(memPtr_7, 36), 20)\n                                    mstore(add(memPtr_7, 68), \"UniswapV2: FORBIDDEN\")\n                                    revert(memPtr_7, 100)\n                                }\n                                sstore(/** @src 2:2728:2744  \"token0 = _token0\" */ 0x06, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ or(and(sload(/** @src 2:2728:2744  \"token0 = _token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value0_4, sub(shl(160, 1), 1))))\n                                sstore(/** @src 2:2754:2770  \"token1 = _token1\" */ 0x07, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ or(and(sload(/** @src 2:2754:2770  \"token1 = _token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value1_1, sub(shl(160, 1), 1))))\n                                return(_1, _1)\n                            }\n                            case 0x5909c0d5 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _20 := sload(/** @src 2:1058:1090  \"uint public price0CumulativeLast\" */ 9)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, _20)\n                                return(memPos_9, 32)\n                            }\n                            case 0x5a3d5493 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _21 := sload(/** @src 2:1096:1128  \"uint public price1CumulativeLast\" */ 10)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, _21)\n                                return(memPos_10, 32)\n                            }\n                            case 0x6a627842 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                let value0_5 := abi_decode_address()\n                                /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                                require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                                /// @src 2:4893:6157  \"function mint(address to) external lock returns (uint liquidity) {...\"\n                                let var_liquidity := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:5010:5023  \"getReserves()\"\n                                let expr_component_3, expr_component_4, expr_component_5 := fun_getReserves()\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let cleaned_2 := and(sload(/** @src 2:5071:5077  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                let _22 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                mstore(_22, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ add(_22, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:5097:5101  \"this\" */ address())\n                                /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                let _23 := staticcall(gas(), cleaned_2, _22, 36, _22, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                if iszero(_23)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_3 := mload(64)\n                                    returndatacopy(pos_3, _1, returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                let expr_18 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                if _23\n                                {\n                                    let _24 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _24 := returndatasize() }\n                                    finalize_allocation(_22, _24)\n                                    let value0_6 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ add(_22, _24), _22), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_6 := mload(/** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ _22)\n                                    expr_18 := value0_6\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let cleaned_3 := and(sload(/** @src 2:5136:5142  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                let _25 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                mstore(_25, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ add(_25, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:5097:5101  \"this\" */ address())\n                                /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                let _26 := staticcall(gas(), cleaned_3, _25, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36, /** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ _25, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                if iszero(_26)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_4 := mload(64)\n                                    returndatacopy(pos_4, _1, returndatasize())\n                                    revert(pos_4, returndatasize())\n                                }\n                                /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                let expr_19 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                if _26\n                                {\n                                    let _27 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _27 := returndatasize() }\n                                    finalize_allocation(_25, _27)\n                                    let value0_7 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ add(_25, _27), _25), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_7 := mload(/** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ _25)\n                                    expr_19 := value0_7\n                                }\n                                /// @src 2:5193:5216  \"balance0.sub(_reserve0)\"\n                                let _28 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:5193:5216  \"balance0.sub(_reserve0)\" */ expr_component_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                                /// @src 2:5193:5216  \"balance0.sub(_reserve0)\"\n                                let expr_20 := fun_sub(expr_18, _28)\n                                /// @src 2:5241:5264  \"balance1.sub(_reserve1)\"\n                                let _29 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:5241:5264  \"balance1.sub(_reserve1)\" */ expr_component_4, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                                /// @src 2:5241:5264  \"balance1.sub(_reserve1)\"\n                                let expr_21 := fun_sub(expr_19, _29)\n                                /// @src 2:5287:5317  \"_mintFee(_reserve0, _reserve1)\"\n                                let expr_22 := fun_mintFee(expr_component_3, expr_component_4)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _30 := sload(_1)\n                                /// @src 2:5446:5840  \"if (_totalSupply == 0) {...\"\n                                switch /** @src 2:5450:5467  \"_totalSupply == 0\" */ iszero(_30)\n                                case /** @src 2:5446:5840  \"if (_totalSupply == 0) {...\" */ 0 {\n                                    /// @src 2:5723:5760  \"amount0.mul(_totalSupply) / _reserve0\"\n                                    let expr_23 := checked_div_uint256(/** @src 2:5723:5748  \"amount0.mul(_totalSupply)\" */ fun_mul(expr_20, _30), /** @src 2:5723:5760  \"amount0.mul(_totalSupply) / _reserve0\" */ _28)\n                                    /// @src 2:5778:5815  \"amount1.mul(_totalSupply) / _reserve1\"\n                                    let _31 := checked_div_uint256(/** @src 2:5778:5803  \"amount1.mul(_totalSupply)\" */ fun_mul(expr_21, _30), /** @src 2:5778:5815  \"amount1.mul(_totalSupply) / _reserve1\" */ _29)\n                                    /// @src 8:203:216  \"x < y ? x : y\"\n                                    let expr_24 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                    /// @src 8:203:216  \"x < y ? x : y\"\n                                    switch /** @src 8:203:208  \"x < y\" */ lt(expr_23, _31)\n                                    case /** @src 8:203:216  \"x < y ? x : y\" */ 0 { expr_24 := _31 }\n                                    default { expr_24 := expr_23 }\n                                    /// @src 2:5685:5829  \"liquidity = Math.min(...\"\n                                    var_liquidity := expr_24\n                                }\n                                default /// @src 2:5446:5840  \"if (_totalSupply == 0) {...\"\n                                {\n                                    /// @src 2:5495:5526  \"Math.sqrt(amount0.mul(amount1))\"\n                                    let expr_25 := fun_sqrt(/** @src 2:5505:5525  \"amount0.mul(amount1)\" */ fun_mul(expr_20, expr_21))\n                                    /// @src 2:5495:5549  \"Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY)\"\n                                    let var_z_1 := /** @src -1:-1:-1 */ _1\n                                    /// @src 9:401:406  \"x - y\"\n                                    let diff := /** @src -1:-1:-1 */ _1\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    diff := add(expr_25, not(999))\n                                    let _32 := gt(diff, expr_25)\n                                    if _32\n                                    {\n                                        mstore(_1, shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(_1, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                                    }\n                                    /// @src 9:397:406  \"z = x - y\"\n                                    var_z_1 := diff\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    _32 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:5483:5549  \"liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY)\"\n                                    var_liquidity := diff\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let _33 := sload(_1)\n                                    /// @src 0:1553:1572  \"totalSupply + value\"\n                                    let sum := /** @src -1:-1:-1 */ _1\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    sum := add(_33, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if gt(_33, sum)\n                                    {\n                                        mstore(_1, shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(_1, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    sstore(_1, sum)\n                                    mstore(_1, _1)\n                                    mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let _34 := sload(keccak256(_1, 64))\n                                    /// @src 0:1598:1619  \"balanceOf[to] + value\"\n                                    let sum_1 := /** @src -1:-1:-1 */ _1\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    sum_1 := add(_34, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if gt(_34, sum_1)\n                                    {\n                                        mstore(_1, shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(_1, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    mstore(_1, _1)\n                                    mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    sstore(keccak256(_1, 64), sum_1)\n                                    /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                                    let _35 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                    mstore(_35, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                                    /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                                    log3(_35, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1, _1)\n                                }\n                                if /** @src 2:5857:5870  \"liquidity > 0\" */ iszero(var_liquidity)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                {\n                                    let memPtr_8 := mload(64)\n                                    mstore(memPtr_8, shl(229, 4594637))\n                                    mstore(add(memPtr_8, 4), 32)\n                                    mstore(add(memPtr_8, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 40)\n                                    mstore(add(memPtr_8, 68), \"UniswapV2: INSUFFICIENT_LIQUIDIT\")\n                                    mstore(add(memPtr_8, 100), \"Y_MINTED\")\n                                    revert(memPtr_8, 132)\n                                }\n                                /// @src 2:5935:5944  \"liquidity\"\n                                fun_mint(value0_5, var_liquidity)\n                                /// @src 2:5994:6003  \"_reserve1\"\n                                fun_update(expr_18, expr_19, expr_component_3, expr_component_4)\n                                /// @src 2:6014:6061  \"if (feeOn) kLast = uint(reserve0).mul(reserve1)\"\n                                if expr_22\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let _36 := sload(/** @src 2:6038:6046  \"reserve0\" */ 0x08)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    sstore(/** @src 2:6025:6061  \"kLast = uint(reserve0).mul(reserve1)\" */ 0x0b, /** @src 2:6033:6061  \"uint(reserve0).mul(reserve1)\" */ fun_mul(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_36, 0xffffffffffffffffffffffffffff), and(shr(112, _36), 0xffffffffffffffffffffffffffff)))\n                                }\n                                /// @src 2:6116:6150  \"Mint(msg.sender, amount0, amount1)\"\n                                let _37 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                mstore(_37, expr_20)\n                                mstore(add(_37, 32), expr_21)\n                                /// @src 2:6116:6150  \"Mint(msg.sender, amount0, amount1)\"\n                                log2(_37, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64, /** @src 2:6116:6150  \"Mint(msg.sender, amount0, amount1)\" */ 0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f, /** @src 2:6121:6131  \"msg.sender\" */ caller())\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, var_liquidity)\n                                return(memPos_11, 32)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 0:418:459  \"mapping(address => uint) public balanceOf\" */ 1)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _38 := sload(keccak256(_1, 64))\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, _38)\n                                return(memPos_12, 32)\n                            }\n                            case 0x7464fc3d {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _39 := sload(/** @src 2:1134:1151  \"uint public kLast\" */ 11)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_13 := mload(64)\n                                mstore(memPos_13, _39)\n                                return(memPos_13, 32)\n                            }\n                            case 0x7ecebe00 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 4)\n                                let _40 := sload(keccak256(_1, 64))\n                                let memPos_14 := mload(64)\n                                mstore(memPos_14, _40)\n                                return(memPos_14, 32)\n                            }\n                            case 0x89afcb44 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                let value0_8 := abi_decode_address()\n                                /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                                require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                                /// @src 2:6409:6422  \"getReserves()\"\n                                let expr_component_6, expr_component_7, expr_component_8 := fun_getReserves()\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let cleaned_4 := and(sload(/** @src 2:6465:6471  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                let cleaned_5 := and(sload(/** @src 2:6514:6520  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _41 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_41, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ add(_41, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _42 := staticcall(gas(), cleaned_4, _41, 36, _41, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_42)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_5 := mload(64)\n                                    returndatacopy(pos_5, _1, returndatasize())\n                                    revert(pos_5, returndatasize())\n                                }\n                                /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_26 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                if _42\n                                {\n                                    let _43 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _43 := returndatasize() }\n                                    finalize_allocation(_41, _43)\n                                    let value0_9 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ add(_41, _43), _41), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_9 := mload(/** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ _41)\n                                    expr_26 := value0_9\n                                }\n                                /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _44 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_44, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ add(_44, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _45 := staticcall(gas(), cleaned_5, _44, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ _44, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_45)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_6 := mload(64)\n                                    returndatacopy(pos_6, _1, returndatasize())\n                                    revert(pos_6, returndatasize())\n                                }\n                                /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_27 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                if _45\n                                {\n                                    let _46 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _46 := returndatasize() }\n                                    finalize_allocation(_44, _46)\n                                    let value0_10 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ add(_44, _46), _44), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_10 := mload(/** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ _44)\n                                    expr_27 := value0_10\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(_1, /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _47 := sload(keccak256(_1, 64))\n                                /// @src 2:6742:6772  \"_mintFee(_reserve0, _reserve1)\"\n                                let expr_28 := fun_mintFee(expr_component_6, expr_component_7)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _48 := sload(_1)\n                                /// @src 2:6911:6949  \"liquidity.mul(balance0) / _totalSupply\"\n                                let expr_29 := checked_div_uint256(/** @src 2:6911:6934  \"liquidity.mul(balance0)\" */ fun_mul(_47, expr_26), /** @src 2:6911:6949  \"liquidity.mul(balance0) / _totalSupply\" */ _48)\n                                /// @src 2:7017:7055  \"liquidity.mul(balance1) / _totalSupply\"\n                                let expr_30 := checked_div_uint256(/** @src 2:7017:7040  \"liquidity.mul(balance1)\" */ fun_mul(_47, expr_27), /** @src 2:7017:7055  \"liquidity.mul(balance1) / _totalSupply\" */ _48)\n                                /// @src 2:7134:7160  \"amount0 > 0 && amount1 > 0\"\n                                let expr_31 := /** @src 2:7134:7145  \"amount0 > 0\" */ iszero(iszero(expr_29))\n                                /// @src 2:7134:7160  \"amount0 > 0 && amount1 > 0\"\n                                if expr_31\n                                {\n                                    expr_31 := /** @src 2:7149:7160  \"amount1 > 0\" */ iszero(iszero(expr_30))\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if iszero(expr_31)\n                                {\n                                    let memPtr_9 := mload(64)\n                                    mstore(memPtr_9, shl(229, 4594637))\n                                    mstore(add(memPtr_9, 4), 32)\n                                    mstore(add(memPtr_9, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 40)\n                                    mstore(add(memPtr_9, 68), \"UniswapV2: INSUFFICIENT_LIQUIDIT\")\n                                    mstore(add(memPtr_9, 100), \"Y_BURNED\")\n                                    revert(memPtr_9, 132)\n                                }\n                                mstore(_1, /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 0:1756:1782  \"balanceOf[from].sub(value)\"\n                                let _49 := fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(_1, 64)), /** @src 0:1756:1782  \"balanceOf[from].sub(value)\" */ _47)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(_1, /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(keccak256(_1, 64), _49)\n                                sstore(_1, /** @src 0:1806:1828  \"totalSupply.sub(value)\" */ fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(_1), /** @src 0:1806:1828  \"totalSupply.sub(value)\" */ _47))\n                                /// @src 0:1843:1876  \"Transfer(from, address(0), value)\"\n                                let _50 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                mstore(_50, _47)\n                                /// @src 0:1843:1876  \"Transfer(from, address(0), value)\"\n                                log3(_50, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 0:1843:1876  \"Transfer(from, address(0), value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 2:6595:6599  \"this\" */ address(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                                /// @src 2:7304:7311  \"amount0\"\n                                fun_safeTransfer(cleaned_4, value0_8, expr_29)\n                                /// @src 2:7349:7356  \"amount1\"\n                                fun_safeTransfer(cleaned_5, value0_8, expr_30)\n                                /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _51 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_51, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ add(_51, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _52 := staticcall(gas(), cleaned_4, _51, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ _51, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_52)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_7 := mload(64)\n                                    returndatacopy(pos_7, _1, returndatasize())\n                                    revert(pos_7, returndatasize())\n                                }\n                                /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_32 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                if _52\n                                {\n                                    let _53 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _53 := returndatasize() }\n                                    finalize_allocation(_51, _53)\n                                    let value0_11 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ add(_51, _53), _51), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_11 := mload(/** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ _51)\n                                    expr_32 := value0_11\n                                }\n                                /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _54 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_54, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ add(_54, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                                /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _55 := staticcall(gas(), cleaned_5, _54, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ _54, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_55)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_8 := mload(64)\n                                    returndatacopy(pos_8, _1, returndatasize())\n                                    revert(pos_8, returndatasize())\n                                }\n                                /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_33 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                if _55\n                                {\n                                    let _56 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _56 := returndatasize() }\n                                    finalize_allocation(_54, _56)\n                                    let value0_12 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ add(_54, _56), _54), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_12 := mload(/** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ _54)\n                                    expr_33 := value0_12\n                                }\n                                /// @src 2:7529:7538  \"_reserve1\"\n                                fun_update(expr_32, expr_33, expr_component_6, expr_component_7)\n                                /// @src 2:7549:7596  \"if (feeOn) kLast = uint(reserve0).mul(reserve1)\"\n                                if expr_28\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let _57 := sload(/** @src 2:7573:7581  \"reserve0\" */ 0x08)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    sstore(/** @src 2:7560:7596  \"kLast = uint(reserve0).mul(reserve1)\" */ 0x0b, /** @src 2:7568:7596  \"uint(reserve0).mul(reserve1)\" */ fun_mul(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_57, 0xffffffffffffffffffffffffffff), and(shr(112, _57), 0xffffffffffffffffffffffffffff)))\n                                }\n                                /// @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\"\n                                let _58 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                mstore(_58, expr_29)\n                                mstore(add(_58, 32), expr_30)\n                                /// @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\"\n                                log3(_58, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64, /** @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\" */ 0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496, /** @src 2:7656:7666  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\" */ value0_8, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_15 := mload(64)\n                                mstore(memPos_15, expr_29)\n                                mstore(add(memPos_15, 32), expr_30)\n                                return(memPos_15, 64)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let size_1 := /** @src -1:-1:-1 */ _1\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _59 := _1\n                                _59 := /** @src -1:-1:-1 */ _1\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                size_1 := 64\n                                let memPtr_10 := mload(64)\n                                finalize_allocation(memPtr_10, 64)\n                                mstore(memPtr_10, 6)\n                                mstore(add(memPtr_10, 32), \"UNI-V2\")\n                                let memPos_16 := mload(64)\n                                return(memPos_16, sub(abi_encode_string(memPos_16, memPtr_10), memPos_16))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0_13 := abi_decode_address()\n                                /// @src 0:2535:2540  \"value\"\n                                fun_transfer(/** @src 0:2519:2529  \"msg.sender\" */ caller(), /** @src 0:2535:2540  \"value\" */ value0_13, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ calldataload(36))\n                                let memPos_17 := mload(64)\n                                mstore(memPos_17, 1)\n                                return(memPos_17, 32)\n                            }\n                            case 0xba9a7a56 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPos_18 := mload(64)\n                                mstore(memPos_18, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                return(memPos_18, 32)\n                            }\n                            case 0xbc25cf77 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                let value0_14 := abi_decode_address()\n                                /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                                require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                                let cleaned_6 := and(sload(/** @src 2:10214:10220  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                let cleaned_7 := and(sload(/** @src 2:10263:10269  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _60 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_60, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ add(_60, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10392:10396  \"this\" */ address())\n                                /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _61 := staticcall(gas(), cleaned_6, _60, 36, _60, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_61)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_9 := mload(64)\n                                    returndatacopy(pos_9, _1, returndatasize())\n                                    revert(pos_9, returndatasize())\n                                }\n                                /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_34 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                if _61\n                                {\n                                    let _62 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _62 := returndatasize() }\n                                    finalize_allocation(_60, _62)\n                                    let value0_15 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ add(_60, _62), _60), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_15 := mload(/** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ _60)\n                                    expr_34 := value0_15\n                                }\n                                /// @src 2:10358:10412  \"IERC20(_token0).balanceOf(address(this)).sub(reserve0)\"\n                                fun_safeTransfer(cleaned_6, value0_14, fun_sub(expr_34, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(sload(/** @src 2:10403:10411  \"reserve0\" */ 0x08), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                                /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _63 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_63, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ add(_63, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10392:10396  \"this\" */ address())\n                                /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _64 := staticcall(gas(), cleaned_7, _63, /** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ _63, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_64)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_10 := mload(64)\n                                    returndatacopy(pos_10, _1, returndatasize())\n                                    revert(pos_10, returndatasize())\n                                }\n                                /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_35 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                if _64\n                                {\n                                    let _65 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _65 := returndatasize() }\n                                    finalize_allocation(_63, _65)\n                                    let value0_16 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ add(_63, _65), _63), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_16 := mload(/** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ _63)\n                                    expr_35 := value0_16\n                                }\n                                /// @src 2:10496:10550  \"IERC20(_token1).balanceOf(address(this)).sub(reserve1)\"\n                                fun_safeTransfer(cleaned_7, value0_14, fun_sub(expr_35, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(shr(112, sload(/** @src 2:10403:10411  \"reserve0\" */ 0x08)), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                return(_1, _1)\n                            }\n                            case 0xc45a0155 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_5 := and(sload(/** @src 2:707:729  \"address public factory\" */ 5), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                let memPos_19 := mload(64)\n                                mstore(memPos_19, value_5)\n                                return(memPos_19, 32)\n                            }\n                            case 0xd21220a7 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_6 := and(sload(/** @src 2:762:783  \"address public token1\" */ 7), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                let memPos_20 := mload(64)\n                                mstore(memPos_20, value_6)\n                                return(memPos_20, 32)\n                            }\n                            case 0xd505accf {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 224) { revert(_1, _1) }\n                                let value0_17 := abi_decode_address()\n                                let value1_2 := abi_decode_address_19954()\n                                let value_7 := calldataload(68)\n                                let value_8 := calldataload(100)\n                                let value_9 := calldataload(132)\n                                let _66 := and(value_9, 0xff)\n                                if iszero(eq(value_9, _66)) { revert(_1, _1) }\n                                if /** @src 0:3140:3167  \"deadline >= block.timestamp\" */ lt(value_8, /** @src 0:3152:3167  \"block.timestamp\" */ timestamp())\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                {\n                                    let memPtr_11 := mload(64)\n                                    mstore(memPtr_11, shl(229, 4594637))\n                                    mstore(add(memPtr_11, 4), 32)\n                                    mstore(add(memPtr_11, 36), 18)\n                                    mstore(add(memPtr_11, 68), \"UniswapV2: EXPIRED\")\n                                    revert(memPtr_11, 100)\n                                }\n                                let _67 := sload(/** @src 0:3302:3318  \"DOMAIN_SEPARATOR\" */ 0x03)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _68 := and(value0_17, sub(shl(160, 1), 1))\n                                mstore(_1, _68)\n                                mstore(32, 4)\n                                let dataSlot_6 := keccak256(_1, 64)\n                                let _69 := sload(/** @src 0:3539:3554  \"nonces[owner]++\" */ dataSlot_6)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                if eq(_69, /** @src 0:2734:2751  \"type(uint256).max\" */ not(0))\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                {\n                                    mstore(_1, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(_1, 36)\n                                }\n                                sstore(dataSlot_6, add(_69, 1))\n                                /// @src 0:3367:3610  \"abi.encode(...\"\n                                let expr_mpos := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 0:3367:3610  \"abi.encode(...\"\n                                let _70 := add(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                mstore(_70, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64), _68)\n                                mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 96), and(value1_2, sub(shl(160, 1), 1)))\n                                mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 128), value_7)\n                                mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 160), _69)\n                                mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 192), value_8)\n                                /// @src 0:3367:3610  \"abi.encode(...\"\n                                mstore(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 192)\n                                /// @src 0:3367:3610  \"abi.encode(...\"\n                                finalize_allocation(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 224)\n                                /// @src 0:3336:3628  \"keccak256(...\"\n                                let expr_36 := keccak256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _70, mload(/** @src 0:3336:3628  \"keccak256(...\" */ expr_mpos))\n                                /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                                let expr_mpos_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                                let _71 := add(expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                mstore(_71, shl(240, 6401))\n                                mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 34), _67)\n                                mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 66), expr_36)\n                                /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                                mstore(expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 66)\n                                /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                                finalize_allocation(expr_mpos_1, 98)\n                                /// @src 0:3217:3652  \"keccak256(...\"\n                                let expr_37 := keccak256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _71, mload(/** @src 0:3217:3652  \"keccak256(...\" */ expr_mpos_1))\n                                /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                                let _72 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                mstore(_72, expr_37)\n                                mstore(add(_72, 32), _66)\n                                mstore(add(_72, 64), calldataload(164))\n                                mstore(add(_72, 96), calldataload(196))\n                                /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                                mstore(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1, _1)\n                                /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                                if iszero(staticcall(gas(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 1, /** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ _72, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 128, _1, 32))\n                                /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_11 := mload(64)\n                                    returndatacopy(pos_11, _1, returndatasize())\n                                    revert(pos_11, returndatasize())\n                                }\n                                /// @src 0:3746:3776  \"recoveredAddress != address(0)\"\n                                let _73 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ mload(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1), sub(shl(160, 1), 1))\n                                /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                                let expr_38 := /** @src 0:3746:3776  \"recoveredAddress != address(0)\" */ iszero(iszero(_73))\n                                /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                                if expr_38\n                                {\n                                    expr_38 := /** @src 0:3780:3805  \"recoveredAddress == owner\" */ eq(_73, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _68)\n                                }\n                                if iszero(expr_38)\n                                {\n                                    let memPtr_12 := mload(64)\n                                    mstore(memPtr_12, shl(229, 4594637))\n                                    mstore(add(memPtr_12, 4), 32)\n                                    mstore(add(memPtr_12, 36), 28)\n                                    mstore(add(memPtr_12, 68), \"UniswapV2: INVALID_SIGNATURE\")\n                                    revert(memPtr_12, 100)\n                                }\n                                /// @src 0:3894:3899  \"value\"\n                                fun_approve(value0_17, value1_2, value_7)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                return(_1, _1)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0_18 := abi_decode_address()\n                                let value1_3 := abi_decode_address_19954()\n                                mstore(_1, and(value0_18, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ 2)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let dataSlot_7 := keccak256(_1, 64)\n                                /// @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\"\n                                let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ value1_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_7)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                                let _74 := sload(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_8)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let memPos_21 := mload(64)\n                                mstore(memPos_21, _74)\n                                return(memPos_21, 32)\n                            }\n                            case 0xfff6cae9 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                                require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                                let cleaned_8 := and(sload(/** @src 2:10681:10687  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                let _75 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                mstore(_75, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ add(_75, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10707:10711  \"this\" */ address())\n                                /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                let _76 := staticcall(gas(), cleaned_8, _75, 36, _75, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                if iszero(_76)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_12 := mload(64)\n                                    returndatacopy(pos_12, _1, returndatasize())\n                                    revert(pos_12, returndatasize())\n                                }\n                                /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                let expr_39 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                if _76\n                                {\n                                    let _77 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _77 := returndatasize() }\n                                    finalize_allocation(_75, _77)\n                                    let value0_19 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ add(_75, _77), _75), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_19 := mload(/** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ _75)\n                                    expr_39 := value0_19\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let cleaned_9 := and(sload(/** @src 2:10734:10740  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                let _78 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                                /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                mstore(_78, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ add(_78, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10707:10711  \"this\" */ address())\n                                /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                let _79 := staticcall(gas(), cleaned_9, _78, /** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ 36, /** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ _78, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                if iszero(_79)\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let pos_13 := mload(64)\n                                    returndatacopy(pos_13, _1, returndatasize())\n                                    revert(pos_13, returndatasize())\n                                }\n                                /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                let expr_40 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                                /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                if _79\n                                {\n                                    let _80 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                                    /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                                    if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _80 := returndatasize() }\n                                    finalize_allocation(_78, _80)\n                                    let value0_20 := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if slt(sub(/** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ add(_78, _80), _78), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                    {\n                                        revert(/** @src -1:-1:-1 */ 0, 0)\n                                    }\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    value0_20 := mload(/** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ _78)\n                                    expr_40 := value0_20\n                                }\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let _81 := sload(/** @src 2:10780:10788  \"reserve0\" */ 0x08)\n                                /// @src 2:10802:10810  \"reserve1\"\n                                fun_update(expr_39, expr_40, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_81, 0xffffffffffffffffffffffffffff), and(shr(112, _81), 0xffffffffffffffffffffffffffff))\n                                sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                return(_1, _1)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address_19954() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        mstore(headStart, 32)\n                        let length := mload(value0)\n                        mstore(add(headStart, 32), length)\n                        mcopy(add(headStart, 64), add(value0, 32), length)\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function require_helper_stringliteral_4cc8(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 17)\n                            mstore(add(memPtr, 68), \"UniswapV2: LOCKED\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 678 @src 2:1406:1679  \"function getReserves()...\"\n                    function fun_getReserves() -> var_reserve0, var_reserve1, var_blockTimestampLast\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := sload(/** @src 2:1584:1592  \"reserve0\" */ 0x08)\n                        /// @src 2:1572:1592  \"_reserve0 = reserve0\"\n                        var_reserve0 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_1, 0xffffffffffffffffffffffffffff)\n                        /// @src 2:1602:1622  \"_reserve1 = reserve1\"\n                        var_reserve1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(shr(112, _1), 0xffffffffffffffffffffffffffff)\n                        /// @src 2:1632:1672  \"_blockTimestampLast = blockTimestampLast\"\n                        var_blockTimestampLast := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shr(224, _1)\n                    }\n                    function checked_div_uint256(x, y) -> r\n                    {\n                        if iszero(y)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(0, 0x24)\n                        }\n                        r := div(x, y)\n                    }\n                    /// @ast-id 721 @src 2:1685:2025  \"function _safeTransfer(address token, address to, uint value) private {...\"\n                    function fun_safeTransfer(var_token, var_to, var_value)\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let size := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        _1 := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        size := 64\n                        let memPtr := mload(size)\n                        finalize_allocation(memPtr, size)\n                        mstore(memPtr, 25)\n                        let _2 := add(memPtr, 32)\n                        mstore(_2, \"transfer(address,uint256)\")\n                        let converted := and(/** @src 2:654:699  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ keccak256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _2, 25), shl(224, 0xffffffff))\n                        /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                        let expr_698_mpos := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(size)\n                        /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                        let _3 := add(expr_698_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                        mstore(_3, converted)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ add(expr_698_mpos, 36), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                        mstore(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ add(/** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ expr_698_mpos, /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ 68), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ var_value)\n                        /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                        mstore(expr_698_mpos, /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ 68)\n                        /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                        finalize_allocation(expr_698_mpos, 100)\n                        /// @src 2:1801:1878  \"token.call(...\"\n                        let expr_component := call(gas(), var_token, /** @src -1:-1:-1 */ 0, /** @src 2:1801:1878  \"token.call(...\" */ _3, mload(expr_698_mpos), /** @src -1:-1:-1 */ 0, 0)\n                        /// @src 2:1801:1878  \"token.call(...\"\n                        let data := /** @src -1:-1:-1 */ 0\n                        /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _4 := returndatasize()\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let size_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if gt(_4, 0xffffffffffffffff)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ 36)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            size_1 := add(and(add(_4, 31), not(31)), 32)\n                            let memPtr_1 := mload(size)\n                            finalize_allocation(memPtr_1, size_1)\n                            mstore(memPtr_1, _4)\n                            /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                            data := memPtr_1\n                            returndatacopy(add(memPtr_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32), /** @src -1:-1:-1 */ 0, /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ returndatasize())\n                        }\n                        /// @src 2:1909:1966  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                        let expr := expr_component\n                        if expr_component\n                        {\n                            /// @src 2:1921:1932  \"data.length\"\n                            let expr_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(/** @src 2:1921:1932  \"data.length\" */ data)\n                            /// @src 2:1921:1965  \"data.length == 0 || abi.decode(data, (bool))\"\n                            let expr_2 := /** @src 2:1921:1937  \"data.length == 0\" */ iszero(expr_1)\n                            /// @src 2:1921:1965  \"data.length == 0 || abi.decode(data, (bool))\"\n                            if iszero(expr_2)\n                            {\n                                /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                                if slt(sub(/** @src 2:1941:1965  \"abi.decode(data, (bool))\" */ add(data, expr_1), data), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                                /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                                let value := mload(/** @src 2:1941:1965  \"abi.decode(data, (bool))\" */ add(data, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32))\n                                /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                                if iszero(eq(value, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ iszero(iszero(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ value))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 2:1921:1965  \"data.length == 0 || abi.decode(data, (bool))\"\n                                expr_2 := value\n                            }\n                            /// @src 2:1909:1966  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                            expr := expr_2\n                        }\n                        /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                        if iszero(expr)\n                        {\n                            let memPtr_2 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(size)\n                            /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                            mstore(memPtr_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(229, 4594637))\n                            /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                            mstore(add(memPtr_2, 4), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            mstore(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ add(memPtr_2, /** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ 36), /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ 26)\n                            mstore(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ add(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ memPtr_2, 68), \"UniswapV2: TRANSFER_FAILED\")\n                            revert(memPtr_2, /** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ 100)\n                        }\n                    }\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    function checked_mul_uint256(x, y) -> product\n                    {\n                        product := mul(x, y)\n                        if iszero(or(iszero(x), eq(y, div(product, x))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 2297 @src 9:451:591  \"function mul(uint x, uint y) internal pure returns (uint z) {...\"\n                    function fun_mul_19946(var_x) -> var_z\n                    {\n                        /// @src 9:503:509  \"uint z\"\n                        let var_z_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:503:509  \"uint z\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        let expr := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:544:549  \"x * y\"\n                        let y := /** @src 2:9649:9653  \"1000\" */ 0x03e8\n                        /// @src 9:544:549  \"x * y\"\n                        let product := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        product := mul(/** @src 9:544:549  \"x * y\" */ var_x, /** @src 2:9649:9653  \"1000\" */ y)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ var_x), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:9649:9653  \"1000\" */ y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ var_x))))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 9:540:549  \"z = x * y\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                        /// @src 9:539:554  \"(z = x * y) / y\"\n                        let r := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        var_z_1 := 0\n                        r := div(product, /** @src 2:9649:9653  \"1000\" */ y)\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        expr := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, var_x)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 20)\n                            mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 2297 @src 9:451:591  \"function mul(uint x, uint y) internal pure returns (uint z) {...\"\n                    function fun_mul_19947(var_x) -> var_z\n                    {\n                        /// @src 9:503:509  \"uint z\"\n                        let var_z_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:503:509  \"uint z\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        let expr := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:544:549  \"x * y\"\n                        let product := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        product := mul(/** @src 9:544:549  \"x * y\" */ var_x, /** @src 2:9673:9674  \"3\" */ 0x03)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ var_x), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:9673:9674  \"3\" */ 0x03, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ var_x))))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 9:540:549  \"z = x * y\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                        /// @src 9:539:554  \"(z = x * y) / y\"\n                        let r := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        var_z_1 := 0\n                        r := div(product, /** @src 2:9673:9674  \"3\" */ 0x03)\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        expr := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, var_x)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 20)\n                            mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 2297 @src 9:451:591  \"function mul(uint x, uint y) internal pure returns (uint z) {...\"\n                    function fun_mul(var_x, var_y) -> var_z\n                    {\n                        /// @src 9:503:509  \"uint z\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        let expr := /** @src 9:529:535  \"y == 0\" */ iszero(var_y)\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        if iszero(expr)\n                        {\n                            /// @src 9:540:549  \"z = x * y\"\n                            var_z := /** @src 9:544:549  \"x * y\" */ checked_mul_uint256(var_x, var_y)\n                            /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                            expr := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(/** @src 9:539:554  \"(z = x * y) / y\" */ checked_div_uint256(var_z, var_y), /** @src 9:539:559  \"(z = x * y) / y == x\" */ var_x)\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 20)\n                            mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    /// @ast-id 2269 @src 9:318:445  \"function sub(uint x, uint y) internal pure returns (uint z) {...\"\n                    function fun_sub(var_x, var_y) -> var_z\n                    {\n                        /// @src 9:397:406  \"z = x - y\"\n                        var_z := /** @src 9:401:406  \"x - y\" */ checked_sub_uint256(var_x, var_y)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if /** @src 9:396:412  \"(z = x - y) <= x\" */ gt(var_z, var_x)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 21)\n                            mstore(add(memPtr, 68), \"ds-math-sub-underflow\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 907 @src 2:2859:3856  \"function _update(...\"\n                    function fun_update(var_balance0, var_balance1, var_reserve0, var_reserve1)\n                    {\n                        /// @src 2:3021:3083  \"balance0 <= type(uint112).max && balance1 <= type(uint112).max\"\n                        let expr := /** @src 2:3021:3050  \"balance0 <= type(uint112).max\" */ iszero(gt(var_balance0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff))\n                        /// @src 2:3021:3083  \"balance0 <= type(uint112).max && balance1 <= type(uint112).max\"\n                        if expr\n                        {\n                            expr := /** @src 2:3054:3083  \"balance1 <= type(uint112).max\" */ iszero(gt(var_balance1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff))\n                        }\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 19)\n                            mstore(add(memPtr, 68), \"UniswapV2: OVERFLOW\")\n                            revert(memPtr, 100)\n                        }\n                        let diff := sub(and(/** @src 2:3169:3184  \"block.timestamp\" */ timestamp(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffff), shr(224, sload(/** @src 2:3243:3261  \"blockTimestampLast\" */ 0x08)))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if gt(diff, 0xffffffff)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                        }\n                        let _1 := and(/** @src 2:3298:3313  \"timeElapsed > 0\" */ diff, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffff)\n                        /// @src 2:3298:3331  \"timeElapsed > 0 && _reserve0 != 0\"\n                        let expr_1 := /** @src 2:3298:3313  \"timeElapsed > 0\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1))\n                        /// @src 2:3298:3331  \"timeElapsed > 0 && _reserve0 != 0\"\n                        if expr_1\n                        {\n                            expr_1 := /** @src 2:3317:3331  \"_reserve0 != 0\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3317:3331  \"_reserve0 != 0\" */ var_reserve0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                        }\n                        /// @src 2:3298:3349  \"timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0\"\n                        let expr_2 := expr_1\n                        if expr_1\n                        {\n                            expr_2 := /** @src 2:3335:3349  \"_reserve1 != 0\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3335:3349  \"_reserve1 != 0\" */ var_reserve1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                        }\n                        /// @src 2:3294:3690  \"if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {...\"\n                        if expr_2\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sstore(/** @src 2:3425:3545  \"price0CumulativeLast +=...\" */ 0x09, checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:3425:3545  \"price0CumulativeLast +=...\" */ 0x09), /** @src 2:3465:3545  \"uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *...\" */ checked_mul_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3470:3514  \"UQ112x112.encode(_reserve1).uqdiv(_reserve0)\" */ fun_uqdiv(/** @src 2:3470:3497  \"UQ112x112.encode(_reserve1)\" */ fun_encode(var_reserve1), /** @src 2:3470:3514  \"UQ112x112.encode(_reserve1).uqdiv(_reserve0)\" */ var_reserve0), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(224, 1), 1)), /** @src 2:3465:3545  \"uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *...\" */ _1)))\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sstore(/** @src 2:3559:3679  \"price1CumulativeLast +=...\" */ 0x0a, checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:3559:3679  \"price1CumulativeLast +=...\" */ 0x0a), /** @src 2:3599:3679  \"uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *...\" */ checked_mul_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3604:3648  \"UQ112x112.encode(_reserve0).uqdiv(_reserve1)\" */ fun_uqdiv(/** @src 2:3604:3631  \"UQ112x112.encode(_reserve0)\" */ fun_encode(var_reserve0), /** @src 2:3604:3648  \"UQ112x112.encode(_reserve0).uqdiv(_reserve1)\" */ var_reserve1), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(224, 1), 1)), /** @src 2:3599:3679  \"uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *...\" */ _1)))\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _2 := and(/** @src 2:3710:3727  \"uint112(balance0)\" */ var_balance0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        let result := or(or(and(shl(112, /** @src 2:3748:3765  \"uint112(balance1)\" */ var_balance1), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(112, 0xffffffffffffffffffffffffffff)), _2), and(shl(224, /** @src 2:3169:3184  \"block.timestamp\" */ timestamp()), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0xffffffff)))\n                        sstore(/** @src 2:3243:3261  \"blockTimestampLast\" */ 0x08, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ result)\n                        /// @src 2:3825:3849  \"Sync(reserve0, reserve1)\"\n                        let _3 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_3, _2)\n                        mstore(add(_3, 32), and(shr(112, result), 0xffffffffffffffffffffffffffff))\n                        /// @src 2:3825:3849  \"Sync(reserve0, reserve1)\"\n                        log1(_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64, /** @src 2:3825:3849  \"Sync(reserve0, reserve1)\" */ 0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1)\n                    }\n                    /// @ast-id 168 @src 0:1889:2055  \"function _approve(address owner, address spender, uint value) private {...\"\n                    function fun_approve(var_owner, var_spender, var_value)\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := and(var_owner, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        mstore(0x20, /** @src 0:1969:1978  \"allowance\" */ 0x02)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                        /// @src 0:1969:1994  \"allowance[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ var_spender, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:1969:1985  \"allowance[owner]\" */ dataSlot)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                        sstore(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ dataSlot_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ var_value)\n                        /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                        let _2 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(0x40)\n                        mstore(_2, var_value)\n                        /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                        log3(_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ var_spender, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                    }\n                    /// @ast-id 206 @src 0:2061:2277  \"function _transfer(address from, address to, uint value) private {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := and(var_from, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                        /// @src 0:2154:2180  \"balanceOf[from].sub(value)\"\n                        let _2 := fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:2154:2180  \"balanceOf[from].sub(value)\" */ var_value)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40), _2)\n                        let _3 := and(var_to, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _3)\n                        mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                        /// @src 0:2206:2230  \"balanceOf[to].add(value)\"\n                        let _4 := fun_add(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:2206:2230  \"balanceOf[to].add(value)\" */ var_value)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _3)\n                        mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40), _4)\n                        /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                        let _5 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(0x40)\n                        mstore(_5, var_value)\n                        /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                        log3(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:2245:2270  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n                    }\n                    /// @ast-id 1015 @src 2:3943:4784  \"function _mintFee(...\"\n                    function fun_mintFee(var_reserve0, var__reserve1) -> var_feeOn\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := sload(/** @src 2:4094:4101  \"factory\" */ 0x05)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let cleaned := /** @src -1:-1:-1 */ 0\n                        /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                        let _2 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                        mstore(_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(227, 3133387))\n                        /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                        let _3 := staticcall(gas(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_1, sub(shl(160, 1), 1)), /** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ _2, 4, _2, 32)\n                        if iszero(_3)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                        if _3\n                        {\n                            let _4 := 32\n                            if gt(32, returndatasize()) { _4 := returndatasize() }\n                            finalize_allocation(_2, _4)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ add(_2, _4), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _2), /** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ 32)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let value := mload(_2)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                            expr := value\n                        }\n                        /// @src 2:4120:4147  \"feeOn = feeTo != address(0)\"\n                        var_feeOn := /** @src 2:4128:4147  \"feeTo != address(0)\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:4128:4147  \"feeTo != address(0)\" */ expr, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))))\n                        let _5 := sload(/** @src 2:4171:4176  \"kLast\" */ 0x0b)\n                        /// @src 2:4201:4778  \"if (feeOn) {...\"\n                        switch var_feeOn\n                        case 0 {\n                            /// @src 2:4727:4778  \"if (_kLast != 0) {...\"\n                            if /** @src 2:4731:4742  \"_kLast != 0\" */ iszero(iszero(_5))\n                            /// @src 2:4727:4778  \"if (_kLast != 0) {...\"\n                            {\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                sstore(/** @src 2:4171:4176  \"kLast\" */ 0x0b, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        default /// @src 2:4201:4778  \"if (feeOn) {...\"\n                        {\n                            /// @src 2:4226:4711  \"if (_kLast != 0) {...\"\n                            if /** @src 2:4230:4241  \"_kLast != 0\" */ iszero(iszero(_5))\n                            /// @src 2:4226:4711  \"if (_kLast != 0) {...\"\n                            {\n                                /// @src 2:4274:4315  \"Math.sqrt(uint(_reserve0).mul(_reserve1))\"\n                                let expr_1 := fun_sqrt(/** @src 2:4284:4314  \"uint(_reserve0).mul(_reserve1)\" */ fun_mul(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:4284:4299  \"uint(_reserve0)\" */ var_reserve0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff), and(/** @src 2:4284:4314  \"uint(_reserve0).mul(_reserve1)\" */ var__reserve1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                                /// @src 2:4350:4367  \"Math.sqrt(_kLast)\"\n                                let expr_2 := fun_sqrt(_5)\n                                /// @src 2:4385:4697  \"if (rootK > rootKLast) {...\"\n                                if /** @src 2:4389:4406  \"rootK > rootKLast\" */ gt(expr_1, expr_2)\n                                /// @src 2:4385:4697  \"if (rootK > rootKLast) {...\"\n                                {\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    let _6 := sload(/** @src -1:-1:-1 */ 0)\n                                    /// @src 2:4447:4484  \"totalSupply.mul(rootK.sub(rootKLast))\"\n                                    let expr_3 := fun_mul(_6, /** @src 2:4463:4483  \"rootK.sub(rootKLast)\" */ fun_sub(expr_1, expr_2))\n                                    /// @src 2:4525:4537  \"rootK.mul(5)\"\n                                    let var_z := /** @src -1:-1:-1 */ 0\n                                    /// @src 9:503:509  \"uint z\"\n                                    var_z := /** @src -1:-1:-1 */ 0\n                                    /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                                    let expr_4 := /** @src -1:-1:-1 */ 0\n                                    /// @src 9:544:549  \"x * y\"\n                                    let product := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    product := mul(/** @src 9:544:549  \"x * y\" */ expr_1, /** @src 2:4094:4101  \"factory\" */ 0x05)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ expr_1), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:4094:4101  \"factory\" */ 0x05, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ expr_1))))\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                                    }\n                                    /// @src 9:540:549  \"z = x * y\"\n                                    var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                                    /// @src 9:539:554  \"(z = x * y) / y\"\n                                    let r := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    cleaned := /** @src -1:-1:-1 */ 0\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    r := div(product, /** @src 2:4094:4101  \"factory\" */ 0x05)\n                                    /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                                    expr_4 := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, expr_1)\n                                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                    if iszero(expr_4)\n                                    {\n                                        let memPtr := mload(64)\n                                        mstore(memPtr, shl(229, 4594637))\n                                        mstore(add(memPtr, /** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ 4), 32)\n                                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                        mstore(add(memPtr, 36), 20)\n                                        mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                                        revert(memPtr, 100)\n                                    }\n                                    /// @src 2:4591:4614  \"numerator / denominator\"\n                                    let expr_5 := checked_div_uint256(expr_3, /** @src 2:4525:4552  \"rootK.mul(5).add(rootKLast)\" */ fun_add(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product, /** @src 2:4525:4552  \"rootK.mul(5).add(rootKLast)\" */ expr_2))\n                                    /// @src 2:4636:4678  \"if (liquidity > 0) _mint(feeTo, liquidity)\"\n                                    if /** @src 2:4640:4653  \"liquidity > 0\" */ iszero(iszero(expr_5))\n                                    /// @src 2:4636:4678  \"if (liquidity > 0) _mint(feeTo, liquidity)\"\n                                    {\n                                        /// @src 2:4668:4677  \"liquidity\"\n                                        fun_mint(expr, expr_5)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    /// @ast-id 2222 @src 8:338:630  \"function sqrt(uint y) internal pure returns (uint z) {...\"\n                    function fun_sqrt(var_y) -> var_z\n                    {\n                        /// @src 8:383:389  \"uint z\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                        /// @src 8:401:624  \"if (y > 3) {...\"\n                        switch /** @src 8:405:410  \"y > 3\" */ gt(var_y, /** @src 8:409:410  \"3\" */ 0x03)\n                        case /** @src 8:401:624  \"if (y > 3) {...\" */ 0 {\n                            /// @src 8:582:624  \"if (y != 0) {...\"\n                            if /** @src 8:586:592  \"y != 0\" */ iszero(iszero(var_y))\n                            /// @src 8:582:624  \"if (y != 0) {...\"\n                            {\n                                /// @src 8:608:613  \"z = 1\"\n                                var_z := /** @src 8:612:613  \"1\" */ 0x01\n                            }\n                        }\n                        default /// @src 8:401:624  \"if (y > 3) {...\"\n                        {\n                            /// @src 8:426:431  \"z = y\"\n                            var_z := var_y\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let r := shr(1, var_y)\n                            let sum := add(r, 1)\n                            if gt(r, sum)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            /// @src 8:445:463  \"uint x = y / 2 + 1\"\n                            let var_x := sum\n                            /// @src 8:477:566  \"while (x < z) {...\"\n                            for { }\n                            /** @src 8:484:489  \"x < z\" */ lt(var_x, var_z)\n                            /// @src 8:477:566  \"while (x < z) {...\"\n                            { }\n                            {\n                                /// @src 8:509:514  \"z = x\"\n                                var_z := var_x\n                                /// @src 8:532:551  \"x = (y / x + x) / 2\"\n                                var_x := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shr(1, /** @src 8:537:546  \"y / x + x\" */ checked_add_uint256(/** @src 8:537:542  \"y / x\" */ checked_div_uint256(var_y, var_x), /** @src 8:537:546  \"y / x + x\" */ var_x))\n                            }\n                        }\n                    }\n                    /// @ast-id 109 @src 0:1481:1672  \"function _mint(address to, uint value) internal {...\"\n                    function fun_mint(var_to, var_value)\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 0:1553:1572  \"totalSupply + value\" */ checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 0:1553:1564  \"totalSupply\" */ 0x00), /** @src 0:1553:1572  \"totalSupply + value\" */ var_value))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := and(var_to, sub(shl(160, 1), 1))\n                        mstore(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        mstore(0x20, /** @src 0:1598:1607  \"balanceOf\" */ 0x01)\n                        /// @src 0:1598:1619  \"balanceOf[to] + value\"\n                        let _2 := checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:1598:1619  \"balanceOf[to] + value\" */ var_value)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        mstore(0x20, /** @src 0:1598:1607  \"balanceOf\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(keccak256(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40), _2)\n                        /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                        let _3 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(0x40)\n                        mstore(_3, var_value)\n                        /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                        log3(_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ _1)\n                    }\n                    /// @ast-id 2322 @src 10:315:433  \"function encode(uint112 y) internal pure returns (uint224 z) {...\"\n                    function fun_encode(var_y) -> var_z\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := and(/** @src 10:390:400  \"uint224(y)\" */ var_y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 10:261:269  \"2 ** 112\"\n                        let _2 := and(shl(112, /** @src 10:390:400  \"uint224(y)\" */ var_y), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(112, 0xffffffffffffffffffffffffffff))\n                        /// @src 10:261:269  \"2 ** 112\"\n                        if iszero(or(iszero(_1), eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(112, 1), /** @src 10:261:269  \"2 ** 112\" */ div(_2, _1))))\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                        }\n                        /// @src 10:386:407  \"z = uint224(y) * Q112\"\n                        var_z := _2\n                    }\n                    /// @ast-id 2341 @src 10:501:607  \"function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {...\"\n                    function fun_uqdiv(var_x, var_y) -> var_z\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _1 := and(/** @src 10:590:600  \"uint224(y)\" */ var_y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        if iszero(_1)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                        }\n                        /// @src 10:582:600  \"z = x / uint224(y)\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(and(var_x, sub(shl(224, 1), 1)), _1)\n                    }\n                    /// @ast-id 2247 @src 9:186:312  \"function add(uint x, uint y) internal pure returns (uint z) {...\"\n                    function fun_add(var_x, var_y) -> var_z\n                    {\n                        /// @src 9:265:274  \"z = x + y\"\n                        var_z := /** @src 9:269:274  \"x + y\" */ checked_add_uint256(var_x, var_y)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if /** @src 9:264:280  \"(z = x + y) >= x\" */ lt(var_z, var_x)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 20)\n                            mstore(add(memPtr, 68), \"ds-math-add-overflow\")\n                            revert(memPtr, 100)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a2646970667358221220dd8adec7652b51138ac8426831f6bf999b34cc8e74bdca12b53cdb69e3b6615764736f6c634300081a0033\"\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207f74b314450a8c8677e041ad1b5f5b3ffb299b5e273ce7da58a97e9150f7195664736f6c634300081a0033\"\n    }\n}\n",
          "hash": "3fba6032a25eceec8d24f472dc0122d523f3c4f64bff412ba584448cb416a16b",
          "factoryDependencies": {
            "b1f4f4091416ef3fb9e7ddd71cc0f68e3b8a3c7d262a942a0fda04538e058503": "contracts/UniswapV2Pair.sol:UniswapV2Pair"
          }
        }
      },
      "contracts/UniswapV2Pair.sol": {
        "UniswapV2Pair": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "_reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "_reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "_blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token1",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniswapV2Pair.sol\":\"UniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x650e75119c6096dd47324f28bf1b68934f16d04449f5683d182d45b37d9e8349\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f92f159daf0829baede379a21e5c6266e53f1b19b34984e0f37cd0c0079ffb2\",\"dweb:/ipfs/QmcM5nuCCgiEBELimmeRuwywb7thLSnUWeQmN9JxnoWxPA\"]},\"contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0xfa5895d1fbf3437cf8ecaef3c09e419eee77e6374a1dbd9c4c846359ff84ae16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb60020a33711a583ab159e0bc6e2dbd891930367dc3cbfb845c31ebf96fa88\",\"dweb:/ipfs/QmfSRYBkt6Gi1EN2DLoXDHKMvahUJDv3JVsmNpgreAv2Rg\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xa35a5e8d25ccd83006ed1896228b451a6b36980e6f95c7e21d0d78a5e7302ef2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3138bf93c9b139decb6a078438675dbfe45aff2520992f76431bfaee8a57a54\",\"dweb:/ipfs/QmPZ1RGQzXVh51sGLkQYZn8pS62yizaCuLVBgX8eAnCfxA\"]},\"contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xfcb4599d13ff6a6f490f0b46c511bcc669d9ff7352b34d2620649248ae33a71c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a63c7c3f8a9769cdf2e2d253638467743bbc4c4e978469bdb43ae0a3829e45f4\",\"dweb:/ipfs/QmaWaLH2mqgL35diCYwbRcHEF29odWf1DBqtpx1Ru92MZQ\"]},\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x1ee410a23a1970896fdbc82047d8a830a0075caaee4ea0899cd6f8a62ab60f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6dba7e23e97d9a2d98410b2107d82d459340826a582e9861f8f9179c2c5d534\",\"dweb:/ipfs/QmNdwjhQetZEXytKnjRiRBwMqgwvcTAyLCiyqScoZvzdLd\"]},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x880188619595a26a6910ed51c0fac0071e7e1d767b8cd6ec851d7647a613c9b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9e53895d85e430896f417a23718c68d46c25441fcdb7e1d10f22dff3e2fd6a\",\"dweb:/ipfs/QmPHCKG86BetisJNubJc8JVwHjKGmsMkPQMZhmJeWDotMs\"]},\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xf6d1c239f6ef53a73589a8fc9a3489886d48164c4e817fc4432d9f2d6fa8d9c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efdb6ee1811b97fd5a96f1020f757fce95415cc47da33b8136ed39e4b103742\",\"dweb:/ipfs/QmWBcC4w3Hb4HoRuqEUse9T3deV5TKbwqPoAAkqXJnNXCT\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b980727960c67aeff9b83b7b760bd2b1e817f5464ddefd00b23fc926ab6cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4edd6ef81d4c39f34f10e8867fe396b44680c9f6025a0c5d0e265d7f6d5b126a\",\"dweb:/ipfs/Qmaod5Jufw7AXq85ZzNdmxRmLFkJGE5TSxtN6PqFon3pL8\"]},\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0xd4f32736df121a249b50aac630ed4f8d7a413da0a018fa1acf5942eabb62e4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8ba8f2ab1b30bcfc863c57a1ffbf3379ca1400e0412ed026d5cdbf8b9a0264\",\"dweb:/ipfs/QmTiuEzjGevdWCue8wpwMwyxAfN3YjfujqN3D6M4SD6BAq\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 632/66224 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 19396\n// Code size = 69896 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20280]\n   117: jump @108 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x302b0\n   126: i32 a0 = a0 + 0\n   128: ecalli 16 // 'set_immutable_data'\n   130: jump @108\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @32\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @32\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 43)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 9 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: t0 = 6, jump @2659\n      : @22 [@dyn 3] (gas: 1)\n   807: ret\n      : @23 (gas: 40)\n   809: sp = sp + 0xffffffffffffffa0\n   812: u64 [sp + 0x58] = ra\n   815: u64 [sp + 0x50] = s0\n   818: s0 = sp + 0x60\n   821: sp = sp & 0xffffffffffffffe0\n   824: t0 = u64 [a0]\n   826: a3 = u64 [a0 + 0x8]\n   829: a4 = u64 [a0 + 0x10]\n   832: a0 = u64 [a0 + 0x18]\n   835: t1 = u64 [a1]\n   837: a2 = u64 [a1 + 0x8]\n   840: a5 = u64 [a1 + 0x10]\n   843: a1 = u64 [a1 + 0x18]\n   846: t2 = reverse a0\n   848: a4 = reverse a4\n   850: a3 = reverse a3\n   852: a0 = reverse t0\n   854: t0 = reverse a1\n   856: a5 = reverse a5\n   858: a2 = reverse a2\n   860: a1 = reverse t1\n   862: u64 [sp + 0x18] = a0\n   865: u64 [sp + 0x10] = a3\n   868: u64 [sp + 0x8] = a4\n   871: u64 [sp] = t2\n   873: u64 [sp + 0x38] = a1\n   876: u64 [sp + 0x30] = a2\n   879: u64 [sp + 0x28] = a5\n   882: u64 [sp + 0x20] = t0\n   885: i32 a1 = sp + 0\n   887: i32 a3 = sp + 0x20\n   890: a2 = 0xffffffffffffffff\n   893: a4 = 0x20\n   896: a0 = 0\n   898: ecalli 17 // 'set_storage'\n   900: sp = s0 + 0xffffffffffffffa0\n   903: ra = u64 [sp + 0x58]\n   906: s0 = u64 [sp + 0x50]\n   909: sp = sp + 0x60\n   912: ret\n      : @24 [@dyn 4] (gas: 1)\n   914: t0 = 10, jump @2646\n      : @25 [@dyn 5] (gas: 10)\n   920: u64 [sp + 0x38] = a4\n   923: u64 [sp + 0x30] = a3\n   926: u64 [sp + 0x28] = a2\n   929: u64 [sp + 0x20] = a1\n   932: i32 a2 = a0 + 0\n   934: i32 a3 = s1 + 0\n   936: i32 a0 = sp + 0x20\n   939: a1 = 0x1\n   942: ecalli 8 // 'deposit_event'\n   944: t0 = 12, jump @2659\n      : @26 [@dyn 6] (gas: 1)\n   950: ret\n      : @27 [@dyn 7] (gas: 1)\n   952: t0 = 16, jump @2646\n      : @28 [@dyn 8] (gas: 27)\n   958: u64 [sp + 0x58] = a4\n   961: u64 [sp + 0x50] = a3\n   964: u64 [sp + 0x48] = a2\n   967: u64 [sp + 0x40] = a1\n   970: a1 = u64 [sp + 0x20]\n   973: a1 = reverse a1\n   975: a2 = u64 [sp + 0x28]\n   978: a2 = reverse a2\n   980: a3 = u64 [sp + 0x30]\n   983: a3 = reverse a3\n   985: a4 = u64 [sp + 0x38]\n   988: a4 = reverse a4\n   990: u64 [sp + 0x78] = a4\n   993: u64 [sp + 0x70] = a3\n   996: u64 [sp + 0x68] = a2\n   999: u64 [sp + 0x60] = a1\n  1002: i32 a2 = a0 + 0\n  1004: i32 a3 = s1 + 0\n  1006: i32 a0 = sp + 0x40\n  1009: a1 = 0x2\n  1012: ecalli 8 // 'deposit_event'\n  1014: sp = s0 + 0xffffffffffffff60\n  1018: ra = u64 [sp + 0x98]\n  1022: s0 = u64 [sp + 0x90]\n  1026: s1 = u64 [sp + 0x88]\n  1030: sp = sp + 0xa0\n  1034: ret\n      : @29 (gas: 33)\n  1036: sp = sp + 0xffffffffffffff20\n  1040: u64 [sp + 0xd8] = ra\n  1044: u64 [sp + 0xd0] = s0\n  1048: u64 [sp + 0xc8] = s1\n  1052: s0 = sp + 0xe0\n  1056: sp = sp & 0xffffffffffffffe0\n  1059: a5 = u64 [a4]\n  1061: u64 [sp + 0x40] = a5\n  1064: a5 = u64 [a4 + 0x8]\n  1067: u64 [sp + 0x48] = a5\n  1070: a5 = u64 [a4 + 0x10]\n  1073: u64 [sp + 0x50] = a5\n  1076: a4 = u64 [a4 + 0x18]\n  1079: u64 [sp + 0x58] = a4\n  1082: t0 = 0x12\n  1085: a4 = u64 [a3]\n  1087: u64 [sp + 0x18] = a4\n  1090: a4 = u64 [a3 + 0x8]\n  1093: u64 [sp + 0x20] = a4\n  1096: a4 = u64 [a3 + 0x10]\n  1099: u64 [sp + 0x28] = a4\n  1102: a3 = u64 [a3 + 0x18]\n  1105: u64 [sp + 0x30] = a3\n  1108: s1 = u64 [a2]\n  1110: a3 = u64 [a2 + 0x8]\n  1113: u64 [sp] = a3\n  1115: a3 = u64 [a2 + 0x10]\n  1118: u64 [sp + 0x8] = a3\n  1121: a2 = u64 [a2 + 0x18]\n  1124: u64 [sp + 0x10] = a2\n  1127: u64 [sp + 0x38] = a1\n  1130: ra = 0x14\n  1133: jump @32\n      : @30 [@dyn 9] (gas: 2)\n  1136: u64 [sp + 0x38] = a1\n  1139: ra = 20, jump @32\n      : @31 [@dyn 10] (gas: 46)\n  1144: a1 = reverse s1\n  1146: u64 [sp + 0x78] = a1\n  1149: a1 = u64 [sp]\n  1151: a1 = reverse a1\n  1153: u64 [sp + 0x70] = a1\n  1156: a1 = u64 [sp + 0x8]\n  1159: a1 = reverse a1\n  1161: u64 [sp + 0x68] = a1\n  1164: a1 = u64 [sp + 0x10]\n  1167: a1 = reverse a1\n  1169: u64 [sp + 0x60] = a1\n  1172: a1 = u64 [sp + 0x18]\n  1175: a1 = reverse a1\n  1177: u64 [sp + 0x98] = a1\n  1181: a1 = u64 [sp + 0x20]\n  1184: a1 = reverse a1\n  1186: u64 [sp + 0x90] = a1\n  1190: a1 = u64 [sp + 0x28]\n  1193: a1 = reverse a1\n  1195: u64 [sp + 0x88] = a1\n  1199: a1 = u64 [sp + 0x30]\n  1202: a1 = reverse a1\n  1204: u64 [sp + 0x80] = a1\n  1208: a1 = u64 [sp + 0x40]\n  1211: a1 = reverse a1\n  1213: u64 [sp + 0xb8] = a1\n  1217: a1 = u64 [sp + 0x48]\n  1220: a1 = reverse a1\n  1222: u64 [sp + 0xb0] = a1\n  1226: a1 = u64 [sp + 0x50]\n  1229: a1 = reverse a1\n  1231: u64 [sp + 0xa8] = a1\n  1235: a1 = u64 [sp + 0x58]\n  1238: a1 = reverse a1\n  1240: u64 [sp + 0xa0] = a1\n  1244: i32 a2 = a0 + 0\n  1246: a3 = i32 [sp + 0x38]\n  1249: i32 a0 = sp + 0x60\n  1252: a1 = 0x3\n  1255: ecalli 8 // 'deposit_event'\n  1257: sp = s0 + 0xffffffffffffff20\n  1261: ra = u64 [sp + 0xd8]\n  1265: s0 = u64 [sp + 0xd0]\n  1269: s1 = u64 [sp + 0xc8]\n  1273: sp = sp + 0xe0\n  1277: ret\n      : @32 (gas: 2)\n  1279: i32 a2 = a0 >> 0x10\n  1282: jump @37 if a2 != 0\n      : @33 (gas: 4)\n  1285: a1 = a1 + a0\n  1288: i32 a1 = a1 + 0x1f\n  1291: a1 = a1 & 0xffffffffffffffe0\n  1294: jump @37 if a1 >u 65536\n      : @34 (gas: 3)\n  1300: a2 = 0x2027c\n  1305: a3 = i32 [0x2027c]\n  1310: jump @36 if a3 >=u a1\n      : @35 (gas: 2)\n  1313: u32 [0x2027c] = a1\n  1318: fallthrough\n      : @36 (gas: 4)\n  1319: a1 = 0x20290\n  1324: i32 a0 = a0 + 0\n  1326: a0 = a0 + a1\n  1329: ret\n      : @37 (gas: 1)\n  1331: trap\n      : @38 (gas: 6)\n  1332: sp = sp + 0xfffffffffffffff0\n  1335: u64 [sp + 0x8] = ra\n  1338: u64 [sp] = s0\n  1340: s0 = a0 & 0x1\n  1343: ecalli 4 // 'call_data_size'\n  1345: fallthrough\n      : @39 (gas: 2)\n  1346: u32 [0x20278] = a0\n  1351: jump @41 if s0 == 0\n      : @40 (gas: 1)\n  1354: ra = 22, jump @42\n      : @41 [@dyn 11] (gas: 18)\n  1358: ra = 0x18\n  1361: sp = sp + 0xfffffffffffffe10\n  1365: u64 [sp + 0x1e8] = ra\n  1369: u64 [sp + 0x1e0] = s0\n  1373: u64 [sp + 0x1d8] = s1\n  1377: s0 = sp + 0x1f0\n  1381: sp = sp + 0xffffffffffffa7b0\n  1385: sp = sp & 0xffffffffffffffe0\n  1388: s1 = sp\n  1390: a2 = s1 + 0x4198\n  1394: u64 [a2 + 1088] = 0\n  1398: u64 [a2 + 1080] = 0\n  1402: u64 [a2 + 1064] = 0x80\n  1408: a0 = 0x40\n  1411: a1 = s1 + 0x45c0\n  1415: u64 [a2 + 1072] = 0\n  1419: ra = 0x7a\n  1422: jump @19\n      : @42 [@dyn 12] (gas: 15)\n  1425: sp = sp + 0xfffffffffffffb20\n  1429: a0 = sp + 0x400\n  1433: u64 [a0 + 0xd8] = ra\n  1437: u64 [a0 + 0xd0] = s0\n  1441: u64 [a0 + 0xc8] = s1\n  1445: s0 = sp + 0x4e0\n  1449: sp = sp & 0xffffffffffffffe0\n  1452: s1 = sp\n  1454: u64 [s1 + 920] = 0\n  1458: u64 [s1 + 912] = 0\n  1462: u64 [s1 + 904] = 0\n  1466: u64 [s1 + 896] = 0x80\n  1472: a0 = 0x40\n  1475: a1 = s1 + 0x380\n  1479: ra = 26, jump @19\n      : @43 [@dyn 13] (gas: 7)\n  1484: u64 [s1 + 952] = 0\n  1488: u64 [s1 + 944] = 0\n  1492: u64 [s1 + 936] = 0\n  1496: u64 [s1 + 928] = 0\n  1500: i32 a0 = s1 + 0x3a0\n  1504: ecalli 18 // 'value_transferred'\n  1506: fallthrough\n      : @44 (gas: 9)\n  1507: a4 = s1 + 0x300\n  1511: a0 = u64 [a4 + 0xb0]\n  1515: a1 = u64 [a4 + 0xb8]\n  1519: a2 = u64 [a4 + 0xa8]\n  1523: a3 = u64 [a4 + 0xa0]\n  1527: a1 = a1 | a2\n  1530: a0 = a0 | a3\n  1533: a0 = a0 | a1\n  1536: jump @105 if a0 != 0\n      : @45 (gas: 3)\n  1540: a0 = s1 + 0x360\n  1544: a1 = 0x40\n  1547: ra = 28, jump @17\n      : @46 [@dyn 14] (gas: 20)\n  1552: a5 = s1 + 0x300\n  1556: a1 = u64 [a5 + 0x78]\n  1559: u64 [s1 + 0x68] = a1\n  1562: a2 = u64 [a5 + 0x70]\n  1565: u64 [s1 + 0x60] = a2\n  1568: a4 = u64 [a5 + 0x68]\n  1571: u64 [s1 + 0x70] = a4\n  1574: a3 = u64 [a5 + 0x60]\n  1577: u64 [s1 + 0x78] = a3\n  1580: u64 [s1 + 824] = 0\n  1584: u64 [s1 + 816] = 0\n  1588: u64 [s1 + 808] = 0\n  1592: u64 [a5 + 32] = 0x40\n  1596: u64 [a5 + 0x58] = a1\n  1599: u64 [a5 + 0x50] = a2\n  1602: u64 [a5 + 0x48] = a4\n  1605: a0 = s1 + 0x340\n  1609: a1 = s1 + 0x320\n  1613: u64 [a5 + 0x40] = a3\n  1616: ra = 30, jump @1919\n      : @47 [@dyn 15] (gas: 1)\n  1622: t0 = 32, jump @2602\n      : @48 [@dyn 16] (gas: 1)\n  1628: jump @104 if a0 != 0\n      : @49 (gas: 7)\n  1632: u64 [s1 + 792] = 0\n  1636: u64 [s1 + 784] = 0\n  1640: u64 [s1 + 776] = 0\n  1644: a1 = s1 + 0x300\n  1648: u64 [s1 + 768] = 0xa\n  1653: a0 = u64 [s1 + 0x78]\n  1656: ra = 34, jump @19\n      : @50 [@dyn 17] (gas: 1)\n  1661: t0 = 36, jump @2589\n      : @51 [@dyn 18] (gas: 1)\n  1667: jump @104 if a1 == 0\n      : @52 (gas: 11)\n  1671: a0 = u64 [s1 + 0x78]\n  1674: i32 a0 = a0 + 0x20\n  1677: a1 = u64 [0x20000]\n  1682: u64 [s1 + 744] = 0\n  1686: u64 [s1 + 736] = 0\n  1690: u64 [s1 + 0x2f8] = a1\n  1694: a2 = 0x5632000000000000\n  1704: a1 = s1 + 0x2e0\n  1708: u64 [s1 + 0x2f0] = a2\n  1712: u64 [s1 + 0x70] = a0\n  1715: ra = 38, jump @19\n      : @53 [@dyn 19] (gas: 3)\n  1720: a0 = s1 + 0x2c0\n  1724: a1 = u64 [s1 + 0x78]\n  1727: ra = 40, jump @17\n      : @54 [@dyn 20] (gas: 6)\n  1732: a4 = s1 + 0x200\n  1736: a0 = u64 [a4 + 0xd8]\n  1740: a3 = u64 [a4 + 0xd0]\n  1744: a2 = u64 [a4 + 0xc8]\n  1748: a1 = u64 [a4 + 0xc0]\n  1752: t0 = 42, jump @2643\n      : @55 [@dyn 21] (gas: 1)\n  1758: jump @104 if a0 != 0\n      : @56 (gas: 3)\n  1762: a0 = u64 [s1 + 0x70]\n  1765: u64 [s1 + 0x78] = a1\n  1768: ra = 44, jump @32\n      : @57 [@dyn 22] (gas: 1)\n  1773: t0 = 46, jump @2622\n      : @58 [@dyn 23] (gas: 13)\n  1779: ecalli 10 // 'hash_keccak_256'\n  1781: a1 = u64 [s1 + 0x70]\n  1784: a0 = u64 [a1 + 0x18]\n  1787: u64 [s1 + 0x58] = a0\n  1790: a0 = u64 [a1 + 0x10]\n  1793: u64 [s1 + 0x50] = a0\n  1796: a0 = u64 [a1 + 0x8]\n  1799: u64 [s1 + 0x48] = a0\n  1802: a0 = u64 [a1]\n  1804: u64 [s1 + 0x40] = a0\n  1807: a0 = s1 + 0x2a0\n  1811: a1 = 0x40\n  1814: ra = 48, jump @17\n      : @59 [@dyn 24] (gas: 20)\n  1819: a5 = s1 + 0x200\n  1823: a0 = u64 [a5 + 0xb8]\n  1827: u64 [s1 + 0x68] = a0\n  1830: a1 = u64 [a5 + 0xb0]\n  1834: u64 [s1 + 0x60] = a1\n  1837: a3 = u64 [a5 + 0xa8]\n  1841: u64 [s1 + 0x70] = a3\n  1844: a2 = u64 [a5 + 0xa0]\n  1848: u64 [s1 + 0x78] = a2\n  1851: u64 [s1 + 632] = 0\n  1855: u64 [s1 + 624] = 0\n  1859: u64 [s1 + 616] = 0\n  1863: u64 [a5 + 96] = 0x40\n  1867: u64 [a5 + 0x98] = a0\n  1871: u64 [a5 + 0x90] = a1\n  1875: u64 [a5 + 0x88] = a3\n  1879: a0 = s1 + 0x280\n  1883: a1 = s1 + 0x260\n  1887: u64 [a5 + 0x80] = a2\n  1891: ra = 50, jump @1919\n      : @60 [@dyn 25] (gas: 1)\n  1897: t0 = 52, jump @2602\n      : @61 [@dyn 26] (gas: 1)\n  1903: jump @104 if a0 != 0\n      : @62 (gas: 7)\n  1907: u64 [s1 + 600] = 0\n  1911: u64 [s1 + 592] = 0\n  1915: u64 [s1 + 584] = 0\n  1919: a1 = s1 + 0x240\n  1923: u64 [s1 + 576] = 0x1\n  1928: a0 = u64 [s1 + 0x78]\n  1931: ra = 54, jump @19\n      : @63 [@dyn 27] (gas: 1)\n  1936: t0 = 56, jump @2589\n      : @64 [@dyn 28] (gas: 1)\n  1942: jump @104 if a1 == 0\n      : @65 (gas: 10)\n  1946: a0 = u64 [s1 + 0x78]\n  1949: i32 a0 = a0 + 0x20\n  1952: u64 [s1 + 560] = 0\n  1956: u64 [s1 + 552] = 0\n  1960: u64 [s1 + 544] = 0\n  1964: a2 = 0x3100000000000000\n  1974: a1 = s1 + 0x220\n  1978: u64 [s1 + 0x238] = a2\n  1982: u64 [s1 + 0x70] = a0\n  1985: ra = 58, jump @19\n      : @66 [@dyn 29] (gas: 3)\n  1990: a0 = s1 + 0x200\n  1994: a1 = u64 [s1 + 0x78]\n  1997: ra = 60, jump @17\n      : @67 [@dyn 30] (gas: 6)\n  2002: a4 = s1 + 0x200\n  2006: a0 = u64 [a4 + 0x18]\n  2009: a3 = u64 [a4 + 0x10]\n  2012: a2 = u64 [a4 + 0x8]\n  2015: a1 = u64 [a4]\n  2017: t0 = 62, jump @2643\n      : @68 [@dyn 31] (gas: 1)\n  2023: jump @104 if a0 != 0\n      : @69 (gas: 3)\n  2027: a0 = u64 [s1 + 0x70]\n  2030: u64 [s1 + 0x78] = a1\n  2033: ra = 64, jump @32\n      : @70 [@dyn 32] (gas: 1)\n  2038: t0 = 66, jump @2622\n      : @71 [@dyn 33] (gas: 13)\n  2044: ecalli 10 // 'hash_keccak_256'\n  2046: a1 = u64 [s1 + 0x70]\n  2049: a0 = u64 [a1 + 0x18]\n  2052: u64 [s1 + 0x38] = a0\n  2055: a0 = u64 [a1 + 0x10]\n  2058: u64 [s1 + 0x30] = a0\n  2061: a0 = u64 [a1 + 0x8]\n  2064: u64 [s1 + 0x28] = a0\n  2067: a0 = u64 [a1]\n  2069: u64 [s1 + 0x20] = a0\n  2072: a0 = s1 + 0x1e0\n  2076: a1 = 0x40\n  2079: ra = 68, jump @17\n      : @72 [@dyn 34] (gas: 20)\n  2084: t0 = u64 [s1 + 0x1e0]\n  2088: t1 = u64 [s1 + 0x1f8]\n  2092: t2 = u64 [s1 + 0x1e8]\n  2096: a5 = u64 [s1 + 0x1f0]\n  2100: a4 = t0 + 0x20\n  2103: a0 = a4 <u t0\n  2106: a1 = t2 + a0\n  2109: a2 = a1 <u t2\n  2112: a2 = a0 if a0 == 0\n  2115: a2 = a2 + a5\n  2118: a0 = a2 <u a5\n  2121: a0 = a0 + t1\n  2124: a3 = a4 | a2\n  2127: a0 = a0 | a1\n  2130: a3 = a3 | a0\n  2133: a3 = a3 >> 0x20\n  2136: a0 = a0 | a2\n  2139: a0 = a0 << 0x20\n  2142: a0 = a0 | a3\n  2145: jump @104 if a0 != 0\n      : @73 (gas: 17)\n  2149: a0 = u64 [0x20008]\n  2154: a3 = s1 + 0x100\n  2158: u64 [a3 + 0xd8] = a0\n  2162: a0 = u64 [0x20010]\n  2167: a1 = u64 [0x20018]\n  2172: a2 = u64 [0x20020]\n  2177: u64 [a3 + 0xd0] = a0\n  2181: u64 [a3 + 0xc8] = a1\n  2185: a1 = s1 + 0x1c0\n  2189: u64 [a3 + 0xc0] = a2\n  2193: u64 [s1 + 0x18] = a4\n  2196: a0 = a4\n  2198: u64 [s1 + 0x78] = t0\n  2201: u64 [s1 + 0x70] = t2\n  2204: u64 [s1 + 0x68] = t1\n  2207: u64 [s1 + 0x60] = a5\n  2210: ra = 70, jump @19\n      : @74 [@dyn 35] (gas: 12)\n  2215: a4 = u64 [s1 + 0x60]\n  2218: a3 = u64 [s1 + 0x70]\n  2221: a1 = u64 [s1 + 0x78]\n  2224: a0 = a1 + 0x40\n  2227: a1 = a0 <u a1\n  2230: a2 = a3 + a1\n  2233: a3 = a2 <u a3\n  2236: a3 = a1 if a1 == 0\n  2239: a3 = a3 + a4\n  2242: a1 = a3 <u a4\n  2245: a4 = u64 [s1 + 0x68]\n  2248: t0 = 72, jump @2562\n      : @75 [@dyn 36] (gas: 1)\n  2254: jump @104 if a1 != 0\n      : @76 (gas: 15)\n  2258: a1 = u64 [s1 + 0x40]\n  2261: a2 = reverse a1\n  2263: a1 = u64 [s1 + 0x48]\n  2266: a1 = reverse a1\n  2268: a3 = u64 [s1 + 0x50]\n  2271: a3 = reverse a3\n  2273: a4 = u64 [s1 + 0x58]\n  2276: a4 = reverse a4\n  2278: a5 = s1 + 0x100\n  2282: u64 [a5 + 0xa0] = a4\n  2286: u64 [a5 + 0xa8] = a3\n  2290: u64 [a5 + 0xb0] = a1\n  2294: a1 = s1 + 0x1a0\n  2298: u64 [a5 + 0xb8] = a2\n  2302: ra = 74, jump @19\n      : @77 [@dyn 37] (gas: 12)\n  2307: a4 = u64 [s1 + 0x60]\n  2310: a3 = u64 [s1 + 0x70]\n  2313: a1 = u64 [s1 + 0x78]\n  2316: a0 = a1 + 0x60\n  2319: a1 = a0 <u a1\n  2322: a2 = a3 + a1\n  2325: a3 = a2 <u a3\n  2328: a3 = a1 if a1 == 0\n  2331: a3 = a3 + a4\n  2334: a1 = a3 <u a4\n  2337: a4 = u64 [s1 + 0x68]\n  2340: t0 = 76, jump @2562\n      : @78 [@dyn 38] (gas: 1)\n  2346: jump @104 if a1 != 0\n      : @79 (gas: 15)\n  2350: a1 = u64 [s1 + 0x20]\n  2353: a2 = reverse a1\n  2355: a1 = u64 [s1 + 0x28]\n  2358: a1 = reverse a1\n  2360: a3 = u64 [s1 + 0x30]\n  2363: a3 = reverse a3\n  2365: a4 = u64 [s1 + 0x38]\n  2368: a4 = reverse a4\n  2370: a5 = s1 + 0x100\n  2374: u64 [a5 + 0x80] = a4\n  2378: u64 [a5 + 0x88] = a3\n  2382: u64 [a5 + 0x90] = a1\n  2386: a1 = s1 + 0x180\n  2390: u64 [a5 + 0x98] = a2\n  2394: ra = 78, jump @19\n      : @80 [@dyn 39] (gas: 4)\n  2399: i32 a0 = s1 + 0x3c0\n  2403: ra = 0x50\n  2406: ecalli 6 // 'chain_id'\n  2408: fallthrough\n      : @81 [@dyn 40] (gas: 12)\n  2409: a4 = u64 [s1 + 0x60]\n  2412: a3 = u64 [s1 + 0x70]\n  2415: a1 = u64 [s1 + 0x78]\n  2418: a0 = a1 + 0x80\n  2422: a1 = a0 <u a1\n  2425: a2 = a3 + a1\n  2428: a3 = a2 <u a3\n  2431: a3 = a1 if a1 == 0\n  2434: a3 = a3 + a4\n  2437: a1 = a3 <u a4\n  2440: a4 = u64 [s1 + 0x68]\n  2443: t0 = 82, jump @2562\n      : @82 [@dyn 41] (gas: 1)\n  2449: jump @104 if a1 != 0\n      : @83 (gas: 12)\n  2453: a5 = s1 + 0x300\n  2457: a2 = u64 [a5 + 0xc0]\n  2461: a1 = u64 [a5 + 0xc8]\n  2465: a3 = u64 [a5 + 0xd0]\n  2469: a4 = u64 [a5 + 0xd8]\n  2473: a5 = s1 + 0x100\n  2477: u64 [a5 + 0x78] = a4\n  2480: u64 [a5 + 0x70] = a3\n  2483: u64 [a5 + 0x68] = a1\n  2486: a1 = s1 + 0x160\n  2490: u64 [a5 + 0x60] = a2\n  2493: ra = 84, jump @19\n      : @84 [@dyn 42] (gas: 7)\n  2498: a0 = 0x30290\n  2503: u64 [s1 + 0x58] = a0\n  2506: i32 a0 = a0 + 0\n  2508: u64 [s1 + 0x50] = a0\n  2511: ra = 0x56\n  2514: ecalli 0 // 'address'\n  2515: fallthrough\n      : @85 [@dyn 43] (gas: 12)\n  2516: a4 = u64 [s1 + 0x60]\n  2519: a3 = u64 [s1 + 0x70]\n  2522: a1 = u64 [s1 + 0x78]\n  2525: a0 = a1 + 0xa0\n  2529: a1 = a0 <u a1\n  2532: a2 = a3 + a1\n  2535: a3 = a2 <u a3\n  2538: a3 = a1 if a1 == 0\n  2541: a3 = a3 + a4\n  2544: a1 = a3 <u a4\n  2547: a4 = u64 [s1 + 0x68]\n  2550: t0 = 88, jump @2562\n      : @86 [@dyn 44] (gas: 1)\n  2556: jump @104 if a1 != 0\n      : @87 (gas: 21)\n  2560: a3 = u64 [s1 + 0x58]\n  2563: a1 = u64 [a3 + 0x8]\n  2566: a2 = i32 [a3 + 0x10]\n  2569: a3 = u64 [a3]\n  2571: a1 = reverse a1\n  2573: a4 = a1 << 0x20\n  2576: a2 = reverse a2\n  2578: a2 = a2 >> 0x20\n  2581: a2 = a2 | a4\n  2584: a1 = a1 >> 0x20\n  2587: a3 = reverse a3\n  2589: a4 = a3 << 0x20\n  2592: a1 = a1 | a4\n  2595: a3 = a3 >> 0x20\n  2598: u64 [s1 + 344] = 0\n  2602: a4 = s1 + 0x100\n  2606: u64 [a4 + 0x50] = a3\n  2609: u64 [a4 + 0x48] = a1\n  2612: a1 = s1 + 0x140\n  2616: u64 [a4 + 0x40] = a2\n  2619: ra = 90, jump @19\n      : @88 [@dyn 45] (gas: 12)\n  2624: a5 = u64 [s1 + 0x60]\n  2627: a4 = u64 [s1 + 0x68]\n  2630: a3 = u64 [s1 + 0x70]\n  2633: a0 = u64 [s1 + 0x78]\n  2636: a2 = a0 | a5\n  2639: a1 = a3 | a4\n  2642: a2 = a2 | a1\n  2645: a2 = a2 >> 0x20\n  2648: a1 = a1 | a5\n  2651: a1 = a1 << 0x20\n  2654: a1 = a1 | a2\n  2657: jump @104 if a1 != 0\n      : @89 (gas: 6)\n  2661: u64 [s1 + 312] = 0\n  2665: u64 [s1 + 304] = 0\n  2669: u64 [s1 + 296] = 0\n  2673: a1 = s1 + 0x120\n  2677: u64 [s1 + 288] = 0xa0\n  2683: ra = 92, jump @19\n      : @90 [@dyn 46] (gas: 16)\n  2688: u64 [s1 + 248] = 0\n  2692: u64 [s1 + 240] = 0\n  2696: u64 [s1 + 232] = 0\n  2700: u64 [s1 + 224] = 0xc0\n  2706: a0 = u64 [s1 + 0x68]\n  2709: a3 = s1 + 0x100\n  2713: u64 [a3 + 0x18] = a0\n  2716: a0 = u64 [s1 + 0x60]\n  2719: u64 [a3 + 0x10] = a0\n  2722: a0 = u64 [s1 + 0x70]\n  2725: u64 [a3 + 0x8] = a0\n  2728: a0 = s1 + 0x100\n  2732: a1 = s1 + 0xe0\n  2736: a2 = u64 [s1 + 0x78]\n  2739: u64 [a3] = a2\n  2741: ra = 94, jump @1919\n      : @91 [@dyn 47] (gas: 3)\n  2747: a0 = s1 + 0xc0\n  2751: a1 = u64 [s1 + 0x78]\n  2754: ra = 96, jump @17\n      : @92 [@dyn 48] (gas: 5)\n  2759: a0 = u64 [s1 + 0xd8]\n  2763: a3 = u64 [s1 + 0xd0]\n  2767: a2 = u64 [s1 + 0xc8]\n  2771: a1 = u64 [s1 + 0xc0]\n  2775: t0 = 98, jump @2643\n      : @93 [@dyn 49] (gas: 1)\n  2781: jump @104 if a0 != 0\n      : @94 (gas: 3)\n  2785: a0 = u64 [s1 + 0x18]\n  2788: u64 [s1 + 0x78] = a1\n  2791: ra = 100, jump @32\n      : @95 [@dyn 50] (gas: 1)\n  2796: t0 = 102, jump @2622\n      : @96 [@dyn 51] (gas: 5)\n  2802: ra = 0x68\n  2805: ecalli 10 // 'hash_keccak_256'\n  2807: a3 = u64 [s1 + 0x70]\n  2810: t0 = 0x6a\n  2813: jump @2631\n      : @97 [@dyn 52] (gas: 2)\n  2817: a3 = u64 [s1 + 0x70]\n  2820: t0 = 106, jump @2631\n      : @98 [@dyn 53] (gas: 11)\n  2826: u64 [s1 + 1016] = 0\n  2830: u64 [s1 + 1008] = 0\n  2834: u64 [s1 + 1000] = 0\n  2838: u64 [s1 + 992] = 0x3\n  2843: u64 [s1 + 0x418] = a3\n  2847: u64 [s1 + 0x410] = a2\n  2851: u64 [s1 + 0x408] = a1\n  2855: u64 [s1 + 0x400] = a0\n  2859: a0 = s1 + 0x3e0\n  2863: a1 = s1 + 0x400\n  2867: ra = 108, jump @23\n      : @99 [@dyn 54] (gas: 11)\n  2872: u64 [s1 + 1080] = 0\n  2876: u64 [s1 + 1072] = 0\n  2880: u64 [s1 + 1064] = 0\n  2884: u64 [s1 + 1056] = 0xc\n  2889: u64 [s1 + 1112] = 0\n  2893: u64 [s1 + 1104] = 0\n  2897: u64 [s1 + 1096] = 0\n  2901: u64 [s1 + 1088] = 0x1\n  2906: a0 = s1 + 0x420\n  2910: a1 = s1 + 0x440\n  2914: ra = 110, jump @23\n      : @100 [@dyn 55] (gas: 26)\n  2919: a0 = u64 [s1 + 0x50]\n  2922: ecalli 5 // 'caller'\n  2924: a2 = u64 [s1 + 0x58]\n  2927: a0 = u64 [a2 + 0x8]\n  2930: a1 = i32 [a2 + 0x10]\n  2933: a2 = u64 [a2]\n  2935: a0 = reverse a0\n  2937: a3 = a0 << 0x20\n  2940: a1 = reverse a1\n  2942: a1 = a1 >> 0x20\n  2945: a1 = a1 | a3\n  2948: u64 [s1 + 0x78] = a1\n  2951: a0 = a0 >> 0x20\n  2954: a1 = reverse a2\n  2956: a2 = a1 << 0x20\n  2959: a0 = a0 | a2\n  2962: u64 [s1 + 0x70] = a0\n  2965: a1 = a1 >> 0x20\n  2968: u64 [s1 + 0x68] = a1\n  2971: u64 [s1 + 1144] = 0\n  2975: u64 [s1 + 1136] = 0\n  2979: u64 [s1 + 1128] = 0\n  2983: u64 [s1 + 1120] = 0x5\n  2988: a0 = s1 + 0xa0\n  2992: a1 = s1 + 0x460\n  2996: ra = 112, jump @21\n      : @101 [@dyn 56] (gas: 19)\n  3001: a0 = u32 [s1 + 0xb4]\n  3005: a0 = a0 << 0x20\n  3008: a1 = u64 [s1 + 0xb8]\n  3012: a2 = u64 [s1 + 0x68]\n  3015: a0 = a0 | a2\n  3018: u64 [s1 + 1176] = 0\n  3022: u64 [s1 + 1168] = 0\n  3026: u64 [s1 + 1160] = 0\n  3030: a3 = s1 + 0x400\n  3034: u64 [a3 + 128] = 0x5\n  3039: u64 [a3 + 0xb8] = a1\n  3043: a1 = u64 [s1 + 0x70]\n  3046: u64 [a3 + 0xa8] = a1\n  3050: a1 = u64 [s1 + 0x78]\n  3053: u64 [a3 + 0xa0] = a1\n  3057: u64 [a3 + 0xb0] = a0\n  3061: a0 = s1 + 0x480\n  3065: a1 = s1 + 0x4a0\n  3069: ra = 114, jump @23\n      : @102 [@dyn 57] (gas: 3)\n  3074: a0 = s1 + 0x80\n  3078: a1 = 0x40\n  3081: ra = 116, jump @17\n      : @103 [@dyn 58] (gas: 12)\n  3086: a3 = u64 [s1 + 0x98]\n  3090: a1 = u64 [s1 + 0x90]\n  3094: a2 = u64 [s1 + 0x88]\n  3098: a0 = u64 [s1 + 0x80]\n  3102: a3 = a3 | a2\n  3105: a2 = a0 | a1\n  3108: a2 = a2 | a3\n  3111: a2 = a2 >> 0x20\n  3114: a1 = a1 | a3\n  3117: a1 = a1 << 0x20\n  3120: a1 = a1 | a2\n  3123: jump @106 if a1 == 0\n      : @104 (gas: 1)\n  3126: trap\n      : @105 (gas: 8)\n  3127: a1 = 0x20290\n  3132: i32 a1 = a1 + 0\n  3134: a0 = 0x1\n  3137: a2 = 0\n  3139: ecalli 15 // 'seal_return'\n  3141: u64 [s1 + 0x78] = a0\n  3144: ra = 0x76\n  3147: jump @32\n      : @106 (gas: 2)\n  3150: u64 [s1 + 0x78] = a0\n  3153: ra = 118, jump @32\n      : @107 [@dyn 59] (gas: 5)\n  3158: i32 a0 = a0 + 0\n  3160: a1 = 0\n  3162: a2 = 0\n  3164: ecalli 2 // 'call_data_copy'\n  3166: jump @15\n      : @108 (gas: 3)\n  3169: a0 = u64 [s1 + 0x78]\n  3172: a1 = 0\n  3174: ra = 120, jump @32\n      : @109 [@dyn 60] (gas: 7)\n  3179: i32 a1 = a0 + 0\n  3181: a0 = 0\n  3183: a2 = 0\n  3185: ecalli 15 // 'seal_return'\n  3187: u64 [s1 + 0x78] = a0\n  3190: ra = 0x76\n  3193: jump @32\n      : @110 [@dyn 61] (gas: 4)\n  3196: a0 = 0x20278\n  3201: u64 [s1 + 0x210] = a0\n  3205: a0 = i32 [0x20278]\n  3210: jump @112 if a0 >=u 4\n      : @111 (gas: 1)\n  3214: jump @1856\n      : @112 (gas: 14)\n  3218: a0 = sp + 0xffffffffffffffe0\n  3221: a0 = a0 & 0xffffffffffffffe0\n  3224: sp = a0\n  3226: u64 [a0 + 24] = 0\n  3229: u64 [a0 + 16] = 0\n  3232: u64 [a0 + 8] = 0\n  3235: u64 [s1 + 0x218] = a0\n  3239: u64 [a0 + 0] = 0\n  3241: a0 = s1 + 0x4000\n  3245: i32 a0 = a0 + 0x5e0\n  3249: a1 = 0\n  3251: ra = 0x7c\n  3254: ecalli 3 // 'call_data_load'\n  3256: fallthrough\n      : @113 [@dyn 62] (gas: 3)\n  3257: t0 = s1 + 0x4198\n  3261: a0 = i32 [t0 + 0x464]\n  3265: jump @115 if a0 != 2309999428\n      : @114 (gas: 1)\n  3272: jump @840\n      : @115 (gas: 1)\n  3275: jump @117 if a0 != 2514000705\n      : @116 (gas: 1)\n  3282: jump @349\n      : @117 (gas: 2)\n  3285: a2 = s1 + 0x5198\n  3289: jump @119 if a0 != 2835717307\n      : @118 (gas: 1)\n  3296: jump @371\n      : @119 (gas: 1)\n  3299: jump @121 if a0 != 3130686038\n      : @120 (gas: 1)\n  3306: jump @832\n      : @121 (gas: 2)\n  3309: a1 = 0xffffffffbc25cf77\n  3315: jump @123 if a0 != a1\n      : @122 (gas: 1)\n  3318: jump @735\n      : @123 (gas: 1)\n  3321: jump @125 if a0 != 3294232917\n      : @124 (gas: 1)\n  3328: jump @606\n      : @125 (gas: 1)\n  3331: jump @127 if a0 != 3524403367\n      : @126 (gas: 1)\n  3338: jump @578\n      : @127 (gas: 3)\n  3341: u64 [s1 + 0x200] = a3\n  3345: u64 [s1 + 0x208] = a3\n  3349: jump @129 if a0 != 3573918927\n      : @128 (gas: 1)\n  3356: jump @807\n      : @129 (gas: 1)\n  3359: jump @131 if a0 != 3714247998\n      : @130 (gas: 1)\n  3366: jump @655\n      : @131 (gas: 1)\n  3369: jump @133 if a0 != 4294363881\n      : @132 (gas: 1)\n  3375: jump @569\n      : @133 (gas: 1)\n  3378: jump @177 if a0 == 36441503\n      : @134 (gas: 1)\n  3386: jump @136 if a0 != 117300739\n      : @135 (gas: 1)\n  3393: jump @414\n      : @136 (gas: 1)\n  3396: jump @138 if a0 != 151187884\n      : @137 (gas: 1)\n  3403: jump @278\n      : @138 (gas: 1)\n  3406: jump @140 if a0 != 157198259\n      : @139 (gas: 1)\n  3413: jump @619\n      : @140 (gas: 1)\n  3416: jump @142 if a0 != 234755713\n      : @141 (gas: 1)\n  3423: jump @325\n      : @142 (gas: 2)\n  3426: a2 = s1 + 0x4998\n  3430: jump @144 if a0 != 404098525\n      : @143 (gas: 1)\n  3437: jump @298\n      : @144 (gas: 1)\n  3440: jump @146 if a0 != 599290589\n      : @145 (gas: 1)\n  3447: jump @688\n      : @146 (gas: 1)\n  3450: jump @148 if a0 != 816707615\n      : @147 (gas: 1)\n  3457: jump @338\n      : @148 (gas: 1)\n  3460: jump @150 if a0 != 826074471\n      : @149 (gas: 1)\n  3467: jump @727\n      : @150 (gas: 1)\n  3470: jump @152 if a0 != 910484757\n      : @151 (gas: 1)\n  3477: jump @527\n      : @152 (gas: 1)\n  3480: jump @154 if a0 != 1214040405\n      : @153 (gas: 1)\n  3487: jump @634\n      : @154 (gas: 2)\n  3490: a1 = 0x5909c0d5\n  3496: jump @156 if a0 != a1\n      : @155 (gas: 1)\n  3499: jump @591\n      : @156 (gas: 1)\n  3502: jump @158 if a0 != 1513968787\n      : @157 (gas: 1)\n  3509: jump @311\n      : @158 (gas: 1)\n  3512: jump @160 if a0 != 1784838210\n      : @159 (gas: 1)\n  3519: jump @440\n      : @160 (gas: 1)\n  3522: jump @162 if a0 != 1889567281\n      : @161 (gas: 1)\n  3529: jump @386\n      : @162 (gas: 1)\n  3532: jump @164 if a0 == 1952775229\n      : @163 (gas: 1)\n  3539: jump @540\n      : @164 (gas: 9)\n  3542: u64 [a2 + 1408] = 0\n  3546: u64 [a2 + 1400] = 0\n  3550: u64 [a2 + 1392] = 0\n  3554: u64 [a2 + 1384] = 0\n  3558: a0 = s1 + 0x5000\n  3562: i32 a0 = a0 + 0xffffffffffffff00\n  3566: ra = 0x7e\n  3569: ecalli 18 // 'value_transferred'\n  3571: fallthrough\n      : @165 [@dyn 63] (gas: 7)\n  3572: a2 = s1 + 0x4998\n  3576: a5 = a2 + 0x500\n  3580: a0 = u64 [a5 + 0x80]\n  3584: a1 = u64 [a5 + 0x70]\n  3587: a3 = u64 [a5 + 0x78]\n  3590: a4 = u64 [a5 + 0x68]\n  3593: t0 = 128, jump @2574\n      : @166 [@dyn 64] (gas: 6)\n  3600: t0 = u64 [a1 + 0x10]\n  3603: a2 = u64 [a1 + 0x8]\n  3606: a0 = u64 [a1]\n  3608: a3 = a3 | a4\n  3611: a3 = a3 | a5\n  3614: jump @168 if a3 == 0\n      : @167 (gas: 1)\n  3617: jump @838\n      : @168 (gas: 22)\n  3620: a1 = u64 [s1 + 0x210]\n  3624: a3 = u32 [a1]\n  3626: a1 = a3 + 0xfffffffffffffffc\n  3629: a3 = a1 <u a3\n  3632: a5 = a3 + 0xffffffffffffffff\n  3635: a3 = 0 if a5 != 0\n  3637: a4 = a3 >u 0\n  3639: a4 = a4 + 0xffffffffffffffff\n  3642: t2 = a3 + 0xffffffffffffffff\n  3645: a3 = t2 <u t0\n  3648: ra = a4 ^ t1\n  3651: a4 = a4 <s t1\n  3654: a4 = a3 if ra == 0\n  3657: u64 [s1 + 0x218] = a0\n  3661: a0 = a1 <u a0\n  3664: a1 = a5 ^ a2\n  3667: a5 = a5 <u a2\n  3670: a5 = a0 if a1 == 0\n  3673: a3 = t2 ^ t0\n  3676: a3 = a3 | ra\n  3679: a5 = a4 if a3 != 0\n  3682: jump @170 if a5 == 0\n      : @169 (gas: 1)\n  3685: jump @836\n      : @170 (gas: 8)\n  3688: a1 = s1 + 0x4998\n  3692: u64 [a1 + 1440] = 0\n  3696: u64 [a1 + 1432] = 0\n  3700: u64 [a1 + 1424] = 0\n  3704: u64 [a1 + 1416] = 0xb\n  3709: a0 = s1 + 0x2740\n  3713: a1 = s1 + 0x4f20\n  3717: ra = 130, jump @21\n      : @171 [@dyn 65] (gas: 3)\n  3723: t0 = 0x84\n  3727: a1 = s1 + 0x2198\n  3731: fallthrough\n      : @172 [@dyn 66] (gas: 13)\n  3732: a2 = a1 + 0x500\n  3736: a0 = u64 [a2 + 0xc0]\n  3740: a1 = s1 + 0x200\n  3744: u64 [a1 + 0x18] = a0\n  3747: a0 = u64 [a2 + 0xb8]\n  3751: u64 [a1 + 0x10] = a0\n  3754: a0 = u64 [a2 + 0xb0]\n  3758: u64 [a1 + 0x8] = a0\n  3761: a0 = u64 [a2 + 0xa8]\n  3765: u64 [a1] = a0\n  3767: a0 = s1 + 0x2720\n  3771: a1 = 0x40\n  3774: ra = 134, jump @17\n      : @173 [@dyn 67] (gas: 7)\n  3780: a3 = s1 + 0x2198\n  3784: a5 = a3 + 0x500\n  3788: a0 = u64 [a5 + 0xa0]\n  3792: a1 = u64 [a5 + 0x98]\n  3796: a2 = u64 [a5 + 0x90]\n  3800: a4 = u64 [a5 + 0x88]\n  3804: t0 = 136, jump @2564\n      : @174 [@dyn 68] (gas: 1)\n  3811: jump @176 if a0 == 0\n      : @175 (gas: 1)\n  3814: jump @848\n      : @176 (gas: 15)\n  3817: a2 = s1 + 0x200\n  3821: a0 = u64 [a2]\n  3823: a5 = a3 + 0x500\n  3827: u64 [a5 + 0x68] = a0\n  3830: a0 = u64 [a2 + 0x8]\n  3833: u64 [a5 + 0x70] = a0\n  3836: a0 = u64 [a2 + 0x10]\n  3839: u64 [a5 + 0x78] = a0\n  3842: a1 = s1 + 0x2700\n  3846: a0 = u64 [a2 + 0x18]\n  3849: u64 [a5 + 0x80] = a0\n  3853: a0 = a4\n  3855: u64 [s1 + 0x218] = a4\n  3859: ra = 0x3c6\n  3863: jump @19\n      : @177 (gas: 8)\n  3866: u64 [t0 + 1152] = 0\n  3870: u64 [t0 + 1144] = 0\n  3874: u64 [t0 + 1136] = 0\n  3878: u64 [t0 + 1128] = 0\n  3882: a0 = s1 + 0x4000\n  3886: i32 a0 = a0 + 0x600\n  3890: ecalli 18 // 'value_transferred'\n  3892: fallthrough\n      : @178 (gas: 10)\n  3893: a3 = s1 + 0x4198\n  3897: a4 = a3 + 0x400\n  3901: a0 = u64 [a4 + 0x78]\n  3904: a1 = u64 [a4 + 0x80]\n  3908: a2 = u64 [a4 + 0x70]\n  3911: a3 = u64 [a4 + 0x68]\n  3914: a1 = a1 | a2\n  3917: a0 = a0 | a3\n  3920: a0 = a0 | a1\n  3923: jump @180 if a0 == 0\n      : @179 (gas: 1)\n  3926: jump @1894\n      : @180 (gas: 3)\n  3930: a0 = u64 [s1 + 0x210]\n  3934: a0 = i32 [a0]\n  3936: jump @182 if a0 >u 131\n      : @181 (gas: 1)\n  3941: jump @1895\n      : @182 (gas: 33)\n  3945: a0 = s1 + 0x4000\n  3949: i32 a0 = a0 + 0x620\n  3953: a1 = 0x4\n  3956: ecalli 3 // 'call_data_load'\n  3958: a1 = s1 + 0x4198\n  3962: a2 = a1 + 0x400\n  3966: a0 = u64 [a2 + 0xa0]\n  3970: u64 [s1 + 0x198] = a0\n  3974: a0 = u64 [a2 + 0x98]\n  3978: u64 [s1 + 0x190] = a0\n  3982: a0 = u64 [a2 + 0x90]\n  3986: u64 [s1 + 0x188] = a0\n  3990: a0 = u64 [a2 + 0x88]\n  3994: u64 [s1 + 0x180] = a0\n  3998: a0 = s1 + 0x4000\n  4002: i32 a0 = a0 + 0x640\n  4006: a1 = 0x24\n  4009: ecalli 3 // 'call_data_load'\n  4011: a1 = s1 + 0x4198\n  4015: a2 = a1 + 0x400\n  4019: a0 = u64 [a2 + 0xc0]\n  4023: u64 [s1 + 0x178] = a0\n  4027: a0 = u64 [a2 + 0xb8]\n  4031: u64 [s1 + 0x170] = a0\n  4035: a0 = u64 [a2 + 0xb0]\n  4039: u64 [s1 + 0x168] = a0\n  4043: a0 = u64 [a2 + 0xa8]\n  4047: u64 [s1 + 0x160] = a0\n  4051: a0 = s1 + 0x4000\n  4055: i32 a0 = a0 + 0x660\n  4059: a1 = 0x44\n  4062: ecalli 3 // 'call_data_load'\n  4064: fallthrough\n      : @183 (gas: 13)\n  4065: a2 = s1 + 0x4198\n  4069: a1 = u64 [a2 + 0x4d8]\n  4073: a3 = u64 [a2 + 0x4e0]\n  4077: a0 = 0x100000000\n  4087: a0 = a0 ^ a1\n  4090: a0 = a0 | a3\n  4093: u64 [s1 + 0x1e8] = a1\n  4097: a1 = a1 >> 0x20\n  4100: a1 = a1 <u 0x1\n  4103: u64 [s1 + 0x1d0] = a3\n  4107: a1 = 0 if a3 != 0\n  4109: a1 = 0 if a0 == 0\n  4111: jump @185 if a1 != 0\n      : @184 (gas: 1)\n  4114: jump @1896\n      : @185 (gas: 9)\n  4118: a0 = u64 [a2 + 0x4d0]\n  4122: u64 [s1 + 0x150] = a0\n  4126: a0 = u64 [a2 + 0x4c8]\n  4130: u64 [s1 + 0x158] = a0\n  4134: a0 = s1 + 0x4000\n  4138: i32 a0 = a0 + 0x680\n  4142: a1 = 0x64\n  4145: ecalli 3 // 'call_data_load'\n  4147: fallthrough\n      : @186 (gas: 8)\n  4148: a2 = s1 + 0x4198\n  4152: t2 = u64 [a2 + 0x500]\n  4156: a3 = u64 [a2 + 0x4f8]\n  4160: a4 = u64 [a2 + 0x4f0]\n  4164: a0 = a3 | t2\n  4167: a1 = a4 <u 0x1\n  4170: a1 = 0 if a0 != 0\n  4172: jump @188 if a1 != 0\n      : @187 (gas: 1)\n  4175: jump @1897\n      : @188 (gas: 19)\n  4179: a5 = u64 [a2 + 0x4e8]\n  4183: a0 = u64 [s1 + 0x210]\n  4187: a0 = u32 [a0]\n  4189: a1 = a5 + 0x23\n  4192: a2 = a1 <u a5\n  4195: t1 = a4 + a2\n  4198: u64 [s1 + 0x1f0] = a4\n  4202: a4 = t1 <u a4\n  4205: a4 = a2 if a2 == 0\n  4208: a4 = a4 + a3\n  4211: u64 [s1 + 0x1f8] = a3\n  4215: a2 = a4 <u a3\n  4218: u64 [s1 + 0x200] = t2\n  4222: a2 = a2 + t2\n  4225: a2 = a2 | a4\n  4228: a0 = a1 <u a0\n  4231: a0 = 0 if t1 != 0\n  4233: a0 = 0 if a2 != 0\n  4235: jump @190 if a0 != 0\n      : @189 (gas: 1)\n  4238: jump @1898\n      : @190 (gas: 6)\n  4242: i32 a1 = a5 + 0x4\n  4245: a0 = s1 + 0x4000\n  4249: i32 a0 = a0 + 0x6a0\n  4253: u64 [s1 + 0x208] = a5\n  4257: ecalli 3 // 'call_data_load'\n  4259: fallthrough\n      : @191 (gas: 8)\n  4260: t0 = s1 + 0x4198\n  4264: t2 = u64 [t0 + 0x520]\n  4268: a3 = u64 [t0 + 0x518]\n  4272: a2 = u64 [t0 + 0x510]\n  4276: a0 = a3 | t2\n  4279: a1 = a2 <u 0x1\n  4282: a1 = 0 if a0 != 0\n  4284: jump @193 if a1 != 0\n      : @192 (gas: 1)\n  4287: jump @1899\n      : @193 (gas: 43)\n  4291: a0 = u64 [t0 + 0x508]\n  4295: u64 [s1 + 0x1e0] = a0\n  4299: a1 = u64 [s1 + 0x208]\n  4303: a0 = a0 + a1\n  4306: a1 = a0 <u a1\n  4309: u64 [s1 + 0x1d8] = a2\n  4313: a4 = u64 [s1 + 0x1f0]\n  4317: a2 = a2 + a4\n  4320: a2 = a2 + a1\n  4323: t1 = a2 ^ a4\n  4326: a4 = a2 <u a4\n  4329: a4 = a1 if t1 == 0\n  4332: u64 [s1 + 0x1f0] = a3\n  4336: a5 = u64 [s1 + 0x1f8]\n  4340: a1 = a5 + a3\n  4343: a4 = a4 + a1\n  4346: a3 = a1 <u a5\n  4349: t1 = a4 <u a1\n  4352: u64 [s1 + 0x1f8] = t2\n  4356: a1 = u64 [s1 + 0x200]\n  4360: a5 = a1 + t2\n  4363: a3 = a3 + a5\n  4366: a1 = a3 + t1\n  4369: a3 = a0 + 0x24\n  4372: a0 = a3 <u a0\n  4375: a5 = a2 + a0\n  4378: a2 = a5 <u a2\n  4381: a2 = a0 if a0 == 0\n  4384: a0 = u64 [s1 + 0x210]\n  4388: a0 = u32 [a0]\n  4390: a2 = a2 + a4\n  4393: a4 = a2 <u a4\n  4396: a1 = a1 + a4\n  4399: a0 = a0 <u a3\n  4402: a3 = a5 <u 0x1\n  4405: a0 = a0 ^ 0x1\n  4408: a0 = a3 if a5 != 0\n  4411: a3 = a2 <u 0x1\n  4414: a4 = a1 <u 0x1\n  4417: a4 = a3 if a1 == 0\n  4420: a1 = a1 | a2\n  4423: a0 = a4 if a1 != 0\n  4426: jump @195 if a0 != 0\n      : @194 (gas: 1)\n  4429: jump @1900\n      : @195 (gas: 7)\n  4433: u64 [t0 + 1344] = 0\n  4437: u64 [t0 + 1336] = 0\n  4441: u64 [t0 + 1328] = 0\n  4445: u64 [t0 + 1320] = 0xc\n  4450: a0 = s1 + 0x11a0\n  4454: a1 = s1 + 0x46c0\n  4458: ra = 138, jump @21\n      : @196 [@dyn 69] (gas: 6)\n  4464: a4 = s1 + 0x1198\n  4468: a0 = u64 [a4 + 0x20]\n  4471: a1 = u64 [a4 + 0x10]\n  4474: a2 = u64 [a4 + 0x8]\n  4477: a3 = u64 [a4 + 0x18]\n  4480: t0 = 140, jump @2611\n      : @197 [@dyn 70] (gas: 6)\n  4487: u64 [a4 + 0] = 0\n  4489: u64 [a4 + 4294967288] = 0\n  4492: u64 [a4 + 0xffffffffffffffe8] = a0\n  4495: a0 = s1 + 0x1180\n  4499: u64 [a4 + 4294967280] = 0\n  4502: ra = 142, jump @1959\n      : @198 [@dyn 71] (gas: 12)\n  4509: a1 = s1 + 0x4198\n  4513: u64 [a1 + 1376] = 0\n  4517: u64 [a1 + 1368] = 0\n  4521: u64 [a1 + 1360] = 0\n  4525: u64 [a1 + 1352] = 0xc\n  4530: u64 [a1 + 1408] = 0\n  4534: u64 [a1 + 1400] = 0\n  4538: u64 [a1 + 1392] = 0\n  4542: u64 [a1 + 1384] = 0\n  4546: a0 = s1 + 0x46e0\n  4550: a1 = s1 + 0x4700\n  4554: ra = 144, jump @23\n      : @199 [@dyn 72] (gas: 17)\n  4560: a4 = s1 + 0x100\n  4564: a0 = u64 [a4 + 0x68]\n  4567: a1 = u64 [a4 + 0x88]\n  4571: a0 = a0 | a1\n  4574: a1 = u64 [a4 + 0x60]\n  4577: a2 = u64 [a4 + 0x80]\n  4581: a1 = a1 | a2\n  4584: a2 = u64 [a4 + 0x70]\n  4587: a3 = u64 [a4 + 0x90]\n  4591: a2 = a2 | a3\n  4594: a1 = a1 | a2\n  4597: a2 = u64 [a4 + 0x78]\n  4600: a3 = u64 [a4 + 0x98]\n  4604: a2 = a2 | a3\n  4607: a0 = a0 | a2\n  4610: a0 = a0 | a1\n  4613: jump @201 if a0 != 0\n      : @200 (gas: 1)\n  4616: jump @851\n      : @201 (gas: 2)\n  4619: a0 = s1 + 0x1060\n  4623: ra = 146, jump @1987\n      : @202 [@dyn 73] (gas: 19)\n  4630: a3 = u64 [s1 + 0x188]\n  4634: a5 = s1 + 0x7ff\n  4638: a5 = a5 + 0x199\n  4642: t0 = u64 [a5 + 0x6d0]\n  4646: t1 = u64 [a5 + 0x6c8]\n  4650: a0 = 0xffffffffffff\n  4660: a4 = t0 & a0\n  4663: a1 = u64 [s1 + 0x180]\n  4667: a1 = a1 <u t1\n  4670: a2 = a3 ^ a4\n  4673: a3 = a3 <u a4\n  4676: a3 = a1 if a2 == 0\n  4679: a1 = a3 ^ 0x1\n  4682: a2 = u64 [s1 + 0x198]\n  4686: a3 = u64 [s1 + 0x190]\n  4690: a2 = a2 | a3\n  4693: a3 = 0x1\n  4696: a3 = a1 if a2 == 0\n  4699: jump @204 if a3 == 0\n      : @203 (gas: 1)\n  4702: jump @869\n      : @204 (gas: 14)\n  4705: t2 = u64 [a5 + 0x6f0]\n  4709: ra = u64 [a5 + 0x6e8]\n  4713: a3 = t2 & a0\n  4716: a0 = u64 [s1 + 0x160]\n  4720: a0 = a0 <u ra\n  4723: a2 = u64 [s1 + 0x168]\n  4727: a1 = a2 ^ a3\n  4730: a2 = a2 <u a3\n  4733: a2 = a0 if a1 == 0\n  4736: a0 = u64 [s1 + 0x178]\n  4740: a1 = u64 [s1 + 0x170]\n  4744: a0 = a0 | a1\n  4747: a2 = 0 if a0 != 0\n  4749: jump @206 if a2 != 0\n      : @205 (gas: 1)\n  4752: jump @869\n      : @206 (gas: 30)\n  4755: u64 [s1 + 0x130] = a3\n  4759: u64 [s1 + 0x1a0] = a4\n  4763: u64 [s1 + 0x138] = ra\n  4767: u64 [s1 + 0x120] = t2\n  4771: u64 [s1 + 0x140] = t1\n  4775: u64 [s1 + 0x128] = t0\n  4779: a0 = 0xffffffff\n  4789: u64 [s1 + 0x210] = a0\n  4793: a1 = a5 + 0x600\n  4797: a0 = u64 [a1 + 0xe0]\n  4801: u64 [s1 + 0x118] = a0\n  4805: a0 = u64 [a1 + 0xd8]\n  4809: u64 [s1 + 0x108] = a0\n  4813: a0 = u64 [a5 + 0x700]\n  4817: u64 [s1 + 0x110] = a0\n  4821: a0 = u64 [a1 + 0xf8]\n  4825: u64 [s1 + 0x100] = a0\n  4829: a1 = s1 + 0x4198\n  4833: u64 [a1 + 1416] = 0x6\n  4838: a0 = u64 [s1 + 0x1e8]\n  4842: a0 = a0 << 0x20\n  4845: a0 = a0 >> 0x20\n  4848: u64 [s1 + 0x148] = a0\n  4852: u64 [a1 + 1440] = 0\n  4856: u64 [a1 + 1432] = 0\n  4860: u64 [a1 + 1424] = 0\n  4864: a0 = s1 + 0x7ff\n  4868: a0 = a0 + 0x781\n  4872: a1 = s1 + 0x4720\n  4876: ra = 148, jump @21\n      : @207 [@dyn 74] (gas: 28)\n  4882: a0 = s1 + 0x7ff\n  4886: a0 = a0 + 0x199\n  4890: a2 = u64 [a0 + 0x5f0]\n  4894: a0 = s1 + 0x7ff\n  4898: a0 = a0 + 0x199\n  4902: a1 = u64 [a0 + 0x5e8]\n  4906: a0 = s1 + 0x7ff\n  4910: a0 = a0 + 0x199\n  4914: a3 = u64 [a0 + 0x5f8]\n  4918: u64 [s1 + 0x1b0] = a2\n  4922: a2 = a2 & 0xffffffffffffffff\n  4925: u64 [s1 + 0x200] = a2\n  4929: u64 [s1 + 0x1b8] = a1\n  4933: a0 = a1 & 0xffffffffffffffff\n  4936: u64 [s1 + 0x1c8] = a0\n  4940: a1 = s1 + 0x4198\n  4944: u64 [a1 + 1448] = 0x7\n  4949: u64 [s1 + 0x1a8] = a3\n  4953: a0 = u64 [s1 + 0x210]\n  4957: a0 = a0 & a3\n  4960: u64 [s1 + 0x1c0] = a0\n  4964: u64 [a1 + 1472] = 0\n  4968: u64 [a1 + 1464] = 0\n  4972: u64 [a1 + 1456] = 0\n  4976: a0 = s1 + 0x7ff\n  4980: a0 = a0 + 0x761\n  4984: a1 = s1 + 0x4740\n  4988: ra = 150, jump @21\n      : @208 [@dyn 75] (gas: 15)\n  4994: a4 = s1 + 0x7ff\n  4998: a4 = a4 + 0x199\n  5002: a2 = s1 + 0x100\n  5006: a5 = u64 [a2 + 0x48]\n  5009: a0 = u64 [a2 + 0xc0]\n  5013: a0 = a0 ^ a5\n  5016: t1 = u64 [s1 + 0x158]\n  5020: a1 = u64 [a2 + 0xc8]\n  5024: a1 = t1 ^ a1\n  5027: t0 = u64 [s1 + 0x150]\n  5031: a2 = u64 [s1 + 0x200]\n  5035: a2 = t0 ^ a2\n  5038: a1 = a1 | a2\n  5041: a0 = a0 | a1\n  5044: jump @210 if a0 != 0\n      : @209 (gas: 1)\n  5047: jump @1169\n      : @210 (gas: 15)\n  5050: t2 = u64 [a4 + 0x5d8]\n  5054: a3 = u64 [a4 + 0x5d0]\n  5058: a2 = u64 [a4 + 0x5c8]\n  5062: a0 = u64 [s1 + 0x210]\n  5066: ra = t2 & a0\n  5069: a1 = a3 & 0xffffffffffffffff\n  5072: a0 = a2 & 0xffffffffffffffff\n  5075: u64 [s1 + 0xf8] = a0\n  5079: a0 = t1 ^ a0\n  5082: u64 [s1 + 0x210] = a1\n  5086: a1 = t0 ^ a1\n  5089: a0 = a0 | a1\n  5092: a1 = a5 ^ ra\n  5095: a0 = a0 | a1\n  5098: jump @212 if a0 != 0\n      : @211 (gas: 1)\n  5101: jump @1169\n      : @212 (gas: 12)\n  5104: u64 [s1 + 0xe0] = a3\n  5108: u64 [s1 + 0xe8] = t2\n  5112: u64 [s1 + 0xf0] = a2\n  5116: a3 = s1 + 0x100\n  5120: a0 = u64 [a3 + 0x90]\n  5124: a1 = u64 [a3 + 0x80]\n  5128: a0 = a0 | a1\n  5131: a1 = u64 [a3 + 0x98]\n  5135: a2 = u64 [a3 + 0x88]\n  5139: a1 = a1 | a2\n  5142: a0 = a0 | a1\n  5145: jump @215 if a0 == 0\n      : @213 (gas: 30)\n  5149: a5 = s1 + 0x100\n  5153: a0 = u64 [a5 + 0x80]\n  5157: u64 [a4 + 0x568] = a0\n  5161: u64 [a4 + 0x588] = t1\n  5165: u64 [a4 + 1472] = 0\n  5169: a0 = u64 [a5 + 0xc8]\n  5173: u64 [a4 + 0x5a8] = a0\n  5177: a0 = u64 [a5 + 0x88]\n  5181: u64 [a4 + 0x570] = a0\n  5185: u64 [a4 + 0x590] = t0\n  5189: a0 = u64 [s1 + 0x200]\n  5193: u64 [a4 + 0x5b0] = a0\n  5197: a0 = u64 [a5 + 0x90]\n  5201: u64 [a4 + 0x578] = a0\n  5205: a0 = u64 [a5 + 0xe8]\n  5209: u64 [a4 + 0x598] = a0\n  5213: a0 = u64 [a5 + 0xc0]\n  5217: u64 [a4 + 0x5b8] = a0\n  5221: a0 = u64 [a5 + 0x98]\n  5225: u64 [a4 + 0x580] = a0\n  5229: a0 = s1 + 0x7ff\n  5233: a0 = a0 + 0x741\n  5237: a1 = s1 + 0x7ff\n  5241: a1 = a1 + 0x721\n  5245: a2 = s1 + 0x7ff\n  5249: a2 = a2 + 0x701\n  5253: a3 = u64 [a5 + 0xd0]\n  5257: u64 [a4 + 0x5a0] = a3\n  5261: u64 [s1 + 0x200] = ra\n  5265: ra = 152, jump @2015\n      : @214 [@dyn 76] (gas: 6)\n  5272: ra = u64 [s1 + 0x200]\n  5276: a4 = s1 + 0x7ff\n  5280: a4 = a4 + 0x199\n  5284: t0 = u64 [s1 + 0x150]\n  5288: t1 = u64 [s1 + 0x158]\n  5292: fallthrough\n      : @215 (gas: 9)\n  5293: a3 = s1 + 0x100\n  5297: a0 = u64 [a3 + 0x70]\n  5300: a1 = u64 [a3 + 0x60]\n  5303: a0 = a0 | a1\n  5306: a1 = u64 [a3 + 0x78]\n  5309: a2 = u64 [a3 + 0x68]\n  5312: a1 = a1 | a2\n  5315: a0 = a0 | a1\n  5318: jump @218 if a0 == 0\n      : @216 (gas: 28)\n  5321: a0 = u64 [s1 + 0xf8]\n  5325: a5 = a4 + 0x500\n  5329: u64 [a5 + 0x48] = a0\n  5332: a0 = u64 [s1 + 0x160]\n  5336: u64 [a5 + 0x8] = a0\n  5339: u64 [a4 + 0x528] = t1\n  5343: u64 [a4 + 1376] = 0\n  5347: a0 = u64 [s1 + 0x168]\n  5351: u64 [a5 + 0x10] = a0\n  5354: u64 [a4 + 0x530] = t0\n  5358: a0 = u64 [s1 + 0x210]\n  5362: u64 [a5 + 0x50] = a0\n  5365: a0 = u64 [s1 + 0x170]\n  5369: u64 [a5 + 0x18] = a0\n  5372: a0 = u64 [s1 + 0x1e8]\n  5376: u64 [a5 + 0x38] = a0\n  5379: u64 [a4 + 0x558] = ra\n  5383: a0 = u64 [s1 + 0x1d0]\n  5387: u64 [a5 + 0x40] = a0\n  5390: a0 = s1 + 0x7ff\n  5394: a0 = a0 + 0x6e1\n  5398: a1 = s1 + 0x7ff\n  5402: a1 = a1 + 0x6c1\n  5406: a2 = s1 + 0x7ff\n  5410: a2 = a2 + 0x6a1\n  5414: a3 = u64 [s1 + 0x178]\n  5418: u64 [a5 + 0x20] = a3\n  5421: ra = 154, jump @2015\n      : @217 [@dyn 77] (gas: 3)\n  5428: t0 = u64 [s1 + 0x150]\n  5432: t1 = u64 [s1 + 0x158]\n  5436: fallthrough\n      : @218 (gas: 9)\n  5437: a3 = s1 + 0x100\n  5441: a0 = u64 [a3 + 0xe0]\n  5445: a1 = u64 [a3 + 0xf0]\n  5449: a0 = a0 | a1\n  5452: a1 = u64 [a3 + 0xf8]\n  5456: a2 = u64 [a3 + 0xd8]\n  5460: a1 = a1 | a2\n  5463: a0 = a0 | a1\n  5466: jump @220 if a0 == 0\n      : @219 (gas: 1)\n  5469: jump @1203\n      : @220 (gas: 4)\n  5472: a0 = s1 + 0x7ff\n  5476: a0 = a0 + 0x521\n  5480: a1 = 0x40\n  5483: ra = 156, jump @17\n      : @221 [@dyn 78] (gas: 15)\n  5489: a2 = s1 + 0x7ff\n  5493: a2 = a2 + 0x199\n  5497: t0 = u64 [a2 + 0x3a0]\n  5501: a1 = a2 + 0x300\n  5505: a5 = u64 [a1 + 0x98]\n  5509: a4 = u64 [a1 + 0x90]\n  5513: a0 = u64 [a1 + 0x88]\n  5517: a3 = a4 | t0\n  5520: a1 = a0 | a5\n  5523: a1 = a1 | a3\n  5526: a1 = a1 >> 0x20\n  5529: a3 = a3 | a5\n  5532: a3 = a3 << 0x20\n  5535: a1 = a1 | a3\n  5538: jump @223 if a1 == 0\n      : @222 (gas: 1)\n  5541: jump @848\n      : @223 (gas: 12)\n  5544: u64 [a2 + 888] = 0\n  5548: u64 [a2 + 880] = 0\n  5552: u64 [a2 + 872] = 0\n  5556: a3 = 0x70a0823100000000\n  5566: a1 = s1 + 0x7ff\n  5570: a1 = a1 + 0x501\n  5574: u64 [a2 + 0x380] = a3\n  5578: u64 [s1 + 0x210] = a0\n  5582: u64 [s1 + 0x208] = t0\n  5586: u64 [s1 + 0x200] = a5\n  5590: u64 [s1 + 0x1f8] = a4\n  5594: ra = 158, jump @19\n      : @224 [@dyn 79] (gas: 8)\n  5600: a0 = 0x30290\n  5605: u64 [s1 + 0xf8] = a0\n  5609: i32 a0 = a0 + 0\n  5611: u64 [s1 + 0xd8] = a0\n  5615: ra = 0xa0\n  5619: ecalli 0 // 'address'\n  5620: t0 = 0xa2\n  5624: jump @2577\n      : @225 [@dyn 80] (gas: 1)\n  5628: t0 = 162, jump @2577\n      : @226 [@dyn 81] (gas: 1)\n  5635: jump @228 if a1 != 0\n      : @227 (gas: 1)\n  5638: jump @848\n      : @228 (gas: 5)\n  5641: a2 = u64 [s1 + 0xf8]\n  5645: a1 = u64 [a2 + 0x8]\n  5648: a0 = 0x2400000000\n  5658: u64 [s1 + 0x1f0] = a0\n  5662: t0 = 164, jump @2571\n      : @229 [@dyn 82] (gas: 10)\n  5669: a5 = s1 + 0x7ff\n  5673: a5 = a5 + 0x199\n  5677: u64 [a5 + 864] = 0\n  5681: a4 = a5 + 0x300\n  5685: u64 [a4 + 0x58] = a2\n  5688: u64 [a4 + 0x50] = a1\n  5691: a1 = s1 + 0x7ff\n  5695: a1 = a1 + 0x4e1\n  5699: u64 [a4 + 0x48] = a3\n  5702: ra = 166, jump @19\n      : @230 [@dyn 83] (gas: 3)\n  5708: ra = 0xa8\n  5712: ecalli 12 // 'ref_time_left'\n  5714: fallthrough\n      : @231 [@dyn 84] (gas: 9)\n  5715: a0 = u64 [s1 + 0x1b0]\n  5719: a0 = reverse a0\n  5721: a1 = a0 << 0x20\n  5724: a2 = u64 [s1 + 0x1a8]\n  5728: a2 = reverse a2\n  5730: a2 = a2 >> 0x20\n  5733: a1 = a1 | a2\n  5736: a2 = u64 [s1 + 0x1b8]\n  5740: t0 = 170, jump @2617\n      : @232 [@dyn 85] (gas: 7)\n  5747: u64 [a0 + 1632] = 0\n  5751: u64 [a0 + 1624] = 0\n  5755: u64 [a0 + 1616] = 0\n  5759: u64 [a0 + 1608] = 0\n  5763: a1 = 0x24\n  5766: a0 = u64 [s1 + 0x210]\n  5770: ra = 172, jump @32\n      : @233 [@dyn 86] (gas: 4)\n  5776: u64 [s1 + 0x1e8] = a0\n  5780: a1 = 0x20\n  5783: a0 = u64 [s1 + 0x210]\n  5787: ra = 174, jump @32\n      : @234 [@dyn 87] (gas: 33)\n  5793: a1 = s1 + 0x4198\n  5797: u32 [a1 + 1640] = 0x20\n  5802: u64 [a1 + 1696] = 0\n  5806: u64 [a1 + 1688] = 0\n  5810: u64 [a1 + 1680] = 0\n  5814: u64 [a1 + 1672] = 0\n  5818: a1 = u64 [s1 + 0xf8]\n  5822: a1 = a1 << 0x20\n  5825: a1 = a1 >> 0x20\n  5828: a2 = 0x1800000000\n  5838: t0 = a1 | a2\n  5841: a1 = s1 + 0x47e0\n  5845: a1 = a1 << 0x20\n  5848: a1 = a1 >> 0x20\n  5851: a2 = s1 + 0x4820\n  5855: a2 = a2 << 0x20\n  5858: a3 = a2 | a1\n  5861: a1 = u64 [s1 + 0x1e8]\n  5865: a1 = a1 << 0x20\n  5868: a1 = a1 >> 0x20\n  5871: a4 = u64 [s1 + 0x1f0]\n  5875: a4 = a4 | a1\n  5878: a0 = a0 << 0x20\n  5881: a0 = a0 >> 0x20\n  5884: a1 = s1 + 0x4800\n  5888: a1 = a1 << 0x20\n  5891: a5 = a1 | a0\n  5894: a1 = 0xffffffffffffffff\n  5897: a2 = 0xffffffffffffffff\n  5900: u64 [s1 + 0x1e8] = t0\n  5904: a0 = t0\n  5906: ecalli 1 // 'call'\n  5908: fallthrough\n      : @235 (gas: 1)\n  5909: jump @237 if a0 == 0\n      : @236 (gas: 1)\n  5912: jump @1383\n      : @237 (gas: 2)\n  5915: ecalli 14 // 'return_data_size'\n  5917: fallthrough\n      : @238 (gas: 2)\n  5918: a5 = 0x20\n  5921: jump @240 if a0 >=u a5\n      : @239 (gas: 3)\n  5924: ecalli 14 // 'return_data_size'\n  5926: a5 = a0\n  5928: fallthrough\n      : @240 (gas: 22)\n  5929: a2 = s1 + 0x7ff\n  5933: a2 = a2 + 0x199\n  5937: a3 = u64 [s1 + 0x210]\n  5941: t0 = u64 [s1 + 0x208]\n  5945: a0 = u64 [s1 + 0x200]\n  5949: a1 = u64 [s1 + 0x1f8]\n  5953: u64 [s1 + 512] = 0\n  5957: u64 [s1 + 0x208] = a5\n  5961: u64 [a2 + 0x2e8] = a5\n  5965: a4 = a2 + 0x300\n  5969: u64 [a4 + 0x8] = a3\n  5972: u64 [a2 + 752] = 0\n  5976: u64 [a4 + 0x10] = a1\n  5979: u64 [a2 + 760] = 0\n  5983: u64 [a4 + 0x18] = a0\n  5986: u64 [a2 + 768] = 0\n  5990: a0 = s1 + 0x7ff\n  5994: a0 = a0 + 0x4a1\n  5998: a1 = s1 + 0x7ff\n  6002: a1 = a1 + 0x481\n  6006: u64 [a2 + 0x320] = t0\n  6010: ra = 176, jump @1919\n      : @241 [@dyn 88] (gas: 4)\n  6017: a3 = u64 [s1 + 0x200]\n  6021: a0 = a3 >u 0\n  6023: a1 = u64 [s1 + 0x208]\n  6027: t0 = 178, jump @2556\n      : @242 [@dyn 89] (gas: 1)\n  6034: jump @244 if a2 != 0\n      : @243 (gas: 1)\n  6037: jump @1906\n      : @244 (gas: 4)\n  6041: a0 = s1 + 0x7ff\n  6045: a0 = a0 + 0x461\n  6049: a1 = u64 [s1 + 0x210]\n  6053: ra = 180, jump @17\n      : @245 [@dyn 90] (gas: 15)\n  6059: a1 = s1 + 0x7ff\n  6063: a1 = a1 + 0x199\n  6067: a2 = a1 + 0x200\n  6071: a0 = u64 [a2 + 0xe0]\n  6075: u64 [s1 + 0xd0] = a0\n  6079: a0 = u64 [a2 + 0xd8]\n  6083: u64 [s1 + 0xc8] = a0\n  6087: a0 = u64 [a2 + 0xd0]\n  6091: u64 [s1 + 0xc0] = a0\n  6095: a0 = u64 [a2 + 0xc8]\n  6099: u64 [s1 + 0xb8] = a0\n  6103: a0 = s1 + 0x7ff\n  6107: a0 = a0 + 0x441\n  6111: a1 = 0x40\n  6114: ra = 182, jump @17\n      : @246 [@dyn 91] (gas: 15)\n  6120: t0 = s1 + 0x7ff\n  6124: t0 = t0 + 0x199\n  6128: a1 = t0 + 0x200\n  6132: a3 = u64 [a1 + 0xc0]\n  6136: a4 = u64 [a1 + 0xb8]\n  6140: a5 = u64 [a1 + 0xb0]\n  6144: a0 = u64 [a1 + 0xa8]\n  6148: a2 = a5 | a3\n  6151: a1 = a0 | a4\n  6154: a1 = a1 | a2\n  6157: a1 = a1 >> 0x20\n  6160: a2 = a2 | a4\n  6163: a2 = a2 << 0x20\n  6166: a1 = a1 | a2\n  6169: jump @248 if a1 == 0\n      : @247 (gas: 1)\n  6172: jump @848\n      : @248 (gas: 12)\n  6175: u64 [t0 + 664] = 0\n  6179: u64 [t0 + 656] = 0\n  6183: u64 [t0 + 648] = 0\n  6187: u64 [s1 + 0x208] = a3\n  6191: a3 = 0x70a0823100000000\n  6201: a1 = s1 + 0x7ff\n  6205: a1 = a1 + 0x421\n  6209: u64 [t0 + 0x2a0] = a3\n  6213: u64 [s1 + 0x210] = a0\n  6217: u64 [s1 + 0x200] = a4\n  6221: u64 [s1 + 0x1f8] = a5\n  6225: ra = 184, jump @19\n      : @249 [@dyn 92] (gas: 5)\n  6231: a0 = u64 [s1 + 0xd8]\n  6235: ra = 0xba\n  6239: ecalli 0 // 'address'\n  6240: t0 = 0xbc\n  6244: jump @2577\n      : @250 [@dyn 93] (gas: 1)\n  6248: t0 = 188, jump @2577\n      : @251 [@dyn 94] (gas: 1)\n  6255: jump @253 if a1 != 0\n      : @252 (gas: 1)\n  6258: jump @848\n      : @253 (gas: 2)\n  6261: a2 = u64 [s1 + 0xf8]\n  6265: t0 = 190, jump @2563\n      : @254 [@dyn 95] (gas: 10)\n  6272: a5 = s1 + 0x7ff\n  6276: a5 = a5 + 0x199\n  6280: u64 [a5 + 640] = 0\n  6284: a4 = a5 + 0x200\n  6288: u64 [a4 + 0x78] = a1\n  6291: u64 [a4 + 0x70] = a2\n  6294: a1 = s1 + 0x7ff\n  6298: a1 = a1 + 0x401\n  6302: u64 [a4 + 0x68] = a3\n  6305: ra = 192, jump @19\n      : @255 [@dyn 96] (gas: 3)\n  6311: ra = 0xc2\n  6315: ecalli 12 // 'ref_time_left'\n  6317: fallthrough\n      : @256 [@dyn 97] (gas: 9)\n  6318: a0 = u64 [s1 + 0xe0]\n  6322: a0 = reverse a0\n  6324: a1 = a0 << 0x20\n  6327: a2 = u64 [s1 + 0xe8]\n  6331: a2 = reverse a2\n  6333: a2 = a2 >> 0x20\n  6336: a1 = a1 | a2\n  6339: a2 = u64 [s1 + 0xf0]\n  6343: t0 = 196, jump @2617\n      : @257 [@dyn 98] (gas: 7)\n  6350: u64 [a0 + 1760] = 0\n  6354: u64 [a0 + 1752] = 0\n  6358: u64 [a0 + 1744] = 0\n  6362: u64 [a0 + 1736] = 0\n  6366: a1 = 0x24\n  6369: a0 = u64 [s1 + 0x210]\n  6373: ra = 198, jump @32\n      : @258 [@dyn 99] (gas: 4)\n  6379: u64 [s1 + 0x1d8] = a0\n  6383: a1 = 0x20\n  6386: a0 = u64 [s1 + 0x210]\n  6390: ra = 200, jump @32\n      : @259 [@dyn 100] (gas: 12)\n  6396: u64 [s1 + 480] = 0x20\n  6401: a1 = s1 + 0x4198\n  6405: u32 [a1 + 1768] = 0x20\n  6410: u64 [a1 + 1824] = 0\n  6414: u64 [a1 + 1816] = 0\n  6418: u64 [a1 + 1808] = 0\n  6422: u64 [a1 + 1800] = 0\n  6426: a1 = s1 + 0x4860\n  6430: a1 = a1 << 0x20\n  6433: a1 = a1 >> 0x20\n  6436: a2 = 0x48a0\n  6440: t0 = 202, jump @2637\n      : @260 [@dyn 101] (gas: 6)\n  6447: a4 = u64 [s1 + 0x1f0]\n  6451: a4 = a4 | a1\n  6454: a0 = a0 << 0x20\n  6457: a0 = a0 >> 0x20\n  6460: a1 = 0x4880\n  6464: t0 = 204, jump @2662\n      : @261 [@dyn 102] (gas: 3)\n  6471: a0 = u64 [s1 + 0x1e8]\n  6475: ecalli 1 // 'call'\n  6477: fallthrough\n      : @262 (gas: 1)\n  6478: jump @264 if a0 == 0\n      : @263 (gas: 1)\n  6481: jump @1607\n      : @264 (gas: 2)\n  6484: ecalli 14 // 'return_data_size'\n  6486: fallthrough\n      : @265 (gas: 1)\n  6487: jump @267 if a0 >=u 32\n      : @266 (gas: 3)\n  6491: ecalli 14 // 'return_data_size'\n  6493: u64 [s1 + 0x1e0] = a0\n  6497: fallthrough\n      : @267 (gas: 23)\n  6498: a2 = s1 + 0x7ff\n  6502: a2 = a2 + 0x199\n  6506: a0 = u64 [s1 + 0x1e0]\n  6510: a4 = a2 + 0x200\n  6514: u64 [a4 + 0x8] = a0\n  6517: a5 = s1 + 0x200\n  6521: a0 = u64 [a5 + 0x10]\n  6524: u64 [a4 + 0x28] = a0\n  6527: u64 [s1 + 496] = 0\n  6531: u64 [a2 + 528] = 0\n  6535: a0 = u64 [s1 + 0x1f8]\n  6539: u64 [a4 + 0x30] = a0\n  6542: u64 [a2 + 536] = 0\n  6546: a0 = u64 [a5]\n  6548: u64 [a4 + 0x38] = a0\n  6551: u64 [a2 + 544] = 0\n  6555: a0 = s1 + 0x7ff\n  6559: a0 = a0 + 0x3c1\n  6563: a1 = s1 + 0x7ff\n  6567: a1 = a1 + 0x3a1\n  6571: a3 = u64 [a5 + 0x8]\n  6574: u64 [a4 + 0x40] = a3\n  6577: ra = 206, jump @1919\n      : @268 [@dyn 103] (gas: 4)\n  6584: a3 = u64 [s1 + 0x1f0]\n  6588: a0 = a3 >u 0\n  6590: a1 = u64 [s1 + 0x1e0]\n  6594: t0 = 208, jump @2556\n      : @269 [@dyn 104] (gas: 1)\n  6601: jump @271 if a2 != 0\n      : @270 (gas: 1)\n  6604: jump @1911\n      : @271 (gas: 4)\n  6608: a0 = s1 + 0x7ff\n  6612: a0 = a0 + 0x381\n  6616: a1 = u64 [s1 + 0x210]\n  6620: ra = 210, jump @17\n      : @272 [@dyn 105] (gas: 34)\n  6626: a1 = s1 + 0x7ff\n  6630: a1 = a1 + 0x199\n  6634: a0 = u64 [a1 + 0x200]\n  6638: u64 [s1 + 0xf0] = a0\n  6642: a2 = a1 + 0x100\n  6646: a0 = u64 [a2 + 0xf8]\n  6650: u64 [s1 + 0xe8] = a0\n  6654: a0 = u64 [a2 + 0xf0]\n  6658: u64 [s1 + 0xe0] = a0\n  6662: a0 = u64 [a2 + 0xe8]\n  6666: u64 [s1 + 0xb0] = a0\n  6670: a5 = s1 + 0x100\n  6674: a0 = u64 [a5 + 0x98]\n  6678: u64 [a2 + 0xa0] = a0\n  6682: a0 = u64 [a5 + 0x90]\n  6686: u64 [a2 + 0x98] = a0\n  6690: a0 = u64 [a5 + 0x88]\n  6694: u64 [a2 + 0x90] = a0\n  6698: a0 = u64 [a5 + 0x80]\n  6702: u64 [a2 + 0x88] = a0\n  6706: u64 [a1 + 448] = 0\n  6710: u64 [a1 + 440] = 0\n  6714: a0 = u64 [a5 + 0xa0]\n  6718: u64 [a2 + 0xb0] = a0\n  6722: a4 = a1\n  6724: a0 = s1 + 0x7ff\n  6728: a0 = a0 + 0x361\n  6732: a1 = s1 + 0x7ff\n  6736: a1 = a1 + 0x341\n  6740: a2 = s1 + 0x7ff\n  6744: a2 = a2 + 0x321\n  6748: a3 = u64 [a5 + 0x40]\n  6751: u64 [a4 + 0x1a8] = a3\n  6755: ra = 212, jump @1980\n      : @273 [@dyn 106] (gas: 23)\n  6762: a3 = s1 + 0x7ff\n  6766: a3 = a3 + 0x199\n  6770: a4 = a3 + 0x100\n  6774: a0 = u64 [a4 + 0xd0]\n  6778: a1 = u64 [a4 + 0xc8]\n  6782: a2 = u64 [a4 + 0xd8]\n  6786: a3 = u64 [a4 + 0xe0]\n  6790: a5 = u64 [s1 + 0xc0]\n  6794: a4 = a5 ^ a0\n  6797: a0 = a0 <u a5\n  6800: a5 = u64 [s1 + 0xb8]\n  6804: a1 = a1 <u a5\n  6807: a1 = a0 if a4 != 0\n  6810: a4 = u64 [s1 + 0xd0]\n  6814: a0 = a4 ^ a3\n  6817: a3 = a3 <u a4\n  6820: a5 = u64 [s1 + 0xc8]\n  6824: a4 = a2 <u a5\n  6827: a4 = a3 if a0 != 0\n  6830: a2 = a2 ^ a5\n  6833: a0 = a0 | a2\n  6836: a1 = a4 if a0 != 0\n  6839: jump @275 if a1 != 0\n      : @274 (gas: 1)\n  6842: jump @1629\n      : @275 (gas: 26)\n  6845: a5 = s1 + 0x100\n  6849: a0 = u64 [a5 + 0x80]\n  6853: a1 = s1 + 0x7ff\n  6857: a1 = a1 + 0x199\n  6861: a2 = a1 + 0x100\n  6865: u64 [a2 + 0x28] = a0\n  6868: u64 [a1 + 352] = 0\n  6872: u64 [a1 + 344] = 0\n  6876: a0 = u64 [a5 + 0x40]\n  6879: u64 [a2 + 0x48] = a0\n  6882: a0 = u64 [a5 + 0x88]\n  6886: u64 [a2 + 0x30] = a0\n  6889: a0 = u64 [a5 + 0xa0]\n  6893: u64 [a2 + 0x50] = a0\n  6896: a0 = u64 [a5 + 0x90]\n  6900: u64 [a2 + 0x38] = a0\n  6903: a4 = a1\n  6905: a0 = s1 + 0x7ff\n  6909: a0 = a0 + 0x301\n  6913: a1 = s1 + 0x7ff\n  6917: a1 = a1 + 0x2e1\n  6921: a2 = s1 + 0x7ff\n  6925: a2 = a2 + 0x2c1\n  6929: a3 = u64 [a5 + 0x98]\n  6933: u64 [a4 + 0x140] = a3\n  6937: ra = 214, jump @1980\n      : @276 [@dyn 107] (gas: 26)\n  6944: a4 = s1 + 0x7ff\n  6948: a4 = a4 + 0x199\n  6952: a5 = a4 + 0x100\n  6956: a0 = u64 [a5 + 0x68]\n  6959: a1 = u64 [a5 + 0x70]\n  6962: a2 = u64 [a5 + 0x78]\n  6965: a3 = u64 [a5 + 0x80]\n  6969: u64 [a4 + 0xe0] = a3\n  6973: u64 [a4 + 0xd8] = a2\n  6977: u64 [a4 + 0xd0] = a1\n  6981: u64 [a4 + 0xc8] = a0\n  6985: a0 = u64 [s1 + 0xd0]\n  6989: u64 [a5] = a0\n  6991: a0 = u64 [s1 + 0xc8]\n  6995: u64 [a4 + 0xf8] = a0\n  6999: a0 = u64 [s1 + 0xc0]\n  7003: u64 [a4 + 0xf0] = a0\n  7007: a0 = s1 + 0x7ff\n  7011: a0 = a0 + 0x2a1\n  7015: a1 = s1 + 0x7ff\n  7019: a1 = a1 + 0x281\n  7023: a2 = s1 + 0x7ff\n  7027: a2 = a2 + 0x261\n  7031: a3 = u64 [s1 + 0xb8]\n  7035: u64 [a4 + 0xe8] = a3\n  7039: ra = 216, jump @1980\n      : @277 [@dyn 108] (gas: 11)\n  7046: a1 = s1 + 0x7ff\n  7050: a1 = a1 + 0x199\n  7054: a2 = a1 + 0x100\n  7058: a0 = u64 [a2 + 0x20]\n  7061: u64 [s1 + 0xa8] = a0\n  7065: a0 = u64 [a2 + 0x18]\n  7068: u64 [s1 + 0xa0] = a0\n  7072: a0 = u64 [a2 + 0x10]\n  7075: u64 [s1 + 0x98] = a0\n  7079: a0 = u64 [a2 + 0x8]\n  7082: jump @1630\n      : @278 (gas: 9)\n  7085: u64 [t0 + 1984] = 0\n  7089: u64 [t0 + 1976] = 0\n  7093: u64 [t0 + 1968] = 0\n  7097: u64 [t0 + 1960] = 0\n  7101: a0 = s1 + 0x5000\n  7105: i32 a0 = a0 + 0xfffffffffffff940\n  7109: ra = 0xda\n  7113: ecalli 18 // 'value_transferred'\n  7115: fallthrough\n      : @279 [@dyn 109] (gas: 7)\n  7116: a2 = s1 + 0x4198\n  7120: a5 = a2 + 0x700\n  7124: a0 = u64 [a5 + 0xc0]\n  7128: a1 = u64 [a5 + 0xb0]\n  7132: a3 = u64 [a5 + 0xb8]\n  7136: a4 = u64 [a5 + 0xa8]\n  7140: t0 = 220, jump @2574\n      : @280 [@dyn 110] (gas: 6)\n  7147: t0 = u64 [a1 + 0x10]\n  7150: a2 = u64 [a1 + 0x8]\n  7153: a0 = u64 [a1]\n  7155: a3 = a3 | a4\n  7158: a3 = a3 | a5\n  7161: jump @282 if a3 == 0\n      : @281 (gas: 1)\n  7164: jump @838\n      : @282 (gas: 22)\n  7167: a1 = u64 [s1 + 0x210]\n  7171: a3 = u32 [a1]\n  7173: a1 = a3 + 0xfffffffffffffffc\n  7176: a3 = a1 <u a3\n  7179: a5 = a3 + 0xffffffffffffffff\n  7182: a3 = 0 if a5 != 0\n  7184: a4 = a3 >u 0\n  7186: a4 = a4 + 0xffffffffffffffff\n  7189: t2 = a3 + 0xffffffffffffffff\n  7192: a3 = t2 <u t0\n  7195: ra = a4 ^ t1\n  7198: a4 = a4 <s t1\n  7201: a4 = a3 if ra == 0\n  7204: u64 [s1 + 0x218] = a0\n  7208: a0 = a1 <u a0\n  7211: a1 = a5 ^ a2\n  7214: a5 = a5 <u a2\n  7217: a5 = a0 if a1 == 0\n  7220: a3 = t2 ^ t0\n  7223: a3 = a3 | ra\n  7226: a5 = a4 if a3 != 0\n  7229: jump @284 if a5 == 0\n      : @283 (gas: 1)\n  7232: jump @836\n      : @284 (gas: 2)\n  7235: a0 = s1 + 0x1360\n  7239: ra = 222, jump @1987\n      : @285 [@dyn 111] (gas: 3)\n  7246: t0 = 0xe0\n  7250: a1 = s1 + 0x1198\n  7254: fallthrough\n      : @286 [@dyn 112] (gas: 15)\n  7255: a0 = u64 [a1 + 0x208]\n  7259: a2 = s1 + 0x100\n  7263: u64 [a2 + 0xe8] = a0\n  7267: a3 = a1 + 0x100\n  7271: a0 = u64 [a3 + 0xf0]\n  7275: u64 [a2 + 0xf0] = a0\n  7279: a0 = u64 [a3 + 0xe8]\n  7283: u64 [a2 + 0xf8] = a0\n  7287: a0 = u64 [a3 + 0xd0]\n  7291: u64 [s1 + 0x210] = a0\n  7295: a0 = u64 [a3 + 0xc8]\n  7299: u64 [s1 + 0x218] = a0\n  7303: a0 = s1 + 0x1340\n  7307: a1 = 0x40\n  7310: ra = 226, jump @17\n      : @287 [@dyn 113] (gas: 14)\n  7316: a2 = s1 + 0x1198\n  7320: t0 = u64 [a2 + 0x1c0]\n  7324: a1 = a2 + 0x100\n  7328: a5 = u64 [a1 + 0xb8]\n  7332: a4 = u64 [a1 + 0xb0]\n  7336: a0 = u64 [a1 + 0xa8]\n  7340: a3 = a4 | t0\n  7343: a1 = a0 | a5\n  7346: a1 = a1 | a3\n  7349: a1 = a1 >> 0x20\n  7352: a3 = a3 | a5\n  7355: a3 = a3 << 0x20\n  7358: a1 = a1 | a3\n  7361: jump @289 if a1 == 0\n      : @288 (gas: 1)\n  7364: jump @848\n      : @289 (gas: 14)\n  7367: a1 = u64 [s1 + 0x210]\n  7371: a1 = a1 << 0x10\n  7374: a3 = a1 >> 0x10\n  7377: u64 [a2 + 416] = 0\n  7381: u64 [a2 + 408] = 0\n  7385: a1 = u64 [s1 + 0x218]\n  7389: u64 [a2 + 0x188] = a1\n  7393: a1 = s1 + 0x1320\n  7397: u64 [a2 + 0x190] = a3\n  7401: u64 [s1 + 0x208] = a0\n  7405: u64 [s1 + 0x200] = a4\n  7409: u64 [s1 + 0x210] = t0\n  7413: u64 [s1 + 0x218] = a5\n  7417: ra = 228, jump @19\n      : @290 [@dyn 114] (gas: 12)\n  7423: a2 = s1 + 0x200\n  7427: a4 = u64 [a2]\n  7429: a3 = u64 [a2 + 0x8]\n  7432: a0 = u64 [a2 + 0x18]\n  7435: a1 = u64 [a2 + 0x10]\n  7438: a1 = a1 | a0\n  7441: a2 = 0x100000000\n  7451: a0 = 0xffffffe0\n  7461: a0 = a3 <u a0\n  7464: a0 = 0 if a4 != 0\n  7466: a0 = 0 if a1 != 0\n  7468: jump @292 if a0 != 0\n      : @291 (gas: 1)\n  7471: jump @848\n      : @292 (gas: 15)\n  7474: u64 [s1 + 0x218] = a1\n  7478: a1 = 0xffffffffffff\n  7488: u64 [s1 + 0x210] = a2\n  7492: a2 = u64 [s1 + 0x1f0]\n  7496: a2 = a2 & a1\n  7499: a1 = u64 [s1 + 0x1f8]\n  7503: a1 = a1 & 0xffffffffffffffff\n  7506: i32 a0 = a3 + 0x20\n  7509: a3 = s1 + 0x1198\n  7513: u64 [a3 + 384] = 0\n  7517: u64 [a3 + 376] = 0\n  7521: u64 [a3 + 0x168] = a1\n  7525: a1 = s1 + 0x1300\n  7529: u64 [a3 + 0x170] = a2\n  7533: ra = 230, jump @19\n      : @293 [@dyn 115] (gas: 10)\n  7539: a3 = s1 + 0x200\n  7543: a2 = u64 [a3 + 0x8]\n  7546: a0 = u64 [a3 + 0x10]\n  7549: a0 = a0 + 0xffffffffffffffc0\n  7552: a0 = a2 <u a0\n  7555: a1 = u64 [a3]\n  7557: a0 = 0 if a1 != 0\n  7559: a1 = u64 [a3 + 0x18]\n  7562: a0 = 0 if a1 != 0\n  7564: jump @295 if a0 != 0\n      : @294 (gas: 1)\n  7567: jump @848\n      : @295 (gas: 11)\n  7570: a0 = u64 [s1 + 0x1e8]\n  7574: a0 = a0 << 0x20\n  7577: a1 = a0 >> 0x20\n  7580: i32 a0 = a2 + 0x40\n  7583: a3 = s1 + 0x1198\n  7587: u64 [a3 + 352] = 0\n  7591: u64 [a3 + 344] = 0\n  7595: u64 [a3 + 0x148] = a1\n  7599: a1 = s1 + 0x12e0\n  7603: u64 [a3 + 336] = 0\n  7607: ra = 232, jump @19\n      : @296 [@dyn 116] (gas: 3)\n  7613: a1 = 0x60\n  7616: a0 = u64 [s1 + 0x208]\n  7620: ra = 234, jump @32\n      : @297 [@dyn 117] (gas: 5)\n  7626: i32 a1 = a0 + 0\n  7628: a2 = 0x60\n  7631: a0 = 0\n  7633: ecalli 15 // 'seal_return'\n  7635: jump @955\n      : @298 (gas: 9)\n  7638: u64 [a2 + 96] = 0\n  7641: u64 [a2 + 88] = 0\n  7644: u64 [a2 + 80] = 0\n  7647: u64 [a2 + 72] = 0\n  7650: a0 = s1 + 0x5000\n  7654: i32 a0 = a0 + 0xfffffffffffff9e0\n  7658: ra = 0xec\n  7662: ecalli 18 // 'value_transferred'\n  7664: fallthrough\n      : @299 [@dyn 118] (gas: 6)\n  7665: a2 = s1 + 0x4998\n  7669: a0 = u64 [a2 + 0x60]\n  7672: a1 = u64 [a2 + 0x50]\n  7675: a3 = u64 [a2 + 0x58]\n  7678: a4 = u64 [a2 + 0x48]\n  7681: t0 = 238, jump @2574\n      : @300 [@dyn 119] (gas: 6)\n  7688: t0 = u64 [a1 + 0x10]\n  7691: a2 = u64 [a1 + 0x8]\n  7694: a0 = u64 [a1]\n  7696: a3 = a3 | a4\n  7699: a3 = a3 | a5\n  7702: jump @302 if a3 == 0\n      : @301 (gas: 1)\n  7705: jump @849\n      : @302 (gas: 22)\n  7708: a1 = u64 [s1 + 0x210]\n  7712: a3 = u32 [a1]\n  7714: a1 = a3 + 0xfffffffffffffffc\n  7717: a3 = a1 <u a3\n  7720: a5 = a3 + 0xffffffffffffffff\n  7723: a3 = 0 if a5 != 0\n  7725: a4 = a3 >u 0\n  7727: a4 = a4 + 0xffffffffffffffff\n  7730: t2 = a3 + 0xffffffffffffffff\n  7733: a3 = t2 <u t0\n  7736: ra = a4 ^ t1\n  7739: a4 = a4 <s t1\n  7742: a4 = a3 if ra == 0\n  7745: u64 [s1 + 0x208] = a0\n  7749: a0 = a1 <u a0\n  7752: a1 = a5 ^ a2\n  7755: a5 = a5 <u a2\n  7758: a5 = a0 if a1 == 0\n  7761: a3 = t2 ^ t0\n  7764: a3 = a3 | ra\n  7767: a5 = a4 if a3 != 0\n  7770: jump @304 if a5 == 0\n      : @303 (gas: 1)\n  7773: jump @575\n      : @304 (gas: 3)\n  7776: a0 = s1 + 0x1520\n  7780: a1 = u64 [s1 + 0x218]\n  7784: ra = 240, jump @21\n      : @305 [@dyn 120] (gas: 14)\n  7790: a1 = s1 + 0x1198\n  7794: a2 = a1 + 0x300\n  7798: a0 = u64 [a2 + 0xa0]\n  7802: a1 = s1 + 0x200\n  7806: u64 [a1 + 0x18] = a0\n  7809: a0 = u64 [a2 + 0x98]\n  7813: u64 [a1 + 0x10] = a0\n  7816: a0 = u64 [a2 + 0x90]\n  7820: u64 [a1 + 0x8] = a0\n  7823: a0 = u64 [a2 + 0x88]\n  7827: u64 [a1] = a0\n  7829: a0 = s1 + 0x1500\n  7833: a1 = 0x40\n  7836: ra = 242, jump @17\n      : @306 [@dyn 121] (gas: 1)\n  7842: t0 = 244, jump @2664\n      : @307 [@dyn 122] (gas: 5)\n  7849: a0 = u64 [a5 + 0x80]\n  7853: a1 = u64 [a5 + 0x78]\n  7856: a2 = u64 [a5 + 0x70]\n  7859: a4 = u64 [a5 + 0x68]\n  7862: t0 = 246, jump @2564\n      : @308 [@dyn 123] (gas: 1)\n  7869: jump @310 if a0 == 0\n      : @309 (gas: 1)\n  7872: jump @848\n      : @310 (gas: 15)\n  7875: a2 = s1 + 0x200\n  7879: a0 = u64 [a2]\n  7881: a5 = a3 + 0x300\n  7885: u64 [a5 + 0x48] = a0\n  7888: a0 = u64 [a2 + 0x8]\n  7891: u64 [a5 + 0x50] = a0\n  7894: a0 = u64 [a2 + 0x10]\n  7897: u64 [a5 + 0x58] = a0\n  7900: a1 = s1 + 0x14e0\n  7904: a0 = u64 [a2 + 0x18]\n  7907: u64 [a5 + 0x60] = a0\n  7910: a0 = a4\n  7912: u64 [s1 + 0x218] = a4\n  7916: ra = 0x3c6\n  7920: jump @19\n      : @311 (gas: 9)\n  7923: u64 [a2 + 640] = 0\n  7927: u64 [a2 + 632] = 0\n  7931: u64 [a2 + 624] = 0\n  7935: u64 [a2 + 616] = 0\n  7939: a0 = s1 + 0x5000\n  7943: i32 a0 = a0 + 0xfffffffffffffc00\n  7947: ra = 0xf8\n  7951: ecalli 18 // 'value_transferred'\n  7953: fallthrough\n      : @312 [@dyn 124] (gas: 7)\n  7954: a2 = s1 + 0x4998\n  7958: a5 = a2 + 0x200\n  7962: a0 = u64 [a5 + 0x80]\n  7966: a1 = u64 [a5 + 0x70]\n  7969: a3 = u64 [a5 + 0x78]\n  7972: a4 = u64 [a5 + 0x68]\n  7975: t0 = 250, jump @2574\n      : @313 [@dyn 125] (gas: 6)\n  7982: t0 = u64 [a1 + 0x10]\n  7985: a2 = u64 [a1 + 0x8]\n  7988: a0 = u64 [a1]\n  7990: a3 = a3 | a4\n  7993: a3 = a3 | a5\n  7996: jump @315 if a3 == 0\n      : @314 (gas: 1)\n  7999: jump @838\n      : @315 (gas: 22)\n  8002: a1 = u64 [s1 + 0x210]\n  8006: a3 = u32 [a1]\n  8008: a1 = a3 + 0xfffffffffffffffc\n  8011: a3 = a1 <u a3\n  8014: a5 = a3 + 0xffffffffffffffff\n  8017: a3 = 0 if a5 != 0\n  8019: a4 = a3 >u 0\n  8021: a4 = a4 + 0xffffffffffffffff\n  8024: t2 = a3 + 0xffffffffffffffff\n  8027: a3 = t2 <u t0\n  8030: ra = a4 ^ t1\n  8033: a4 = a4 <s t1\n  8036: a4 = a3 if ra == 0\n  8039: u64 [s1 + 0x218] = a0\n  8043: a0 = a1 <u a0\n  8046: a1 = a5 ^ a2\n  8049: a5 = a5 <u a2\n  8052: a5 = a0 if a1 == 0\n  8055: a3 = t2 ^ t0\n  8058: a3 = a3 | ra\n  8061: a5 = a4 if a3 != 0\n  8064: jump @317 if a5 == 0\n      : @316 (gas: 1)\n  8067: jump @836\n      : @317 (gas: 8)\n  8070: a1 = s1 + 0x4998\n  8074: u64 [a1 + 672] = 0\n  8078: u64 [a1 + 664] = 0\n  8082: u64 [a1 + 656] = 0\n  8086: u64 [a1 + 648] = 0xa\n  8091: a0 = s1 + 0x1b00\n  8095: a1 = s1 + 0x4c20\n  8099: ra = 252, jump @21\n      : @318 [@dyn 126] (gas: 2)\n  8105: a0 = 0x2000\n  8109: t0 = 254, jump @2670\n      : @319 [@dyn 127] (gas: 1)\n  8116: t0 = 256, jump @2649\n      : @320 [@dyn 128] (gas: 4)\n  8123: i32 a0 = a0 + 0xfffffffffffffae0\n  8127: a0 = a0 + s1\n  8130: a1 = 0x40\n  8133: ra = 258, jump @17\n      : @321 [@dyn 129] (gas: 7)\n  8139: a3 = s1 + 0x1998\n  8143: a5 = a3 + 0x100\n  8147: a0 = u64 [a5 + 0x60]\n  8150: a1 = u64 [a5 + 0x58]\n  8153: a2 = u64 [a5 + 0x50]\n  8156: a4 = u64 [a5 + 0x48]\n  8159: t0 = 260, jump @2564\n      : @322 [@dyn 130] (gas: 1)\n  8166: jump @324 if a0 == 0\n      : @323 (gas: 1)\n  8169: jump @848\n      : @324 (gas: 15)\n  8172: a2 = s1 + 0x200\n  8176: a0 = u64 [a2]\n  8178: a5 = a3 + 0x100\n  8182: u64 [a5 + 0x28] = a0\n  8185: a0 = u64 [a2 + 0x8]\n  8188: u64 [a5 + 0x30] = a0\n  8191: a0 = u64 [a2 + 0x10]\n  8194: u64 [a5 + 0x38] = a0\n  8197: a1 = s1 + 0x1ac0\n  8201: a0 = u64 [a2 + 0x18]\n  8204: u64 [a5 + 0x40] = a0\n  8207: a0 = a4\n  8209: u64 [s1 + 0x218] = a4\n  8213: ra = 0x3c6\n  8217: jump @19\n      : @325 (gas: 10)\n  8220: a0 = s1 + 0x4998\n  8224: u64 [a0 + 32] = 0\n  8227: u64 [a0 + 24] = 0\n  8230: u64 [a0 + 16] = 0\n  8233: u64 [a0 + 8] = 0\n  8236: a0 = s1 + 0x5000\n  8240: i32 a0 = a0 + 0xfffffffffffff9a0\n  8244: ra = 0x106\n  8248: ecalli 18 // 'value_transferred'\n  8250: fallthrough\n      : @326 [@dyn 131] (gas: 6)\n  8251: a2 = s1 + 0x4998\n  8255: a0 = u64 [a2 + 0x20]\n  8258: a1 = u64 [a2 + 0x10]\n  8261: a3 = u64 [a2 + 0x18]\n  8264: a4 = u64 [a2 + 0x8]\n  8267: t0 = 264, jump @2574\n      : @327 [@dyn 132] (gas: 6)\n  8274: t0 = u64 [a1 + 0x10]\n  8277: a2 = u64 [a1 + 0x8]\n  8280: a0 = u64 [a1]\n  8282: a3 = a3 | a4\n  8285: a3 = a3 | a5\n  8288: jump @329 if a3 == 0\n      : @328 (gas: 1)\n  8291: jump @838\n      : @329 (gas: 22)\n  8294: a1 = u64 [s1 + 0x210]\n  8298: a3 = u32 [a1]\n  8300: a1 = a3 + 0xfffffffffffffffc\n  8303: a3 = a1 <u a3\n  8306: a5 = a3 + 0xffffffffffffffff\n  8309: a3 = 0 if a5 != 0\n  8311: a4 = a3 >u 0\n  8313: a4 = a4 + 0xffffffffffffffff\n  8316: t2 = a3 + 0xffffffffffffffff\n  8319: a3 = t2 <u t0\n  8322: ra = a4 ^ t1\n  8325: a4 = a4 <s t1\n  8328: a4 = a3 if ra == 0\n  8331: u64 [s1 + 0x218] = a0\n  8335: a0 = a1 <u a0\n  8338: a1 = a5 ^ a2\n  8341: a5 = a5 <u a2\n  8344: a5 = a0 if a1 == 0\n  8347: a3 = t2 ^ t0\n  8350: a3 = a3 | ra\n  8353: a5 = a4 if a3 != 0\n  8356: jump @331 if a5 == 0\n      : @330 (gas: 1)\n  8359: jump @836\n      : @331 (gas: 8)\n  8362: a1 = s1 + 0x4998\n  8366: u64 [a1 + 64] = 0\n  8369: u64 [a1 + 56] = 0\n  8372: u64 [a1 + 48] = 0\n  8375: u64 [a1 + 40] = 0x6\n  8379: a0 = s1 + 0x14c0\n  8383: a1 = s1 + 0x49c0\n  8387: ra = 266, jump @21\n      : @332 [@dyn 133] (gas: 12)\n  8393: a1 = s1 + 0x1198\n  8397: a2 = a1 + 0x300\n  8401: a0 = u64 [a2 + 0x38]\n  8404: a1 = s1 + 0x200\n  8408: u64 [a1 + 0x8] = a0\n  8411: a0 = u64 [a2 + 0x30]\n  8414: u64 [a1 + 0x18] = a0\n  8417: a0 = u64 [a2 + 0x28]\n  8420: u64 [a1 + 0x10] = a0\n  8423: a0 = s1 + 0x14a0\n  8427: a1 = 0x40\n  8430: ra = 268, jump @17\n      : @333 [@dyn 134] (gas: 1)\n  8436: t0 = 270, jump @2664\n      : @334 [@dyn 135] (gas: 5)\n  8443: a4 = u64 [a5 + 0x20]\n  8446: a1 = u64 [a5 + 0x18]\n  8449: a2 = u64 [a5 + 0x10]\n  8452: a0 = u64 [a5 + 0x8]\n  8455: t0 = 272, jump @2573\n      : @335 [@dyn 136] (gas: 1)\n  8462: jump @337 if a1 == 0\n      : @336 (gas: 1)\n  8465: jump @848\n      : @337 (gas: 15)\n  8468: a4 = s1 + 0x200\n  8472: a1 = u64 [a4 + 0x8]\n  8475: a1 = a1 << 0x20\n  8478: a2 = a1 >> 0x20\n  8481: u64 [a3 + 768] = 0\n  8485: a1 = u64 [a4 + 0x10]\n  8488: a5 = a3 + 0x200\n  8492: u64 [a5 + 0xe8] = a1\n  8496: a1 = u64 [a4 + 0x18]\n  8499: u64 [a5 + 0xf0] = a1\n  8503: a1 = s1 + 0x1480\n  8507: u64 [a5 + 0xf8] = a2\n  8511: u64 [s1 + 0x218] = a0\n  8515: ra = 0x3c6\n  8519: jump @19\n      : @338 (gas: 11)\n  8522: u64 [s1 + 0x1f0] = a5\n  8526: u64 [s1 + 0x1f8] = a3\n  8530: u64 [a2 + 192] = 0\n  8534: u64 [a2 + 184] = 0\n  8538: u64 [a2 + 176] = 0\n  8542: u64 [a2 + 168] = 0\n  8546: a0 = s1 + 0x5000\n  8550: i32 a0 = a0 + 0xfffffffffffffa40\n  8554: ra = 0x112\n  8558: ecalli 18 // 'value_transferred'\n  8560: fallthrough\n      : @339 [@dyn 137] (gas: 6)\n  8561: a2 = s1 + 0x4998\n  8565: a0 = u64 [a2 + 0xc0]\n  8569: a1 = u64 [a2 + 0xb0]\n  8573: a3 = u64 [a2 + 0xb8]\n  8577: a4 = u64 [a2 + 0xa8]\n  8581: t0 = 276, jump @2574\n      : @340 [@dyn 138] (gas: 6)\n  8588: t0 = u64 [a1 + 0x10]\n  8591: a2 = u64 [a1 + 0x8]\n  8594: a0 = u64 [a1]\n  8596: a3 = a3 | a4\n  8599: a3 = a3 | a5\n  8602: jump @342 if a3 == 0\n      : @341 (gas: 1)\n  8605: jump @838\n      : @342 (gas: 22)\n  8608: a1 = u64 [s1 + 0x210]\n  8612: a3 = u32 [a1]\n  8614: a1 = a3 + 0xfffffffffffffffc\n  8617: a3 = a1 <u a3\n  8620: a5 = a3 + 0xffffffffffffffff\n  8623: a3 = 0 if a5 != 0\n  8625: a4 = a3 >u 0\n  8627: a4 = a4 + 0xffffffffffffffff\n  8630: t2 = a3 + 0xffffffffffffffff\n  8633: a3 = t2 <u t0\n  8636: ra = a4 ^ t1\n  8639: a4 = a4 <s t1\n  8642: a4 = a3 if ra == 0\n  8645: u64 [s1 + 0x218] = a0\n  8649: a0 = a1 <u a0\n  8652: a1 = a5 ^ a2\n  8655: a5 = a5 <u a2\n  8658: a5 = a0 if a1 == 0\n  8661: a3 = t2 ^ t0\n  8664: a3 = a3 | ra\n  8667: a5 = a4 if a3 != 0\n  8670: jump @344 if a5 == 0\n      : @343 (gas: 1)\n  8673: jump @836\n      : @344 (gas: 3)\n  8676: a0 = s1 + 0x1860\n  8680: a1 = 0x40\n  8683: ra = 278, jump @17\n      : @345 [@dyn 139] (gas: 7)\n  8689: a3 = s1 + 0x1198\n  8693: a5 = a3 + 0x600\n  8697: a0 = u64 [a5 + 0xe0]\n  8701: a1 = u64 [a5 + 0xd8]\n  8705: a2 = u64 [a5 + 0xd0]\n  8709: a4 = u64 [a5 + 0xc8]\n  8713: t0 = 280, jump @2564\n      : @346 [@dyn 140] (gas: 1)\n  8720: jump @348 if a0 == 0\n      : @347 (gas: 1)\n  8723: jump @848\n      : @348 (gas: 14)\n  8726: a0 = u64 [0x20028]\n  8731: a1 = u64 [0x20030]\n  8736: a2 = u64 [0x20038]\n  8741: a5 = a3 + 0x600\n  8745: u64 [a5 + 0xc0] = a0\n  8749: a0 = u64 [0x20040]\n  8754: u64 [a5 + 0xb8] = a1\n  8758: u64 [a5 + 0xb0] = a2\n  8762: a1 = s1 + 0x1840\n  8766: u64 [a5 + 0xa8] = a0\n  8770: a0 = a4\n  8772: u64 [s1 + 0x218] = a4\n  8776: ra = 0x3c6\n  8780: jump @19\n      : @349 (gas: 10)\n  8783: a0 = s1 + 0x5198\n  8787: u64 [a0 + 448] = 0\n  8791: u64 [a0 + 440] = 0\n  8795: u64 [a0 + 432] = 0\n  8799: u64 [a0 + 424] = 0\n  8803: a0 = s1 + 0x5000\n  8807: i32 a0 = a0 + 0x340\n  8811: ra = 0x11a\n  8815: ecalli 18 // 'value_transferred'\n  8817: fallthrough\n      : @350 [@dyn 141] (gas: 7)\n  8818: a2 = s1 + 0x5198\n  8822: a5 = a2 + 0x100\n  8826: a0 = u64 [a5 + 0xc0]\n  8830: a1 = u64 [a5 + 0xb0]\n  8834: a3 = u64 [a5 + 0xb8]\n  8838: a4 = u64 [a5 + 0xa8]\n  8842: t0 = 284, jump @2574\n      : @351 [@dyn 142] (gas: 6)\n  8849: t0 = u64 [a1 + 0x10]\n  8852: a2 = u64 [a1 + 0x8]\n  8855: a0 = u64 [a1]\n  8857: a3 = a3 | a4\n  8860: a3 = a3 | a5\n  8863: jump @353 if a3 == 0\n      : @352 (gas: 1)\n  8866: jump @838\n      : @353 (gas: 22)\n  8869: a1 = u64 [s1 + 0x210]\n  8873: a3 = u32 [a1]\n  8875: a1 = a3 + 0xfffffffffffffffc\n  8878: a3 = a1 <u a3\n  8881: a5 = a3 + 0xffffffffffffffff\n  8884: a3 = 0 if a5 != 0\n  8886: a4 = a3 >u 0\n  8888: a4 = a4 + 0xffffffffffffffff\n  8891: t2 = a3 + 0xffffffffffffffff\n  8894: a3 = t2 <u t0\n  8897: ra = a4 ^ t1\n  8900: a4 = a4 <s t1\n  8903: a4 = a3 if ra == 0\n  8906: u64 [s1 + 0x218] = a0\n  8910: a0 = a1 <u a0\n  8913: a1 = a5 ^ a2\n  8916: a5 = a5 <u a2\n  8919: a5 = a0 if a1 == 0\n  8922: a3 = t2 ^ t0\n  8925: a3 = a3 | ra\n  8928: a5 = a4 if a3 != 0\n  8931: jump @355 if a5 == 0\n      : @354 (gas: 1)\n  8934: jump @836\n      : @355 (gas: 3)\n  8937: a0 = s1 + 0x35c0\n  8941: a1 = 0x40\n  8944: ra = 286, jump @17\n      : @356 [@dyn 143] (gas: 21)\n  8950: a2 = s1 + 0x3198\n  8954: a0 = u64 [a2 + 0x440]\n  8958: u64 [s1 + 0x200] = a0\n  8962: a1 = u64 [a2 + 0x438]\n  8966: u64 [s1 + 0x208] = a1\n  8970: a4 = u64 [a2 + 0x430]\n  8974: u64 [s1 + 0x210] = a4\n  8978: a3 = u64 [a2 + 0x428]\n  8982: u64 [s1 + 0x218] = a3\n  8986: u64 [a2 + 1024] = 0\n  8990: u64 [a2 + 1016] = 0\n  8994: u64 [a2 + 1008] = 0\n  8998: u64 [a2 + 1000] = 0x40\n  9003: a5 = a2 + 0x400\n  9007: u64 [a5 + 0x20] = a0\n  9010: u64 [a5 + 0x18] = a1\n  9013: u64 [a5 + 0x10] = a4\n  9016: a0 = s1 + 0x35a0\n  9020: a1 = s1 + 0x3580\n  9024: u64 [a5 + 0x8] = a3\n  9027: ra = 288, jump @1919\n      : @357 [@dyn 144] (gas: 1)\n  9034: t0 = 290, jump @2627\n      : @358 [@dyn 145] (gas: 1)\n  9041: jump @360 if a0 == 0\n      : @359 (gas: 1)\n  9044: jump @848\n      : @360 (gas: 8)\n  9047: a2 = s1 + 0x3198\n  9051: u64 [a2 + 992] = 0\n  9055: u64 [a2 + 984] = 0\n  9059: u64 [a2 + 976] = 0\n  9063: a1 = s1 + 0x3560\n  9067: u64 [a2 + 968] = 0x6\n  9072: a0 = u64 [s1 + 0x218]\n  9076: ra = 292, jump @19\n      : @361 [@dyn 146] (gas: 1)\n  9082: t0 = 294, jump @2609\n      : @362 [@dyn 147] (gas: 1)\n  9089: jump @364 if a1 != 0\n      : @363 (gas: 1)\n  9092: jump @848\n      : @364 (gas: 10)\n  9095: a0 = u64 [s1 + 0x218]\n  9099: i32 a0 = a0 + 0x20\n  9102: a1 = u64 [0x20068]\n  9107: a2 = s1 + 0x3198\n  9111: u64 [a2 + 952] = 0\n  9115: u64 [a2 + 944] = 0\n  9119: u64 [a2 + 0x3c0] = a1\n  9123: a1 = s1 + 0x3540\n  9127: u64 [a2 + 936] = 0\n  9131: ra = 296, jump @19\n      : @365 [@dyn 148] (gas: 3)\n  9137: a0 = s1 + 0x3520\n  9141: a1 = 0x40\n  9144: ra = 298, jump @17\n      : @366 [@dyn 149] (gas: 27)\n  9150: a1 = s1 + 0x3198\n  9154: a3 = u64 [a1 + 0x3a0]\n  9158: u64 [s1 + 0x1f8] = a3\n  9162: a2 = u64 [a1 + 0x398]\n  9166: u64 [s1 + 0x1f0] = a2\n  9170: a4 = u64 [a1 + 0x390]\n  9174: u64 [s1 + 0x1e8] = a4\n  9178: a5 = u64 [a1 + 0x388]\n  9182: u64 [s1 + 0x1e0] = a5\n  9186: a0 = u64 [s1 + 0x200]\n  9190: u64 [a1 + 0x340] = a0\n  9194: a0 = u64 [s1 + 0x208]\n  9198: u64 [a1 + 0x338] = a0\n  9202: a0 = u64 [s1 + 0x210]\n  9206: u64 [a1 + 0x330] = a0\n  9210: a0 = u64 [s1 + 0x218]\n  9214: u64 [a1 + 0x328] = a0\n  9218: a0 = a1 + 0x300\n  9222: u64 [a0 + 0x60] = a3\n  9225: u64 [a0 + 0x58] = a2\n  9228: u64 [a0 + 0x50] = a4\n  9231: a3 = a1\n  9233: a0 = s1 + 0x3500\n  9237: a1 = s1 + 0x34e0\n  9241: a2 = s1 + 0x34c0\n  9245: u64 [a3 + 0x348] = a5\n  9249: ra = 300, jump @1943\n      : @367 [@dyn 150] (gas: 1)\n  9256: t0 = 302, jump @2619\n      : @368 [@dyn 151] (gas: 1)\n  9263: jump @370 if a0 == 0\n      : @369 (gas: 1)\n  9266: jump @848\n      : @370 (gas: 9)\n  9269: t0 = a3\n  9271: a1 = s1 + 0x3198\n  9275: a5 = a1 + 0x300\n  9279: a0 = u64 [a5 + 0x70]\n  9282: a3 = u64 [a5 + 0x80]\n  9286: u64 [s1 + 0x218] = a3\n  9290: t1 = u64 [a1 + 0x368]\n  9294: a3 = u64 [a5 + 0x78]\n  9297: jump @436\n      : @371 (gas: 9)\n  9300: u64 [a2 + 480] = 0\n  9304: u64 [a2 + 472] = 0\n  9308: u64 [a2 + 464] = 0\n  9312: u64 [a2 + 456] = 0\n  9316: a0 = s1 + 0x5000\n  9320: i32 a0 = a0 + 0x360\n  9324: ra = 0x130\n  9328: ecalli 18 // 'value_transferred'\n  9330: fallthrough\n      : @372 [@dyn 152] (gas: 3)\n  9331: a3 = s1 + 0x5198\n  9335: a4 = a3 + 0x100\n  9339: t0 = 306, jump @2665\n      : @373 [@dyn 153] (gas: 1)\n  9346: jump @375 if a0 == 0\n      : @374 (gas: 1)\n  9349: jump @844\n      : @375 (gas: 5)\n  9352: a0 = u64 [s1 + 0x210]\n  9356: a0 = i32 [a0]\n  9358: a1 = 0x43\n  9361: a3 = u64 [s1 + 0x218]\n  9365: jump @377 if a1 <u a0\n      : @376 (gas: 1)\n  9368: jump @845\n      : @377 (gas: 4)\n  9371: a0 = s1 + 0x3680\n  9375: ra = 0x134\n  9379: t0 = 0x7c8\n  9383: jump @2675\n      : @378 [@dyn 154] (gas: 31)\n  9387: a1 = s1 + 0x3198\n  9391: a2 = a1 + 0x400\n  9395: a0 = u64 [a2 + 0xe8]\n  9399: u64 [s1 + 0x218] = a0\n  9403: a0 = u64 [a2 + 0xf0]\n  9407: u64 [s1 + 0x210] = a0\n  9411: a0 = u64 [a2 + 0xf8]\n  9415: u64 [s1 + 0x208] = a0\n  9419: a0 = u64 [a1 + 0x500]\n  9423: u64 [s1 + 0x200] = a0\n  9427: a0 = s1 + 0x5000\n  9431: i32 a0 = a0 + 0x380\n  9435: a1 = 0x24\n  9438: ecalli 3 // 'call_data_load'\n  9440: a0 = s1 + 0x5198\n  9444: a2 = a0 + 0x100\n  9448: a1 = u64 [a2 + 0xe8]\n  9452: u64 [s1 + 0x1f8] = a1\n  9456: a1 = u64 [a2 + 0xf0]\n  9460: u64 [s1 + 0x1f0] = a1\n  9464: a1 = u64 [a2 + 0xf8]\n  9468: u64 [s1 + 0x1e8] = a1\n  9472: a0 = u64 [a0 + 0x200]\n  9476: u64 [s1 + 0x1e0] = a0\n  9480: a0 = 0x30290\n  9485: u64 [s1 + 0x1d8] = a0\n  9489: i32 a0 = a0 + 0\n  9491: ra = 0x136\n  9495: ecalli 5 // 'caller'\n  9497: t0 = 0x138\n  9501: jump @2593\n      : @379 [@dyn 155] (gas: 1)\n  9505: t0 = 312, jump @2593\n      : @380 [@dyn 156] (gas: 26)\n  9512: a3 = s1 + 0x3198\n  9516: a4 = u64 [a5 + 0xe0]\n  9520: u64 [a3 + 0x4a0] = a4\n  9524: a4 = u64 [a5 + 0xe8]\n  9528: u64 [a3 + 0x498] = a4\n  9532: a4 = u64 [a5 + 0xf0]\n  9536: u64 [a3 + 0x490] = a4\n  9540: a4 = u64 [a5 + 0xf8]\n  9544: a5 = a3 + 0x400\n  9548: u64 [a5 + 0x88] = a4\n  9552: a4 = u64 [s1 + 0x200]\n  9556: u64 [a5 + 0xc0] = a4\n  9560: a4 = u64 [s1 + 0x208]\n  9564: u64 [a5 + 0xb8] = a4\n  9568: a4 = u64 [s1 + 0x210]\n  9572: u64 [a5 + 0xb0] = a4\n  9576: a4 = u64 [s1 + 0x218]\n  9580: u64 [a5 + 0xa8] = a4\n  9584: u64 [a5 + 0xd8] = a2\n  9588: u64 [a5 + 0xd0] = a0\n  9592: u64 [a5 + 0xc8] = a1\n  9596: a0 = s1 + 0x3660\n  9600: a1 = s1 + 0x3640\n  9604: a2 = s1 + 0x3620\n  9608: u64 [a3 + 1248] = 0\n  9612: ra = 314, jump @2318\n      : @381 [@dyn 157] (gas: 3)\n  9619: a0 = s1 + 0x3600\n  9623: a1 = 0x40\n  9626: ra = 316, jump @17\n      : @382 [@dyn 158] (gas: 7)\n  9632: a3 = s1 + 0x3198\n  9636: a5 = a3 + 0x400\n  9640: a4 = u64 [a5 + 0x80]\n  9644: a1 = u64 [a5 + 0x78]\n  9647: a2 = u64 [a5 + 0x70]\n  9650: a0 = u64 [a5 + 0x68]\n  9653: t0 = 318, jump @2573\n      : @383 [@dyn 159] (gas: 1)\n  9660: jump @385 if a1 == 0\n      : @384 (gas: 1)\n  9663: jump @848\n      : @385 (gas: 8)\n  9666: u64 [a3 + 1120] = 0\n  9670: u64 [a3 + 1112] = 0\n  9674: u64 [a3 + 1096] = 0x1\n  9679: a1 = s1 + 0x35e0\n  9683: u64 [a3 + 1104] = 0\n  9687: u64 [s1 + 0x218] = a0\n  9691: ra = 0x3c6\n  9695: jump @19\n      : @386 (gas: 11)\n  9698: u64 [a2 + 1344] = 0\n  9702: u64 [a2 + 1336] = 0\n  9706: u64 [a2 + 1328] = 0\n  9710: u64 [a2 + 1320] = 0\n  9714: a0 = s1 + 0x5000\n  9718: i32 a0 = a0 + 0xfffffffffffffec0\n  9722: ra = 0x140\n  9726: ecalli 18 // 'value_transferred'\n  9728: a0 = 0x5000\n  9732: t0 = 0x142\n  9736: jump @2669\n      : @387 [@dyn 160] (gas: 2)\n  9740: a0 = 0x5000\n  9744: t0 = 322, jump @2669\n      : @388 [@dyn 161] (gas: 1)\n  9751: t0 = 324, jump @2672\n      : @389 [@dyn 162] (gas: 1)\n  9758: jump @391 if a0 == 0\n      : @390 (gas: 1)\n  9761: jump @844\n      : @391 (gas: 4)\n  9764: a0 = u64 [s1 + 0x210]\n  9768: a0 = i32 [a0]\n  9770: a1 = 0x23\n  9773: jump @393 if a1 <u a0\n      : @392 (gas: 1)\n  9776: jump @844\n      : @393 (gas: 4)\n  9779: a0 = s1 + 0x26e0\n  9783: ra = 0x146\n  9787: t0 = 0x7c8\n  9791: jump @2675\n      : @394 [@dyn 163] (gas: 6)\n  9795: a5 = u64 [s1 + 0x218]\n  9799: a1 = u64 [a5 + 0x10]\n  9802: a2 = u64 [a5 + 0x18]\n  9805: a3 = u64 [a5 + 0x8]\n  9808: a0 = u64 [a5]\n  9810: t0 = 328, jump @2558\n      : @395 [@dyn 164] (gas: 1)\n  9817: jump @397 if a1 == 0\n      : @396 (gas: 1)\n  9820: jump @848\n      : @397 (gas: 13)\n  9823: a4 = s1 + 0x2198\n  9827: a5 = a4 + 0x500\n  9831: a1 = u64 [a5 + 0x58]\n  9834: a2 = u64 [a5 + 0x50]\n  9837: a3 = u64 [a5 + 0x48]\n  9840: a1 = a1 << 0x20\n  9843: t0 = a1 >> 0x20\n  9846: u64 [a4 + 1344] = 0\n  9850: u64 [a5 + 0x28] = a3\n  9853: u64 [a5 + 0x30] = a2\n  9856: a1 = s1 + 0x26c0\n  9860: u64 [a4 + 0x538] = t0\n  9864: ra = 330, jump @19\n      : @398 [@dyn 165] (gas: 2)\n  9870: a1 = s1 + 0x2198\n  9874: t0 = 332, jump @2671\n      : @399 [@dyn 166] (gas: 3)\n  9881: a1 = s1 + 0x26a0\n  9885: u64 [a2 + 1296] = 0\n  9889: ra = 334, jump @19\n      : @400 [@dyn 167] (gas: 1)\n  9895: t0 = 336, jump @2555\n      : @401 [@dyn 168] (gas: 1)\n  9902: jump @403 if a1 == 0\n      : @402 (gas: 1)\n  9905: jump @848\n      : @403 (gas: 2)\n  9908: a1 = 0x40\n  9911: ra = 338, jump @32\n      : @404 [@dyn 169] (gas: 4)\n  9917: a1 = sp + 0xffffffffffffffe0\n  9920: a1 = a1 & 0xffffffffffffffe0\n  9923: u64 [s1 + 0x218] = a1\n  9927: t0 = 340, jump @2583\n      : @405 [@dyn 170] (gas: 4)\n  9934: ra = 0x156\n  9938: ecalli 10 // 'hash_keccak_256'\n  9940: t0 = 0x158\n  9944: jump @2598\n      : @406 [@dyn 171] (gas: 1)\n  9948: t0 = 344, jump @2598\n      : @407 [@dyn 172] (gas: 7)\n  9955: u64 [a5 + 0x60] = a3\n  9958: u64 [a5 + 0x58] = a2\n  9961: u64 [a5 + 0x50] = a1\n  9964: u64 [a5 + 0x48] = a0\n  9967: a0 = s1 + 0x2680\n  9971: a1 = s1 + 0x4ee0\n  9975: ra = 346, jump @21\n      : @408 [@dyn 173] (gas: 3)\n  9981: t0 = 0x15c\n  9985: a1 = s1 + 0x2198\n  9989: fallthrough\n      : @409 [@dyn 174] (gas: 13)\n  9990: a0 = u64 [a1 + 0x500]\n  9994: a2 = s1 + 0x200\n  9998: u64 [a2 + 0x18] = a0\n 10001: a3 = a1 + 0x400\n 10005: a0 = u64 [a3 + 0xf8]\n 10009: u64 [a2 + 0x10] = a0\n 10012: a0 = u64 [a3 + 0xf0]\n 10016: u64 [a2 + 0x8] = a0\n 10019: a0 = u64 [a3 + 0xe8]\n 10023: u64 [a2] = a0\n 10025: a0 = s1 + 0x2660\n 10029: a1 = 0x40\n 10032: ra = 350, jump @17\n      : @410 [@dyn 175] (gas: 7)\n 10038: a4 = s1 + 0x2198\n 10042: a5 = a4 + 0x400\n 10046: a0 = u64 [a5 + 0xe0]\n 10050: a1 = u64 [a5 + 0xd8]\n 10054: a2 = u64 [a5 + 0xd0]\n 10058: a3 = u64 [a5 + 0xc8]\n 10062: t0 = 352, jump @2597\n      : @411 [@dyn 176] (gas: 1)\n 10069: jump @413 if a0 == 0\n      : @412 (gas: 1)\n 10072: jump @848\n      : @413 (gas: 15)\n 10075: a2 = s1 + 0x200\n 10079: a0 = u64 [a2]\n 10081: a5 = a4 + 0x400\n 10085: u64 [a5 + 0xa8] = a0\n 10089: a0 = u64 [a2 + 0x8]\n 10092: u64 [a5 + 0xb0] = a0\n 10096: a0 = u64 [a2 + 0x10]\n 10099: u64 [a5 + 0xb8] = a0\n 10103: a1 = s1 + 0x2640\n 10107: a0 = u64 [a2 + 0x18]\n 10110: u64 [a5 + 0xc0] = a0\n 10114: a0 = a3\n 10116: u64 [s1 + 0x218] = a3\n 10120: ra = 0x3c6\n 10124: jump @19\n      : @414 (gas: 9)\n 10127: u64 [t0 + 1952] = 0\n 10131: u64 [t0 + 1944] = 0\n 10135: u64 [t0 + 1936] = 0\n 10139: u64 [t0 + 1928] = 0\n 10143: a0 = s1 + 0x5000\n 10147: i32 a0 = a0 + 0xfffffffffffff920\n 10151: ra = 0x162\n 10155: ecalli 18 // 'value_transferred'\n 10157: fallthrough\n      : @415 [@dyn 177] (gas: 7)\n 10158: a2 = s1 + 0x4198\n 10162: a5 = a2 + 0x700\n 10166: a0 = u64 [a5 + 0xa0]\n 10170: a1 = u64 [a5 + 0x90]\n 10174: a3 = u64 [a5 + 0x98]\n 10178: a4 = u64 [a5 + 0x88]\n 10182: t0 = 356, jump @2574\n      : @416 [@dyn 178] (gas: 6)\n 10189: t0 = u64 [a1 + 0x10]\n 10192: a2 = u64 [a1 + 0x8]\n 10195: a0 = u64 [a1]\n 10197: a3 = a3 | a4\n 10200: a3 = a3 | a5\n 10203: jump @418 if a3 == 0\n      : @417 (gas: 1)\n 10206: jump @838\n      : @418 (gas: 22)\n 10209: a1 = u64 [s1 + 0x210]\n 10213: a3 = u32 [a1]\n 10215: a1 = a3 + 0xfffffffffffffffc\n 10218: a3 = a1 <u a3\n 10221: a5 = a3 + 0xffffffffffffffff\n 10224: a3 = 0 if a5 != 0\n 10226: a4 = a3 >u 0\n 10228: a4 = a4 + 0xffffffffffffffff\n 10231: t2 = a3 + 0xffffffffffffffff\n 10234: a3 = t2 <u t0\n 10237: ra = a4 ^ t1\n 10240: a4 = a4 <s t1\n 10243: a4 = a3 if ra == 0\n 10246: u64 [s1 + 0x218] = a0\n 10250: a0 = a1 <u a0\n 10253: a1 = a5 ^ a2\n 10256: a5 = a5 <u a2\n 10259: a5 = a0 if a1 == 0\n 10262: a3 = t2 ^ t0\n 10265: a3 = a3 | ra\n 10268: a5 = a4 if a3 != 0\n 10271: jump @420 if a5 == 0\n      : @419 (gas: 1)\n 10274: jump @836\n      : @420 (gas: 3)\n 10277: a0 = s1 + 0x12c0\n 10281: a1 = 0x40\n 10284: ra = 358, jump @17\n      : @421 [@dyn 179] (gas: 21)\n 10290: a2 = s1 + 0x1198\n 10294: a0 = u64 [a2 + 0x140]\n 10298: u64 [s1 + 0x200] = a0\n 10302: a1 = u64 [a2 + 0x138]\n 10306: u64 [s1 + 0x208] = a1\n 10310: a4 = u64 [a2 + 0x130]\n 10314: u64 [s1 + 0x210] = a4\n 10318: a3 = u64 [a2 + 0x128]\n 10322: u64 [s1 + 0x218] = a3\n 10326: u64 [a2 + 256] = 0\n 10330: u64 [a2 + 248] = 0\n 10334: u64 [a2 + 240] = 0\n 10338: u64 [a2 + 232] = 0x40\n 10343: a5 = a2 + 0x100\n 10347: u64 [a5 + 0x20] = a0\n 10350: u64 [a5 + 0x18] = a1\n 10353: u64 [a5 + 0x10] = a4\n 10356: a0 = s1 + 0x12a0\n 10360: a1 = s1 + 0x1280\n 10364: u64 [a5 + 0x8] = a3\n 10367: ra = 360, jump @1919\n      : @422 [@dyn 180] (gas: 1)\n 10374: t0 = 362, jump @2627\n      : @423 [@dyn 181] (gas: 1)\n 10381: jump @425 if a0 == 0\n      : @424 (gas: 1)\n 10384: jump @848\n      : @425 (gas: 8)\n 10387: a2 = s1 + 0x1198\n 10391: u64 [a2 + 224] = 0\n 10395: u64 [a2 + 216] = 0\n 10399: u64 [a2 + 208] = 0\n 10403: a1 = s1 + 0x1260\n 10407: u64 [a2 + 200] = 0xa\n 10412: a0 = u64 [s1 + 0x218]\n 10416: ra = 364, jump @19\n      : @426 [@dyn 182] (gas: 1)\n 10422: t0 = 366, jump @2609\n      : @427 [@dyn 183] (gas: 1)\n 10429: jump @429 if a1 != 0\n      : @428 (gas: 1)\n 10432: jump @848\n      : @429 (gas: 11)\n 10435: a0 = u64 [s1 + 0x218]\n 10439: i32 a0 = a0 + 0x20\n 10442: a1 = u64 [0x20100]\n 10447: a2 = s1 + 0x1198\n 10451: u64 [a2 + 176] = 0\n 10455: u64 [a2 + 0xc0] = a1\n 10459: a1 = 0x5632000000000000\n 10469: u64 [a2 + 0xb8] = a1\n 10473: a1 = s1 + 0x1240\n 10477: u64 [a2 + 168] = 0\n 10481: ra = 368, jump @19\n      : @430 [@dyn 184] (gas: 3)\n 10487: a0 = s1 + 0x1220\n 10491: a1 = 0x40\n 10494: ra = 370, jump @17\n      : @431 [@dyn 185] (gas: 26)\n 10500: a1 = s1 + 0x1198\n 10504: a3 = u64 [a1 + 0xa0]\n 10508: u64 [s1 + 0x1f8] = a3\n 10512: a2 = u64 [a1 + 0x98]\n 10516: u64 [s1 + 0x1f0] = a2\n 10520: a4 = u64 [a1 + 0x90]\n 10524: u64 [s1 + 0x1e8] = a4\n 10528: a5 = u64 [a1 + 0x88]\n 10532: u64 [s1 + 0x1e0] = a5\n 10536: a0 = u64 [s1 + 0x200]\n 10540: u64 [a1 + 0x40] = a0\n 10543: a0 = u64 [s1 + 0x208]\n 10547: u64 [a1 + 0x38] = a0\n 10550: a0 = u64 [s1 + 0x210]\n 10554: u64 [a1 + 0x30] = a0\n 10557: a0 = u64 [s1 + 0x218]\n 10561: u64 [a1 + 0x28] = a0\n 10564: u64 [a1 + 0x60] = a3\n 10567: u64 [a1 + 0x58] = a2\n 10570: u64 [a1 + 0x50] = a4\n 10573: a3 = a1\n 10575: a0 = s1 + 0x1200\n 10579: a1 = s1 + 0x11e0\n 10583: a2 = s1 + 0x11c0\n 10587: u64 [a3 + 0x48] = a5\n 10590: ra = 372, jump @1943\n      : @432 [@dyn 186] (gas: 1)\n 10597: t0 = 374, jump @2619\n      : @433 [@dyn 187] (gas: 1)\n 10604: jump @435 if a0 == 0\n      : @434 (gas: 1)\n 10607: jump @848\n      : @435 (gas: 8)\n 10610: t0 = a3\n 10612: a1 = s1 + 0x1198\n 10616: a0 = u64 [a1 + 0x70]\n 10619: a3 = u64 [a1 + 0x80]\n 10623: u64 [s1 + 0x218] = a3\n 10627: t1 = u64 [a1 + 0x68]\n 10630: a3 = u64 [a1 + 0x78]\n 10633: fallthrough\n      : @436 (gas: 26)\n 10634: t2 = a0 ^ a4\n 10637: a5 = a0 <u a4\n 10640: ra = t1 <u a2\n 10643: a5 = ra if t2 == 0\n 10646: a1 = a3 - t0\n 10649: t2 = a1 - a5\n 10652: a1 = a1 <u a5\n 10655: u64 [s1 + 0x210] = a1\n 10659: a3 = a3 <u t0\n 10662: a5 = u64 [s1 + 0x1f8]\n 10666: a1 = u64 [s1 + 0x218]\n 10670: a5 = a1 - a5\n 10673: a5 = a5 - a3\n 10676: a1 = u64 [s1 + 0x210]\n 10680: a5 = a5 - a1\n 10683: a0 = a0 - a4\n 10686: a0 = a0 - ra\n 10689: a1 = t1 - a2\n 10692: a0 = a0 | a5\n 10695: a3 = a1 | t2\n 10698: a3 = a3 | a0\n 10701: a0 = a0 | t2\n 10704: a3 = a3 >> 0x20\n 10707: a0 = a0 << 0x20\n 10710: a0 = a0 | a3\n 10713: jump @438 if a0 == 0\n      : @437 (gas: 1)\n 10716: jump @848\n      : @438 (gas: 3)\n 10719: a0 = a2\n 10721: u64 [s1 + 0x218] = a1\n 10725: ra = 376, jump @32\n      : @439 [@dyn 188] (gas: 5)\n 10731: i32 a1 = a0 + 0\n 10733: a2 = i32 [s1 + 0x218]\n 10737: a0 = 0\n 10739: ecalli 15 // 'seal_return'\n 10741: jump @955\n      : @440 (gas: 13)\n 10744: u64 [s1 + 0x1f0] = t1\n 10748: u64 [s1 + 0x1f8] = t2\n 10752: u64 [s1 + 0x200] = ra\n 10756: u64 [s1 + 0x208] = a4\n 10760: u64 [a2 + 704] = 0\n 10764: u64 [a2 + 696] = 0\n 10768: u64 [a2 + 688] = 0\n 10772: u64 [a2 + 680] = 0\n 10776: a0 = s1 + 0x5000\n 10780: i32 a0 = a0 + 0xfffffffffffffc40\n 10784: ra = 0x17a\n 10788: ecalli 18 // 'value_transferred'\n 10790: fallthrough\n      : @441 [@dyn 189] (gas: 10)\n 10791: a3 = s1 + 0x4998\n 10795: a4 = a3 + 0x200\n 10799: a0 = u64 [a4 + 0xb8]\n 10803: a1 = u64 [a4 + 0xc0]\n 10807: a2 = u64 [a4 + 0xb0]\n 10811: a3 = u64 [a4 + 0xa8]\n 10815: a1 = a1 | a2\n 10818: a0 = a0 | a3\n 10821: a0 = a0 | a1\n 10824: jump @443 if a0 == 0\n      : @442 (gas: 1)\n 10827: jump @844\n      : @443 (gas: 4)\n 10830: a0 = u64 [s1 + 0x210]\n 10834: a0 = i32 [a0]\n 10836: a1 = 0x23\n 10839: jump @445 if a1 <u a0\n      : @444 (gas: 1)\n 10842: jump @844\n      : @445 (gas: 4)\n 10845: a0 = s1 + 0x2620\n 10849: ra = 0x17c\n 10853: t0 = 0x7c8\n 10857: jump @2675\n      : @446 [@dyn 190] (gas: 18)\n 10861: a1 = s1 + 0x2198\n 10865: a2 = a1 + 0x400\n 10869: a0 = u64 [a2 + 0xa0]\n 10873: u64 [s1 + 0x170] = a0\n 10877: a0 = u64 [a2 + 0x98]\n 10881: u64 [s1 + 0x168] = a0\n 10885: a0 = u64 [a2 + 0x90]\n 10889: u64 [s1 + 0x160] = a0\n 10893: a0 = u64 [a2 + 0x88]\n 10897: u64 [s1 + 0x158] = a0\n 10901: a1 = s1 + 0x4998\n 10905: u64 [a1 + 736] = 0\n 10909: u64 [a1 + 728] = 0\n 10913: u64 [a1 + 720] = 0\n 10917: u64 [a1 + 712] = 0xc\n 10922: a0 = s1 + 0x2600\n 10926: a1 = s1 + 0x4c60\n 10930: ra = 382, jump @21\n      : @447 [@dyn 191] (gas: 7)\n 10936: a4 = s1 + 0x2198\n 10940: a5 = a4 + 0x400\n 10944: a0 = u64 [a5 + 0x80]\n 10948: a1 = u64 [a5 + 0x70]\n 10951: a2 = u64 [a5 + 0x68]\n 10954: a3 = u64 [a5 + 0x78]\n 10957: t0 = 384, jump @2611\n      : @448 [@dyn 192] (gas: 6)\n 10964: u64 [a4 + 1120] = 0\n 10968: u64 [a4 + 1112] = 0\n 10972: u64 [a5 + 0x48] = a0\n 10975: a0 = s1 + 0x25e0\n 10979: u64 [a4 + 1104] = 0\n 10983: ra = 386, jump @1959\n      : @449 [@dyn 193] (gas: 8)\n 10990: a0 = s1 + 0x4998\n 10994: u64 [a0 + 768] = 0\n 10998: u64 [a0 + 760] = 0\n 11002: u64 [a0 + 752] = 0\n 11006: u64 [a0 + 744] = 0xc\n 11011: a0 = s1 + 0x4c80\n 11015: a1 = u64 [s1 + 0x218]\n 11019: ra = 388, jump @23\n      : @450 [@dyn 194] (gas: 2)\n 11025: a0 = s1 + 0x2580\n 11029: ra = 390, jump @1987\n      : @451 [@dyn 195] (gas: 27)\n 11036: a1 = s1 + 0x2198\n 11040: a2 = a1 + 0x400\n 11044: a0 = u64 [a2]\n 11046: u64 [s1 + 0x188] = a0\n 11050: a3 = a1 + 0x300\n 11054: a0 = u64 [a3 + 0xf8]\n 11058: u64 [s1 + 0x190] = a0\n 11062: a0 = u64 [a3 + 0xf0]\n 11066: u64 [s1 + 0x1a0] = a0\n 11070: a0 = u64 [a3 + 0xe8]\n 11074: u64 [s1 + 0x1b0] = a0\n 11078: a0 = u64 [a2 + 0x20]\n 11081: u64 [s1 + 0x178] = a0\n 11085: a0 = u64 [a2 + 0x18]\n 11088: u64 [s1 + 0x180] = a0\n 11092: a0 = u64 [a2 + 0x10]\n 11095: u64 [s1 + 0x198] = a0\n 11099: a0 = u64 [a2 + 0x8]\n 11102: u64 [s1 + 0x1a8] = a0\n 11106: a1 = s1 + 0x4998\n 11110: u64 [a1 + 776] = 0x6\n 11115: u64 [a1 + 800] = 0\n 11119: u64 [a1 + 792] = 0\n 11123: u64 [a1 + 784] = 0\n 11127: a0 = s1 + 0x2560\n 11131: a1 = s1 + 0x4ca0\n 11135: ra = 392, jump @21\n      : @452 [@dyn 196] (gas: 3)\n 11141: t0 = 0x18a\n 11145: a1 = s1 + 0x2198\n 11149: fallthrough\n      : @453 [@dyn 197] (gas: 11)\n 11150: a2 = a1 + 0x300\n 11154: a0 = u64 [a2 + 0xd8]\n 11158: a1 = s1 + 0x100\n 11162: u64 [a1 + 0xd8] = a0\n 11166: a0 = u64 [a2 + 0xd0]\n 11170: u64 [a1 + 0xd0] = a0\n 11174: a0 = u64 [a2 + 0xc8]\n 11178: u64 [a1 + 0xe0] = a0\n 11182: a0 = s1 + 0x2540\n 11186: a1 = 0x40\n 11189: ra = 396, jump @17\n      : @454 [@dyn 198] (gas: 14)\n 11195: a2 = s1 + 0x2198\n 11199: t0 = u64 [a2 + 0x3c0]\n 11203: a1 = a2 + 0x300\n 11207: a5 = u64 [a1 + 0xb8]\n 11211: a4 = u64 [a1 + 0xb0]\n 11215: a0 = u64 [a1 + 0xa8]\n 11219: a3 = a4 | t0\n 11222: a1 = a0 | a5\n 11225: a1 = a1 | a3\n 11228: a1 = a1 >> 0x20\n 11231: a3 = a3 | a5\n 11234: a3 = a3 << 0x20\n 11237: a1 = a1 | a3\n 11240: jump @456 if a1 == 0\n      : @455 (gas: 1)\n 11243: jump @848\n      : @456 (gas: 11)\n 11246: u64 [a2 + 920] = 0\n 11250: u64 [a2 + 912] = 0\n 11254: u64 [a2 + 904] = 0\n 11258: a3 = 0x70a0823100000000\n 11268: a1 = s1 + 0x2520\n 11272: u64 [a2 + 0x3a0] = a3\n 11276: u64 [s1 + 0x210] = a0\n 11280: u64 [s1 + 0x1c8] = t0\n 11284: u64 [s1 + 0x1c0] = a5\n 11288: u64 [s1 + 0x1b8] = a4\n 11292: ra = 398, jump @19\n      : @457 [@dyn 199] (gas: 8)\n 11298: a0 = 0x30290\n 11303: u64 [s1 + 0x1e8] = a0\n 11307: i32 a0 = a0 + 0\n 11309: u64 [s1 + 0x150] = a0\n 11313: ra = 0x190\n 11317: ecalli 0 // 'address'\n 11318: t0 = 0x192\n 11322: jump @2567\n      : @458 [@dyn 200] (gas: 1)\n 11326: t0 = 402, jump @2567\n      : @459 [@dyn 201] (gas: 1)\n 11333: jump @461 if a1 != 0\n      : @460 (gas: 1)\n 11336: jump @848\n      : @461 (gas: 5)\n 11339: a2 = u64 [s1 + 0x1e8]\n 11343: a1 = u64 [a2 + 0x8]\n 11346: a0 = 0x2400000000\n 11356: u64 [s1 + 0x148] = a0\n 11360: t0 = 404, jump @2571\n      : @462 [@dyn 202] (gas: 2)\n 11367: a4 = 0x2000\n 11371: t0 = 406, jump @2666\n      : @463 [@dyn 203] (gas: 3)\n 11378: a1 = s1 + 0x2500\n 11382: u64 [a4 + 0x68] = a3\n 11385: ra = 408, jump @19\n      : @464 [@dyn 204] (gas: 3)\n 11391: ra = 0x19a\n 11395: ecalli 12 // 'ref_time_left'\n 11397: fallthrough\n      : @465 [@dyn 205] (gas: 9)\n 11398: a0 = u64 [s1 + 0x1d0]\n 11402: a0 = reverse a0\n 11404: a1 = a0 << 0x20\n 11407: a2 = u64 [s1 + 0x1d8]\n 11411: a2 = reverse a2\n 11413: a2 = a2 >> 0x20\n 11416: a1 = a1 | a2\n 11419: a2 = u64 [s1 + 0x1e0]\n 11423: t0 = 412, jump @2607\n      : @466 [@dyn 206] (gas: 7)\n 11430: u64 [a0 + 832] = 0\n 11434: u64 [a0 + 824] = 0\n 11438: u64 [a0 + 816] = 0\n 11442: u64 [a0 + 808] = 0\n 11446: a1 = 0x24\n 11449: a0 = u64 [s1 + 0x210]\n 11453: ra = 414, jump @32\n      : @467 [@dyn 207] (gas: 4)\n 11459: u64 [s1 + 0x1e0] = a0\n 11463: a1 = 0x20\n 11466: a0 = u64 [s1 + 0x210]\n 11470: ra = 416, jump @32\n      : @468 [@dyn 208] (gas: 34)\n 11476: a1 = s1 + 0x4998\n 11480: u32 [a1 + 840] = 0x20\n 11485: u64 [a1 + 896] = 0\n 11489: u64 [a1 + 888] = 0\n 11493: u64 [a1 + 880] = 0\n 11497: u64 [a1 + 872] = 0\n 11501: a5 = s1 + 0x100\n 11505: a1 = u64 [a5 + 0xe8]\n 11509: a1 = a1 << 0x20\n 11512: a1 = a1 >> 0x20\n 11515: a2 = 0x1800000000\n 11525: t0 = a1 | a2\n 11528: a1 = s1 + 0x4cc0\n 11532: a1 = a1 << 0x20\n 11535: a1 = a1 >> 0x20\n 11538: a2 = s1 + 0x4d00\n 11542: a2 = a2 << 0x20\n 11545: a3 = a2 | a1\n 11548: a1 = u64 [a5 + 0xe0]\n 11552: a1 = a1 << 0x20\n 11555: a1 = a1 >> 0x20\n 11558: a4 = u64 [a5 + 0x48]\n 11561: a4 = a4 | a1\n 11564: a0 = a0 << 0x20\n 11567: a0 = a0 >> 0x20\n 11570: a1 = s1 + 0x4ce0\n 11574: a1 = a1 << 0x20\n 11577: a5 = a1 | a0\n 11580: a1 = 0xffffffffffffffff\n 11583: a2 = 0xffffffffffffffff\n 11586: u64 [s1 + 0x1e0] = t0\n 11590: a0 = t0\n 11592: ecalli 1 // 'call'\n 11594: fallthrough\n      : @469 (gas: 1)\n 11595: jump @471 if a0 == 0\n      : @470 (gas: 1)\n 11598: jump @1279\n      : @471 (gas: 2)\n 11601: ecalli 14 // 'return_data_size'\n 11603: fallthrough\n      : @472 (gas: 2)\n 11604: a5 = 0x20\n 11607: jump @474 if a0 >=u a5\n      : @473 (gas: 3)\n 11610: ecalli 14 // 'return_data_size'\n 11612: a5 = a0\n 11614: fallthrough\n      : @474 (gas: 19)\n 11615: a2 = s1 + 0x2198\n 11619: a3 = u64 [s1 + 0x210]\n 11623: t0 = u64 [s1 + 0x1c8]\n 11627: a0 = u64 [s1 + 0x1c0]\n 11631: a1 = u64 [s1 + 0x1b8]\n 11635: u64 [s1 + 464] = 0\n 11639: u64 [s1 + 0x1d8] = a5\n 11643: a4 = a2 + 0x300\n 11647: u64 [a4 + 0x8] = a5\n 11650: u64 [a4 + 0x28] = a3\n 11653: u64 [a2 + 784] = 0\n 11657: u64 [a4 + 0x30] = a1\n 11660: u64 [a2 + 792] = 0\n 11664: u64 [a4 + 0x38] = a0\n 11667: u64 [a2 + 800] = 0\n 11671: a0 = s1 + 0x24c0\n 11675: a1 = s1 + 0x24a0\n 11679: u64 [a2 + 0x340] = t0\n 11683: ra = 418, jump @1919\n      : @475 [@dyn 209] (gas: 4)\n 11690: a3 = u64 [s1 + 0x1d0]\n 11694: a0 = a3 >u 0\n 11696: a1 = u64 [s1 + 0x1d8]\n 11700: t0 = 420, jump @2556\n      : @476 [@dyn 210] (gas: 1)\n 11707: jump @478 if a2 != 0\n      : @477 (gas: 1)\n 11710: jump @1902\n      : @478 (gas: 3)\n 11714: a0 = s1 + 0x2480\n 11718: a1 = u64 [s1 + 0x210]\n 11722: ra = 422, jump @17\n      : @479 [@dyn 211] (gas: 18)\n 11728: a1 = s1 + 0x2198\n 11732: a0 = u64 [a1 + 0x300]\n 11736: u64 [s1 + 0x138] = a0\n 11740: a2 = a1 + 0x200\n 11744: a0 = u64 [a2 + 0xf8]\n 11748: u64 [s1 + 0x140] = a0\n 11752: a0 = u64 [a2 + 0xf0]\n 11756: u64 [s1 + 0x1b8] = a0\n 11760: a0 = u64 [a2 + 0xe8]\n 11764: u64 [s1 + 0x1c0] = a0\n 11768: a1 = s1 + 0x4998\n 11772: u64 [a1 + 960] = 0\n 11776: u64 [a1 + 952] = 0\n 11780: u64 [a1 + 944] = 0\n 11784: u64 [a1 + 936] = 0x7\n 11789: a0 = s1 + 0x2460\n 11793: a1 = s1 + 0x4d40\n 11797: ra = 424, jump @21\n      : @480 [@dyn 212] (gas: 3)\n 11803: t0 = 0x1aa\n 11807: a1 = s1 + 0x2198\n 11811: fallthrough\n      : @481 [@dyn 213] (gas: 11)\n 11812: a2 = a1 + 0x200\n 11816: a0 = u64 [a2 + 0xd8]\n 11820: a1 = s1 + 0x100\n 11824: u64 [a1 + 0xd0] = a0\n 11828: a0 = u64 [a2 + 0xd0]\n 11832: u64 [a1 + 0xc8] = a0\n 11836: a0 = u64 [a2 + 0xc8]\n 11840: u64 [a1 + 0xd8] = a0\n 11844: a0 = s1 + 0x2440\n 11848: a1 = 0x40\n 11851: ra = 428, jump @17\n      : @482 [@dyn 214] (gas: 14)\n 11857: t0 = s1 + 0x2198\n 11861: a1 = t0 + 0x200\n 11865: a3 = u64 [a1 + 0xc0]\n 11869: a4 = u64 [a1 + 0xb8]\n 11873: a5 = u64 [a1 + 0xb0]\n 11877: a0 = u64 [a1 + 0xa8]\n 11881: a2 = a5 | a3\n 11884: a1 = a0 | a4\n 11887: a1 = a1 | a2\n 11890: a1 = a1 >> 0x20\n 11893: a2 = a2 | a4\n 11896: a2 = a2 << 0x20\n 11899: a1 = a1 | a2\n 11902: jump @484 if a1 == 0\n      : @483 (gas: 1)\n 11905: jump @848\n      : @484 (gas: 11)\n 11908: u64 [t0 + 664] = 0\n 11912: u64 [t0 + 656] = 0\n 11916: u64 [t0 + 648] = 0\n 11920: u64 [s1 + 0x130] = a3\n 11924: a3 = 0x70a0823100000000\n 11934: a1 = s1 + 0x2420\n 11938: u64 [t0 + 0x2a0] = a3\n 11942: u64 [s1 + 0x210] = a0\n 11946: u64 [s1 + 0x128] = a4\n 11950: u64 [s1 + 0x120] = a5\n 11954: ra = 430, jump @19\n      : @485 [@dyn 215] (gas: 4)\n 11960: a0 = u64 [s1 + 0x150]\n 11964: ra = 0x1b0\n 11968: ecalli 0 // 'address'\n 11969: fallthrough\n      : @486 [@dyn 216] (gas: 11)\n 11970: a4 = u64 [s1 + 0x210]\n 11974: a3 = s1 + 0x100\n 11978: a0 = u64 [a3 + 0x30]\n 11981: a1 = u64 [a3 + 0x28]\n 11984: a0 = a0 | a1\n 11987: a1 = 0xfffffffc\n 11997: a1 = a4 <u a1\n 12000: a2 = u64 [a3 + 0x20]\n 12003: a1 = 0 if a2 != 0\n 12005: a1 = 0 if a0 != 0\n 12007: jump @488 if a1 != 0\n      : @487 (gas: 1)\n 12010: jump @848\n      : @488 (gas: 2)\n 12013: a2 = u64 [s1 + 0x1e8]\n 12017: t0 = 434, jump @2563\n      : @489 [@dyn 217] (gas: 2)\n 12024: a4 = 0x2000\n 12028: t0 = 436, jump @2667\n      : @490 [@dyn 218] (gas: 3)\n 12035: a1 = s1 + 0x2400\n 12039: u64 [a4 + 0x68] = a3\n 12042: ra = 438, jump @19\n      : @491 [@dyn 219] (gas: 3)\n 12048: ra = 0x1b8\n 12052: ecalli 12 // 'ref_time_left'\n 12054: fallthrough\n      : @492 [@dyn 220] (gas: 9)\n 12055: a0 = u64 [s1 + 0x1c8]\n 12059: a0 = reverse a0\n 12061: a1 = a0 << 0x20\n 12064: a2 = u64 [s1 + 0x1d0]\n 12068: a2 = reverse a2\n 12070: a2 = a2 >> 0x20\n 12073: a1 = a1 | a2\n 12076: a2 = u64 [s1 + 0x1d8]\n 12080: t0 = 442, jump @2607\n      : @493 [@dyn 221] (gas: 7)\n 12087: u64 [a0 + 992] = 0\n 12091: u64 [a0 + 984] = 0\n 12095: u64 [a0 + 976] = 0\n 12099: u64 [a0 + 968] = 0\n 12103: a1 = 0x24\n 12106: a0 = u64 [s1 + 0x210]\n 12110: ra = 444, jump @32\n      : @494 [@dyn 222] (gas: 4)\n 12116: u64 [s1 + 0x1d8] = a0\n 12120: a1 = 0x20\n 12123: a0 = u64 [s1 + 0x210]\n 12127: ra = 446, jump @32\n      : @495 [@dyn 223] (gas: 11)\n 12133: a1 = s1 + 0x4998\n 12137: u32 [a1 + 1000] = 0x20\n 12142: u64 [a1 + 1056] = 0\n 12146: u64 [a1 + 1048] = 0\n 12150: u64 [a1 + 1040] = 0\n 12154: u64 [a1 + 1032] = 0\n 12158: a1 = s1 + 0x4d60\n 12162: a1 = a1 << 0x20\n 12165: a1 = a1 >> 0x20\n 12168: a2 = 0x4da0\n 12172: t0 = 448, jump @2637\n      : @496 [@dyn 224] (gas: 6)\n 12179: a4 = u64 [s1 + 0x148]\n 12183: a4 = a4 | a1\n 12186: a0 = a0 << 0x20\n 12189: a0 = a0 >> 0x20\n 12192: a1 = 0x4d80\n 12196: t0 = 450, jump @2662\n      : @497 [@dyn 225] (gas: 3)\n 12203: a0 = u64 [s1 + 0x1e0]\n 12207: ecalli 1 // 'call'\n 12209: fallthrough\n      : @498 (gas: 1)\n 12210: jump @500 if a0 == 0\n      : @499 (gas: 1)\n 12213: jump @1502\n      : @500 (gas: 3)\n 12216: ra = 0x1c4\n 12220: ecalli 14 // 'return_data_size'\n 12222: fallthrough\n      : @501 [@dyn 226] (gas: 2)\n 12223: a1 = 0x20\n 12226: jump @504 if a0 >=u a1\n      : @502 (gas: 4)\n 12229: ra = 0x1c6\n 12233: ecalli 14 // 'return_data_size'\n 12235: a1 = a0\n 12237: jump @504\n      : @503 [@dyn 227] (gas: 2)\n 12239: a1 = a0\n 12241: fallthrough\n      : @504 (gas: 4)\n 12242: u64 [s1 + 472] = 0\n 12246: u64 [s1 + 0x1e0] = a1\n 12250: a0 = 0x2000\n 12254: t0 = 456, jump @2644\n      : @505 [@dyn 228] (gas: 11)\n 12261: a0 = u64 [s1 + 0x120]\n 12265: u64 [a4 + 0x30] = a0\n 12268: u64 [a3 + 536] = 0\n 12272: a0 = u64 [s1 + 0x128]\n 12276: u64 [a4 + 0x38] = a0\n 12279: u64 [a3 + 544] = 0\n 12283: a0 = s1 + 0x23c0\n 12287: a1 = s1 + 0x23a0\n 12291: a2 = u64 [s1 + 0x130]\n 12295: u64 [a4 + 0x40] = a2\n 12298: ra = 458, jump @1919\n      : @506 [@dyn 229] (gas: 4)\n 12305: a3 = u64 [s1 + 0x1d8]\n 12309: a0 = a3 >u 0\n 12311: a1 = u64 [s1 + 0x1e0]\n 12315: t0 = 460, jump @2556\n      : @507 [@dyn 230] (gas: 1)\n 12322: jump @509 if a2 != 0\n      : @508 (gas: 1)\n 12325: jump @1907\n      : @509 (gas: 5)\n 12329: a0 = 0xffffffffffff\n 12339: u64 [s1 + 0x1e0] = a0\n 12343: a0 = s1 + 0x2380\n 12347: a1 = u64 [s1 + 0x210]\n 12351: ra = 462, jump @17\n      : @510 [@dyn 231] (gas: 32)\n 12357: a2 = s1 + 0x2198\n 12361: a0 = u64 [a2 + 0x200]\n 12365: u64 [s1 + 0x148] = a0\n 12369: a3 = a2 + 0x100\n 12373: a0 = u64 [a3 + 0xf8]\n 12377: u64 [s1 + 0x1c8] = a0\n 12381: a0 = u64 [a3 + 0xf0]\n 12385: u64 [s1 + 0x1d0] = a0\n 12389: a0 = u64 [a3 + 0xe8]\n 12393: u64 [s1 + 0x1d8] = a0\n 12397: a0 = u64 [s1 + 0x1a0]\n 12401: a1 = u64 [s1 + 0x1e0]\n 12405: a0 = a0 & a1\n 12408: u64 [a2 + 416] = 0\n 12412: u64 [a2 + 408] = 0\n 12416: u64 [s1 + 0x210] = a0\n 12420: u64 [a3 + 0x90] = a0\n 12424: a0 = u64 [s1 + 0x1b0]\n 12428: u64 [a3 + 0x88] = a0\n 12432: a0 = u64 [s1 + 0x138]\n 12436: u64 [a3 + 0xc0] = a0\n 12440: a0 = u64 [s1 + 0x140]\n 12444: u64 [a3 + 0xb8] = a0\n 12448: a0 = u64 [s1 + 0x1b8]\n 12452: u64 [a3 + 0xb0] = a0\n 12456: a4 = a2\n 12458: a0 = s1 + 0x2360\n 12462: a1 = s1 + 0x2340\n 12466: a2 = s1 + 0x2320\n 12470: a3 = u64 [s1 + 0x1c0]\n 12474: u64 [a4 + 0x1a8] = a3\n 12478: ra = 464, jump @2218\n      : @511 [@dyn 232] (gas: 32)\n 12485: a1 = s1 + 0x2198\n 12489: a3 = a1 + 0x100\n 12493: a0 = u64 [a3 + 0xe0]\n 12497: u64 [s1 + 0x130] = a0\n 12501: a0 = u64 [a3 + 0xd8]\n 12505: u64 [s1 + 0x128] = a0\n 12509: a0 = u64 [a3 + 0xd0]\n 12513: u64 [s1 + 0x120] = a0\n 12517: a0 = u64 [a3 + 0xc8]\n 12521: u64 [s1 + 0x118] = a0\n 12525: a0 = u64 [s1 + 0x1e0]\n 12529: a2 = u64 [s1 + 0x198]\n 12533: a0 = a0 & a2\n 12536: u64 [a1 + 320] = 0\n 12540: u64 [a1 + 312] = 0\n 12544: u64 [s1 + 0xd8] = a0\n 12548: u64 [a3 + 0x30] = a0\n 12551: a0 = u64 [s1 + 0x1a8]\n 12555: u64 [a3 + 0x28] = a0\n 12558: a0 = u64 [s1 + 0x148]\n 12562: u64 [a3 + 0x60] = a0\n 12565: a0 = u64 [s1 + 0x1c8]\n 12569: u64 [a3 + 0x58] = a0\n 12572: a0 = u64 [s1 + 0x1d0]\n 12576: u64 [a3 + 0x50] = a0\n 12579: a4 = a1\n 12581: a0 = s1 + 0x2300\n 12585: a1 = s1 + 0x22e0\n 12589: a2 = s1 + 0x22c0\n 12593: a3 = u64 [s1 + 0x1d8]\n 12597: u64 [a4 + 0x148] = a3\n 12601: ra = 466, jump @2218\n      : @512 [@dyn 233] (gas: 32)\n 12608: a1 = s1 + 0x2198\n 12612: a2 = a1 + 0x100\n 12616: a0 = u64 [a2 + 0x80]\n 12620: a5 = s1 + 0x100\n 12624: u64 [a5 + 0x10] = a0\n 12627: a0 = u64 [a2 + 0x78]\n 12630: u64 [a5 + 0x8] = a0\n 12633: a0 = u64 [a2 + 0x70]\n 12636: u64 [a5] = a0\n 12638: a0 = u64 [a2 + 0x68]\n 12641: u64 [s1 + 0xf8] = a0\n 12645: a0 = u64 [a5 + 0x78]\n 12648: u64 [a1 + 0xe0] = a0\n 12652: a0 = u64 [a5 + 0x80]\n 12656: u64 [a1 + 0xd8] = a0\n 12660: a0 = u64 [a5 + 0x98]\n 12664: u64 [a1 + 0xd0] = a0\n 12668: a0 = u64 [a5 + 0xa8]\n 12672: u64 [a1 + 0xc8] = a0\n 12676: a0 = u64 [a5 + 0x88]\n 12680: u64 [a2] = a0\n 12682: a0 = u64 [a5 + 0x90]\n 12686: u64 [a1 + 0xf8] = a0\n 12690: a0 = u64 [a5 + 0xa0]\n 12694: u64 [a1 + 0xf0] = a0\n 12698: a4 = a1\n 12700: a0 = s1 + 0x22a0\n 12704: a1 = s1 + 0x2280\n 12708: a2 = s1 + 0x2260\n 12712: a3 = u64 [a5 + 0xb0]\n 12716: u64 [a4 + 0xe8] = a3\n 12720: ra = 468, jump @2359\n      : @513 [@dyn 234] (gas: 13)\n 12727: a1 = s1 + 0x2198\n 12731: a2 = a1 + 0x100\n 12735: a0 = u64 [a2 + 0x20]\n 12738: u64 [s1 + 0xd0] = a0\n 12742: a0 = u64 [a2 + 0x18]\n 12745: u64 [s1 + 0xc0] = a0\n 12749: a0 = u64 [a2 + 0x10]\n 12752: u64 [s1 + 0xc8] = a0\n 12756: a0 = u64 [a2 + 0x8]\n 12759: u64 [s1 + 0xb8] = a0\n 12763: a0 = s1 + 0x2240\n 12767: a1 = u64 [s1 + 0x218]\n 12771: ra = 470, jump @21\n      : @514 [@dyn 235] (gas: 9)\n 12777: a3 = s1 + 0x2198\n 12781: t0 = u64 [a3 + 0xc0]\n 12785: a5 = u64 [a3 + 0xb8]\n 12789: a4 = u64 [a3 + 0xb0]\n 12793: a2 = u64 [a3 + 0xa8]\n 12797: a0 = a4 | t0\n 12800: a1 = a2 | a5\n 12803: a0 = a0 | a1\n 12806: jump @516 if a0 == 0\n      : @515 (gas: 1)\n 12809: jump @1554\n      : @516 (gas: 3)\n 12812: t0 = 0x1d8\n 12816: a1 = s1 + 0x1998\n 12820: fallthrough\n      : @517 [@dyn 236] (gas: 23)\n 12821: a0 = u64 [s1 + 0xf8]\n 12825: a2 = a1 + 0x600\n 12829: u64 [a2 + 0xc8] = a0\n 12833: a5 = s1 + 0x100\n 12837: a0 = u64 [a5 + 0x18]\n 12840: u64 [a2 + 0xe8] = a0\n 12844: a0 = u64 [a5]\n 12846: u64 [a2 + 0xd0] = a0\n 12850: a0 = u64 [a5 + 0x20]\n 12853: u64 [a2 + 0xf0] = a0\n 12857: a0 = u64 [a5 + 0x8]\n 12860: u64 [a2 + 0xd8] = a0\n 12864: a0 = u64 [a5 + 0x28]\n 12867: u64 [a2 + 0xf8] = a0\n 12871: a0 = u64 [a5 + 0x10]\n 12874: u64 [a2 + 0xe0] = a0\n 12878: a4 = a1\n 12880: a0 = s1 + 0x20a0\n 12884: a1 = s1 + 0x2080\n 12888: a2 = s1 + 0x2060\n 12892: a3 = u64 [a5 + 0x30]\n 12895: u64 [a4 + 0x700] = a3\n 12899: ra = 474, jump @2197\n      : @518 [@dyn 237] (gas: 14)\n 12906: a4 = s1 + 0x1998\n 12910: a5 = a4 + 0x700\n 12914: a2 = u64 [a5 + 0x8]\n 12917: a0 = u64 [a5 + 0x10]\n 12920: a1 = u64 [a5 + 0x18]\n 12923: a3 = u64 [a5 + 0x20]\n 12926: a5 = a4 + 0x600\n 12930: u64 [a5 + 0xa0] = a3\n 12934: u64 [a5 + 0x98] = a1\n 12938: u64 [a5 + 0x90] = a0\n 12942: a0 = s1 + 0x2040\n 12946: a1 = s1 + 0x2020\n 12950: u64 [a5 + 0x88] = a2\n 12954: ra = 476, jump @2444\n      : @519 [@dyn 238] (gas: 15)\n 12961: a2 = s1 + 0x1998\n 12965: a4 = a2 + 0x600\n 12969: a0 = u64 [a4 + 0xc0]\n 12973: a1 = u64 [a4 + 0xb8]\n 12977: a3 = u64 [a4 + 0xa8]\n 12981: a2 = u64 [a4 + 0xb0]\n 12985: u64 [s1 + 0x210] = a0\n 12989: u64 [s1 + 0xd8] = a1\n 12993: a0 = a0 | a1\n 12996: u64 [s1 + 0xe8] = a3\n 13000: a1 = a3 <u 0x3e8\n 13004: u64 [s1 + 0xe0] = a2\n 13008: a1 = 0 if a2 != 0\n 13010: a1 = 0 if a0 != 0\n 13012: jump @521 if a1 != 0\n      : @520 (gas: 1)\n 13015: jump @1621\n      : @521 (gas: 1)\n 13018: t0 = 478, jump @2555\n      : @522 [@dyn 239] (gas: 1)\n 13025: jump @524 if a1 == 0\n      : @523 (gas: 1)\n 13028: jump @848\n      : @524 (gas: 8)\n 13031: a2 = s1 + 0x1998\n 13035: u64 [a2 + 440] = 0\n 13039: u64 [a2 + 432] = 0\n 13043: a1 = 0x4e487b7100000000\n 13053: u64 [a2 + 0x1c0] = a1\n 13057: a1 = s1 + 0x1b40\n 13061: u64 [a2 + 424] = 0\n 13065: ra = 480, jump @19\n      : @525 [@dyn 240] (gas: 3)\n 13071: t0 = 0x1e2\n 13075: a1 = s1 + 0x1998\n 13079: fallthrough\n      : @526 [@dyn 241] (gas: 9)\n 13080: u64 [a1 + 416] = 0\n 13084: u64 [a1 + 408] = 0\n 13088: u64 [a1 + 392] = 0x11\n 13093: a2 = a1\n 13095: a0 = 0x4\n 13098: a1 = s1 + 0x1b20\n 13102: u64 [a2 + 400] = 0\n 13106: ra = 0x544\n 13110: jump @19\n      : @527 (gas: 9)\n 13113: u64 [a2 + 256] = 0\n 13117: u64 [a2 + 248] = 0\n 13121: u64 [a2 + 240] = 0\n 13125: u64 [a2 + 232] = 0\n 13129: a0 = s1 + 0x5000\n 13133: i32 a0 = a0 + 0xfffffffffffffa80\n 13137: ra = 0x1e4\n 13141: ecalli 18 // 'value_transferred'\n 13143: fallthrough\n      : @528 [@dyn 242] (gas: 6)\n 13144: a2 = s1 + 0x4998\n 13148: a0 = u64 [a2 + 0x100]\n 13152: a1 = u64 [a2 + 0xf0]\n 13156: a3 = u64 [a2 + 0xf8]\n 13160: a4 = u64 [a2 + 0xe8]\n 13164: t0 = 486, jump @2574\n      : @529 [@dyn 243] (gas: 6)\n 13171: t0 = u64 [a1 + 0x10]\n 13174: a2 = u64 [a1 + 0x8]\n 13177: a0 = u64 [a1]\n 13179: a3 = a3 | a4\n 13182: a3 = a3 | a5\n 13185: jump @531 if a3 == 0\n      : @530 (gas: 1)\n 13188: jump @838\n      : @531 (gas: 22)\n 13191: a1 = u64 [s1 + 0x210]\n 13195: a3 = u32 [a1]\n 13197: a1 = a3 + 0xfffffffffffffffc\n 13200: a3 = a1 <u a3\n 13203: a5 = a3 + 0xffffffffffffffff\n 13206: a3 = 0 if a5 != 0\n 13208: a4 = a3 >u 0\n 13210: a4 = a4 + 0xffffffffffffffff\n 13213: t2 = a3 + 0xffffffffffffffff\n 13216: a3 = t2 <u t0\n 13219: ra = a4 ^ t1\n 13222: a4 = a4 <s t1\n 13225: a4 = a3 if ra == 0\n 13228: u64 [s1 + 0x218] = a0\n 13232: a0 = a1 <u a0\n 13235: a1 = a5 ^ a2\n 13238: a5 = a5 <u a2\n 13241: a5 = a0 if a1 == 0\n 13244: a3 = t2 ^ t0\n 13247: a3 = a3 | ra\n 13250: a5 = a4 if a3 != 0\n 13253: jump @533 if a5 == 0\n      : @532 (gas: 1)\n 13256: jump @836\n      : @533 (gas: 8)\n 13259: a1 = s1 + 0x4998\n 13263: u64 [a1 + 288] = 0\n 13267: u64 [a1 + 280] = 0\n 13271: u64 [a1 + 272] = 0\n 13275: u64 [a1 + 264] = 0x3\n 13280: a0 = s1 + 0x1900\n 13284: a1 = s1 + 0x4aa0\n 13288: ra = 488, jump @21\n      : @534 [@dyn 244] (gas: 3)\n 13294: a1 = s1 + 0x1198\n 13298: a2 = a1 + 0x700\n 13302: t0 = 490, jump @2649\n      : @535 [@dyn 245] (gas: 4)\n 13309: i32 a0 = a0 + 0xfffffffffffff8e0\n 13313: a0 = a0 + s1\n 13316: a1 = 0x40\n 13319: ra = 492, jump @17\n      : @536 [@dyn 246] (gas: 7)\n 13325: a3 = s1 + 0x1198\n 13329: a5 = a3 + 0x700\n 13333: a0 = u64 [a5 + 0x60]\n 13336: a1 = u64 [a5 + 0x58]\n 13339: a2 = u64 [a5 + 0x50]\n 13342: a4 = u64 [a5 + 0x48]\n 13345: t0 = 494, jump @2564\n      : @537 [@dyn 247] (gas: 1)\n 13352: jump @539 if a0 == 0\n      : @538 (gas: 1)\n 13355: jump @848\n      : @539 (gas: 15)\n 13358: a2 = s1 + 0x200\n 13362: a0 = u64 [a2]\n 13364: a5 = a3 + 0x700\n 13368: u64 [a5 + 0x28] = a0\n 13371: a0 = u64 [a2 + 0x8]\n 13374: u64 [a5 + 0x30] = a0\n 13377: a0 = u64 [a2 + 0x10]\n 13380: u64 [a5 + 0x38] = a0\n 13383: a1 = s1 + 0x18c0\n 13387: a0 = u64 [a2 + 0x18]\n 13390: u64 [a5 + 0x40] = a0\n 13393: a0 = a4\n 13395: u64 [s1 + 0x218] = a4\n 13399: ra = 0x3c6\n 13403: jump @19\n      : @540 (gas: 1)\n 13406: jump @542 if a0 == 2127478272\n      : @541 (gas: 1)\n 13413: jump @1856\n      : @542 (gas: 11)\n 13416: u64 [a2 + 1472] = 0\n 13420: u64 [a2 + 1464] = 0\n 13424: u64 [a2 + 1456] = 0\n 13428: u64 [a2 + 1448] = 0\n 13432: a0 = s1 + 0x5000\n 13436: i32 a0 = a0 + 0xffffffffffffff40\n 13440: ra = 0x1f0\n 13444: ecalli 18 // 'value_transferred'\n 13446: a0 = 0x5000\n 13450: t0 = 0x1f2\n 13454: jump @2669\n      : @543 [@dyn 248] (gas: 2)\n 13458: a0 = 0x5000\n 13462: t0 = 498, jump @2669\n      : @544 [@dyn 249] (gas: 8)\n 13469: a0 = u64 [a4 + 0xb8]\n 13473: a1 = u64 [a4 + 0xc0]\n 13477: a2 = u64 [a4 + 0xb0]\n 13481: a3 = u64 [a4 + 0xa8]\n 13485: a1 = a1 | a2\n 13488: a0 = a0 | a3\n 13491: a0 = a0 | a1\n 13494: jump @546 if a0 == 0\n      : @545 (gas: 1)\n 13497: jump @844\n      : @546 (gas: 4)\n 13500: a0 = u64 [s1 + 0x210]\n 13504: a0 = i32 [a0]\n 13506: a1 = 0x23\n 13509: jump @548 if a1 <u a0\n      : @547 (gas: 1)\n 13512: jump @844\n      : @548 (gas: 4)\n 13515: a0 = s1 + 0x2800\n 13519: ra = 0x1f4\n 13523: t0 = 0x7c8\n 13527: jump @2675\n      : @549 [@dyn 250] (gas: 6)\n 13531: a5 = u64 [s1 + 0x218]\n 13535: a1 = u64 [a5 + 0x10]\n 13538: a2 = u64 [a5 + 0x18]\n 13541: a3 = u64 [a5 + 0x8]\n 13544: a0 = u64 [a5]\n 13546: t0 = 502, jump @2558\n      : @550 [@dyn 251] (gas: 1)\n 13553: jump @552 if a1 == 0\n      : @551 (gas: 1)\n 13556: jump @848\n      : @552 (gas: 13)\n 13559: a4 = s1 + 0x2198\n 13563: a5 = a4 + 0x600\n 13567: a1 = u64 [a5 + 0x78]\n 13570: a2 = u64 [a5 + 0x70]\n 13573: a3 = u64 [a5 + 0x68]\n 13576: a1 = a1 << 0x20\n 13579: t0 = a1 >> 0x20\n 13582: u64 [a4 + 1632] = 0\n 13586: u64 [a5 + 0x48] = a3\n 13589: u64 [a5 + 0x50] = a2\n 13592: a1 = s1 + 0x27e0\n 13596: u64 [a4 + 0x658] = t0\n 13600: ra = 504, jump @19\n      : @553 [@dyn 252] (gas: 3)\n 13606: t0 = 0x1fa\n 13610: a1 = s1 + 0x2198\n 13614: fallthrough\n      : @554 [@dyn 253] (gas: 8)\n 13615: u64 [a1 + 1600] = 0\n 13619: u64 [a1 + 1592] = 0\n 13623: u64 [a1 + 1576] = 0x4\n 13628: a2 = a1\n 13630: a0 = 0x20\n 13633: a1 = s1 + 0x27c0\n 13637: u64 [a2 + 1584] = 0\n 13641: ra = 508, jump @19\n      : @555 [@dyn 254] (gas: 1)\n 13647: t0 = 510, jump @2555\n      : @556 [@dyn 255] (gas: 1)\n 13654: jump @558 if a1 == 0\n      : @557 (gas: 1)\n 13657: jump @848\n      : @558 (gas: 2)\n 13660: a1 = 0x40\n 13663: ra = 512, jump @32\n      : @559 [@dyn 256] (gas: 4)\n 13669: a1 = sp + 0xffffffffffffffe0\n 13672: a1 = a1 & 0xffffffffffffffe0\n 13675: u64 [s1 + 0x218] = a1\n 13679: t0 = 514, jump @2583\n      : @560 [@dyn 257] (gas: 4)\n 13686: ra = 0x204\n 13690: ecalli 10 // 'hash_keccak_256'\n 13692: t0 = 0x206\n 13696: jump @2598\n      : @561 [@dyn 258] (gas: 1)\n 13700: t0 = 518, jump @2598\n      : @562 [@dyn 259] (gas: 7)\n 13707: u64 [a5 + 0xe0] = a3\n 13711: u64 [a5 + 0xd8] = a2\n 13715: u64 [a5 + 0xd0] = a1\n 13719: u64 [a5 + 0xc8] = a0\n 13723: a0 = s1 + 0x27a0\n 13727: a1 = s1 + 0x4f60\n 13731: ra = 520, jump @21\n      : @563 [@dyn 260] (gas: 3)\n 13737: a1 = s1 + 0x2198\n 13741: a2 = a1 + 0x600\n 13745: t0 = 522, jump @2651\n      : @564 [@dyn 261] (gas: 4)\n 13752: i32 a0 = a0 + 0x780\n 13756: a0 = a0 + s1\n 13759: a1 = 0x40\n 13762: ra = 524, jump @17\n      : @565 [@dyn 262] (gas: 7)\n 13768: a4 = s1 + 0x2198\n 13772: a0 = u64 [a4 + 0x600]\n 13776: a5 = a4 + 0x500\n 13780: a1 = u64 [a5 + 0xf8]\n 13784: a2 = u64 [a5 + 0xf0]\n 13788: a3 = u64 [a5 + 0xe8]\n 13792: t0 = 526, jump @2597\n      : @566 [@dyn 263] (gas: 1)\n 13799: jump @568 if a0 == 0\n      : @567 (gas: 1)\n 13802: jump @848\n      : @568 (gas: 15)\n 13805: a2 = s1 + 0x200\n 13809: a0 = u64 [a2]\n 13811: a5 = a4 + 0x500\n 13815: u64 [a5 + 0xc8] = a0\n 13819: a0 = u64 [a2 + 0x8]\n 13822: u64 [a5 + 0xd0] = a0\n 13826: a0 = u64 [a2 + 0x10]\n 13829: u64 [a5 + 0xd8] = a0\n 13833: a1 = s1 + 0x2760\n 13837: a0 = u64 [a2 + 0x18]\n 13840: u64 [a5 + 0xe0] = a0\n 13844: a0 = a3\n 13846: u64 [s1 + 0x218] = a3\n 13850: ra = 0x3c6\n 13854: jump @19\n      : @569 (gas: 9)\n 13857: u64 [a2 + 1696] = 0\n 13861: u64 [a2 + 1688] = 0\n 13865: u64 [a2 + 1680] = 0\n 13869: u64 [a2 + 1672] = 0\n 13873: a0 = s1 + 0x6000\n 13877: i32 a0 = a0 + 0xfffffffffffff820\n 13881: ra = 0x210\n 13885: ecalli 18 // 'value_transferred'\n 13887: fallthrough\n      : @570 [@dyn 264] (gas: 7)\n 13888: a2 = s1 + 0x5198\n 13892: a5 = a2 + 0x600\n 13896: a0 = u64 [a5 + 0xa0]\n 13900: a1 = u64 [a5 + 0x90]\n 13904: a3 = u64 [a5 + 0x98]\n 13908: a4 = u64 [a5 + 0x88]\n 13912: t0 = 530, jump @2574\n      : @571 [@dyn 265] (gas: 6)\n 13919: t0 = u64 [a1 + 0x10]\n 13922: a2 = u64 [a1 + 0x8]\n 13925: a0 = u64 [a1]\n 13927: a3 = a3 | a4\n 13930: a3 = a3 | a5\n 13933: jump @573 if a3 == 0\n      : @572 (gas: 1)\n 13936: jump @866\n      : @573 (gas: 22)\n 13939: a1 = u64 [s1 + 0x210]\n 13943: a3 = u32 [a1]\n 13945: a1 = a3 + 0xfffffffffffffffc\n 13948: a3 = a1 <u a3\n 13951: a5 = a3 + 0xffffffffffffffff\n 13954: a3 = 0 if a5 != 0\n 13956: a4 = a3 >u 0\n 13958: a4 = a4 + 0xffffffffffffffff\n 13961: t2 = a3 + 0xffffffffffffffff\n 13964: a3 = t2 <u t0\n 13967: ra = a4 ^ t1\n 13970: a4 = a4 <s t1\n 13973: a4 = a3 if ra == 0\n 13976: u64 [s1 + 0x208] = a0\n 13980: a0 = a1 <u a0\n 13983: a1 = a5 ^ a2\n 13986: a5 = a5 <u a2\n 13989: a5 = a0 if a1 == 0\n 13992: a3 = t2 ^ t0\n 13995: a3 = a3 | ra\n 13998: a5 = a4 if a3 != 0\n 14001: jump @575 if a5 != 0\n      : @574 (gas: 1)\n 14004: jump @885\n      : @575 (gas: 9)\n 14007: a0 = u64 [s1 + 0x208]\n 14011: a3 = a0 | t0\n 14014: a1 = a2 | t1\n 14017: a3 = a3 | a1\n 14020: a3 = a3 >> 0x20\n 14023: a1 = a1 | t0\n 14026: a1 = a1 << 0x20\n 14029: a1 = a1 | a3\n 14032: jump @577 if a1 == 0\n      : @576 (gas: 1)\n 14035: jump @848\n      : @577 (gas: 3)\n 14038: a1 = a0\n 14040: ra = 0x356\n 14044: jump @32\n      : @578 (gas: 9)\n 14047: u64 [a2 + 1184] = 0\n 14051: u64 [a2 + 1176] = 0\n 14055: u64 [a2 + 1168] = 0\n 14059: u64 [a2 + 1160] = 0\n 14063: a0 = s1 + 0x5000\n 14067: i32 a0 = a0 + 0x620\n 14071: ra = 0x214\n 14075: ecalli 18 // 'value_transferred'\n 14077: fallthrough\n      : @579 [@dyn 266] (gas: 7)\n 14078: a2 = s1 + 0x5198\n 14082: a5 = a2 + 0x400\n 14086: a0 = u64 [a5 + 0xa0]\n 14090: a1 = u64 [a5 + 0x90]\n 14094: a3 = u64 [a5 + 0x98]\n 14098: a4 = u64 [a5 + 0x88]\n 14102: t0 = 534, jump @2574\n      : @580 [@dyn 267] (gas: 6)\n 14109: t0 = u64 [a1 + 0x10]\n 14112: a2 = u64 [a1 + 0x8]\n 14115: a0 = u64 [a1]\n 14117: a3 = a3 | a4\n 14120: a3 = a3 | a5\n 14123: jump @582 if a3 == 0\n      : @581 (gas: 1)\n 14126: jump @838\n      : @582 (gas: 22)\n 14129: a1 = u64 [s1 + 0x210]\n 14133: a3 = u32 [a1]\n 14135: a1 = a3 + 0xfffffffffffffffc\n 14138: a3 = a1 <u a3\n 14141: a5 = a3 + 0xffffffffffffffff\n 14144: a3 = 0 if a5 != 0\n 14146: a4 = a3 >u 0\n 14148: a4 = a4 + 0xffffffffffffffff\n 14151: t2 = a3 + 0xffffffffffffffff\n 14154: a3 = t2 <u t0\n 14157: ra = a4 ^ t1\n 14160: a4 = a4 <s t1\n 14163: a4 = a3 if ra == 0\n 14166: u64 [s1 + 0x218] = a0\n 14170: a0 = a1 <u a0\n 14173: a1 = a5 ^ a2\n 14176: a5 = a5 <u a2\n 14179: a5 = a0 if a1 == 0\n 14182: a3 = t2 ^ t0\n 14185: a3 = a3 | ra\n 14188: a5 = a4 if a3 != 0\n 14191: jump @584 if a5 == 0\n      : @583 (gas: 1)\n 14194: jump @836\n      : @584 (gas: 8)\n 14197: a1 = s1 + 0x5198\n 14201: u64 [a1 + 1216] = 0\n 14205: u64 [a1 + 1208] = 0\n 14209: u64 [a1 + 1200] = 0\n 14213: u64 [a1 + 1192] = 0x7\n 14218: a0 = s1 + 0x3ba0\n 14222: a1 = s1 + 0x5640\n 14226: ra = 536, jump @21\n      : @585 [@dyn 268] (gas: 3)\n 14232: t0 = 0x21a\n 14236: a1 = s1 + 0x3998\n 14240: fallthrough\n      : @586 [@dyn 269] (gas: 11)\n 14241: a2 = a1 + 0x200\n 14245: a0 = u64 [a2 + 0x18]\n 14248: a1 = s1 + 0x200\n 14252: u64 [a1 + 0x8] = a0\n 14255: a0 = u64 [a2 + 0x10]\n 14258: u64 [a1 + 0x18] = a0\n 14261: a0 = u64 [a2 + 0x8]\n 14264: u64 [a1 + 0x10] = a0\n 14267: a0 = s1 + 0x3b80\n 14271: a1 = 0x40\n 14274: ra = 540, jump @17\n      : @587 [@dyn 270] (gas: 7)\n 14280: a3 = s1 + 0x3998\n 14284: a4 = u64 [a3 + 0x200]\n 14288: a5 = a3 + 0x100\n 14292: a1 = u64 [a5 + 0xf8]\n 14296: a2 = u64 [a5 + 0xf0]\n 14300: a0 = u64 [a5 + 0xe8]\n 14304: t0 = 542, jump @2573\n      : @588 [@dyn 271] (gas: 1)\n 14311: jump @590 if a1 == 0\n      : @589 (gas: 1)\n 14314: jump @848\n      : @590 (gas: 15)\n 14317: a4 = s1 + 0x200\n 14321: a1 = u64 [a4 + 0x8]\n 14324: a1 = a1 << 0x20\n 14327: a2 = a1 >> 0x20\n 14330: u64 [a3 + 480] = 0\n 14334: a1 = u64 [a4 + 0x10]\n 14337: a5 = a3 + 0x100\n 14341: u64 [a5 + 0xc8] = a1\n 14345: a1 = u64 [a4 + 0x18]\n 14348: u64 [a5 + 0xd0] = a1\n 14352: a1 = s1 + 0x3b60\n 14356: u64 [a5 + 0xd8] = a2\n 14360: u64 [s1 + 0x218] = a0\n 14364: ra = 0x3c6\n 14368: jump @19\n      : @591 (gas: 1)\n 14371: t0 = 544, jump @2676\n      : @592 [@dyn 272] (gas: 4)\n 14378: i32 a0 = a0 + 0xfffffffffffffbc0\n 14382: ra = 0x222\n 14386: ecalli 18 // 'value_transferred'\n 14388: fallthrough\n      : @593 [@dyn 273] (gas: 7)\n 14389: a2 = s1 + 0x4998\n 14393: a5 = a2 + 0x200\n 14397: a0 = u64 [a5 + 0x40]\n 14400: a1 = u64 [a5 + 0x30]\n 14403: a3 = u64 [a5 + 0x38]\n 14406: a4 = u64 [a5 + 0x28]\n 14409: t0 = 548, jump @2574\n      : @594 [@dyn 274] (gas: 6)\n 14416: t0 = u64 [a1 + 0x10]\n 14419: a2 = u64 [a1 + 0x8]\n 14422: a0 = u64 [a1]\n 14424: a3 = a3 | a4\n 14427: a3 = a3 | a5\n 14430: jump @596 if a3 == 0\n      : @595 (gas: 1)\n 14433: jump @838\n      : @596 (gas: 22)\n 14436: a1 = u64 [s1 + 0x210]\n 14440: a3 = u32 [a1]\n 14442: a1 = a3 + 0xfffffffffffffffc\n 14445: a3 = a1 <u a3\n 14448: a5 = a3 + 0xffffffffffffffff\n 14451: a3 = 0 if a5 != 0\n 14453: a4 = a3 >u 0\n 14455: a4 = a4 + 0xffffffffffffffff\n 14458: t2 = a3 + 0xffffffffffffffff\n 14461: a3 = t2 <u t0\n 14464: ra = a4 ^ t1\n 14467: a4 = a4 <s t1\n 14470: a4 = a3 if ra == 0\n 14473: u64 [s1 + 0x218] = a0\n 14477: a0 = a1 <u a0\n 14480: a1 = a5 ^ a2\n 14483: a5 = a5 <u a2\n 14486: a5 = a0 if a1 == 0\n 14489: a3 = t2 ^ t0\n 14492: a3 = a3 | ra\n 14495: a5 = a4 if a3 != 0\n 14498: jump @598 if a5 == 0\n      : @597 (gas: 1)\n 14501: jump @836\n      : @598 (gas: 8)\n 14504: a1 = s1 + 0x4998\n 14508: u64 [a1 + 608] = 0\n 14512: u64 [a1 + 600] = 0\n 14516: u64 [a1 + 592] = 0\n 14520: u64 [a1 + 584] = 0x9\n 14525: a0 = s1 + 0x1aa0\n 14529: a1 = s1 + 0x4be0\n 14533: ra = 550, jump @21\n      : @599 [@dyn 275] (gas: 2)\n 14539: a0 = 0x2000\n 14543: t0 = 552, jump @2670\n      : @600 [@dyn 276] (gas: 1)\n 14550: t0 = 554, jump @2651\n      : @601 [@dyn 277] (gas: 4)\n 14557: i32 a0 = a0 + 0xfffffffffffffa80\n 14561: a0 = a0 + s1\n 14564: a1 = 0x40\n 14567: ra = 556, jump @17\n      : @602 [@dyn 278] (gas: 6)\n 14573: a3 = s1 + 0x1998\n 14577: a0 = u64 [a3 + 0x100]\n 14581: a1 = u64 [a3 + 0xf8]\n 14585: a2 = u64 [a3 + 0xf0]\n 14589: a4 = u64 [a3 + 0xe8]\n 14593: t0 = 558, jump @2564\n      : @603 [@dyn 279] (gas: 1)\n 14600: jump @605 if a0 == 0\n      : @604 (gas: 1)\n 14603: jump @848\n      : @605 (gas: 14)\n 14606: a2 = s1 + 0x200\n 14610: a0 = u64 [a2]\n 14612: u64 [a3 + 0xc8] = a0\n 14616: a0 = u64 [a2 + 0x8]\n 14619: u64 [a3 + 0xd0] = a0\n 14623: a0 = u64 [a2 + 0x10]\n 14626: u64 [a3 + 0xd8] = a0\n 14630: a1 = s1 + 0x1a60\n 14634: a0 = u64 [a2 + 0x18]\n 14637: u64 [a3 + 0xe0] = a0\n 14641: a0 = a4\n 14643: u64 [s1 + 0x218] = a4\n 14647: ra = 0x3c6\n 14651: jump @19\n      : @606 (gas: 9)\n 14654: u64 [a2 + 1120] = 0\n 14658: u64 [a2 + 1112] = 0\n 14662: u64 [a2 + 1104] = 0\n 14666: u64 [a2 + 1096] = 0\n 14670: a0 = s1 + 0x5000\n 14674: i32 a0 = a0 + 0x5e0\n 14678: ra = 0x230\n 14682: ecalli 18 // 'value_transferred'\n 14684: fallthrough\n      : @607 [@dyn 280] (gas: 7)\n 14685: a2 = s1 + 0x5198\n 14689: a5 = a2 + 0x400\n 14693: a0 = u64 [a5 + 0x60]\n 14696: a1 = u64 [a5 + 0x50]\n 14699: a3 = u64 [a5 + 0x58]\n 14702: a4 = u64 [a5 + 0x48]\n 14705: t0 = 562, jump @2574\n      : @608 [@dyn 281] (gas: 6)\n 14712: t0 = u64 [a1 + 0x10]\n 14715: a2 = u64 [a1 + 0x8]\n 14718: a0 = u64 [a1]\n 14720: a3 = a3 | a4\n 14723: a3 = a3 | a5\n 14726: jump @610 if a3 == 0\n      : @609 (gas: 1)\n 14729: jump @838\n      : @610 (gas: 22)\n 14732: a1 = u64 [s1 + 0x210]\n 14736: a3 = u32 [a1]\n 14738: a1 = a3 + 0xfffffffffffffffc\n 14741: a3 = a1 <u a3\n 14744: a5 = a3 + 0xffffffffffffffff\n 14747: a3 = 0 if a5 != 0\n 14749: a4 = a3 >u 0\n 14751: a4 = a4 + 0xffffffffffffffff\n 14754: t2 = a3 + 0xffffffffffffffff\n 14757: a3 = t2 <u t0\n 14760: ra = a4 ^ t1\n 14763: a4 = a4 <s t1\n 14766: a4 = a3 if ra == 0\n 14769: u64 [s1 + 0x218] = a0\n 14773: a0 = a1 <u a0\n 14776: a1 = a5 ^ a2\n 14779: a5 = a5 <u a2\n 14782: a5 = a0 if a1 == 0\n 14785: a3 = t2 ^ t0\n 14788: a3 = a3 | ra\n 14791: a5 = a4 if a3 != 0\n 14794: jump @612 if a5 == 0\n      : @611 (gas: 1)\n 14797: jump @836\n      : @612 (gas: 8)\n 14800: a1 = s1 + 0x5198\n 14804: u64 [a1 + 1152] = 0\n 14808: u64 [a1 + 1144] = 0\n 14812: u64 [a1 + 1136] = 0\n 14816: u64 [a1 + 1128] = 0x5\n 14821: a0 = s1 + 0x3b40\n 14825: a1 = s1 + 0x5600\n 14829: ra = 564, jump @21\n      : @613 [@dyn 282] (gas: 2)\n 14835: a0 = 0x4000\n 14839: t0 = 566, jump @2670\n      : @614 [@dyn 283] (gas: 10)\n 14846: a0 = u64 [a2 + 0xb8]\n 14850: a1 = s1 + 0x200\n 14854: u64 [a1 + 0x8] = a0\n 14857: a0 = u64 [a2 + 0xb0]\n 14861: u64 [a1 + 0x18] = a0\n 14864: a0 = u64 [a2 + 0xa8]\n 14868: u64 [a1 + 0x10] = a0\n 14871: a0 = s1 + 0x3b20\n 14875: a1 = 0x40\n 14878: ra = 568, jump @17\n      : @615 [@dyn 284] (gas: 7)\n 14884: a3 = s1 + 0x3998\n 14888: a5 = a3 + 0x100\n 14892: a4 = u64 [a5 + 0xa0]\n 14896: a1 = u64 [a5 + 0x98]\n 14900: a2 = u64 [a5 + 0x90]\n 14904: a0 = u64 [a5 + 0x88]\n 14908: t0 = 570, jump @2573\n      : @616 [@dyn 285] (gas: 1)\n 14915: jump @618 if a1 == 0\n      : @617 (gas: 1)\n 14918: jump @848\n      : @618 (gas: 15)\n 14921: a4 = s1 + 0x200\n 14925: a1 = u64 [a4 + 0x8]\n 14928: a1 = a1 << 0x20\n 14931: a2 = a1 >> 0x20\n 14934: u64 [a3 + 384] = 0\n 14938: a1 = u64 [a4 + 0x10]\n 14941: a5 = a3 + 0x100\n 14945: u64 [a5 + 0x68] = a1\n 14948: a1 = u64 [a4 + 0x18]\n 14951: u64 [a5 + 0x70] = a1\n 14954: a1 = s1 + 0x3b00\n 14958: u64 [a5 + 0x78] = a2\n 14961: u64 [s1 + 0x218] = a0\n 14965: ra = 0x3c6\n 14969: jump @19\n      : @619 (gas: 9)\n 14972: u64 [t0 + 2016] = 0\n 14976: u64 [t0 + 2008] = 0\n 14980: u64 [t0 + 2000] = 0\n 14984: u64 [t0 + 1992] = 0\n 14988: a0 = s1 + 0x5000\n 14992: i32 a0 = a0 + 0xfffffffffffff960\n 14996: ra = 0x23c\n 15000: ecalli 18 // 'value_transferred'\n 15002: fallthrough\n      : @620 [@dyn 286] (gas: 3)\n 15003: a3 = s1 + 0x4198\n 15007: a4 = a3 + 0x700\n 15011: t0 = 574, jump @2665\n      : @621 [@dyn 287] (gas: 1)\n 15018: jump @623 if a0 == 0\n      : @622 (gas: 1)\n 15021: jump @844\n      : @623 (gas: 5)\n 15024: a0 = u64 [s1 + 0x210]\n 15028: a0 = i32 [a0]\n 15030: a1 = 0x43\n 15033: a3 = u64 [s1 + 0x218]\n 15037: jump @625 if a1 <u a0\n      : @624 (gas: 1)\n 15040: jump @845\n      : @625 (gas: 4)\n 15043: a0 = s1 + 0x1460\n 15047: ra = 0x240\n 15051: t0 = 0x7c8\n 15055: jump @2675\n      : @626 [@dyn 288] (gas: 32)\n 15059: a1 = s1 + 0x1198\n 15063: a2 = a1 + 0x200\n 15067: a0 = u64 [a2 + 0xc8]\n 15071: u64 [s1 + 0x218] = a0\n 15075: a0 = u64 [a2 + 0xd0]\n 15079: u64 [s1 + 0x210] = a0\n 15083: a0 = u64 [a2 + 0xd8]\n 15087: u64 [s1 + 0x208] = a0\n 15091: a0 = u64 [a2 + 0xe0]\n 15095: u64 [s1 + 0x200] = a0\n 15099: a0 = s1 + 0x5000\n 15103: i32 a0 = a0 + 0xfffffffffffff980\n 15107: a1 = 0x24\n 15110: ecalli 3 // 'call_data_load'\n 15112: a1 = s1 + 0x4198\n 15116: a2 = a1 + 0x700\n 15120: a0 = u64 [a2 + 0xe8]\n 15124: u64 [s1 + 0x1f8] = a0\n 15128: a0 = u64 [a2 + 0xf0]\n 15132: u64 [s1 + 0x1f0] = a0\n 15136: a0 = u64 [a2 + 0xf8]\n 15140: u64 [s1 + 0x1e8] = a0\n 15144: a0 = s1 + 0x4998\n 15148: a0 = u64 [a0]\n 15150: u64 [s1 + 0x1e0] = a0\n 15154: a0 = 0x30290\n 15159: u64 [s1 + 0x1d8] = a0\n 15163: i32 a0 = a0 + 0\n 15165: ra = 0x242\n 15169: ecalli 5 // 'caller'\n 15171: t0 = 0x244\n 15175: jump @2593\n      : @627 [@dyn 289] (gas: 1)\n 15179: t0 = 580, jump @2593\n      : @628 [@dyn 290] (gas: 26)\n 15186: a3 = s1 + 0x1198\n 15190: a4 = u64 [a5 + 0xe0]\n 15194: u64 [a3 + 0x280] = a4\n 15198: a4 = u64 [a5 + 0xe8]\n 15202: u64 [a3 + 0x278] = a4\n 15206: a4 = u64 [a5 + 0xf0]\n 15210: u64 [a3 + 0x270] = a4\n 15214: a4 = u64 [a5 + 0xf8]\n 15218: a5 = a3 + 0x200\n 15222: u64 [a5 + 0x68] = a4\n 15225: a4 = u64 [s1 + 0x200]\n 15229: u64 [a5 + 0xa0] = a4\n 15233: a4 = u64 [s1 + 0x208]\n 15237: u64 [a5 + 0x98] = a4\n 15241: a4 = u64 [s1 + 0x210]\n 15245: u64 [a5 + 0x90] = a4\n 15249: a4 = u64 [s1 + 0x218]\n 15253: u64 [a5 + 0x88] = a4\n 15257: u64 [a5 + 0xb8] = a2\n 15261: u64 [a5 + 0xb0] = a0\n 15265: u64 [a5 + 0xa8] = a1\n 15269: a0 = s1 + 0x1440\n 15273: a1 = s1 + 0x1420\n 15277: a2 = s1 + 0x1400\n 15281: u64 [a3 + 704] = 0\n 15285: ra = 582, jump @2297\n      : @629 [@dyn 291] (gas: 3)\n 15292: a0 = s1 + 0x13e0\n 15296: a1 = 0x40\n 15299: ra = 584, jump @17\n      : @630 [@dyn 292] (gas: 7)\n 15305: a3 = s1 + 0x1198\n 15309: a5 = a3 + 0x200\n 15313: a4 = u64 [a5 + 0x60]\n 15316: a1 = u64 [a5 + 0x58]\n 15319: a2 = u64 [a5 + 0x50]\n 15322: a0 = u64 [a5 + 0x48]\n 15325: t0 = 586, jump @2573\n      : @631 [@dyn 293] (gas: 1)\n 15332: jump @633 if a1 == 0\n      : @632 (gas: 1)\n 15335: jump @848\n      : @633 (gas: 8)\n 15338: u64 [a3 + 576] = 0\n 15342: u64 [a3 + 568] = 0\n 15346: u64 [a3 + 552] = 0x1\n 15351: a1 = s1 + 0x13c0\n 15355: u64 [a3 + 560] = 0\n 15359: u64 [s1 + 0x218] = a0\n 15363: ra = 0x3c6\n 15367: jump @19\n      : @634 (gas: 9)\n 15370: u64 [a2 + 320] = 0\n 15374: u64 [a2 + 312] = 0\n 15378: u64 [a2 + 304] = 0\n 15382: u64 [a2 + 296] = 0\n 15386: a0 = s1 + 0x5000\n 15390: i32 a0 = a0 + 0xfffffffffffffac0\n 15394: ra = 0x24c\n 15398: ecalli 18 // 'value_transferred'\n 15400: fallthrough\n      : @635 [@dyn 294] (gas: 3)\n 15401: a3 = s1 + 0x4998\n 15405: a4 = a3 + 0x100\n 15409: t0 = 590, jump @2672\n      : @636 [@dyn 295] (gas: 1)\n 15416: jump @638 if a0 == 0\n      : @637 (gas: 1)\n 15419: jump @844\n      : @638 (gas: 4)\n 15422: a0 = u64 [s1 + 0x210]\n 15426: a0 = i32 [a0]\n 15428: a1 = 0x43\n 15431: jump @640 if a1 <u a0\n      : @639 (gas: 1)\n 15434: jump @844\n      : @640 (gas: 4)\n 15437: a0 = s1 + 0x1a40\n 15441: ra = 0x250\n 15445: t0 = 0x7c8\n 15449: jump @2675\n      : @641 [@dyn 296] (gas: 11)\n 15453: a1 = s1 + 0x1998\n 15457: a0 = u64 [a1 + 0xb8]\n 15461: u64 [s1 + 0x1c8] = a0\n 15465: a0 = u64 [a1 + 0xb0]\n 15469: u64 [s1 + 0x1d0] = a0\n 15473: a0 = u64 [a1 + 0xa8]\n 15477: u64 [s1 + 0x1d8] = a0\n 15481: a0 = s1 + 0x1a20\n 15485: ra = 0x252\n 15489: t0 = 0x7d2\n 15493: jump @2675\n      : @642 [@dyn 297] (gas: 15)\n 15497: a1 = s1 + 0x1998\n 15501: a0 = u64 [a1 + 0x98]\n 15505: u64 [s1 + 0x1e0] = a0\n 15509: a0 = u64 [a1 + 0x90]\n 15513: u64 [s1 + 0x1e8] = a0\n 15517: a0 = u64 [a1 + 0x88]\n 15521: u64 [s1 + 0x1f0] = a0\n 15525: a1 = s1 + 0x4998\n 15529: u64 [a1 + 352] = 0\n 15533: u64 [a1 + 344] = 0\n 15537: u64 [a1 + 336] = 0\n 15541: u64 [a1 + 328] = 0x5\n 15546: a0 = s1 + 0x1a00\n 15550: a1 = s1 + 0x4ae0\n 15554: ra = 596, jump @21\n      : @643 [@dyn 298] (gas: 12)\n 15560: a1 = s1 + 0x1998\n 15564: a0 = u64 [a1 + 0x70]\n 15567: u64 [s1 + 0x210] = a0\n 15571: a0 = u64 [a1 + 0x68]\n 15574: u64 [s1 + 0x208] = a0\n 15578: a0 = u32 [a1 + 0x78]\n 15581: u64 [s1 + 0x200] = a0\n 15585: a0 = 0x30290\n 15590: u64 [s1 + 0x1f8] = a0\n 15594: i32 a0 = a0 + 0\n 15596: ecalli 5 // 'caller'\n 15598: fallthrough\n      : @644 (gas: 24)\n 15599: a2 = u64 [s1 + 0x1f8]\n 15603: a0 = u64 [a2 + 0x8]\n 15606: a1 = u64 [a2]\n 15608: a2 = i32 [a2 + 0x10]\n 15611: a0 = reverse a0\n 15613: a3 = a0 >> 0x20\n 15616: a1 = reverse a1\n 15618: a4 = a1 << 0x20\n 15621: a3 = a3 | a4\n 15624: a0 = a0 << 0x20\n 15627: a2 = reverse a2\n 15629: a2 = a2 >> 0x20\n 15632: a0 = a0 | a2\n 15635: a1 = a1 >> 0x20\n 15638: a4 = s1 + 0x200\n 15642: a2 = u64 [a4]\n 15644: a1 = a1 ^ a2\n 15647: a2 = u64 [a4 + 0x8]\n 15650: a0 = a0 ^ a2\n 15653: a0 = a0 | a1\n 15656: a1 = u64 [a4 + 0x10]\n 15659: a1 = a1 ^ a3\n 15662: a0 = a0 | a1\n 15665: jump @646 if a0 == 0\n      : @645 (gas: 1)\n 15668: jump @1184\n      : @646 (gas: 12)\n 15671: a0 = u64 [s1 + 0x1c8]\n 15675: a0 = a0 << 0x20\n 15678: a0 = a0 >> 0x20\n 15681: u64 [s1 + 0x210] = a0\n 15685: a1 = s1 + 0x4998\n 15689: u64 [a1 + 384] = 0\n 15693: u64 [a1 + 376] = 0\n 15697: u64 [a1 + 368] = 0\n 15701: u64 [a1 + 360] = 0x6\n 15706: a0 = s1 + 0x1940\n 15710: a1 = s1 + 0x4b00\n 15714: ra = 598, jump @21\n      : @647 [@dyn 299] (gas: 21)\n 15720: a1 = s1 + 0x1198\n 15724: a0 = u32 [a1 + 0x7bc]\n 15728: a0 = a0 << 0x20\n 15731: a1 = u64 [a1 + 0x7c0]\n 15735: a2 = u64 [s1 + 0x210]\n 15739: a0 = a0 | a2\n 15742: a3 = s1 + 0x4998\n 15746: u64 [a3 + 416] = 0\n 15750: u64 [a3 + 408] = 0\n 15754: u64 [a3 + 400] = 0\n 15758: a4 = a3 + 0x100\n 15762: u64 [a4 + 136] = 0x6\n 15767: a2 = u64 [s1 + 0x1d0]\n 15771: u64 [a4 + 0xb0] = a2\n 15775: a2 = u64 [s1 + 0x1d8]\n 15779: u64 [a4 + 0xa8] = a2\n 15783: u64 [a4 + 0xc0] = a1\n 15787: u64 [a4 + 0xb8] = a0\n 15791: a0 = s1 + 0x4b20\n 15795: a1 = s1 + 0x4b40\n 15799: ra = 600, jump @23\n      : @648 [@dyn 300] (gas: 12)\n 15805: a0 = u64 [s1 + 0x1e0]\n 15809: a0 = a0 << 0x20\n 15812: a0 = a0 >> 0x20\n 15815: u64 [s1 + 0x210] = a0\n 15819: a0 = s1 + 0x4998\n 15823: u64 [a0 + 480] = 0\n 15827: u64 [a0 + 472] = 0\n 15831: u64 [a0 + 464] = 0\n 15835: u64 [a0 + 456] = 0x7\n 15840: a0 = s1 + 0x1920\n 15844: a1 = s1 + 0x4b60\n 15848: ra = 602, jump @21\n      : @649 [@dyn 301] (gas: 21)\n 15854: a1 = s1 + 0x1198\n 15858: a0 = u32 [a1 + 0x79c]\n 15862: a0 = a0 << 0x20\n 15865: a1 = u64 [a1 + 0x7a0]\n 15869: a2 = u64 [s1 + 0x210]\n 15873: a0 = a0 | a2\n 15876: a3 = s1 + 0x4998\n 15880: u64 [a3 + 512] = 0\n 15884: u64 [a3 + 504] = 0\n 15888: u64 [a3 + 496] = 0\n 15892: u64 [a3 + 488] = 0x7\n 15897: a2 = u64 [s1 + 0x1e8]\n 15901: a4 = a3 + 0x200\n 15905: u64 [a4 + 0x10] = a2\n 15908: a2 = u64 [s1 + 0x1f0]\n 15912: u64 [a4 + 0x8] = a2\n 15915: u64 [a4 + 0x20] = a1\n 15918: u64 [a4 + 0x18] = a0\n 15921: a0 = s1 + 0x4b80\n 15925: a1 = s1 + 0x4ba0\n 15929: ra = 604, jump @23\n      : @650 [@dyn 302] (gas: 2)\n 15935: a3 = u64 [s1 + 0x218]\n 15939: t0 = 606, jump @2645\n      : @651 [@dyn 303] (gas: 1)\n 15946: jump @653 if a1 == 0\n      : @652 (gas: 1)\n 15949: jump @848\n      : @653 (gas: 3)\n 15952: a1 = a0\n 15954: u64 [s1 + 0x218] = a0\n 15958: ra = 608, jump @32\n      : @654 [@dyn 304] (gas: 5)\n 15964: a2 = i32 [s1 + 0x218]\n 15968: i32 a1 = a0 + 0\n 15970: a0 = 0\n 15972: ecalli 15 // 'seal_return'\n 15974: jump @955\n      : @655 (gas: 9)\n 15977: u64 [a2 + 1664] = 0\n 15981: u64 [a2 + 1656] = 0\n 15985: u64 [a2 + 1648] = 0\n 15989: u64 [a2 + 1640] = 0\n 15993: a0 = s1 + 0x6000\n 15997: i32 a0 = a0 + 0xfffffffffffff800\n 16001: ra = 0x262\n 16005: ecalli 18 // 'value_transferred'\n 16007: fallthrough\n      : @656 [@dyn 305] (gas: 10)\n 16008: a3 = s1 + 0x5198\n 16012: a4 = a3 + 0x600\n 16016: a0 = u64 [a4 + 0x78]\n 16019: a1 = u64 [a4 + 0x80]\n 16023: a2 = u64 [a4 + 0x70]\n 16026: a3 = u64 [a4 + 0x68]\n 16029: a1 = a1 | a2\n 16032: a0 = a0 | a3\n 16035: a0 = a0 | a1\n 16038: jump @658 if a0 == 0\n      : @657 (gas: 1)\n 16041: jump @844\n      : @658 (gas: 4)\n 16044: a0 = u64 [s1 + 0x210]\n 16048: a0 = i32 [a0]\n 16050: a1 = 0x43\n 16053: jump @660 if a1 <u a0\n      : @659 (gas: 1)\n 16056: jump @844\n      : @660 (gas: 4)\n 16059: a0 = s1 + 0x42c0\n 16063: ra = 0x264\n 16067: t0 = 0x7c8\n 16071: jump @2675\n      : @661 [@dyn 306] (gas: 12)\n 16075: a0 = s1 + 0x4198\n 16079: a2 = a0 + 0x100\n 16083: a1 = u64 [a2 + 0x38]\n 16086: u64 [s1 + 0x200] = a1\n 16090: a1 = u64 [a2 + 0x30]\n 16093: u64 [s1 + 0x210] = a1\n 16097: a0 = u64 [a2 + 0x28]\n 16100: u64 [s1 + 0x208] = a0\n 16104: a0 = s1 + 0x42a0\n 16108: ra = 0x266\n 16112: t0 = 0x7d2\n 16116: jump @2675\n      : @662 [@dyn 307] (gas: 6)\n 16120: a4 = u64 [s1 + 0x218]\n 16124: a1 = u64 [a4 + 0x10]\n 16127: a2 = u64 [a4 + 0x18]\n 16130: a3 = u64 [a4 + 0x8]\n 16133: a0 = u64 [a4]\n 16135: t0 = 616, jump @2558\n      : @663 [@dyn 308] (gas: 1)\n 16142: jump @665 if a1 == 0\n      : @664 (gas: 1)\n 16145: jump @848\n      : @665 (gas: 20)\n 16148: a3 = s1 + 0x4198\n 16152: a2 = a3 + 0x100\n 16156: a1 = u64 [a2 + 0x18]\n 16159: a4 = s1 + 0x100\n 16163: u64 [a4 + 0xf8] = a1\n 16167: a1 = u64 [a2 + 0x10]\n 16170: u64 [a4 + 0xf0] = a1\n 16174: a1 = u64 [a2 + 0x8]\n 16177: u64 [a4 + 0xe8] = a1\n 16181: a1 = u64 [s1 + 0x200]\n 16185: a1 = a1 << 0x20\n 16188: a2 = a1 >> 0x20\n 16191: u64 [a3 + 256] = 0\n 16195: a1 = u64 [s1 + 0x208]\n 16199: u64 [a3 + 0xe8] = a1\n 16203: a1 = u64 [s1 + 0x210]\n 16207: u64 [a3 + 0xf0] = a1\n 16211: a1 = s1 + 0x4280\n 16215: u64 [a3 + 0xf8] = a2\n 16219: ra = 618, jump @19\n      : @666 [@dyn 309] (gas: 3)\n 16225: t0 = 0x26c\n 16229: a1 = s1 + 0x4198\n 16233: fallthrough\n      : @667 [@dyn 310] (gas: 8)\n 16234: u64 [a1 + 224] = 0\n 16238: u64 [a1 + 216] = 0\n 16242: u64 [a1 + 200] = 0x2\n 16247: a2 = a1\n 16249: a0 = 0x20\n 16252: a1 = s1 + 0x4260\n 16256: u64 [a2 + 208] = 0\n 16260: ra = 622, jump @19\n      : @668 [@dyn 311] (gas: 1)\n 16266: t0 = 624, jump @2555\n      : @669 [@dyn 312] (gas: 1)\n 16273: jump @671 if a1 == 0\n      : @670 (gas: 1)\n 16276: jump @848\n      : @671 (gas: 4)\n 16279: a1 = 0xffffffff\n 16289: u64 [s1 + 0x210] = a1\n 16293: a1 = 0x40\n 16296: ra = 626, jump @32\n      : @672 [@dyn 313] (gas: 4)\n 16302: a1 = sp + 0xffffffffffffffe0\n 16305: a1 = a1 & 0xffffffffffffffe0\n 16308: u64 [s1 + 0x218] = a1\n 16312: t0 = 628, jump @2583\n      : @673 [@dyn 314] (gas: 5)\n 16319: ra = 0x276\n 16323: ecalli 10 // 'hash_keccak_256'\n 16325: a3 = u64 [s1 + 0x218]\n 16329: t0 = 0x278\n 16333: jump @2630\n      : @674 [@dyn 315] (gas: 2)\n 16337: a3 = u64 [s1 + 0x218]\n 16341: t0 = 632, jump @2630\n      : @675 [@dyn 316] (gas: 26)\n 16348: u64 [s1 + 0x208] = a0\n 16352: a0 = reverse a1\n 16354: u64 [s1 + 0x200] = a0\n 16358: a0 = reverse a2\n 16360: u64 [s1 + 0x1e0] = a0\n 16364: a0 = reverse a3\n 16366: u64 [s1 + 0x1d8] = a0\n 16370: a0 = sp + 0xffffffffffffffe0\n 16373: a0 = a0 & 0xffffffffffffffe0\n 16376: u64 [s1 + 0x218] = a0\n 16380: sp = a0\n 16382: a0 = u64 [s1 + 0x1e8]\n 16386: a0 = a0 & 0xffffffffffffffff\n 16389: a1 = u64 [s1 + 0x1f0]\n 16393: a1 = a1 & 0xffffffffffffffff\n 16396: a2 = u64 [s1 + 0x1f8]\n 16400: a3 = u64 [s1 + 0x210]\n 16404: a2 = a2 & a3\n 16407: a3 = s1 + 0x4198\n 16411: u64 [a3 + 192] = 0\n 16415: u64 [a3 + 0xb8] = a2\n 16419: u64 [a3 + 0xb0] = a1\n 16423: a1 = s1 + 0x4240\n 16427: u64 [a3 + 0xa8] = a0\n 16431: a0 = 0\n 16433: ra = 634, jump @19\n      : @676 [@dyn 317] (gas: 13)\n 16439: a0 = u64 [s1 + 0x1d8]\n 16443: a1 = s1 + 0x4198\n 16447: u64 [a1 + 0xa0] = a0\n 16451: a0 = u64 [s1 + 0x1e0]\n 16455: u64 [a1 + 0x98] = a0\n 16459: a0 = u64 [s1 + 0x200]\n 16463: u64 [a1 + 0x90] = a0\n 16467: a3 = a1\n 16469: a0 = 0x20\n 16472: a1 = s1 + 0x4220\n 16476: a2 = u64 [s1 + 0x208]\n 16480: u64 [a3 + 0x88] = a2\n 16484: ra = 636, jump @19\n      : @677 [@dyn 318] (gas: 2)\n 16490: a1 = i32 [0x2027c]\n 16495: jump @679 if a1 >=u 64\n      : @678 (gas: 2)\n 16499: u32 [0x2027c] = 0x40\n 16505: fallthrough\n      : @679 (gas: 13)\n 16506: a0 = sp + 0xffffffffffffffe0\n 16509: a2 = a0 & 0xffffffffffffffe0\n 16512: u64 [s1 + 0x210] = a2\n 16516: sp = a2\n 16518: a0 = 0x20290\n 16523: i32 a0 = a0 + 0\n 16525: i32 a2 = a2 + 0\n 16527: a1 = 0x40\n 16530: ra = 0x27e\n 16534: ecalli 10 // 'hash_keccak_256'\n 16536: a3 = u64 [s1 + 0x210]\n 16540: t0 = 0x280\n 16544: jump @2578\n      : @680 [@dyn 319] (gas: 2)\n 16548: a3 = u64 [s1 + 0x210]\n 16552: t0 = 640, jump @2578\n      : @681 [@dyn 320] (gas: 7)\n 16559: a1 = u64 [s1 + 0x218]\n 16563: u64 [a1 + 0x18] = a3\n 16566: u64 [a1 + 0x10] = a2\n 16569: u64 [a1 + 0x8] = a4\n 16572: u64 [a1] = a0\n 16574: a0 = s1 + 0x4200\n 16578: ra = 642, jump @21\n      : @682 [@dyn 321] (gas: 3)\n 16584: t0 = 0x284\n 16588: a1 = s1 + 0x4198\n 16592: fallthrough\n      : @683 [@dyn 322] (gas: 12)\n 16593: a0 = u64 [a1 + 0x80]\n 16597: a2 = s1 + 0x200\n 16601: u64 [a2 + 0x18] = a0\n 16604: a0 = u64 [a1 + 0x78]\n 16607: u64 [a2 + 0x10] = a0\n 16610: a0 = u64 [a1 + 0x70]\n 16613: u64 [a2 + 0x8] = a0\n 16616: a0 = u64 [a1 + 0x68]\n 16619: u64 [a2] = a0\n 16621: a0 = s1 + 0x41e0\n 16625: a1 = 0x40\n 16628: ra = 646, jump @17\n      : @684 [@dyn 323] (gas: 6)\n 16634: a3 = s1 + 0x4198\n 16638: a0 = u64 [a3 + 0x60]\n 16641: a1 = u64 [a3 + 0x58]\n 16644: a2 = u64 [a3 + 0x50]\n 16647: a4 = u64 [a3 + 0x48]\n 16650: t0 = 648, jump @2564\n      : @685 [@dyn 324] (gas: 1)\n 16657: jump @687 if a0 == 0\n      : @686 (gas: 1)\n 16660: jump @848\n      : @687 (gas: 14)\n 16663: a2 = s1 + 0x200\n 16667: a0 = u64 [a2]\n 16669: u64 [a3 + 0x28] = a0\n 16672: a0 = u64 [a2 + 0x8]\n 16675: u64 [a3 + 0x30] = a0\n 16678: a0 = u64 [a2 + 0x10]\n 16681: u64 [a3 + 0x38] = a0\n 16684: a1 = s1 + 0x41c0\n 16688: a0 = u64 [a2 + 0x18]\n 16691: u64 [a3 + 0x40] = a0\n 16694: a0 = a4\n 16696: u64 [s1 + 0x218] = a4\n 16700: ra = 0x3c6\n 16704: jump @19\n      : @688 (gas: 9)\n 16707: u64 [a2 + 128] = 0\n 16711: u64 [a2 + 120] = 0\n 16714: u64 [a2 + 112] = 0\n 16717: u64 [a2 + 104] = 0\n 16720: a0 = s1 + 0x5000\n 16724: i32 a0 = a0 + 0xfffffffffffffa00\n 16728: ra = 0x28a\n 16732: ecalli 18 // 'value_transferred'\n 16734: fallthrough\n      : @689 [@dyn 325] (gas: 9)\n 16735: a3 = s1 + 0x4998\n 16739: a0 = u64 [a3 + 0x78]\n 16742: a1 = u64 [a3 + 0x80]\n 16746: a2 = u64 [a3 + 0x70]\n 16749: a3 = u64 [a3 + 0x68]\n 16752: a1 = a1 | a2\n 16755: a0 = a0 | a3\n 16758: a0 = a0 | a1\n 16761: jump @691 if a0 == 0\n      : @690 (gas: 1)\n 16764: jump @844\n      : @691 (gas: 4)\n 16767: a0 = u64 [s1 + 0x210]\n 16771: a0 = i32 [a0]\n 16773: a1 = 0x63\n 16776: jump @693 if a1 <u a0\n      : @692 (gas: 1)\n 16779: jump @844\n      : @693 (gas: 4)\n 16782: a0 = s1 + 0x1820\n 16786: ra = 0x28c\n 16790: t0 = 0x7c8\n 16794: jump @2675\n      : @694 [@dyn 326] (gas: 14)\n 16798: a1 = s1 + 0x1198\n 16802: a2 = a1 + 0x600\n 16806: a0 = u64 [a2 + 0xa0]\n 16810: u64 [s1 + 0x1f8] = a0\n 16814: a0 = u64 [a2 + 0x98]\n 16818: u64 [s1 + 0x200] = a0\n 16822: a0 = u64 [a2 + 0x90]\n 16826: u64 [s1 + 0x210] = a0\n 16830: a0 = u64 [a2 + 0x88]\n 16834: u64 [s1 + 0x208] = a0\n 16838: a0 = s1 + 0x1800\n 16842: ra = 0x28e\n 16846: t0 = 0x7d2\n 16850: jump @2675\n      : @695 [@dyn 327] (gas: 18)\n 16854: a1 = s1 + 0x1198\n 16858: a2 = a1 + 0x600\n 16862: a0 = u64 [a2 + 0x80]\n 16866: a1 = s1 + 0x100\n 16870: u64 [a1 + 0xf0] = a0\n 16874: a0 = u64 [a2 + 0x78]\n 16877: u64 [a1 + 0xe8] = a0\n 16881: a0 = u64 [a2 + 0x70]\n 16884: u64 [a1 + 0xe0] = a0\n 16888: a0 = u64 [a2 + 0x68]\n 16891: u64 [a1 + 0xd8] = a0\n 16895: a0 = s1 + 0x5000\n 16899: i32 a0 = a0 + 0xfffffffffffffa20\n 16903: a1 = 0x44\n 16906: ra = 0x290\n 16910: ecalli 3 // 'call_data_load'\n 16912: t0 = 0x292\n 16916: jump @2555\n      : @696 [@dyn 328] (gas: 1)\n 16920: t0 = 658, jump @2555\n      : @697 [@dyn 329] (gas: 1)\n 16927: jump @699 if a1 == 0\n      : @698 (gas: 1)\n 16930: jump @848\n      : @699 (gas: 24)\n 16933: a1 = s1 + 0x4998\n 16937: a2 = u64 [a1 + 0xa0]\n 16941: a4 = s1 + 0x100\n 16945: u64 [a4 + 0xd0] = a2\n 16949: a2 = u64 [a1 + 0x98]\n 16953: u64 [a4 + 0xc8] = a2\n 16957: a2 = u64 [a1 + 0x90]\n 16961: u64 [a4 + 0xc0] = a2\n 16965: a1 = u64 [a1 + 0x88]\n 16969: u64 [a4 + 0xb8] = a1\n 16973: a1 = u64 [s1 + 0x200]\n 16977: a1 = a1 << 0x20\n 16980: a2 = a1 >> 0x20\n 16983: a3 = s1 + 0x1198\n 16987: u64 [a3 + 1632] = 0\n 16991: a1 = u64 [s1 + 0x208]\n 16995: a5 = a3 + 0x600\n 16999: u64 [a5 + 0x48] = a1\n 17002: a1 = u64 [s1 + 0x210]\n 17006: u64 [a5 + 0x50] = a1\n 17009: a1 = s1 + 0x17e0\n 17013: u64 [a4 + 0xb0] = a2\n 17017: u64 [a5 + 0x58] = a2\n 17020: ra = 660, jump @19\n      : @700 [@dyn 330] (gas: 3)\n 17026: t0 = 0x296\n 17030: a1 = s1 + 0x1198\n 17034: fallthrough\n      : @701 [@dyn 331] (gas: 8)\n 17035: u64 [a1 + 1600] = 0\n 17039: u64 [a1 + 1592] = 0\n 17043: u64 [a1 + 1576] = 0x2\n 17048: a2 = a1\n 17050: a0 = 0x20\n 17053: a1 = s1 + 0x17c0\n 17057: u64 [a2 + 1584] = 0\n 17061: ra = 664, jump @19\n      : @702 [@dyn 332] (gas: 1)\n 17067: t0 = 666, jump @2555\n      : @703 [@dyn 333] (gas: 1)\n 17074: jump @705 if a1 == 0\n      : @704 (gas: 1)\n 17077: jump @848\n      : @705 (gas: 2)\n 17080: a1 = 0x40\n 17083: ra = 668, jump @32\n      : @706 [@dyn 334] (gas: 4)\n 17089: a1 = sp + 0xffffffffffffffe0\n 17092: a1 = a1 & 0xffffffffffffffe0\n 17095: u64 [s1 + 0x1a8] = a1\n 17099: t0 = 670, jump @2583\n      : @707 [@dyn 335] (gas: 5)\n 17106: ra = 0x2a0\n 17110: ecalli 10 // 'hash_keccak_256'\n 17112: a3 = u64 [s1 + 0x1a8]\n 17116: t0 = 0x2a2\n 17120: jump @2630\n      : @708 [@dyn 336] (gas: 2)\n 17124: a3 = u64 [s1 + 0x1a8]\n 17128: t0 = 674, jump @2630\n      : @709 [@dyn 337] (gas: 19)\n 17135: u64 [s1 + 0x198] = a0\n 17139: a0 = reverse a1\n 17141: u64 [s1 + 0x190] = a0\n 17145: a0 = reverse a2\n 17147: u64 [s1 + 0x188] = a0\n 17151: a0 = reverse a3\n 17153: u64 [s1 + 0x180] = a0\n 17157: a0 = sp + 0xffffffffffffffe0\n 17160: a0 = a0 & 0xffffffffffffffe0\n 17163: u64 [s1 + 0x1a0] = a0\n 17167: sp = a0\n 17169: a0 = 0x30290\n 17174: u64 [s1 + 0x1a8] = a0\n 17178: i32 a0 = a0 + 0\n 17180: u64 [s1 + 0x178] = a0\n 17184: ra = 0x2a4\n 17188: ecalli 5 // 'caller'\n 17190: t0 = 0x2a6\n 17194: jump @2566\n      : @710 [@dyn 338] (gas: 1)\n 17198: t0 = 678, jump @2566\n      : @711 [@dyn 339] (gas: 8)\n 17205: u64 [a2 + 1568] = 0\n 17209: a4 = a2 + 0x600\n 17213: u64 [a4 + 0x18] = a1\n 17216: u64 [a4 + 0x10] = a0\n 17219: a1 = s1 + 0x17a0\n 17223: u64 [a4 + 0x8] = a3\n 17226: a0 = 0\n 17228: ra = 680, jump @19\n      : @712 [@dyn 340] (gas: 14)\n 17234: a4 = s1 + 0x100\n 17238: a0 = u64 [a4 + 0x80]\n 17242: a1 = s1 + 0x1198\n 17246: u64 [a1 + 0x600] = a0\n 17250: a0 = u64 [a4 + 0x88]\n 17254: u64 [a1 + 0x5f8] = a0\n 17258: a0 = u64 [a4 + 0x90]\n 17262: u64 [a1 + 0x5f0] = a0\n 17266: a3 = a1\n 17268: a0 = 0x20\n 17271: a1 = s1 + 0x1780\n 17275: a2 = u64 [a4 + 0x98]\n 17279: u64 [a3 + 0x5e8] = a2\n 17283: ra = 682, jump @19\n      : @713 [@dyn 341] (gas: 3)\n 17289: a1 = 0x2027c\n 17294: a0 = i32 [0x2027c]\n 17299: jump @715 if a0 >=u 64\n      : @714 (gas: 2)\n 17303: u32 [0x2027c] = 0x40\n 17309: fallthrough\n      : @715 (gas: 15)\n 17310: u64 [s1 + 0x190] = a1\n 17314: a0 = sp + 0xffffffffffffffe0\n 17317: a2 = a0 & 0xffffffffffffffe0\n 17320: u64 [s1 + 0x198] = a2\n 17324: sp = a2\n 17326: a0 = 0x20290\n 17331: i32 a0 = a0 + 0\n 17333: i32 a2 = a2 + 0\n 17335: a1 = 0x40\n 17338: u64 [s1 + 0x188] = a0\n 17342: ra = 0x2ac\n 17346: ecalli 10 // 'hash_keccak_256'\n 17348: a3 = u64 [s1 + 0x198]\n 17352: t0 = 0x2ae\n 17356: jump @2578\n      : @716 [@dyn 342] (gas: 2)\n 17360: a3 = u64 [s1 + 0x198]\n 17364: t0 = 686, jump @2578\n      : @717 [@dyn 343] (gas: 7)\n 17371: a1 = u64 [s1 + 0x1a0]\n 17375: u64 [a1 + 0x18] = a3\n 17378: u64 [a1 + 0x10] = a2\n 17381: u64 [a1 + 0x8] = a4\n 17384: u64 [a1] = a0\n 17386: a0 = s1 + 0x1760\n 17390: ra = 688, jump @21\n      : @718 [@dyn 344] (gas: 10)\n 17396: a4 = s1 + 0x1198\n 17400: a5 = a4 + 0x500\n 17404: a0 = u64 [a5 + 0xd8]\n 17408: a1 = u64 [a5 + 0xe0]\n 17412: a2 = u64 [a5 + 0xd0]\n 17416: a3 = u64 [a5 + 0xc8]\n 17420: a1 = a1 & a2\n 17423: a0 = a0 & a3\n 17426: a0 = a0 & a1\n 17429: jump @720 if a0 == 4294967295\n      : @719 (gas: 1)\n 17433: jump @1308\n      : @720 (gas: 31)\n 17436: a5 = s1 + 0x100\n 17440: a0 = u64 [a5 + 0xb8]\n 17444: a1 = a4 + 0x300\n 17448: u64 [a1 + 0xe8] = a0\n 17452: a0 = u64 [a5 + 0xd8]\n 17456: u64 [a4 + 0x408] = a0\n 17460: a2 = s1 + 0x200\n 17464: a0 = u64 [a2 + 0x8]\n 17467: u64 [a4 + 0x428] = a0\n 17471: a0 = u64 [a5 + 0xc0]\n 17475: u64 [a1 + 0xf0] = a0\n 17479: a0 = u64 [a5 + 0xe0]\n 17483: u64 [a4 + 0x410] = a0\n 17487: a0 = u64 [a2 + 0x10]\n 17490: u64 [a4 + 0x430] = a0\n 17494: a0 = u64 [a5 + 0xc8]\n 17498: u64 [a1 + 0xf8] = a0\n 17502: a0 = u64 [a5 + 0xe8]\n 17506: u64 [a4 + 0x418] = a0\n 17510: a0 = u64 [a2]\n 17512: u64 [a4 + 0x438] = a0\n 17516: a0 = u64 [a5 + 0xd0]\n 17520: u64 [a4 + 0x400] = a0\n 17524: a0 = u64 [a5 + 0xf0]\n 17528: u64 [a4 + 0x420] = a0\n 17532: a0 = s1 + 0x15c0\n 17536: a1 = s1 + 0x15a0\n 17540: a2 = s1 + 0x1580\n 17544: a3 = u64 [a5 + 0xf8]\n 17548: u64 [a4 + 0x440] = a3\n 17552: ra = 690, jump @2318\n      : @721 [@dyn 345] (gas: 3)\n 17559: a0 = s1 + 0x1560\n 17563: a1 = 0x40\n 17566: ra = 692, jump @17\n      : @722 [@dyn 346] (gas: 1)\n 17572: t0 = 694, jump @2664\n      : @723 [@dyn 347] (gas: 5)\n 17579: a4 = u64 [a5 + 0xe0]\n 17583: a1 = u64 [a5 + 0xd8]\n 17587: a2 = u64 [a5 + 0xd0]\n 17591: a0 = u64 [a5 + 0xc8]\n 17595: t0 = 696, jump @2573\n      : @724 [@dyn 348] (gas: 1)\n 17602: jump @726 if a1 == 0\n      : @725 (gas: 1)\n 17605: jump @848\n      : @726 (gas: 8)\n 17608: u64 [a3 + 960] = 0\n 17612: u64 [a3 + 952] = 0\n 17616: u64 [a3 + 936] = 0x1\n 17621: a1 = s1 + 0x1540\n 17625: u64 [a3 + 944] = 0\n 17629: u64 [s1 + 0x218] = a0\n 17633: ra = 0x3c6\n 17637: jump @19\n      : @727 (gas: 9)\n 17640: u64 [a2 + 224] = 0\n 17644: u64 [a2 + 216] = 0\n 17648: u64 [a2 + 208] = 0\n 17652: u64 [a2 + 200] = 0\n 17656: a0 = s1 + 0x5000\n 17660: i32 a0 = a0 + 0xfffffffffffffa60\n 17664: ra = 0x2ba\n 17668: ecalli 18 // 'value_transferred'\n 17670: fallthrough\n      : @728 [@dyn 349] (gas: 6)\n 17671: a2 = s1 + 0x4998\n 17675: a0 = u64 [a2 + 0xe0]\n 17679: a1 = u64 [a2 + 0xd0]\n 17683: a3 = u64 [a2 + 0xd8]\n 17687: a4 = u64 [a2 + 0xc8]\n 17691: t0 = 700, jump @2574\n      : @729 [@dyn 350] (gas: 6)\n 17698: t0 = u64 [a1 + 0x10]\n 17701: a2 = u64 [a1 + 0x8]\n 17704: a0 = u64 [a1]\n 17706: a3 = a3 | a4\n 17709: a3 = a3 | a5\n 17712: jump @838 if a3 != 0\n      : @730 (gas: 22)\n 17716: a1 = u64 [s1 + 0x210]\n 17720: a3 = u32 [a1]\n 17722: a1 = a3 + 0xfffffffffffffffc\n 17725: a3 = a1 <u a3\n 17728: a5 = a3 + 0xffffffffffffffff\n 17731: a3 = 0 if a5 != 0\n 17733: a4 = a3 >u 0\n 17735: a4 = a4 + 0xffffffffffffffff\n 17738: t2 = a3 + 0xffffffffffffffff\n 17741: a3 = t2 <u t0\n 17744: ra = a4 ^ t1\n 17747: a4 = a4 <s t1\n 17750: a4 = a3 if ra == 0\n 17753: u64 [s1 + 0x218] = a0\n 17757: a0 = a1 <u a0\n 17760: a1 = a5 ^ a2\n 17763: a5 = a5 <u a2\n 17766: a5 = a0 if a1 == 0\n 17769: a3 = t2 ^ t0\n 17772: a3 = a3 | ra\n 17775: a5 = a4 if a3 != 0\n 17778: jump @836 if a5 != 0\n      : @731 (gas: 3)\n 17782: a0 = s1 + 0x18a0\n 17786: a1 = 0x40\n 17789: ra = 702, jump @17\n      : @732 [@dyn 351] (gas: 7)\n 17795: a3 = s1 + 0x1198\n 17799: a5 = a3 + 0x700\n 17803: a4 = u64 [a5 + 0x20]\n 17806: a1 = u64 [a5 + 0x18]\n 17809: a2 = u64 [a5 + 0x10]\n 17812: a0 = u64 [a5 + 0x8]\n 17815: t0 = 704, jump @2573\n      : @733 [@dyn 352] (gas: 1)\n 17822: jump @848 if a1 != 0\n      : @734 (gas: 8)\n 17826: u64 [a3 + 1792] = 0\n 17830: u64 [a3 + 1784] = 0\n 17834: u64 [a3 + 1768] = 0x12\n 17839: a1 = s1 + 0x1880\n 17843: u64 [a3 + 1776] = 0\n 17847: u64 [s1 + 0x218] = a0\n 17851: ra = 0x3c6\n 17855: jump @19\n      : @735 (gas: 1)\n 17858: t0 = 706, jump @2676\n      : @736 [@dyn 353] (gas: 4)\n 17865: i32 a0 = a0 + 0x3c0\n 17869: ra = 0x2c4\n 17873: ecalli 18 // 'value_transferred'\n 17875: fallthrough\n      : @737 [@dyn 354] (gas: 3)\n 17876: a3 = s1 + 0x5198\n 17880: a4 = a3 + 0x200\n 17884: t0 = 710, jump @2672\n      : @738 [@dyn 355] (gas: 1)\n 17891: jump @844 if a0 != 0\n      : @739 (gas: 4)\n 17895: a0 = u64 [s1 + 0x210]\n 17899: a0 = i32 [a0]\n 17901: a1 = 0x23\n 17904: jump @844 if a1 >=u a0\n      : @740 (gas: 4)\n 17908: a0 = s1 + 0x3ae0\n 17912: ra = 0x2c8\n 17916: t0 = 0x7c8\n 17920: jump @2675\n      : @741 [@dyn 356] (gas: 2)\n 17924: a0 = 0x4000\n 17928: t0 = 714, jump @2670\n      : @742 [@dyn 357] (gas: 16)\n 17935: a0 = u64 [a2 + 0x60]\n 17938: u64 [s1 + 0x1d0] = a0\n 17942: a0 = u64 [a2 + 0x58]\n 17945: u64 [s1 + 0x1d8] = a0\n 17949: a0 = u64 [a2 + 0x50]\n 17952: u64 [s1 + 0x1e0] = a0\n 17956: a0 = u64 [a2 + 0x48]\n 17959: u64 [s1 + 0x1e8] = a0\n 17963: a1 = s1 + 0x5198\n 17967: u64 [a1 + 608] = 0\n 17971: u64 [a1 + 600] = 0\n 17975: u64 [a1 + 592] = 0\n 17979: u64 [a1 + 584] = 0xc\n 17984: a0 = s1 + 0x3ac0\n 17988: a1 = s1 + 0x53e0\n 17992: ra = 716, jump @21\n      : @743 [@dyn 358] (gas: 7)\n 17998: a4 = s1 + 0x3998\n 18002: a5 = a4 + 0x100\n 18006: a0 = u64 [a5 + 0x40]\n 18009: a1 = u64 [a5 + 0x30]\n 18012: a2 = u64 [a5 + 0x28]\n 18015: a3 = u64 [a5 + 0x38]\n 18018: t0 = 718, jump @2611\n      : @744 [@dyn 359] (gas: 6)\n 18025: u64 [a4 + 288] = 0\n 18029: u64 [a4 + 280] = 0\n 18033: u64 [a5 + 0x8] = a0\n 18036: a0 = s1 + 0x3aa0\n 18040: u64 [a4 + 272] = 0\n 18044: ra = 720, jump @1959\n      : @745 [@dyn 360] (gas: 8)\n 18050: a0 = s1 + 0x5198\n 18054: u64 [a0 + 640] = 0\n 18058: u64 [a0 + 632] = 0\n 18062: u64 [a0 + 624] = 0\n 18066: u64 [a0 + 616] = 0xc\n 18071: a0 = s1 + 0x5400\n 18075: a1 = u64 [s1 + 0x218]\n 18079: ra = 722, jump @23\n      : @746 [@dyn 361] (gas: 8)\n 18085: a1 = s1 + 0x5198\n 18089: u64 [a1 + 672] = 0\n 18093: u64 [a1 + 664] = 0\n 18097: u64 [a1 + 656] = 0\n 18101: u64 [a1 + 648] = 0x6\n 18106: a0 = s1 + 0x3a80\n 18110: a1 = s1 + 0x5420\n 18114: ra = 724, jump @21\n      : @747 [@dyn 362] (gas: 16)\n 18120: a1 = s1 + 0x3998\n 18124: a0 = u64 [a1 + 0xf8]\n 18128: u64 [s1 + 0x1f8] = a0\n 18132: a0 = u64 [a1 + 0xf0]\n 18136: u64 [s1 + 0x200] = a0\n 18140: a0 = u64 [a1 + 0xe8]\n 18144: u64 [s1 + 0x208] = a0\n 18148: a0 = s1 + 0x5198\n 18152: u64 [a0 + 704] = 0\n 18156: u64 [a0 + 696] = 0\n 18160: u64 [a0 + 688] = 0\n 18164: a1 = a0\n 18166: u64 [a1 + 680] = 0x7\n 18171: a0 = s1 + 0x3a60\n 18175: a1 = s1 + 0x5440\n 18179: ra = 726, jump @21\n      : @748 [@dyn 363] (gas: 3)\n 18185: t0 = 0x2d8\n 18189: a1 = s1 + 0x3998\n 18193: fallthrough\n      : @749 [@dyn 364] (gas: 10)\n 18194: a0 = u64 [a1 + 0xd8]\n 18198: a2 = s1 + 0x100\n 18202: u64 [a2 + 0xa0] = a0\n 18206: a0 = u64 [a1 + 0xd0]\n 18210: u64 [a2 + 0xa8] = a0\n 18214: a0 = u64 [a1 + 0xc8]\n 18218: u64 [a2 + 0xb0] = a0\n 18222: a0 = s1 + 0x3a40\n 18226: a1 = 0x40\n 18229: ra = 730, jump @17\n      : @750 [@dyn 365] (gas: 2)\n 18235: a2 = s1 + 0x3998\n 18239: fallthrough\n      : @751 (gas: 12)\n 18240: t0 = u64 [a2 + 0xc0]\n 18244: a5 = u64 [a2 + 0xb8]\n 18248: a4 = u64 [a2 + 0xb0]\n 18252: a0 = u64 [a2 + 0xa8]\n 18256: a3 = a4 | t0\n 18259: a1 = a0 | a5\n 18262: a1 = a1 | a3\n 18265: a1 = a1 >> 0x20\n 18268: a3 = a3 | a5\n 18271: a3 = a3 << 0x20\n 18274: a1 = a1 | a3\n 18277: jump @848 if a1 != 0\n      : @752 (gas: 11)\n 18281: u64 [a2 + 152] = 0\n 18285: u64 [a2 + 144] = 0\n 18289: u64 [a2 + 136] = 0\n 18293: a3 = 0x70a0823100000000\n 18303: a1 = s1 + 0x3a20\n 18307: u64 [a2 + 0xa0] = a3\n 18311: u64 [s1 + 0x210] = a0\n 18315: u64 [s1 + 0x1c8] = t0\n 18319: u64 [s1 + 0x1c0] = a5\n 18323: u64 [s1 + 0x1b8] = a4\n 18327: ra = 732, jump @19\n      : @753 [@dyn 366] (gas: 8)\n 18333: a0 = 0x30290\n 18338: u64 [s1 + 0x1f0] = a0\n 18342: i32 a0 = a0 + 0\n 18344: u64 [s1 + 0x198] = a0\n 18348: ra = 0x2de\n 18352: ecalli 0 // 'address'\n 18353: t0 = 0x2e0\n 18357: jump @2567\n      : @754 [@dyn 367] (gas: 1)\n 18361: t0 = 736, jump @2567\n      : @755 [@dyn 368] (gas: 1)\n 18368: jump @848 if a1 == 0\n      : @756 (gas: 5)\n 18372: a2 = u64 [s1 + 0x1f0]\n 18376: a1 = u64 [a2 + 0x8]\n 18379: a0 = 0x2400000000\n 18389: u64 [s1 + 0x190] = a0\n 18393: t0 = 738, jump @2595\n      : @757 [@dyn 369] (gas: 8)\n 18400: i32 a4 = a4 + 0xfffffffffffff998\n 18404: a5 = s1 + a4\n 18407: u64 [a5 + 128] = 0\n 18411: u64 [a5 + 0x78] = a2\n 18414: u64 [a5 + 0x70] = a1\n 18417: a1 = s1 + 0x3a00\n 18421: u64 [a5 + 0x68] = a3\n 18424: ra = 740, jump @19\n      : @758 [@dyn 370] (gas: 5)\n 18430: ra = 0x2e6\n 18434: ecalli 12 // 'ref_time_left'\n 18436: a0 = u64 [s1 + 0x200]\n 18440: t0 = 0x2e8\n 18444: jump @2663\n      : @759 [@dyn 371] (gas: 2)\n 18448: a0 = u64 [s1 + 0x200]\n 18452: t0 = 744, jump @2663\n      : @760 [@dyn 372] (gas: 2)\n 18459: a2 = u64 [s1 + 0x208]\n 18463: t0 = 746, jump @2606\n      : @761 [@dyn 373] (gas: 7)\n 18470: u64 [a0 + 736] = 0\n 18474: u64 [a0 + 728] = 0\n 18478: u64 [a0 + 720] = 0\n 18482: u64 [a0 + 712] = 0\n 18486: a1 = 0x24\n 18489: a0 = u64 [s1 + 0x210]\n 18493: ra = 748, jump @32\n      : @762 [@dyn 374] (gas: 4)\n 18499: u64 [s1 + 0x188] = a0\n 18503: a1 = 0x20\n 18506: a0 = u64 [s1 + 0x210]\n 18510: ra = 750, jump @32\n      : @763 [@dyn 375] (gas: 34)\n 18516: a1 = s1 + 0x5198\n 18520: u32 [a1 + 744] = 0x20\n 18525: u64 [a1 + 800] = 0\n 18529: u64 [a1 + 792] = 0\n 18533: u64 [a1 + 784] = 0\n 18537: u64 [a1 + 776] = 0\n 18541: a5 = s1 + 0x100\n 18545: a1 = u64 [a5 + 0xf0]\n 18549: a1 = a1 << 0x20\n 18552: a1 = a1 >> 0x20\n 18555: a2 = 0x1800000000\n 18565: t0 = a1 | a2\n 18568: a1 = s1 + 0x5460\n 18572: a1 = a1 << 0x20\n 18575: a1 = a1 >> 0x20\n 18578: a2 = s1 + 0x54a0\n 18582: a2 = a2 << 0x20\n 18585: a3 = a2 | a1\n 18588: a1 = u64 [a5 + 0x88]\n 18592: a1 = a1 << 0x20\n 18595: a1 = a1 >> 0x20\n 18598: a4 = u64 [a5 + 0x90]\n 18602: a4 = a4 | a1\n 18605: a0 = a0 << 0x20\n 18608: a0 = a0 >> 0x20\n 18611: a1 = s1 + 0x5480\n 18615: a1 = a1 << 0x20\n 18618: a5 = a1 | a0\n 18621: a1 = 0xffffffffffffffff\n 18624: a2 = 0xffffffffffffffff\n 18627: u64 [s1 + 0x188] = t0\n 18631: a0 = t0\n 18633: ecalli 1 // 'call'\n 18635: fallthrough\n      : @764 (gas: 1)\n 18636: jump @766 if a0 == 0\n      : @765 (gas: 1)\n 18639: jump @1353\n      : @766 (gas: 2)\n 18642: ecalli 14 // 'return_data_size'\n 18644: fallthrough\n      : @767 (gas: 2)\n 18645: a5 = 0x20\n 18648: jump @769 if a0 >=u a5\n      : @768 (gas: 4)\n 18651: ecalli 14 // 'return_data_size'\n 18653: a5 = a0\n 18655: a2 = s1 + 0x3998\n 18659: jump @770\n      : @769 (gas: 2)\n 18661: a2 = s1 + 0x3998\n 18665: fallthrough\n      : @770 (gas: 17)\n 18666: a3 = u64 [s1 + 0x210]\n 18670: t0 = u64 [s1 + 0x1c8]\n 18674: a0 = u64 [s1 + 0x1c0]\n 18678: a1 = u64 [s1 + 0x1b8]\n 18682: u64 [s1 + 448] = 0\n 18686: u64 [s1 + 0x1c8] = a5\n 18690: u64 [a2 + 0x8] = a5\n 18693: u64 [a2 + 0x28] = a3\n 18696: u64 [a2 + 16] = 0\n 18699: u64 [a2 + 0x30] = a1\n 18702: u64 [a2 + 24] = 0\n 18705: u64 [a2 + 0x38] = a0\n 18708: u64 [a2 + 32] = 0\n 18711: a0 = s1 + 0x39c0\n 18715: a1 = s1 + 0x39a0\n 18719: u64 [a2 + 0x40] = t0\n 18722: ra = 752, jump @1919\n      : @771 [@dyn 376] (gas: 4)\n 18728: a3 = u64 [s1 + 0x1c0]\n 18732: a0 = a3 >u 0\n 18734: a1 = u64 [s1 + 0x1c8]\n 18738: t0 = 754, jump @2556\n      : @772 [@dyn 377] (gas: 1)\n 18745: jump @774 if a2 != 0\n      : @773 (gas: 1)\n 18748: jump @1903\n      : @774 (gas: 7)\n 18751: a0 = u64 [s1 + 0x1f8]\n 18755: a0 = a0 << 0x20\n 18758: a0 = a0 >> 0x20\n 18761: u64 [s1 + 0x1f8] = a0\n 18765: a0 = s1 + 0x3980\n 18769: a1 = u64 [s1 + 0x210]\n 18773: ra = 756, jump @17\n      : @775 [@dyn 378] (gas: 19)\n 18779: a1 = s1 + 0x3198\n 18783: a2 = a1 + 0x700\n 18787: a0 = u64 [a2 + 0xe8]\n 18791: u64 [s1 + 0x210] = a0\n 18795: a0 = u64 [a2 + 0xf0]\n 18799: u64 [s1 + 0x1c8] = a0\n 18803: a0 = u64 [a2 + 0xf8]\n 18807: u64 [s1 + 0x1c0] = a0\n 18811: a0 = s1 + 0x3998\n 18815: a0 = u64 [a0]\n 18817: u64 [s1 + 0x1b8] = a0\n 18821: a1 = s1 + 0x5198\n 18825: u64 [a1 + 864] = 0\n 18829: u64 [a1 + 856] = 0\n 18833: u64 [a1 + 848] = 0\n 18837: u64 [a1 + 840] = 0x8\n 18842: a0 = s1 + 0x3960\n 18846: a1 = s1 + 0x54e0\n 18850: ra = 758, jump @21\n      : @776 [@dyn 379] (gas: 23)\n 18856: a2 = s1 + 0x3198\n 18860: a4 = a2 + 0x700\n 18864: a0 = u64 [a4 + 0xd0]\n 18868: a1 = u64 [a4 + 0xc8]\n 18872: a0 = a0 << 0x10\n 18875: a3 = a0 >> 0x10\n 18878: u64 [a2 + 1920] = 0\n 18882: u64 [a2 + 1912] = 0\n 18886: u64 [a4 + 0x68] = a1\n 18889: a0 = u64 [s1 + 0x1b8]\n 18893: u64 [a4 + 0xa0] = a0\n 18897: a0 = u64 [s1 + 0x1c0]\n 18901: u64 [a4 + 0x98] = a0\n 18905: a0 = u64 [s1 + 0x1c8]\n 18909: u64 [a4 + 0x90] = a0\n 18913: a0 = u64 [s1 + 0x210]\n 18917: u64 [a4 + 0x88] = a0\n 18921: a4 = a2\n 18923: a0 = s1 + 0x3940\n 18927: a1 = s1 + 0x3920\n 18931: a2 = s1 + 0x3900\n 18935: u64 [a4 + 0x770] = a3\n 18939: ra = 760, jump @2218\n      : @777 [@dyn 380] (gas: 30)\n 18946: a4 = s1 + 0x3198\n 18950: a5 = a4 + 0x700\n 18954: a0 = u64 [a5 + 0xa8]\n 18958: a1 = u64 [a5 + 0xb0]\n 18962: a2 = u64 [a5 + 0xb8]\n 18966: a3 = u64 [a5 + 0xc0]\n 18970: u64 [a5 + 0x20] = a3\n 18973: u64 [a5 + 0x18] = a2\n 18976: u64 [a5 + 0x10] = a1\n 18979: u64 [a5 + 0x8] = a0\n 18982: a1 = s1 + 0x100\n 18986: a0 = u64 [a1 + 0xd0]\n 18990: u64 [a5 + 0x40] = a0\n 18993: a0 = u64 [a1 + 0xd8]\n 18997: u64 [a5 + 0x38] = a0\n 19000: a0 = u64 [a1 + 0xe0]\n 19004: u64 [a5 + 0x30] = a0\n 19007: a0 = u64 [a1 + 0xe8]\n 19011: u64 [a5 + 0x28] = a0\n 19014: a0 = u64 [a1 + 0xf8]\n 19018: u64 [a5 + 0x58] = a0\n 19021: a0 = u64 [s1 + 0x200]\n 19025: u64 [a5 + 0x50] = a0\n 19028: a0 = u64 [s1 + 0x208]\n 19032: u64 [a5 + 0x48] = a0\n 19035: a0 = s1 + 0x38e0\n 19039: a1 = s1 + 0x38c0\n 19043: a2 = s1 + 0x38a0\n 19047: u64 [a4 + 1888] = 0\n 19051: ra = 762, jump @2015\n      : @778 [@dyn 381] (gas: 3)\n 19057: a0 = s1 + 0x3880\n 19061: a1 = 0x40\n 19064: ra = 764, jump @17\n      : @779 [@dyn 382] (gas: 14)\n 19070: a2 = s1 + 0x3198\n 19074: t0 = u64 [a2 + 0x700]\n 19078: a1 = a2 + 0x600\n 19082: a5 = u64 [a1 + 0xf8]\n 19086: a4 = u64 [a1 + 0xf0]\n 19090: a0 = u64 [a1 + 0xe8]\n 19094: a3 = a4 | t0\n 19097: a1 = a0 | a5\n 19100: a1 = a1 | a3\n 19103: a1 = a1 >> 0x20\n 19106: a3 = a3 | a5\n 19109: a3 = a3 << 0x20\n 19112: a1 = a1 | a3\n 19115: jump @848 if a1 != 0\n      : @780 (gas: 11)\n 19119: u64 [a2 + 1752] = 0\n 19123: u64 [a2 + 1744] = 0\n 19127: u64 [a2 + 1736] = 0\n 19131: a3 = 0x70a0823100000000\n 19141: a1 = s1 + 0x3860\n 19145: u64 [a2 + 0x6e0] = a3\n 19149: u64 [s1 + 0x210] = a0\n 19153: u64 [s1 + 0x208] = t0\n 19157: u64 [s1 + 0x200] = a5\n 19161: u64 [s1 + 0x1f8] = a4\n 19165: ra = 766, jump @19\n      : @781 [@dyn 383] (gas: 5)\n 19171: a0 = u64 [s1 + 0x198]\n 19175: ra = 0x300\n 19179: ecalli 0 // 'address'\n 19180: t0 = 0x302\n 19184: jump @2577\n      : @782 [@dyn 384] (gas: 1)\n 19188: t0 = 770, jump @2577\n      : @783 [@dyn 385] (gas: 1)\n 19195: jump @848 if a1 == 0\n      : @784 (gas: 2)\n 19199: a2 = u64 [s1 + 0x1f0]\n 19203: t0 = 772, jump @2585\n      : @785 [@dyn 386] (gas: 7)\n 19210: u64 [a5 + 1728] = 0\n 19214: a4 = a5 + 0x600\n 19218: u64 [a4 + 0xb8] = a1\n 19222: u64 [a4 + 0xb0] = a2\n 19226: a1 = s1 + 0x3840\n 19230: u64 [a4 + 0xa8] = a3\n 19234: ra = 774, jump @19\n      : @786 [@dyn 387] (gas: 4)\n 19240: ra = 0x308\n 19244: ecalli 12 // 'ref_time_left'\n 19246: t0 = 0x30a\n 19250: jump @2648\n      : @787 [@dyn 388] (gas: 1)\n 19254: t0 = 778, jump @2648\n      : @788 [@dyn 389] (gas: 3)\n 19261: a1 = a1 | a2\n 19264: a2 = u64 [s1 + 0x1b0]\n 19268: t0 = 780, jump @2606\n      : @789 [@dyn 390] (gas: 7)\n 19275: u64 [a0 + 896] = 0\n 19279: u64 [a0 + 888] = 0\n 19283: u64 [a0 + 880] = 0\n 19287: u64 [a0 + 872] = 0\n 19291: a1 = 0x24\n 19294: a0 = u64 [s1 + 0x210]\n 19298: ra = 782, jump @32\n      : @790 [@dyn 391] (gas: 4)\n 19304: u64 [s1 + 0x1f0] = a0\n 19308: a1 = 0x20\n 19311: a0 = u64 [s1 + 0x210]\n 19315: ra = 784, jump @32\n      : @791 [@dyn 392] (gas: 21)\n 19321: a1 = s1 + 0x5198\n 19325: u32 [a1 + 904] = 0x20\n 19330: u64 [a1 + 960] = 0\n 19334: u64 [a1 + 952] = 0\n 19338: u64 [a1 + 944] = 0\n 19342: u64 [a1 + 936] = 0\n 19346: a1 = s1 + 0x5500\n 19350: a1 = a1 << 0x20\n 19353: a1 = a1 >> 0x20\n 19356: a2 = s1 + 0x5540\n 19360: a2 = a2 << 0x20\n 19363: a3 = a2 | a1\n 19366: a1 = u64 [s1 + 0x1f0]\n 19370: a1 = a1 << 0x20\n 19373: a1 = a1 >> 0x20\n 19376: a4 = u64 [s1 + 0x190]\n 19380: a4 = a4 | a1\n 19383: a0 = a0 << 0x20\n 19386: a0 = a0 >> 0x20\n 19389: a1 = 0x5520\n 19393: t0 = 786, jump @2662\n      : @792 [@dyn 393] (gas: 3)\n 19400: a0 = u64 [s1 + 0x188]\n 19404: ecalli 1 // 'call'\n 19406: fallthrough\n      : @793 (gas: 1)\n 19407: jump @795 if a0 == 0\n      : @794 (gas: 1)\n 19410: jump @1528\n      : @795 (gas: 2)\n 19413: ecalli 14 // 'return_data_size'\n 19415: fallthrough\n      : @796 (gas: 2)\n 19416: a1 = 0x20\n 19419: jump @798 if a0 >=u a1\n      : @797 (gas: 3)\n 19422: ecalli 14 // 'return_data_size'\n 19424: a1 = a0\n 19426: fallthrough\n      : @798 (gas: 20)\n 19427: u64 [s1 + 456] = 0\n 19431: u64 [s1 + 0x1f0] = a1\n 19435: a3 = s1 + 0x3198\n 19439: a4 = a3 + 0x600\n 19443: u64 [a4 + 0x48] = a1\n 19446: a5 = s1 + 0x200\n 19450: a0 = u64 [a5 + 0x10]\n 19453: u64 [a4 + 0x68] = a0\n 19456: u64 [a3 + 1616] = 0\n 19460: a0 = u64 [s1 + 0x1f8]\n 19464: u64 [a4 + 0x70] = a0\n 19467: u64 [a3 + 1624] = 0\n 19471: a0 = u64 [a5]\n 19473: u64 [a4 + 0x78] = a0\n 19476: u64 [a3 + 1632] = 0\n 19480: a0 = s1 + 0x3800\n 19484: a1 = s1 + 0x37e0\n 19488: a2 = u64 [a5 + 0x8]\n 19491: u64 [a4 + 0x80] = a2\n 19495: ra = 788, jump @1919\n      : @799 [@dyn 394] (gas: 4)\n 19501: a3 = u64 [s1 + 0x1c8]\n 19505: a0 = a3 >u 0\n 19507: a1 = u64 [s1 + 0x1f0]\n 19511: t0 = 790, jump @2556\n      : @800 [@dyn 395] (gas: 1)\n 19518: jump @802 if a2 != 0\n      : @801 (gas: 1)\n 19521: jump @1908\n      : @802 (gas: 9)\n 19524: a0 = u64 [s1 + 0x1a0]\n 19528: a0 = a0 << 0x20\n 19531: a0 = a0 >> 0x20\n 19534: u64 [s1 + 0x208] = a0\n 19538: a0 = 0xffffffffffff\n 19548: u64 [s1 + 0x200] = a0\n 19552: a0 = s1 + 0x37c0\n 19556: a1 = u64 [s1 + 0x210]\n 19560: ra = 792, jump @17\n      : @803 [@dyn 396] (gas: 18)\n 19566: a1 = s1 + 0x3198\n 19570: a2 = a1 + 0x600\n 19574: a0 = u64 [a2 + 0x28]\n 19577: u64 [s1 + 0x210] = a0\n 19581: a0 = u64 [a2 + 0x30]\n 19584: u64 [s1 + 0x1f8] = a0\n 19588: a0 = u64 [a2 + 0x38]\n 19591: u64 [s1 + 0x1f0] = a0\n 19595: a0 = u64 [a2 + 0x40]\n 19598: u64 [s1 + 0x1c8] = a0\n 19602: a1 = s1 + 0x5198\n 19606: u64 [a1 + 1024] = 0\n 19610: u64 [a1 + 1016] = 0\n 19614: u64 [a1 + 1008] = 0\n 19618: u64 [a1 + 1000] = 0x8\n 19623: a0 = s1 + 0x37a0\n 19627: a1 = s1 + 0x5580\n 19631: ra = 794, jump @21\n      : @804 [@dyn 397] (gas: 29)\n 19637: a4 = s1 + 0x3198\n 19641: a0 = u64 [a4 + 0x618]\n 19645: a1 = u64 [a4 + 0x620]\n 19649: a2 = u16 [a4 + 0x616]\n 19653: a3 = a0 >> 0x30\n 19656: a1 = a1 << 0x10\n 19659: a1 = a1 | a3\n 19662: a0 = a0 << 0x10\n 19665: a0 = a0 | a2\n 19668: a3 = a0 & 0xffffffffffffffff\n 19671: a0 = u64 [s1 + 0x200]\n 19675: a0 = a0 & a1\n 19678: u64 [a4 + 1472] = 0\n 19682: u64 [a4 + 1464] = 0\n 19686: a1 = u64 [s1 + 0x1c8]\n 19690: a5 = a4 + 0x500\n 19694: u64 [a5 + 0xe0] = a1\n 19698: a1 = u64 [s1 + 0x1f0]\n 19702: u64 [a5 + 0xd8] = a1\n 19706: a1 = u64 [s1 + 0x1f8]\n 19710: u64 [a5 + 0xd0] = a1\n 19714: a1 = u64 [s1 + 0x210]\n 19718: u64 [a5 + 0xc8] = a1\n 19722: u64 [a5 + 0xb0] = a0\n 19726: a0 = s1 + 0x3780\n 19730: a1 = s1 + 0x3760\n 19734: a2 = s1 + 0x3740\n 19738: u64 [a5 + 0xa8] = a3\n 19742: ra = 796, jump @2218\n      : @805 [@dyn 398] (gas: 30)\n 19749: a4 = s1 + 0x3198\n 19753: a5 = a4 + 0x500\n 19757: a0 = u64 [a5 + 0xe8]\n 19761: a1 = u64 [a5 + 0xf0]\n 19765: a2 = u64 [a5 + 0xf8]\n 19769: a3 = u64 [a4 + 0x600]\n 19773: u64 [a5 + 0x60] = a3\n 19776: u64 [a5 + 0x58] = a2\n 19779: u64 [a5 + 0x50] = a1\n 19782: u64 [a5 + 0x48] = a0\n 19785: a1 = s1 + 0x100\n 19789: a0 = u64 [a1 + 0xd0]\n 19793: u64 [a5 + 0x80] = a0\n 19797: a0 = u64 [a1 + 0xd8]\n 19801: u64 [a5 + 0x78] = a0\n 19804: a0 = u64 [a1 + 0xe0]\n 19808: u64 [a5 + 0x70] = a0\n 19811: a0 = u64 [a1 + 0xe8]\n 19815: u64 [a5 + 0x68] = a0\n 19818: a0 = u64 [s1 + 0x208]\n 19822: u64 [a5 + 0x98] = a0\n 19826: a0 = u64 [a1 + 0xa8]\n 19830: u64 [a5 + 0x90] = a0\n 19834: a0 = u64 [a1 + 0xb0]\n 19838: u64 [a5 + 0x88] = a0\n 19842: a0 = s1 + 0x3720\n 19846: a1 = s1 + 0x3700\n 19850: a2 = s1 + 0x36e0\n 19854: u64 [a4 + 1440] = 0\n 19858: ra = 798, jump @2015\n      : @806 [@dyn 399] (gas: 13)\n 19864: a1 = s1 + 0x5198\n 19868: u64 [a1 + 1056] = 0\n 19872: u64 [a1 + 1048] = 0\n 19876: u64 [a1 + 1040] = 0\n 19880: u64 [a1 + 1032] = 0xc\n 19885: u64 [a1 + 1088] = 0\n 19889: u64 [a1 + 1080] = 0\n 19893: u64 [a1 + 1072] = 0\n 19897: u64 [a1 + 1064] = 0x1\n 19902: a0 = s1 + 0x55a0\n 19906: a1 = s1 + 0x55c0\n 19910: ra = 0x25c\n 19914: jump @23\n      : @807 (gas: 11)\n 19917: u64 [s1 + 0x1f0] = a5\n 19921: u64 [s1 + 0x1f8] = a3\n 19925: u64 [a2 + 1248] = 0\n 19929: u64 [a2 + 1240] = 0\n 19933: u64 [a2 + 1232] = 0\n 19937: u64 [a2 + 1224] = 0\n 19941: a0 = s1 + 0x5000\n 19945: i32 a0 = a0 + 0x660\n 19949: ra = 0x320\n 19953: ecalli 18 // 'value_transferred'\n 19955: fallthrough\n      : @808 [@dyn 400] (gas: 3)\n 19956: a3 = s1 + 0x5198\n 19960: a4 = a3 + 0x400\n 19964: t0 = 802, jump @2665\n      : @809 [@dyn 401] (gas: 1)\n 19971: jump @844 if a0 != 0\n      : @810 (gas: 4)\n 19975: a0 = u64 [s1 + 0x210]\n 19979: a0 = i32 [a0]\n 19981: a1 = 0xe3\n 19985: jump @844 if a1 >=u a0\n      : @811 (gas: 4)\n 19989: a0 = s1 + 0x41a0\n 19993: ra = 0x324\n 19997: t0 = 0x7c8\n 20001: jump @2675\n      : @812 [@dyn 402] (gas: 13)\n 20005: a1 = s1 + 0x4198\n 20009: a0 = u64 [a1 + 0x20]\n 20012: u64 [s1 + 0x180] = a0\n 20016: a0 = u64 [a1 + 0x18]\n 20019: u64 [s1 + 0x1c0] = a0\n 20023: a0 = u64 [a1 + 0x10]\n 20026: u64 [s1 + 0x1d0] = a0\n 20030: a0 = u64 [a1 + 0x8]\n 20033: u64 [s1 + 0x1c8] = a0\n 20037: a0 = s1 + 0x4180\n 20041: ra = 0x326\n 20045: t0 = 0x7d2\n 20049: jump @2675\n      : @813 [@dyn 403] (gas: 45)\n 20053: a1 = s1 + 0x4198\n 20057: a0 = u64 [a1]\n 20059: u64 [s1 + 0x178] = a0\n 20063: a2 = a1 + 0xffffffffffffff00\n 20067: a0 = u64 [a2 + 0xf8]\n 20071: u64 [s1 + 0x1b8] = a0\n 20075: a0 = u64 [a2 + 0xf0]\n 20079: u64 [s1 + 0x1b0] = a0\n 20083: a0 = u64 [a2 + 0xe8]\n 20087: u64 [s1 + 0x1a8] = a0\n 20091: a0 = s1 + 0x5000\n 20095: i32 a0 = a0 + 0x680\n 20099: a1 = 0x44\n 20102: ecalli 3 // 'call_data_load'\n 20104: a1 = s1 + 0x5198\n 20108: a0 = u64 [a1 + 0x500]\n 20112: u64 [s1 + 0x1a0] = a0\n 20116: a2 = a1 + 0x400\n 20120: a0 = u64 [a2 + 0xf8]\n 20124: u64 [s1 + 0x198] = a0\n 20128: a0 = u64 [a2 + 0xf0]\n 20132: u64 [s1 + 0x190] = a0\n 20136: a0 = u64 [a2 + 0xe8]\n 20140: u64 [s1 + 0x188] = a0\n 20144: a0 = s1 + 0x5000\n 20148: i32 a0 = a0 + 0x6a0\n 20152: a1 = 0x64\n 20155: ecalli 3 // 'call_data_load'\n 20157: a1 = s1 + 0x5198\n 20161: a2 = a1 + 0x500\n 20165: a0 = u64 [a2 + 0x20]\n 20168: u64 [s1 + 0x210] = a0\n 20172: a0 = u64 [a2 + 0x18]\n 20175: a1 = s1 + 0x100\n 20179: u64 [a1 + 0xe8] = a0\n 20183: a0 = u64 [a2 + 0x10]\n 20186: u64 [a1 + 0xe0] = a0\n 20190: a0 = u64 [a2 + 0x8]\n 20193: u64 [a1 + 0xd8] = a0\n 20197: a0 = s1 + 0x5000\n 20201: i32 a0 = a0 + 0x6c0\n 20205: a1 = 0x84\n 20209: ra = 0x328\n 20213: ecalli 3 // 'call_data_load'\n 20215: fallthrough\n      : @814 [@dyn 404] (gas: 11)\n 20216: a2 = s1 + 0x5198\n 20220: a4 = a2 + 0x500\n 20224: a0 = u64 [a4 + 0x40]\n 20227: a1 = u64 [a4 + 0x38]\n 20230: a3 = u64 [a4 + 0x28]\n 20233: a2 = u64 [a4 + 0x30]\n 20236: a0 = a0 | a1\n 20239: a1 = a3 <u 0x100\n 20243: a1 = 0 if a2 != 0\n 20245: a1 = 0 if a0 != 0\n 20247: jump @844 if a1 == 0\n      : @815 (gas: 5)\n 20251: u64 [s1 + 0x170] = a3\n 20255: a0 = s1 + 0x5000\n 20259: i32 a0 = a0 + 0x6e0\n 20263: ecalli 11 // 'now'\n 20265: fallthrough\n      : @816 (gas: 22)\n 20266: a3 = s1 + 0x5198\n 20270: a4 = a3 + 0x500\n 20274: a0 = u64 [a4 + 0x50]\n 20277: a1 = u64 [a4 + 0x60]\n 20280: a2 = u64 [a4 + 0x48]\n 20283: a3 = u64 [a4 + 0x58]\n 20286: a5 = u64 [s1 + 0x1e0]\n 20290: a4 = a5 ^ a0\n 20293: a0 = a5 <u a0\n 20296: a5 = u64 [s1 + 0x1d8]\n 20300: a2 = a5 <u a2\n 20303: a2 = a0 if a4 != 0\n 20306: a0 = u64 [s1 + 0x1e8]\n 20310: t0 = a0 <u a3\n 20313: a5 = u64 [s1 + 0x210]\n 20317: a4 = a5 ^ a1\n 20320: a1 = a5 <u a1\n 20323: a1 = t0 if a4 == 0\n 20326: a0 = a0 ^ a3\n 20329: a0 = a0 | a4\n 20332: a1 = a2 if a0 == 0\n 20335: jump @818 if a1 != 0\n      : @817 (gas: 1)\n 20338: jump @1251\n      : @818 (gas: 3)\n 20341: a0 = s1 + 0x3c40\n 20345: a1 = 0x40\n 20348: ra = 810, jump @17\n      : @819 [@dyn 405] (gas: 2)\n 20354: a2 = s1 + 0x3998\n 20358: fallthrough\n      : @820 (gas: 13)\n 20359: t0 = u64 [a2 + 0x2c0]\n 20363: a1 = a2 + 0x200\n 20367: a5 = u64 [a1 + 0xb8]\n 20371: a4 = u64 [a1 + 0xb0]\n 20375: a0 = u64 [a1 + 0xa8]\n 20379: a3 = a4 | t0\n 20382: a1 = a0 | a5\n 20385: a1 = a1 | a3\n 20388: a1 = a1 >> 0x20\n 20391: a3 = a3 | a5\n 20394: a3 = a3 << 0x20\n 20397: a1 = a1 | a3\n 20400: jump @848 if a1 != 0\n      : @821 (gas: 11)\n 20404: u64 [a2 + 664] = 0\n 20408: u64 [a2 + 656] = 0\n 20412: u64 [a2 + 648] = 0\n 20416: a3 = 0x8c379a000000000\n 20426: a1 = s1 + 0x3c20\n 20430: u64 [a2 + 0x2a0] = a3\n 20434: u64 [s1 + 0x218] = a0\n 20438: u64 [s1 + 0x210] = a4\n 20442: u64 [s1 + 0x200] = t0\n 20446: u64 [s1 + 0x208] = a5\n 20450: ra = 812, jump @19\n      : @822 [@dyn 406] (gas: 6)\n 20456: a5 = s1 + 0x200\n 20460: a1 = u64 [a5 + 0x18]\n 20463: a0 = u64 [a5 + 0x8]\n 20466: a3 = u64 [a5]\n 20468: a3 = a3 | a0\n 20471: t0 = 814, jump @2570\n      : @823 [@dyn 407] (gas: 1)\n 20478: jump @848 if a0 == 0\n      : @824 (gas: 4)\n 20482: i32 a0 = a1 + 0x4\n 20485: t0 = 0x330\n 20489: a2 = s1 + 0x3998\n 20493: fallthrough\n      : @825 [@dyn 408] (gas: 8)\n 20494: u64 [a2 + 640] = 0\n 20498: u64 [a2 + 632] = 0\n 20502: u64 [a2 + 616] = 0x20\n 20507: a1 = s1 + 0x3c00\n 20511: u64 [a2 + 624] = 0\n 20515: u64 [s1 + 0x208] = a3\n 20519: u64 [s1 + 0x200] = a4\n 20523: ra = 818, jump @19\n      : @826 [@dyn 409] (gas: 1)\n 20529: t0 = 820, jump @2587\n      : @827 [@dyn 410] (gas: 1)\n 20536: jump @848 if a0 == 0\n      : @828 (gas: 8)\n 20540: i32 a0 = a1 + 0x24\n 20543: a3 = s1 + 0x3998\n 20547: u64 [a3 + 608] = 0\n 20551: u64 [a3 + 600] = 0\n 20555: u64 [a3 + 584] = 0x12\n 20560: a1 = s1 + 0x3be0\n 20564: u64 [a3 + 592] = 0\n 20568: ra = 822, jump @19\n      : @829 [@dyn 411] (gas: 1)\n 20574: t0 = 824, jump @2618\n      : @830 [@dyn 412] (gas: 1)\n 20581: jump @848 if a0 == 0\n      : @831 (gas: 13)\n 20585: i32 a0 = a3 + 0x44\n 20588: a1 = u64 [0x20048]\n 20593: a2 = u64 [0x20060]\n 20598: a4 = s1 + 0x3998\n 20602: a3 = a4 + 0x200\n 20606: u64 [a3 + 0x40] = a1\n 20609: u64 [a3 + 0x38] = a2\n 20612: a1 = 0x4544000000000000\n 20622: u64 [a3 + 0x30] = a1\n 20625: a1 = s1 + 0x3bc0\n 20629: u64 [a4 + 552] = 0\n 20633: ra = 0x4fa\n 20637: jump @19\n      : @832 (gas: 9)\n 20640: u64 [a2 + 544] = 0\n 20644: u64 [a2 + 536] = 0\n 20648: u64 [a2 + 528] = 0\n 20652: u64 [a2 + 520] = 0\n 20656: a0 = s1 + 0x5000\n 20660: i32 a0 = a0 + 0x3a0\n 20664: ra = 0x33a\n 20668: ecalli 18 // 'value_transferred'\n 20670: fallthrough\n      : @833 [@dyn 413] (gas: 7)\n 20671: a2 = s1 + 0x5198\n 20675: a5 = a2 + 0x200\n 20679: a0 = u64 [a5 + 0x20]\n 20682: a1 = u64 [a5 + 0x10]\n 20685: a3 = u64 [a5 + 0x18]\n 20688: a4 = u64 [a5 + 0x8]\n 20691: t0 = 828, jump @2574\n      : @834 [@dyn 414] (gas: 6)\n 20698: t0 = u64 [a1 + 0x10]\n 20701: a2 = u64 [a1 + 0x8]\n 20704: a0 = u64 [a1]\n 20706: a3 = a3 | a4\n 20709: a3 = a3 | a5\n 20712: jump @838 if a3 != 0\n      : @835 (gas: 22)\n 20715: a1 = u64 [s1 + 0x210]\n 20719: a3 = u32 [a1]\n 20721: a1 = a3 + 0xfffffffffffffffc\n 20724: a3 = a1 <u a3\n 20727: a5 = a3 + 0xffffffffffffffff\n 20730: a3 = 0 if a5 != 0\n 20732: a4 = a3 >u 0\n 20734: a4 = a4 + 0xffffffffffffffff\n 20737: t2 = a3 + 0xffffffffffffffff\n 20740: a3 = t2 <u t0\n 20743: ra = a4 ^ t1\n 20746: a4 = a4 <s t1\n 20749: a4 = a3 if ra == 0\n 20752: u64 [s1 + 0x218] = a0\n 20756: a0 = a1 <u a0\n 20759: a1 = a5 ^ a2\n 20762: a5 = a5 <u a2\n 20765: a5 = a0 if a1 == 0\n 20768: a3 = t2 ^ t0\n 20771: a3 = a3 | ra\n 20774: a5 = a4 if a3 != 0\n 20777: jump @949 if a5 == 0\n      : @836 (gas: 9)\n 20781: a0 = u64 [s1 + 0x218]\n 20785: a3 = a0 | t0\n 20788: a1 = a2 | t1\n 20791: a3 = a3 | a1\n 20794: a3 = a3 >> 0x20\n 20797: a1 = a1 | t0\n 20800: a1 = a1 << 0x20\n 20803: a1 = a1 | a3\n 20806: jump @848 if a1 != 0\n      : @837 (gas: 3)\n 20810: a1 = a0\n 20812: ra = 0x7a2\n 20816: jump @32\n      : @838 (gas: 8)\n 20819: a3 = a0 | t0\n 20822: a1 = a2 | t1\n 20825: a3 = a3 | a1\n 20828: a3 = a3 >> 0x20\n 20831: a1 = a1 | t0\n 20834: a1 = a1 << 0x20\n 20837: a1 = a1 | a3\n 20840: jump @848 if a1 != 0\n      : @839 (gas: 1)\n 20844: jump @1872\n      : @840 (gas: 16)\n 20847: u64 [s1 + 0x1f0] = t1\n 20851: u64 [s1 + 0x1f8] = t2\n 20855: u64 [s1 + 0x200] = ra\n 20859: u64 [s1 + 0x208] = a4\n 20863: a0 = s1 + 0x4998\n 20867: u64 [a0 + 1536] = 0\n 20871: u64 [a0 + 1528] = 0\n 20875: u64 [a0 + 1520] = 0\n 20879: u64 [a0 + 1512] = 0\n 20883: a0 = s1 + 0x5000\n 20887: i32 a0 = a0 + 0xffffffffffffff80\n 20890: ra = 0x33e\n 20894: ecalli 18 // 'value_transferred'\n 20896: a0 = 0x5000\n 20900: t0 = 0x340\n 20904: jump @2669\n      : @841 [@dyn 415] (gas: 2)\n 20908: a0 = 0x5000\n 20912: t0 = 832, jump @2669\n      : @842 [@dyn 416] (gas: 8)\n 20919: a0 = u64 [a4 + 0xf8]\n 20923: a1 = u64 [a3 + 0x600]\n 20927: a2 = u64 [a4 + 0xf0]\n 20931: a3 = u64 [a4 + 0xe8]\n 20935: a1 = a1 | a2\n 20938: a0 = a0 | a3\n 20941: a0 = a0 | a1\n 20944: jump @844 if a0 != 0\n      : @843 (gas: 4)\n 20947: a0 = u64 [s1 + 0x210]\n 20951: a0 = i32 [a0]\n 20953: a1 = 0x23\n 20956: jump @955 if a1 <u a0\n      : @844 (gas: 3)\n 20960: a3 = u64 [s1 + 0x218]\n 20964: t0 = 0x342\n 20968: jump @2645\n      : @845 (gas: 1)\n 20972: t0 = 834, jump @2645\n      : @846 [@dyn 417] (gas: 1)\n 20979: jump @848 if a1 != 0\n      : @847 (gas: 1)\n 20982: jump @1872\n      : @848 (gas: 1)\n 20985: trap\n      : @849 (gas: 8)\n 20986: a3 = a0 | t0\n 20989: a1 = a2 | t1\n 20992: a3 = a3 | a1\n 20995: a3 = a3 >> 0x20\n 20998: a1 = a1 | t0\n 21001: a1 = a1 << 0x20\n 21004: a1 = a1 | a3\n 21007: jump @848 if a1 != 0\n      : @850 (gas: 1)\n 21010: jump @867\n      : @851 (gas: 3)\n 21013: a0 = s1 + 0x1160\n 21017: a1 = 0x40\n 21020: ra = 836, jump @17\n      : @852 [@dyn 418] (gas: 15)\n 21026: a4 = s1 + 0x7ff\n 21030: a4 = a4 + 0x199\n 21034: t0 = u64 [a4 + 0x7e0]\n 21038: a1 = a4 + 0x700\n 21042: a5 = u64 [a1 + 0xd8]\n 21046: a3 = u64 [a1 + 0xd0]\n 21050: a0 = u64 [a1 + 0xc8]\n 21054: a2 = a3 | t0\n 21057: a1 = a0 | a5\n 21060: a1 = a1 | a2\n 21063: a1 = a1 >> 0x20\n 21066: a2 = a2 | a5\n 21069: a2 = a2 << 0x20\n 21072: a1 = a1 | a2\n 21075: jump @848 if a1 != 0\n      : @853 (gas: 11)\n 21078: u64 [a4 + 1976] = 0\n 21082: u64 [a4 + 1968] = 0\n 21086: u64 [a4 + 1960] = 0\n 21090: u64 [s1 + 0x210] = a3\n 21094: a3 = 0x8c379a000000000\n 21104: a1 = s1 + 0x1140\n 21108: u64 [a4 + 0x7c0] = a3\n 21112: u64 [s1 + 0x218] = a0\n 21116: u64 [s1 + 0x208] = t0\n 21120: u64 [s1 + 0x200] = a5\n 21124: ra = 838, jump @19\n      : @854 [@dyn 419] (gas: 6)\n 21130: a5 = s1 + 0x200\n 21134: a1 = u64 [a5 + 0x18]\n 21137: a0 = u64 [a5 + 0x8]\n 21140: a3 = u64 [a5]\n 21142: a3 = a3 | a0\n 21145: t0 = 840, jump @2570\n      : @855 [@dyn 420] (gas: 1)\n 21152: jump @848 if a0 == 0\n      : @856 (gas: 11)\n 21156: i32 a0 = a1 + 0x4\n 21159: a2 = s1 + 0x7ff\n 21163: a2 = a2 + 0x199\n 21167: u64 [a2 + 1952] = 0\n 21171: u64 [a2 + 1944] = 0\n 21175: u64 [a2 + 1928] = 0x20\n 21180: a1 = s1 + 0x1120\n 21184: u64 [a2 + 1936] = 0\n 21188: u64 [s1 + 0x208] = a3\n 21192: u64 [s1 + 0x200] = a4\n 21196: ra = 842, jump @19\n      : @857 [@dyn 421] (gas: 1)\n 21202: t0 = 844, jump @2621\n      : @858 [@dyn 422] (gas: 1)\n 21209: jump @848 if a0 == 0\n      : @859 (gas: 9)\n 21213: i32 a0 = a1 + 0x24\n 21216: a2 = s1 + 0x7ff\n 21220: a2 = a2 + 0x199\n 21224: u64 [a2 + 1920] = 0\n 21228: u64 [a2 + 1912] = 0\n 21232: u64 [a2 + 1896] = 0x25\n 21237: a1 = s1 + 0x1100\n 21241: u64 [a2 + 1904] = 0\n 21245: ra = 846, jump @19\n      : @860 [@dyn 423] (gas: 5)\n 21251: a0 = s1 + 0x200\n 21255: a4 = u64 [a0 + 0x8]\n 21258: a3 = u64 [a0 + 0x10]\n 21261: a1 = u64 [a0 + 0x18]\n 21264: t0 = 848, jump @2652\n      : @861 [@dyn 424] (gas: 1)\n 21271: jump @848 if a0 == 0\n      : @862 (gas: 15)\n 21275: i32 a0 = a1 + 0x44\n 21278: a1 = u64 [0x20048]\n 21283: u64 [s1 + 0x200] = a2\n 21287: a4 = s1 + 0x7ff\n 21291: a4 = a4 + 0x199\n 21295: a5 = a4 + 0x700\n 21299: u64 [a5 + 0x60] = a1\n 21302: a1 = u64 [0x200b0]\n 21307: a2 = u64 [0x200b8]\n 21312: a3 = u64 [0x20108]\n 21317: u64 [a5 + 0x58] = a1\n 21320: u64 [a5 + 0x50] = a2\n 21323: a1 = s1 + 0x10e0\n 21327: u64 [a5 + 0x48] = a3\n 21330: ra = 850, jump @19\n      : @863 [@dyn 425] (gas: 1)\n 21336: t0 = 852, jump @2620\n      : @864 [@dyn 426] (gas: 1)\n 21343: jump @848 if a0 == 0\n      : @865 (gas: 11)\n 21347: i32 a0 = a2 + 0x64\n 21350: a3 = s1 + 0x7ff\n 21354: a3 = a3 + 0x199\n 21358: u64 [a3 + 1848] = 0\n 21362: u64 [a3 + 1840] = 0\n 21366: a1 = 0x4d4f554e54000000\n 21376: u64 [a3 + 0x740] = a1\n 21380: a1 = s1 + 0x10c0\n 21384: u64 [a3 + 1832] = 0\n 21388: ra = 0x368\n 21392: jump @19\n      : @866 (gas: 8)\n 21395: a3 = a0 | t0\n 21398: a1 = a2 | t1\n 21401: a3 = a3 | a1\n 21404: a3 = a3 >> 0x20\n 21407: a1 = a1 | t0\n 21410: a1 = a1 << 0x20\n 21413: a1 = a1 | a3\n 21416: jump @848 if a1 != 0\n      : @867 (gas: 3)\n 21420: a1 = a0\n 21422: u64 [s1 + 0x208] = a0\n 21426: ra = 854, jump @32\n      : @868 [@dyn 427] (gas: 5)\n 21432: a2 = i32 [s1 + 0x208]\n 21436: i32 a1 = a0 + 0\n 21438: a0 = 0x1\n 21441: ecalli 15 // 'seal_return'\n 21443: jump @1874\n      : @869 (gas: 3)\n 21446: a0 = s1 + 0x1040\n 21450: a1 = 0x40\n 21453: ra = 856, jump @17\n      : @870 [@dyn 428] (gas: 15)\n 21459: a2 = s1 + 0x7ff\n 21463: a2 = a2 + 0x199\n 21467: t0 = u64 [a2 + 0x6c0]\n 21471: a1 = a2 + 0x600\n 21475: a5 = u64 [a1 + 0xb8]\n 21479: a4 = u64 [a1 + 0xb0]\n 21483: a0 = u64 [a1 + 0xa8]\n 21487: a3 = a4 | t0\n 21490: a1 = a0 | a5\n 21493: a1 = a1 | a3\n 21496: a1 = a1 >> 0x20\n 21499: a3 = a3 | a5\n 21502: a3 = a3 << 0x20\n 21505: a1 = a1 | a3\n 21508: jump @848 if a1 != 0\n      : @871 (gas: 11)\n 21512: u64 [a2 + 1688] = 0\n 21516: u64 [a2 + 1680] = 0\n 21520: u64 [a2 + 1672] = 0\n 21524: a3 = 0x8c379a000000000\n 21534: a1 = s1 + 0x1020\n 21538: u64 [a2 + 0x6a0] = a3\n 21542: u64 [s1 + 0x218] = a0\n 21546: u64 [s1 + 0x210] = a4\n 21550: u64 [s1 + 0x200] = t0\n 21554: u64 [s1 + 0x208] = a5\n 21558: ra = 858, jump @19\n      : @872 [@dyn 429] (gas: 6)\n 21564: a5 = s1 + 0x200\n 21568: a1 = u64 [a5 + 0x18]\n 21571: a0 = u64 [a5 + 0x8]\n 21574: a3 = u64 [a5]\n 21576: a3 = a3 | a0\n 21579: t0 = 860, jump @2570\n      : @873 [@dyn 430] (gas: 1)\n 21586: jump @848 if a0 == 0\n      : @874 (gas: 11)\n 21590: i32 a0 = a1 + 0x4\n 21593: a2 = s1 + 0x7ff\n 21597: a2 = a2 + 0x199\n 21601: u64 [a2 + 1664] = 0\n 21605: u64 [a2 + 1656] = 0\n 21609: u64 [a2 + 1640] = 0x20\n 21614: a1 = s1 + 0x1000\n 21618: u64 [a2 + 1648] = 0\n 21622: u64 [s1 + 0x208] = a3\n 21626: u64 [s1 + 0x200] = a4\n 21630: ra = 862, jump @19\n      : @875 [@dyn 431] (gas: 1)\n 21636: t0 = 864, jump @2621\n      : @876 [@dyn 432] (gas: 1)\n 21643: jump @848 if a0 == 0\n      : @877 (gas: 10)\n 21647: i32 a0 = a1 + 0x24\n 21650: a2 = s1 + 0x7ff\n 21654: a2 = a2 + 0x199\n 21658: u64 [a2 + 1632] = 0\n 21662: u64 [a2 + 1624] = 0\n 21666: u64 [a2 + 1608] = 0x21\n 21671: a1 = s1 + 0x7ff\n 21675: a1 = a1 + 0x7e1\n 21679: u64 [a2 + 1616] = 0\n 21683: ra = 866, jump @19\n      : @878 [@dyn 433] (gas: 10)\n 21689: a0 = s1 + 0x200\n 21693: a3 = u64 [a0 + 0x8]\n 21696: a4 = u64 [a0 + 0x10]\n 21699: a1 = u64 [a0 + 0x18]\n 21702: a2 = 0x100000000\n 21712: a0 = 0xffffffbc\n 21722: a0 = a1 <u a0\n 21725: a0 = 0 if a4 != 0\n 21727: a0 = 0 if a3 != 0\n 21729: jump @848 if a0 == 0\n      : @879 (gas: 16)\n 21733: i32 a0 = a1 + 0x44\n 21736: a1 = u64 [0x20048]\n 21741: u64 [s1 + 0x200] = a2\n 21745: a5 = s1 + 0x7ff\n 21749: a5 = a5 + 0x199\n 21753: a4 = a5 + 0x600\n 21757: u64 [a4 + 0x40] = a1\n 21760: a1 = u64 [0x200b0]\n 21765: a2 = u64 [0x200b8]\n 21770: a3 = u64 [0x200c0]\n 21775: u64 [a4 + 0x38] = a1\n 21778: u64 [a4 + 0x30] = a2\n 21781: a1 = s1 + 0x7ff\n 21785: a1 = a1 + 0x7c1\n 21789: u64 [a4 + 0x28] = a3\n 21792: ra = 868, jump @19\n      : @880 [@dyn 434] (gas: 1)\n 21798: t0 = 870, jump @2620\n      : @881 [@dyn 435] (gas: 1)\n 21805: jump @848 if a0 == 0\n      : @882 (gas: 11)\n 21809: i32 a0 = a2 + 0x64\n 21812: a3 = s1 + 0x7ff\n 21816: a3 = a3 + 0x199\n 21820: u64 [a3 + 1560] = 0\n 21824: u64 [a3 + 1552] = 0\n 21828: a1 = 0x5900000000000000\n 21838: u64 [a3 + 0x620] = a1\n 21842: a1 = s1 + 0x7ff\n 21846: a1 = a1 + 0x7a1\n 21850: u64 [a3 + 1544] = 0\n 21854: ra = 872, jump @19\n      : @883 [@dyn 436] (gas: 3)\n 21860: a1 = 0x84\n 21864: a0 = u64 [s1 + 0x218]\n 21868: ra = 874, jump @32\n      : @884 [@dyn 437] (gas: 6)\n 21874: i32 a1 = a0 + 0\n 21876: a0 = 0x1\n 21879: a2 = 0x84\n 21883: ecalli 15 // 'seal_return'\n 21885: a1 = s1 + 0x5198\n 21889: jump @886\n      : @885 (gas: 2)\n 21891: a1 = s1 + 0x5198\n 21895: fallthrough\n      : @886 (gas: 7)\n 21896: u64 [a1 + 1728] = 0\n 21900: u64 [a1 + 1720] = 0\n 21904: u64 [a1 + 1712] = 0\n 21908: u64 [a1 + 1704] = 0xc\n 21913: a0 = s1 + 0x45a0\n 21917: a1 = s1 + 0x5840\n 21921: ra = 876, jump @21\n      : @887 [@dyn 438] (gas: 7)\n 21927: a4 = s1 + 0x4198\n 21931: a5 = a4 + 0x400\n 21935: a0 = u64 [a5 + 0x20]\n 21938: a1 = u64 [a5 + 0x10]\n 21941: a2 = u64 [a5 + 0x8]\n 21944: a3 = u64 [a5 + 0x18]\n 21947: t0 = 878, jump @2611\n      : @888 [@dyn 439] (gas: 6)\n 21954: u64 [a4 + 1024] = 0\n 21958: u64 [a4 + 1016] = 0\n 21962: u64 [a4 + 0x3e8] = a0\n 21966: a0 = s1 + 0x4580\n 21970: u64 [a4 + 1008] = 0\n 21974: ra = 880, jump @1959\n      : @889 [@dyn 440] (gas: 8)\n 21980: a0 = s1 + 0x5198\n 21984: u64 [a0 + 1760] = 0\n 21988: u64 [a0 + 1752] = 0\n 21992: u64 [a0 + 1744] = 0\n 21996: u64 [a0 + 1736] = 0xc\n 22001: a0 = s1 + 0x5860\n 22005: a1 = u64 [s1 + 0x218]\n 22009: ra = 882, jump @23\n      : @890 [@dyn 441] (gas: 9)\n 22015: a0 = s1 + 0x5198\n 22019: u64 [a0 + 1792] = 0\n 22023: u64 [a0 + 1784] = 0\n 22027: u64 [a0 + 1776] = 0\n 22031: a1 = a0\n 22033: u64 [a1 + 1768] = 0x6\n 22038: a0 = s1 + 0x4560\n 22042: a1 = s1 + 0x5880\n 22046: ra = 884, jump @21\n      : @891 [@dyn 442] (gas: 3)\n 22052: t0 = 0x376\n 22056: a1 = s1 + 0x4198\n 22060: fallthrough\n      : @892 [@dyn 443] (gas: 10)\n 22061: a2 = a1 + 0x300\n 22065: a0 = u64 [a2 + 0xd8]\n 22069: u64 [s1 + 0x1f8] = a0\n 22073: a0 = u64 [a2 + 0xd0]\n 22077: u64 [s1 + 0x1f0] = a0\n 22081: a0 = u64 [a2 + 0xc8]\n 22085: u64 [s1 + 0x200] = a0\n 22089: a0 = s1 + 0x4540\n 22093: a1 = 0x40\n 22096: ra = 888, jump @17\n      : @893 [@dyn 444] (gas: 14)\n 22102: a2 = s1 + 0x4198\n 22106: t0 = u64 [a2 + 0x3c0]\n 22110: a1 = a2 + 0x300\n 22114: a5 = u64 [a1 + 0xb8]\n 22118: a4 = u64 [a1 + 0xb0]\n 22122: a0 = u64 [a1 + 0xa8]\n 22126: a3 = a4 | t0\n 22129: a1 = a0 | a5\n 22132: a1 = a1 | a3\n 22135: a1 = a1 >> 0x20\n 22138: a3 = a3 | a5\n 22141: a3 = a3 << 0x20\n 22144: a1 = a1 | a3\n 22147: jump @848 if a1 != 0\n      : @894 (gas: 11)\n 22151: u64 [a2 + 920] = 0\n 22155: u64 [a2 + 912] = 0\n 22159: u64 [a2 + 904] = 0\n 22163: a3 = 0x70a0823100000000\n 22173: a1 = s1 + 0x4520\n 22177: u64 [a2 + 0x3a0] = a3\n 22181: u64 [s1 + 0x210] = a0\n 22185: u64 [s1 + 0x1e8] = t0\n 22189: u64 [s1 + 0x1e0] = a5\n 22193: u64 [s1 + 0x1d8] = a4\n 22197: ra = 890, jump @19\n      : @895 [@dyn 445] (gas: 7)\n 22203: a0 = 0x30290\n 22208: u64 [s1 + 0x208] = a0\n 22212: i32 a0 = a0 + 0\n 22214: u64 [s1 + 0x1d0] = a0\n 22218: ra = 0x37c\n 22222: ecalli 0 // 'address'\n 22223: fallthrough\n      : @896 [@dyn 446] (gas: 11)\n 22224: a4 = u64 [s1 + 0x210]\n 22228: a3 = s1 + 0x100\n 22232: a0 = u64 [a3 + 0xe8]\n 22236: a1 = u64 [a3 + 0xe0]\n 22240: a0 = a0 | a1\n 22243: a1 = 0xfffffffc\n 22253: a1 = a4 <u a1\n 22256: a2 = u64 [a3 + 0xd8]\n 22260: a1 = 0 if a2 != 0\n 22262: a1 = 0 if a0 != 0\n 22264: jump @848 if a1 == 0\n      : @897 (gas: 5)\n 22268: a2 = u64 [s1 + 0x208]\n 22272: a1 = u64 [a2 + 0x8]\n 22275: a0 = 0x2400000000\n 22285: u64 [s1 + 0x1c8] = a0\n 22289: t0 = 894, jump @2595\n      : @898 [@dyn 447] (gas: 1)\n 22296: t0 = 896, jump @2666\n      : @899 [@dyn 448] (gas: 3)\n 22303: a1 = s1 + 0x4500\n 22307: u64 [a4 + 0x68] = a3\n 22310: ra = 898, jump @19\n      : @900 [@dyn 449] (gas: 5)\n 22316: ra = 0x384\n 22320: ecalli 12 // 'ref_time_left'\n 22322: a0 = u64 [s1 + 0x1f0]\n 22326: t0 = 0x386\n 22330: jump @2663\n      : @901 [@dyn 450] (gas: 2)\n 22334: a0 = u64 [s1 + 0x1f0]\n 22338: t0 = 902, jump @2663\n      : @902 [@dyn 451] (gas: 2)\n 22345: a2 = u64 [s1 + 0x200]\n 22349: t0 = 904, jump @2605\n      : @903 [@dyn 452] (gas: 1)\n 22356: t0 = 906, jump @2639\n      : @904 [@dyn 453] (gas: 1)\n 22363: ra = 908, jump @32\n      : @905 [@dyn 454] (gas: 4)\n 22369: u64 [s1 + 0x200] = a0\n 22373: a1 = 0x20\n 22376: a0 = u64 [s1 + 0x210]\n 22380: ra = 910, jump @32\n      : @906 [@dyn 455] (gas: 3)\n 22386: a1 = s1 + 0x5198\n 22390: a2 = 0x20\n 22393: t0 = 912, jump @2668\n      : @907 [@dyn 456] (gas: 27)\n 22400: a1 = u64 [s1 + 0x208]\n 22404: a1 = a1 << 0x20\n 22407: a1 = a1 >> 0x20\n 22410: a2 = 0x1800000000\n 22420: t0 = a1 | a2\n 22423: a1 = s1 + 0x58a0\n 22427: a1 = a1 << 0x20\n 22430: a1 = a1 >> 0x20\n 22433: a2 = s1 + 0x58e0\n 22437: a2 = a2 << 0x20\n 22440: a3 = a2 | a1\n 22443: a1 = u64 [s1 + 0x200]\n 22447: a1 = a1 << 0x20\n 22450: a1 = a1 >> 0x20\n 22453: a4 = u64 [s1 + 0x1c8]\n 22457: a4 = a4 | a1\n 22460: a0 = a0 << 0x20\n 22463: a0 = a0 >> 0x20\n 22466: a1 = s1 + 0x58c0\n 22470: a1 = a1 << 0x20\n 22473: a5 = a1 | a0\n 22476: a1 = 0xffffffffffffffff\n 22479: a2 = 0xffffffffffffffff\n 22482: u64 [s1 + 0x200] = t0\n 22486: a0 = t0\n 22488: ecalli 1 // 'call'\n 22490: fallthrough\n      : @908 (gas: 1)\n 22491: jump @910 if a0 == 0\n      : @909 (gas: 1)\n 22494: jump @1296\n      : @910 (gas: 2)\n 22497: ecalli 14 // 'return_data_size'\n 22499: fallthrough\n      : @911 (gas: 2)\n 22500: a5 = 0x20\n 22503: jump @913 if a0 >=u a5\n      : @912 (gas: 3)\n 22506: ecalli 14 // 'return_data_size'\n 22508: a5 = a0\n 22510: fallthrough\n      : @913 (gas: 19)\n 22511: a2 = s1 + 0x4198\n 22515: a3 = u64 [s1 + 0x210]\n 22519: t0 = u64 [s1 + 0x1e8]\n 22523: a0 = u64 [s1 + 0x1e0]\n 22527: a1 = u64 [s1 + 0x1d8]\n 22531: u64 [s1 + 496] = 0\n 22535: u64 [s1 + 0x1f8] = a5\n 22539: a4 = a2 + 0x300\n 22543: u64 [a4 + 0x8] = a5\n 22546: u64 [a4 + 0x28] = a3\n 22549: u64 [a2 + 784] = 0\n 22553: u64 [a4 + 0x30] = a1\n 22556: u64 [a2 + 792] = 0\n 22560: u64 [a4 + 0x38] = a0\n 22563: u64 [a2 + 800] = 0\n 22567: a0 = s1 + 0x44c0\n 22571: a1 = s1 + 0x44a0\n 22575: u64 [a2 + 0x340] = t0\n 22579: ra = 914, jump @1919\n      : @914 [@dyn 457] (gas: 4)\n 22585: a3 = u64 [s1 + 0x1f0]\n 22589: a0 = a3 >u 0\n 22591: a1 = u64 [s1 + 0x1f8]\n 22595: t0 = 916, jump @2556\n      : @915 [@dyn 458] (gas: 1)\n 22602: jump @917 if a2 != 0\n      : @916 (gas: 1)\n 22605: jump @1904\n      : @917 (gas: 3)\n 22608: a0 = s1 + 0x4480\n 22612: a1 = u64 [s1 + 0x210]\n 22616: ra = 918, jump @17\n      : @918 [@dyn 459] (gas: 18)\n 22622: a1 = s1 + 0x4198\n 22626: a0 = u64 [a1 + 0x300]\n 22630: u64 [s1 + 0x1b8] = a0\n 22634: a2 = a1 + 0x200\n 22638: a0 = u64 [a2 + 0xf8]\n 22642: u64 [s1 + 0x1c0] = a0\n 22646: a0 = u64 [a2 + 0xf0]\n 22650: u64 [s1 + 0x1d8] = a0\n 22654: a0 = u64 [a2 + 0xe8]\n 22658: u64 [s1 + 0x1e0] = a0\n 22662: a1 = s1 + 0x5198\n 22666: u64 [a1 + 1952] = 0\n 22670: u64 [a1 + 1944] = 0\n 22674: u64 [a1 + 1936] = 0\n 22678: u64 [a1 + 1928] = 0x7\n 22683: a0 = s1 + 0x4460\n 22687: a1 = s1 + 0x5920\n 22691: ra = 920, jump @21\n      : @919 [@dyn 460] (gas: 3)\n 22697: t0 = 0x39a\n 22701: a1 = s1 + 0x4198\n 22705: fallthrough\n      : @920 [@dyn 461] (gas: 11)\n 22706: a2 = a1 + 0x200\n 22710: a0 = u64 [a2 + 0xd8]\n 22714: a1 = s1 + 0x100\n 22718: u64 [a1 + 0xf0] = a0\n 22722: a0 = u64 [a2 + 0xd0]\n 22726: u64 [a1 + 0xe8] = a0\n 22730: a0 = u64 [a2 + 0xc8]\n 22734: u64 [a1 + 0xf8] = a0\n 22738: a0 = s1 + 0x4440\n 22742: a1 = 0x40\n 22745: ra = 924, jump @17\n      : @921 [@dyn 462] (gas: 14)\n 22751: t0 = s1 + 0x4198\n 22755: a1 = t0 + 0x200\n 22759: a3 = u64 [a1 + 0xc0]\n 22763: a4 = u64 [a1 + 0xb8]\n 22767: a5 = u64 [a1 + 0xb0]\n 22771: a0 = u64 [a1 + 0xa8]\n 22775: a2 = a5 | a3\n 22778: a1 = a0 | a4\n 22781: a1 = a1 | a2\n 22784: a1 = a1 >> 0x20\n 22787: a2 = a2 | a4\n 22790: a2 = a2 << 0x20\n 22793: a1 = a1 | a2\n 22796: jump @848 if a1 != 0\n      : @922 (gas: 11)\n 22800: u64 [t0 + 664] = 0\n 22804: u64 [t0 + 656] = 0\n 22808: u64 [t0 + 648] = 0\n 22812: u64 [s1 + 0x1b0] = a3\n 22816: a3 = 0x70a0823100000000\n 22826: a1 = s1 + 0x4420\n 22830: u64 [t0 + 0x2a0] = a3\n 22834: u64 [s1 + 0x210] = a0\n 22838: u64 [s1 + 0x1a8] = a4\n 22842: u64 [s1 + 0x1a0] = a5\n 22846: ra = 926, jump @19\n      : @923 [@dyn 463] (gas: 4)\n 22852: a0 = u64 [s1 + 0x1d0]\n 22856: ra = 0x3a0\n 22860: ecalli 0 // 'address'\n 22861: fallthrough\n      : @924 [@dyn 464] (gas: 11)\n 22862: a4 = u64 [s1 + 0x210]\n 22866: a3 = s1 + 0x100\n 22870: a0 = u64 [a3 + 0xb0]\n 22874: a1 = u64 [a3 + 0xa8]\n 22878: a0 = a0 | a1\n 22881: a1 = 0xfffffffc\n 22891: a1 = a4 <u a1\n 22894: a2 = u64 [a3 + 0xa0]\n 22898: a1 = 0 if a2 != 0\n 22900: a1 = 0 if a0 != 0\n 22902: jump @848 if a1 == 0\n      : @925 (gas: 2)\n 22906: a2 = u64 [s1 + 0x208]\n 22910: t0 = 930, jump @2563\n      : @926 [@dyn 465] (gas: 2)\n 22917: a4 = 0x4000\n 22921: t0 = 932, jump @2667\n      : @927 [@dyn 466] (gas: 3)\n 22928: a1 = s1 + 0x4400\n 22932: u64 [a4 + 0x68] = a3\n 22935: ra = 934, jump @19\n      : @928 [@dyn 467] (gas: 3)\n 22941: ra = 0x3a8\n 22945: ecalli 12 // 'ref_time_left'\n 22947: fallthrough\n      : @929 [@dyn 468] (gas: 9)\n 22948: a0 = u64 [s1 + 0x1e8]\n 22952: a0 = reverse a0\n 22954: a1 = a0 << 0x20\n 22957: a2 = u64 [s1 + 0x1f0]\n 22961: a2 = reverse a2\n 22963: a2 = a2 >> 0x20\n 22966: a1 = a1 | a2\n 22969: a2 = u64 [s1 + 0x1f8]\n 22973: t0 = 938, jump @2605\n      : @930 [@dyn 469] (gas: 7)\n 22980: u64 [a0 + 1984] = 0\n 22984: u64 [a0 + 1976] = 0\n 22988: u64 [a0 + 1968] = 0\n 22992: u64 [a0 + 1960] = 0\n 22996: a1 = 0x24\n 22999: a0 = u64 [s1 + 0x210]\n 23003: ra = 940, jump @32\n      : @931 [@dyn 470] (gas: 4)\n 23009: u64 [s1 + 0x208] = a0\n 23013: a1 = 0x20\n 23016: a0 = u64 [s1 + 0x210]\n 23020: ra = 942, jump @32\n      : @932 [@dyn 471] (gas: 22)\n 23026: a1 = s1 + 0x5198\n 23030: u32 [a1 + 1992] = 0x20\n 23035: a1 = s1 + 0x5998\n 23039: u64 [a1 + 0] = 0\n 23041: u64 [a1 + 4294967288] = 0\n 23044: u64 [a1 + 4294967280] = 0\n 23047: u64 [a1 + 4294967272] = 0\n 23050: a1 = s1 + 0x5940\n 23054: a1 = a1 << 0x20\n 23057: a1 = a1 >> 0x20\n 23060: a2 = s1 + 0x5980\n 23064: a2 = a2 << 0x20\n 23067: a3 = a2 | a1\n 23070: a1 = u64 [s1 + 0x208]\n 23074: a1 = a1 << 0x20\n 23077: a1 = a1 >> 0x20\n 23080: a4 = u64 [s1 + 0x1c8]\n 23084: a4 = a4 | a1\n 23087: a0 = a0 << 0x20\n 23090: a0 = a0 >> 0x20\n 23093: a1 = 0x5960\n 23097: t0 = 944, jump @2662\n      : @933 [@dyn 472] (gas: 3)\n 23104: a0 = u64 [s1 + 0x200]\n 23108: ecalli 1 // 'call'\n 23110: fallthrough\n      : @934 (gas: 1)\n 23111: jump @936 if a0 == 0\n      : @935 (gas: 1)\n 23114: jump @1516\n      : @936 (gas: 3)\n 23117: ra = 0x3b2\n 23121: ecalli 14 // 'return_data_size'\n 23123: fallthrough\n      : @937 [@dyn 473] (gas: 2)\n 23124: a1 = 0x20\n 23127: jump @940 if a0 >=u a1\n      : @938 (gas: 4)\n 23130: ra = 0x3b4\n 23134: ecalli 14 // 'return_data_size'\n 23136: a1 = a0\n 23138: jump @940\n      : @939 [@dyn 474] (gas: 2)\n 23140: a1 = a0\n 23142: fallthrough\n      : @940 (gas: 4)\n 23143: u64 [s1 + 512] = 0\n 23147: u64 [s1 + 0x208] = a1\n 23151: a0 = 0x4000\n 23155: t0 = 950, jump @2644\n      : @941 [@dyn 475] (gas: 12)\n 23162: a5 = s1 + 0x100\n 23166: a0 = u64 [a5 + 0xa0]\n 23170: u64 [a4 + 0x30] = a0\n 23173: u64 [a3 + 536] = 0\n 23177: a0 = u64 [a5 + 0xa8]\n 23181: u64 [a4 + 0x38] = a0\n 23184: u64 [a3 + 544] = 0\n 23188: a0 = s1 + 0x43c0\n 23192: a1 = s1 + 0x43a0\n 23196: a2 = u64 [a5 + 0xb0]\n 23200: u64 [a4 + 0x40] = a2\n 23203: ra = 952, jump @1919\n      : @942 [@dyn 476] (gas: 4)\n 23209: a3 = u64 [s1 + 0x200]\n 23213: a0 = a3 >u 0\n 23215: a1 = u64 [s1 + 0x208]\n 23219: t0 = 954, jump @2556\n      : @943 [@dyn 477] (gas: 1)\n 23226: jump @945 if a2 != 0\n      : @944 (gas: 1)\n 23229: jump @1909\n      : @945 (gas: 3)\n 23232: a0 = s1 + 0x4380\n 23236: a1 = u64 [s1 + 0x210]\n 23240: ra = 956, jump @17\n      : @946 [@dyn 478] (gas: 18)\n 23246: a1 = s1 + 0x4198\n 23250: a2 = a1 + 0x100\n 23254: a0 = u64 [a2 + 0xe8]\n 23258: u64 [s1 + 0x210] = a0\n 23262: a0 = u64 [a2 + 0xf0]\n 23266: u64 [s1 + 0x208] = a0\n 23270: a0 = u64 [a2 + 0xf8]\n 23274: u64 [s1 + 0x200] = a0\n 23278: a0 = u64 [a1 + 0x200]\n 23282: u64 [s1 + 0x1f8] = a0\n 23286: a1 = s1 + 0x5998\n 23290: u64 [a1 + 64] = 0\n 23293: u64 [a1 + 56] = 0\n 23296: u64 [a1 + 48] = 0\n 23299: u64 [a1 + 40] = 0x8\n 23303: a0 = s1 + 0x4360\n 23307: a1 = s1 + 0x59c0\n 23311: ra = 958, jump @21\n      : @947 [@dyn 479] (gas: 46)\n 23317: t0 = s1 + 0x4198\n 23321: a1 = u64 [t0 + 0x1d8]\n 23325: a2 = u64 [t0 + 0x1d0]\n 23329: a3 = u64 [t0 + 0x1c8]\n 23333: a4 = u64 [t0 + 0x1e0]\n 23337: a0 = a1 << 0x10\n 23340: a5 = a2 >> 0x30\n 23343: a0 = a0 | a5\n 23346: a1 = a1 >> 0x30\n 23349: a4 = a4 << 0x10\n 23352: a1 = a1 | a4\n 23355: a4 = 0xffffffffffff\n 23365: a1 = a1 & a4\n 23368: a2 = a2 & a4\n 23371: a4 = t0 + 0x100\n 23375: u64 [a4 + 0x70] = a2\n 23378: u64 [a4 + 0x68] = a3\n 23381: a3 = s1 + 0x100\n 23385: a2 = u64 [a3 + 0xf8]\n 23389: u64 [a4 + 0xa0] = a2\n 23393: a5 = s1 + 0x200\n 23397: a2 = u64 [a5]\n 23399: u64 [a4 + 0x98] = a2\n 23403: a2 = u64 [a5 + 0x8]\n 23406: u64 [a4 + 0x90] = a2\n 23410: a2 = u64 [a5 + 0x10]\n 23413: u64 [a4 + 0x88] = a2\n 23417: a2 = u64 [a3 + 0xb8]\n 23421: u64 [a4 + 0xc0] = a2\n 23425: a2 = u64 [a3 + 0xc0]\n 23429: u64 [a4 + 0xb8] = a2\n 23433: u64 [t0 + 352] = 0\n 23437: u64 [t0 + 344] = 0\n 23441: u64 [t0 + 384] = 0\n 23445: a2 = u64 [a3 + 0xd8]\n 23449: u64 [a4 + 0xb0] = a2\n 23453: a2 = u64 [a3 + 0xe0]\n 23457: u64 [a4 + 0xa8] = a2\n 23461: u64 [a4 + 0x48] = a0\n 23464: u64 [a4 + 0x50] = a1\n 23467: a0 = s1 + 0x4340\n 23471: a1 = s1 + 0x4320\n 23475: a2 = s1 + 0x4300\n 23479: a3 = s1 + 0x42e0\n 23483: u64 [t0 + 376] = 0\n 23487: ra = 960, jump @2248\n      : @948 [@dyn 480] (gas: 13)\n 23493: a1 = s1 + 0x5998\n 23497: u64 [a1 + 96] = 0\n 23500: u64 [a1 + 88] = 0\n 23503: u64 [a1 + 80] = 0\n 23506: u64 [a1 + 72] = 0xc\n 23510: u64 [a1 + 128] = 0\n 23514: u64 [a1 + 120] = 0\n 23517: u64 [a1 + 112] = 0\n 23520: u64 [a1 + 104] = 0x1\n 23524: a0 = s1 + 0x59e0\n 23528: a1 = s1 + 0x5a00\n 23532: ra = 0x25c\n 23536: jump @23\n      : @949 (gas: 3)\n 23539: a0 = s1 + 0x36c0\n 23543: a1 = 0x40\n 23546: ra = 962, jump @17\n      : @950 [@dyn 481] (gas: 7)\n 23552: a3 = s1 + 0x3198\n 23556: a5 = a3 + 0x500\n 23560: a4 = u64 [a5 + 0x40]\n 23563: a1 = u64 [a5 + 0x38]\n 23566: a2 = u64 [a5 + 0x30]\n 23569: a0 = u64 [a5 + 0x28]\n 23572: t0 = 964, jump @2573\n      : @951 [@dyn 482] (gas: 1)\n 23579: jump @848 if a1 != 0\n      : @952 (gas: 7)\n 23583: u64 [a3 + 1312] = 0\n 23587: u64 [a3 + 1304] = 0\n 23591: u64 [a3 + 1288] = 0x3e8\n 23597: a1 = s1 + 0x36a0\n 23601: u64 [a3 + 1296] = 0\n 23605: u64 [s1 + 0x218] = a0\n 23609: ra = 966, jump @19\n      : @953 [@dyn 483] (gas: 3)\n 23615: a1 = 0x20\n 23618: a0 = u64 [s1 + 0x218]\n 23622: ra = 968, jump @32\n      : @954 [@dyn 484] (gas: 5)\n 23628: i32 a1 = a0 + 0\n 23630: a2 = 0x20\n 23633: a0 = 0\n 23635: ecalli 15 // 'seal_return'\n 23637: fallthrough\n      : @955 (gas: 4)\n 23638: a0 = s1 + 0x34a0\n 23642: ra = 0x3ca\n 23646: t0 = 0x7c8\n 23650: jump @2675\n      : @956 [@dyn 485] (gas: 18)\n 23654: a1 = s1 + 0x3198\n 23658: a2 = a1 + 0x300\n 23662: a0 = u64 [a2 + 0x20]\n 23665: u64 [s1 + 0x140] = a0\n 23669: a0 = u64 [a2 + 0x18]\n 23672: u64 [s1 + 0x158] = a0\n 23676: a0 = u64 [a2 + 0x10]\n 23679: u64 [s1 + 0x150] = a0\n 23683: a0 = u64 [a2 + 0x8]\n 23686: u64 [s1 + 0x148] = a0\n 23690: a1 = s1 + 0x4998\n 23694: u64 [a1 + 1568] = 0\n 23698: u64 [a1 + 1560] = 0\n 23702: u64 [a1 + 1552] = 0\n 23706: u64 [a1 + 1544] = 0xc\n 23711: a0 = s1 + 0x3480\n 23715: a1 = s1 + 0x4fa0\n 23719: ra = 972, jump @21\n      : @957 [@dyn 486] (gas: 7)\n 23725: a4 = s1 + 0x3198\n 23729: a0 = u64 [a4 + 0x300]\n 23733: a5 = a4 + 0x200\n 23737: a1 = u64 [a5 + 0xf0]\n 23741: a2 = u64 [a5 + 0xe8]\n 23745: a3 = u64 [a5 + 0xf8]\n 23749: t0 = 974, jump @2611\n      : @958 [@dyn 487] (gas: 6)\n 23756: u64 [a4 + 736] = 0\n 23760: u64 [a4 + 728] = 0\n 23764: u64 [a5 + 0xc8] = a0\n 23768: a0 = s1 + 0x3460\n 23772: u64 [a4 + 720] = 0\n 23776: ra = 976, jump @1959\n      : @959 [@dyn 488] (gas: 8)\n 23782: a0 = s1 + 0x4998\n 23786: u64 [a0 + 1600] = 0\n 23790: u64 [a0 + 1592] = 0\n 23794: u64 [a0 + 1584] = 0\n 23798: u64 [a0 + 1576] = 0xc\n 23803: a0 = s1 + 0x4fc0\n 23807: a1 = u64 [s1 + 0x218]\n 23811: ra = 978, jump @23\n      : @960 [@dyn 489] (gas: 2)\n 23817: a0 = s1 + 0x3400\n 23821: ra = 980, jump @1987\n      : @961 [@dyn 490] (gas: 1)\n 23827: t0 = 982, jump @2660\n      : @962 [@dyn 491] (gas: 24)\n 23834: a0 = u64 [a2 + 0x80]\n 23838: u64 [s1 + 0x180] = a0\n 23842: a0 = u64 [a2 + 0x78]\n 23845: u64 [s1 + 0x188] = a0\n 23849: a0 = u64 [a2 + 0x70]\n 23852: u64 [s1 + 0x190] = a0\n 23856: a0 = u64 [a2 + 0x68]\n 23859: u64 [s1 + 0x198] = a0\n 23863: a0 = u64 [a2 + 0xa0]\n 23867: u64 [s1 + 0x160] = a0\n 23871: a0 = u64 [a2 + 0x98]\n 23875: u64 [s1 + 0x168] = a0\n 23879: a0 = u64 [a2 + 0x90]\n 23883: u64 [s1 + 0x170] = a0\n 23887: a0 = u64 [a2 + 0x88]\n 23891: u64 [s1 + 0x178] = a0\n 23895: a1 = s1 + 0x4998\n 23899: u64 [a1 + 1608] = 0x6\n 23904: u64 [a1 + 1632] = 0\n 23908: u64 [a1 + 1624] = 0\n 23912: u64 [a1 + 1616] = 0\n 23916: a0 = s1 + 0x33e0\n 23920: a1 = s1 + 0x4fe0\n 23924: ra = 984, jump @21\n      : @963 [@dyn 492] (gas: 1)\n 23930: t0 = 986, jump @2660\n      : @964 [@dyn 493] (gas: 15)\n 23937: a0 = u64 [a2 + 0x58]\n 23940: u64 [s1 + 0x1d0] = a0\n 23944: a0 = u64 [a2 + 0x50]\n 23947: u64 [s1 + 0x1d8] = a0\n 23951: a0 = u64 [a2 + 0x48]\n 23954: u64 [s1 + 0x1e0] = a0\n 23958: a0 = s1 + 0x4998\n 23962: u64 [a0 + 1664] = 0\n 23966: u64 [a0 + 1656] = 0\n 23970: u64 [a0 + 1648] = 0\n 23974: a1 = a0\n 23976: u64 [a1 + 1640] = 0x7\n 23981: a0 = s1 + 0x33c0\n 23985: a1 = s1 + 0x5000\n 23989: ra = 988, jump @21\n      : @965 [@dyn 494] (gas: 1)\n 23995: t0 = 990, jump @2660\n      : @966 [@dyn 495] (gas: 10)\n 24002: a0 = u64 [a2 + 0x38]\n 24005: a1 = s1 + 0x100\n 24009: u64 [a1 + 0xa0] = a0\n 24013: a0 = u64 [a2 + 0x30]\n 24016: u64 [a1 + 0xa8] = a0\n 24020: a0 = u64 [a2 + 0x28]\n 24023: u64 [a1 + 0xb0] = a0\n 24027: a0 = s1 + 0x33a0\n 24031: a1 = 0x40\n 24034: ra = 992, jump @17\n      : @967 [@dyn 496] (gas: 14)\n 24040: a2 = s1 + 0x3198\n 24044: t0 = u64 [a2 + 0x220]\n 24048: a1 = a2 + 0x200\n 24052: a5 = u64 [a1 + 0x18]\n 24055: a4 = u64 [a1 + 0x10]\n 24058: a0 = u64 [a1 + 0x8]\n 24061: a3 = a4 | t0\n 24064: a1 = a0 | a5\n 24067: a1 = a1 | a3\n 24070: a1 = a1 >> 0x20\n 24073: a3 = a3 | a5\n 24076: a3 = a3 << 0x20\n 24079: a1 = a1 | a3\n 24082: jump @848 if a1 != 0\n      : @968 (gas: 11)\n 24086: u64 [a2 + 504] = 0\n 24090: u64 [a2 + 496] = 0\n 24094: u64 [a2 + 488] = 0\n 24098: a3 = 0x70a0823100000000\n 24108: a1 = s1 + 0x3380\n 24112: u64 [a2 + 0x200] = a3\n 24116: u64 [s1 + 0x210] = a0\n 24120: u64 [s1 + 0x1c8] = t0\n 24124: u64 [s1 + 0x1c0] = a5\n 24128: u64 [s1 + 0x1b8] = a4\n 24132: ra = 994, jump @19\n      : @969 [@dyn 497] (gas: 8)\n 24138: a0 = 0x30290\n 24143: u64 [s1 + 0x1e8] = a0\n 24147: i32 a0 = a0 + 0\n 24149: u64 [s1 + 0x138] = a0\n 24153: ra = 0x3e4\n 24157: ecalli 0 // 'address'\n 24158: t0 = 0x3e6\n 24162: jump @2567\n      : @970 [@dyn 498] (gas: 1)\n 24166: t0 = 998, jump @2567\n      : @971 [@dyn 499] (gas: 1)\n 24173: jump @973 if a1 != 0\n      : @972 (gas: 1)\n 24176: jump @848\n      : @973 (gas: 5)\n 24179: a2 = u64 [s1 + 0x1e8]\n 24183: a1 = u64 [a2 + 0x8]\n 24186: a0 = 0x2400000000\n 24196: u64 [s1 + 0x130] = a0\n 24200: t0 = 1000, jump @2571\n      : @974 [@dyn 500] (gas: 8)\n 24207: a5 = s1 + 0x3198\n 24211: u64 [a5 + 480] = 0\n 24215: a4 = a5 + 0x100\n 24219: u64 [a4 + 0xd8] = a2\n 24223: u64 [a4 + 0xd0] = a1\n 24227: a1 = s1 + 0x3360\n 24231: u64 [a4 + 0xc8] = a3\n 24235: ra = 1002, jump @19\n      : @975 [@dyn 501] (gas: 29)\n 24241: ecalli 12 // 'ref_time_left'\n 24243: a0 = u64 [s1 + 0x1d8]\n 24247: a0 = reverse a0\n 24249: a1 = a0 << 0x20\n 24252: a2 = u64 [s1 + 0x1d0]\n 24256: a2 = reverse a2\n 24258: a2 = a2 >> 0x20\n 24261: a3 = a2 | a1\n 24264: a1 = u64 [s1 + 0x1e0]\n 24268: a1 = reverse a1\n 24270: a2 = a1 << 0x20\n 24273: a0 = a0 >> 0x20\n 24276: a0 = a0 | a2\n 24279: a1 = a1 >> 0x20\n 24282: u64 [s1 + 0x110] = a0\n 24286: a2 = u64 [s1 + 0x1e8]\n 24290: u64 [a2 + 0x8] = a0\n 24293: u64 [s1 + 0x120] = a3\n 24297: u64 [a2] = a3\n 24299: u64 [s1 + 0x118] = a1\n 24303: u32 [a2 + 0x10] = a1\n 24306: a0 = s1 + 0x4998\n 24310: u64 [a0 + 1696] = 0\n 24314: u64 [a0 + 1688] = 0\n 24318: u64 [a0 + 1680] = 0\n 24322: u64 [a0 + 1672] = 0\n 24326: a1 = 0x24\n 24329: a0 = u64 [s1 + 0x210]\n 24333: ra = 1004, jump @32\n      : @976 [@dyn 502] (gas: 4)\n 24339: u64 [s1 + 0x128] = a0\n 24343: a1 = 0x20\n 24346: a0 = u64 [s1 + 0x210]\n 24350: ra = 1006, jump @32\n      : @977 [@dyn 503] (gas: 34)\n 24356: a1 = s1 + 0x4998\n 24360: u32 [a1 + 1704] = 0x20\n 24365: u64 [a1 + 1760] = 0\n 24369: u64 [a1 + 1752] = 0\n 24373: u64 [a1 + 1744] = 0\n 24377: u64 [a1 + 1736] = 0\n 24381: a5 = s1 + 0x100\n 24385: a1 = u64 [a5 + 0xe8]\n 24389: a1 = a1 << 0x20\n 24392: a1 = a1 >> 0x20\n 24395: a2 = 0x1800000000\n 24405: t0 = a1 | a2\n 24408: a1 = s1 + 0x5020\n 24412: a1 = a1 << 0x20\n 24415: a1 = a1 >> 0x20\n 24418: a2 = s1 + 0x5060\n 24422: a2 = a2 << 0x20\n 24425: a3 = a2 | a1\n 24428: a1 = u64 [a5 + 0x28]\n 24431: a1 = a1 << 0x20\n 24434: a1 = a1 >> 0x20\n 24437: a4 = u64 [a5 + 0x30]\n 24440: a4 = a4 | a1\n 24443: a0 = a0 << 0x20\n 24446: a0 = a0 >> 0x20\n 24449: a1 = s1 + 0x5040\n 24453: a1 = a1 << 0x20\n 24456: a5 = a1 | a0\n 24459: a1 = 0xffffffffffffffff\n 24462: a2 = 0xffffffffffffffff\n 24465: u64 [s1 + 0x128] = t0\n 24469: a0 = t0\n 24471: ecalli 1 // 'call'\n 24473: fallthrough\n      : @978 (gas: 1)\n 24474: jump @980 if a0 == 0\n      : @979 (gas: 1)\n 24477: jump @1364\n      : @980 (gas: 2)\n 24480: ecalli 14 // 'return_data_size'\n 24482: fallthrough\n      : @981 (gas: 2)\n 24483: a5 = 0x20\n 24486: jump @983 if a0 >=u a5\n      : @982 (gas: 3)\n 24489: ecalli 14 // 'return_data_size'\n 24491: a5 = a0\n 24493: fallthrough\n      : @983 (gas: 19)\n 24494: a2 = s1 + 0x3198\n 24498: a3 = u64 [s1 + 0x210]\n 24502: t0 = u64 [s1 + 0x1c8]\n 24506: a0 = u64 [s1 + 0x1c0]\n 24510: a1 = u64 [s1 + 0x1b8]\n 24514: u64 [s1 + 448] = 0\n 24518: u64 [s1 + 0x1c8] = a5\n 24522: a4 = a2 + 0x100\n 24526: u64 [a4 + 0x68] = a5\n 24529: u64 [a4 + 0x88] = a3\n 24533: u64 [a2 + 368] = 0\n 24537: u64 [a4 + 0x90] = a1\n 24541: u64 [a2 + 376] = 0\n 24545: u64 [a4 + 0x98] = a0\n 24549: u64 [a2 + 384] = 0\n 24553: a0 = s1 + 0x3320\n 24557: a1 = s1 + 0x3300\n 24561: u64 [a2 + 0x1a0] = t0\n 24565: ra = 1008, jump @1919\n      : @984 [@dyn 504] (gas: 4)\n 24571: a3 = u64 [s1 + 0x1c0]\n 24575: a0 = a3 >u 0\n 24577: a1 = u64 [s1 + 0x1c8]\n 24581: t0 = 1010, jump @2556\n      : @985 [@dyn 505] (gas: 1)\n 24588: jump @987 if a2 != 0\n      : @986 (gas: 1)\n 24591: jump @1905\n      : @987 (gas: 3)\n 24594: a0 = s1 + 0x32e0\n 24598: a1 = u64 [s1 + 0x210]\n 24602: ra = 1012, jump @17\n      : @988 [@dyn 506] (gas: 3)\n 24608: t0 = 0x3f6\n 24612: a1 = s1 + 0x3198\n 24616: fallthrough\n      : @989 [@dyn 507] (gas: 12)\n 24617: a2 = a1 + 0x100\n 24621: a0 = u64 [a2 + 0x60]\n 24624: u64 [s1 + 0xf0] = a0\n 24628: a0 = u64 [a2 + 0x58]\n 24631: u64 [s1 + 0xf8] = a0\n 24635: a0 = u64 [a2 + 0x50]\n 24638: u64 [s1 + 0x100] = a0\n 24642: a0 = u64 [a2 + 0x48]\n 24645: u64 [s1 + 0x108] = a0\n 24649: a0 = s1 + 0x32c0\n 24653: a1 = 0x40\n 24656: ra = 1016, jump @17\n      : @990 [@dyn 508] (gas: 14)\n 24662: t0 = s1 + 0x3198\n 24666: a1 = t0 + 0x100\n 24670: a3 = u64 [a1 + 0x40]\n 24673: a4 = u64 [a1 + 0x38]\n 24676: a5 = u64 [a1 + 0x30]\n 24679: a0 = u64 [a1 + 0x28]\n 24682: a2 = a5 | a3\n 24685: a1 = a0 | a4\n 24688: a1 = a1 | a2\n 24691: a1 = a1 >> 0x20\n 24694: a2 = a2 | a4\n 24697: a2 = a2 << 0x20\n 24700: a1 = a1 | a2\n 24703: jump @992 if a1 == 0\n      : @991 (gas: 1)\n 24706: jump @848\n      : @992 (gas: 11)\n 24709: u64 [t0 + 280] = 0\n 24713: u64 [t0 + 272] = 0\n 24717: u64 [t0 + 264] = 0\n 24721: u64 [s1 + 0x1c8] = a3\n 24725: a3 = 0x70a0823100000000\n 24735: a1 = s1 + 0x32a0\n 24739: u64 [t0 + 0x120] = a3\n 24743: u64 [s1 + 0x210] = a0\n 24747: u64 [s1 + 0x1c0] = a4\n 24751: u64 [s1 + 0x1b8] = a5\n 24755: ra = 1018, jump @19\n      : @993 [@dyn 509] (gas: 5)\n 24761: a0 = u64 [s1 + 0x138]\n 24765: ra = 0x3fc\n 24769: ecalli 0 // 'address'\n 24770: t0 = 0x3fe\n 24774: jump @2567\n      : @994 [@dyn 510] (gas: 1)\n 24778: t0 = 1022, jump @2567\n      : @995 [@dyn 511] (gas: 1)\n 24785: jump @997 if a1 != 0\n      : @996 (gas: 1)\n 24788: jump @848\n      : @997 (gas: 2)\n 24791: a2 = u64 [s1 + 0x1e8]\n 24795: t0 = 1024, jump @2585\n      : @998 [@dyn 512] (gas: 6)\n 24802: u64 [a5 + 256] = 0\n 24806: u64 [a5 + 0xf8] = a1\n 24810: u64 [a5 + 0xf0] = a2\n 24814: a1 = s1 + 0x3280\n 24818: u64 [a5 + 0xe8] = a3\n 24822: ra = 1026, jump @19\n      : @999 [@dyn 513] (gas: 4)\n 24828: ra = 0x404\n 24832: ecalli 12 // 'ref_time_left'\n 24834: t0 = 0x406\n 24838: jump @2648\n      : @1000 [@dyn 514] (gas: 1)\n 24842: t0 = 1030, jump @2648\n      : @1001 [@dyn 515] (gas: 16)\n 24849: a3 = a2 | a1\n 24852: a1 = u64 [s1 + 0x1b0]\n 24856: a1 = reverse a1\n 24858: a2 = a1 << 0x20\n 24861: a0 = a0 >> 0x20\n 24864: a0 = a0 | a2\n 24867: a1 = a1 >> 0x20\n 24870: u64 [s1 + 0xd0] = a0\n 24874: a2 = u64 [s1 + 0x1e8]\n 24878: u64 [a2 + 0x8] = a0\n 24881: u64 [s1 + 0xe0] = a3\n 24885: u64 [a2] = a3\n 24887: u64 [s1 + 0xd8] = a1\n 24891: u32 [a2 + 0x10] = a1\n 24894: a0 = s1 + 0x4998\n 24898: t0 = 1032, jump @2639\n      : @1002 [@dyn 516] (gas: 1)\n 24905: ra = 1034, jump @32\n      : @1003 [@dyn 517] (gas: 4)\n 24911: u64 [s1 + 0xe8] = a0\n 24915: a1 = 0x20\n 24918: a0 = u64 [s1 + 0x210]\n 24922: ra = 1036, jump @32\n      : @1004 [@dyn 518] (gas: 3)\n 24928: a1 = s1 + 0x4998\n 24932: a2 = 0x20\n 24935: t0 = 1038, jump @2668\n      : @1005 [@dyn 519] (gas: 15)\n 24942: a1 = s1 + 0x50a0\n 24946: a1 = a1 << 0x20\n 24949: a1 = a1 >> 0x20\n 24952: a2 = s1 + 0x50e0\n 24956: a2 = a2 << 0x20\n 24959: a3 = a2 | a1\n 24962: a1 = u64 [s1 + 0xe8]\n 24966: a1 = a1 << 0x20\n 24969: a1 = a1 >> 0x20\n 24972: a4 = u64 [s1 + 0x130]\n 24976: a4 = a4 | a1\n 24979: a0 = a0 << 0x20\n 24982: a0 = a0 >> 0x20\n 24985: a1 = 0x50c0\n 24989: t0 = 1040, jump @2636\n      : @1006 [@dyn 520] (gas: 2)\n 24996: ecalli 1 // 'call'\n 24998: fallthrough\n      : @1007 (gas: 1)\n 24999: jump @1009 if a0 == 0\n      : @1008 (gas: 1)\n 25002: jump @1541\n      : @1009 (gas: 2)\n 25005: ecalli 14 // 'return_data_size'\n 25007: fallthrough\n      : @1010 (gas: 2)\n 25008: a1 = 0x20\n 25011: jump @1012 if a0 >=u a1\n      : @1011 (gas: 3)\n 25014: ecalli 14 // 'return_data_size'\n 25016: a1 = a0\n 25018: fallthrough\n      : @1012 (gas: 19)\n 25019: u64 [s1 + 200] = 0\n 25023: u64 [s1 + 0xe8] = a1\n 25027: a3 = s1 + 0x3198\n 25031: u64 [a3 + 0x88] = a1\n 25035: a0 = u64 [s1 + 0x210]\n 25039: u64 [a3 + 0xa8] = a0\n 25043: u64 [a3 + 144] = 0\n 25047: a4 = s1 + 0x100\n 25051: a0 = u64 [a4 + 0xb8]\n 25055: u64 [a3 + 0xb0] = a0\n 25059: u64 [a3 + 152] = 0\n 25063: a0 = u64 [a4 + 0xc0]\n 25067: u64 [a3 + 0xb8] = a0\n 25071: u64 [a3 + 160] = 0\n 25075: a0 = s1 + 0x3240\n 25079: a1 = s1 + 0x3220\n 25083: a2 = u64 [a4 + 0xc8]\n 25087: u64 [a3 + 0xc0] = a2\n 25091: ra = 1042, jump @1919\n      : @1013 [@dyn 521] (gas: 4)\n 25097: a3 = u64 [s1 + 0xc8]\n 25101: a0 = a3 >u 0\n 25103: a1 = u64 [s1 + 0xe8]\n 25107: t0 = 1044, jump @2556\n      : @1014 [@dyn 522] (gas: 1)\n 25114: jump @1016 if a2 != 0\n      : @1015 (gas: 1)\n 25117: jump @1910\n      : @1016 (gas: 3)\n 25120: a0 = s1 + 0x3200\n 25124: a1 = u64 [s1 + 0x210]\n 25128: ra = 1046, jump @17\n      : @1017 [@dyn 523] (gas: 15)\n 25134: a1 = s1 + 0x3198\n 25138: a0 = u64 [a1 + 0x80]\n 25142: a2 = s1 + 0x100\n 25146: u64 [a2 + 0xb8] = a0\n 25150: a0 = u64 [a1 + 0x78]\n 25153: u64 [a2 + 0xc0] = a0\n 25157: a0 = u64 [a1 + 0x70]\n 25160: u64 [a2 + 0xc8] = a0\n 25164: a0 = u64 [a1 + 0x68]\n 25167: u64 [s1 + 0x210] = a0\n 25171: a0 = u64 [a2 + 0x38]\n 25174: ra = 0x418\n 25178: ecalli 0 // 'address'\n 25179: t0 = 0x41a\n 25183: jump @2555\n      : @1018 [@dyn 524] (gas: 1)\n 25187: t0 = 1050, jump @2555\n      : @1019 [@dyn 525] (gas: 1)\n 25194: jump @1021 if a1 == 0\n      : @1020 (gas: 1)\n 25197: jump @848\n      : @1021 (gas: 21)\n 25200: a3 = u64 [s1 + 0x1e8]\n 25204: a1 = u64 [a3 + 0x8]\n 25207: a2 = i32 [a3 + 0x10]\n 25210: a3 = u64 [a3]\n 25212: a1 = reverse a1\n 25214: a4 = a1 << 0x20\n 25217: a2 = reverse a2\n 25219: a2 = a2 >> 0x20\n 25222: a2 = a2 | a4\n 25225: a1 = a1 >> 0x20\n 25228: a3 = reverse a3\n 25230: a4 = a3 << 0x20\n 25233: a1 = a1 | a4\n 25236: a3 = a3 >> 0x20\n 25239: a4 = s1 + 0x3198\n 25243: u64 [a4 + 96] = 0\n 25246: u64 [a4 + 0x58] = a3\n 25249: u64 [a4 + 0x50] = a1\n 25252: a1 = s1 + 0x31e0\n 25256: u64 [a4 + 0x48] = a2\n 25259: ra = 1052, jump @19\n      : @1022 [@dyn 526] (gas: 3)\n 25265: t0 = 0x41e\n 25269: a1 = s1 + 0x3198\n 25273: fallthrough\n      : @1023 [@dyn 527] (gas: 8)\n 25274: u64 [a1 + 64] = 0\n 25277: u64 [a1 + 56] = 0\n 25280: u64 [a1 + 40] = 0x1\n 25284: a2 = a1\n 25286: a0 = 0x20\n 25289: a1 = s1 + 0x31c0\n 25293: u64 [a2 + 48] = 0\n 25296: ra = 1056, jump @19\n      : @1024 [@dyn 528] (gas: 1)\n 25302: t0 = 1058, jump @2555\n      : @1025 [@dyn 529] (gas: 1)\n 25309: jump @1027 if a1 == 0\n      : @1026 (gas: 1)\n 25312: jump @848\n      : @1027 (gas: 2)\n 25315: a1 = 0x40\n 25318: ra = 1060, jump @32\n      : @1028 [@dyn 530] (gas: 4)\n 25324: a1 = sp + 0xffffffffffffffe0\n 25327: a1 = a1 & 0xffffffffffffffe0\n 25330: u64 [s1 + 0xe8] = a1\n 25334: t0 = 1062, jump @2583\n      : @1029 [@dyn 531] (gas: 5)\n 25341: ra = 0x428\n 25345: ecalli 10 // 'hash_keccak_256'\n 25347: a3 = u64 [s1 + 0xe8]\n 25351: t0 = 0x42a\n 25355: jump @2572\n      : @1030 [@dyn 532] (gas: 2)\n 25359: a3 = u64 [s1 + 0xe8]\n 25363: t0 = 1066, jump @2572\n      : @1031 [@dyn 533] (gas: 7)\n 25370: u64 [a5 + 0xa0] = a3\n 25374: u64 [a5 + 0x98] = a2\n 25378: u64 [a5 + 0x90] = a1\n 25382: u64 [a5 + 0x88] = a0\n 25386: a0 = s1 + 0x31a0\n 25390: a1 = s1 + 0x5120\n 25394: ra = 1068, jump @21\n      : @1032 [@dyn 534] (gas: 32)\n 25400: a1 = s1 + 0x3198\n 25404: a0 = u64 [a1 + 0x20]\n 25407: u64 [s1 + 0xe8] = a0\n 25411: a0 = u64 [a1 + 0x18]\n 25414: u64 [s1 + 0xc8] = a0\n 25418: a0 = u64 [a1 + 0x10]\n 25421: u64 [s1 + 0xc0] = a0\n 25425: a0 = u64 [a1 + 0x8]\n 25428: u64 [s1 + 0xb8] = a0\n 25432: a0 = u64 [s1 + 0x160]\n 25436: a1 = s1 + 0x2998\n 25440: a2 = a1 + 0x700\n 25444: u64 [a2 + 0xc0] = a0\n 25448: a0 = u64 [s1 + 0x168]\n 25452: u64 [a2 + 0xb8] = a0\n 25456: a0 = u64 [s1 + 0x170]\n 25460: u64 [a2 + 0xb0] = a0\n 25464: a0 = u64 [s1 + 0x178]\n 25468: u64 [a2 + 0xa8] = a0\n 25472: a0 = u64 [s1 + 0x180]\n 25476: u64 [a2 + 0xe0] = a0\n 25480: a0 = u64 [s1 + 0x188]\n 25484: u64 [a2 + 0xd8] = a0\n 25488: a0 = u64 [s1 + 0x190]\n 25492: u64 [a2 + 0xd0] = a0\n 25496: a4 = a1\n 25498: a0 = s1 + 0x3180\n 25502: a1 = s1 + 0x3160\n 25506: a2 = s1 + 0x3140\n 25510: a3 = u64 [s1 + 0x198]\n 25514: u64 [a4 + 0x7c8] = a3\n 25518: ra = 1070, jump @2359\n      : @1033 [@dyn 535] (gas: 13)\n 25525: a1 = s1 + 0x3198\n 25529: a0 = u64 [a1]\n 25531: u64 [s1 + 0x90] = a0\n 25535: a2 = a1 + 0xffffffffffffff00\n 25539: a0 = u64 [a2 + 0xf8]\n 25543: u64 [s1 + 0x80] = a0\n 25547: a0 = u64 [a2 + 0xf0]\n 25551: u64 [s1 + 0x88] = a0\n 25555: a0 = u64 [a2 + 0xe8]\n 25559: u64 [s1 + 0x78] = a0\n 25562: a0 = s1 + 0x3120\n 25566: a1 = u64 [s1 + 0x218]\n 25570: ra = 1072, jump @21\n      : @1034 [@dyn 536] (gas: 31)\n 25576: a1 = s1 + 0x2998\n 25580: a2 = a1 + 0x700\n 25584: a0 = u64 [a2 + 0x88]\n 25588: u64 [s1 + 0xb0] = a0\n 25592: a0 = u64 [a2 + 0x90]\n 25596: u64 [s1 + 0xa8] = a0\n 25600: a0 = u64 [a2 + 0x98]\n 25604: u64 [s1 + 0xa0] = a0\n 25608: a0 = u64 [a2 + 0xa0]\n 25612: u64 [s1 + 0x98] = a0\n 25616: a0 = u64 [s1 + 0xf0]\n 25620: u64 [a2 + 0x40] = a0\n 25623: a0 = u64 [s1 + 0xf8]\n 25627: u64 [a2 + 0x38] = a0\n 25630: a0 = u64 [s1 + 0x100]\n 25634: u64 [a2 + 0x30] = a0\n 25637: a0 = u64 [s1 + 0x108]\n 25641: u64 [a2 + 0x28] = a0\n 25644: a0 = u64 [s1 + 0xe8]\n 25648: u64 [a2 + 0x60] = a0\n 25651: a0 = u64 [s1 + 0xc8]\n 25655: u64 [a2 + 0x58] = a0\n 25658: a0 = u64 [s1 + 0xc0]\n 25662: u64 [a2 + 0x50] = a0\n 25665: a4 = a1\n 25667: a0 = s1 + 0x3100\n 25671: a1 = s1 + 0x30e0\n 25675: a2 = s1 + 0x30c0\n 25679: a3 = u64 [s1 + 0xb8]\n 25683: u64 [a4 + 0x748] = a3\n 25687: ra = 1074, jump @2197\n      : @1035 [@dyn 537] (gas: 22)\n 25693: a4 = s1 + 0x2998\n 25697: a3 = u64 [a4 + 0x768]\n 25701: a0 = u64 [a4 + 0x770]\n 25705: a1 = u64 [a4 + 0x778]\n 25709: a2 = u64 [a4 + 0x780]\n 25713: a5 = u64 [s1 + 0x98]\n 25717: u64 [a4 + 0x6e0] = a5\n 25721: a5 = u64 [s1 + 0xa0]\n 25725: u64 [a4 + 0x6d8] = a5\n 25729: a5 = u64 [s1 + 0xa8]\n 25733: u64 [a4 + 0x6d0] = a5\n 25737: a5 = u64 [s1 + 0xb0]\n 25741: u64 [a4 + 0x6c8] = a5\n 25745: u64 [a4 + 0x700] = a2\n 25749: a5 = a4 + 0x600\n 25753: u64 [a5 + 0xf8] = a1\n 25757: u64 [a5 + 0xf0] = a0\n 25761: a0 = s1 + 0x30a0\n 25765: a1 = s1 + 0x3080\n 25769: a2 = s1 + 0x3060\n 25773: u64 [a5 + 0xe8] = a3\n 25777: ra = 1076, jump @1990\n      : @1036 [@dyn 538] (gas: 32)\n 25783: a1 = s1 + 0x2998\n 25787: a2 = a1 + 0x700\n 25791: a0 = u64 [a2 + 0x20]\n 25794: u64 [s1 + 0x108] = a0\n 25798: a0 = u64 [a2 + 0x18]\n 25801: u64 [s1 + 0x100] = a0\n 25805: a0 = u64 [a2 + 0x10]\n 25808: u64 [s1 + 0xf8] = a0\n 25812: a0 = u64 [a2 + 0x8]\n 25815: u64 [s1 + 0xf0] = a0\n 25819: a0 = u64 [s1 + 0x1b8]\n 25823: a2 = a1 + 0x600\n 25827: u64 [a2 + 0x80] = a0\n 25831: a0 = u64 [s1 + 0x1c0]\n 25835: u64 [a2 + 0x78] = a0\n 25838: a0 = u64 [s1 + 0x1c8]\n 25842: u64 [a2 + 0x70] = a0\n 25845: a0 = u64 [s1 + 0x210]\n 25849: u64 [a2 + 0x68] = a0\n 25852: a0 = u64 [s1 + 0xe8]\n 25856: u64 [a2 + 0xa0] = a0\n 25860: a0 = u64 [s1 + 0xc8]\n 25864: u64 [a2 + 0x98] = a0\n 25868: a0 = u64 [s1 + 0xc0]\n 25872: u64 [a2 + 0x90] = a0\n 25876: a4 = a1\n 25878: a0 = s1 + 0x3040\n 25882: a1 = s1 + 0x3020\n 25886: a2 = s1 + 0x3000\n 25890: a3 = u64 [s1 + 0xb8]\n 25894: u64 [a4 + 0x688] = a3\n 25898: ra = 1078, jump @2197\n      : @1037 [@dyn 539] (gas: 22)\n 25904: a4 = s1 + 0x2998\n 25908: a3 = u64 [a4 + 0x6a8]\n 25912: a0 = u64 [a4 + 0x6b0]\n 25916: a1 = u64 [a4 + 0x6b8]\n 25920: a2 = u64 [a4 + 0x6c0]\n 25924: a5 = u64 [s1 + 0x98]\n 25928: u64 [a4 + 0x620] = a5\n 25932: a5 = u64 [s1 + 0xa0]\n 25936: u64 [a4 + 0x618] = a5\n 25940: a5 = u64 [s1 + 0xa8]\n 25944: u64 [a4 + 0x610] = a5\n 25948: a5 = u64 [s1 + 0xb0]\n 25952: u64 [a4 + 0x608] = a5\n 25956: a5 = a4 + 0x600\n 25960: u64 [a5 + 0x40] = a2\n 25963: u64 [a5 + 0x38] = a1\n 25966: u64 [a5 + 0x30] = a0\n 25969: a0 = s1 + 0x2fe0\n 25973: a1 = s1 + 0x2fc0\n 25977: a2 = s1 + 0x2fa0\n 25981: u64 [a5 + 0x28] = a3\n 25984: ra = 1080, jump @1990\n      : @1038 [@dyn 540] (gas: 8)\n 25990: a0 = u64 [s1 + 0x108]\n 25994: a1 = u64 [s1 + 0xf8]\n 25998: a0 = a0 | a1\n 26001: a1 = u64 [s1 + 0x100]\n 26005: a2 = u64 [s1 + 0xf0]\n 26009: a1 = a1 | a2\n 26012: a0 = a0 | a1\n 26015: jump @1040 if a0 != 0\n      : @1039 (gas: 1)\n 26018: jump @1701\n      : @1040 (gas: 15)\n 26021: a0 = s1 + 0x2998\n 26025: a5 = a0 + 0x600\n 26029: a1 = u64 [a5 + 0x60]\n 26032: a2 = u64 [a5 + 0x58]\n 26035: a3 = u64 [a5 + 0x48]\n 26038: a4 = u64 [a5 + 0x50]\n 26041: a5 = s1 + 0x100\n 26045: u64 [a5 + 0xc8] = a2\n 26049: u64 [a5 + 0xc0] = a3\n 26053: a0 = a3 | a2\n 26056: u64 [s1 + 0x210] = a1\n 26060: u64 [a5 + 0xb8] = a4\n 26064: a1 = a1 | a4\n 26067: a0 = a0 | a1\n 26070: jump @1042 if a0 != 0\n      : @1041 (gas: 1)\n 26073: jump @1701\n      : @1042 (gas: 5)\n 26076: a0 = u64 [s1 + 0x138]\n 26080: ra = 0x43a\n 26084: ecalli 0 // 'address'\n 26085: t0 = 0x43c\n 26089: jump @2555\n      : @1043 [@dyn 541] (gas: 1)\n 26093: t0 = 1084, jump @2555\n      : @1044 [@dyn 542] (gas: 1)\n 26100: jump @1046 if a1 == 0\n      : @1045 (gas: 1)\n 26103: jump @848\n      : @1046 (gas: 1)\n 26106: t0 = 1086, jump @2588\n      : @1047 [@dyn 543] (gas: 7)\n 26113: u64 [a4 + 1536] = 0\n 26117: a5 = a4 + 0x500\n 26121: u64 [a5 + 0xf8] = a3\n 26125: u64 [a5 + 0xf0] = a1\n 26129: a1 = s1 + 0x2f80\n 26133: u64 [a5 + 0xe8] = a2\n 26137: ra = 1088, jump @19\n      : @1048 [@dyn 544] (gas: 2)\n 26143: a1 = s1 + 0x2998\n 26147: t0 = 1090, jump @2661\n      : @1049 [@dyn 545] (gas: 3)\n 26154: a1 = s1 + 0x2f60\n 26158: u64 [a2 + 1488] = 0\n 26162: ra = 1092, jump @19\n      : @1050 [@dyn 546] (gas: 5)\n 26168: a0 = sp + 0xffffffffffffffe0\n 26171: a0 = a0 & 0xffffffffffffffe0\n 26174: u64 [s1 + 0xb0] = a0\n 26178: sp = a0\n 26180: t0 = 1094, jump @2555\n      : @1051 [@dyn 547] (gas: 1)\n 26187: jump @1053 if a1 == 0\n      : @1052 (gas: 1)\n 26190: jump @848\n      : @1053 (gas: 2)\n 26193: a1 = 0x40\n 26196: ra = 1096, jump @32\n      : @1054 [@dyn 548] (gas: 4)\n 26202: a1 = sp + 0xffffffffffffffe0\n 26205: a1 = a1 & 0xffffffffffffffe0\n 26208: u64 [s1 + 0xa8] = a1\n 26212: t0 = 1098, jump @2583\n      : @1055 [@dyn 549] (gas: 5)\n 26219: ra = 0x44c\n 26223: ecalli 10 // 'hash_keccak_256'\n 26225: a3 = u64 [s1 + 0xa8]\n 26229: t0 = 0x44e\n 26233: jump @2572\n      : @1056 [@dyn 550] (gas: 2)\n 26237: a3 = u64 [s1 + 0xa8]\n 26241: t0 = 1102, jump @2572\n      : @1057 [@dyn 551] (gas: 7)\n 26248: u64 [a5 + 0xc0] = a3\n 26252: u64 [a5 + 0xb8] = a2\n 26256: u64 [a5 + 0xb0] = a1\n 26260: u64 [a5 + 0xa8] = a0\n 26264: a0 = s1 + 0x2f40\n 26268: a1 = s1 + 0x5140\n 26272: ra = 1104, jump @21\n      : @1058 [@dyn 552] (gas: 22)\n 26278: a5 = s1 + 0x2998\n 26282: a3 = u64 [a5 + 0x5a8]\n 26286: a0 = u64 [a5 + 0x5b0]\n 26290: a1 = u64 [a5 + 0x5b8]\n 26294: a2 = u64 [a5 + 0x5c0]\n 26298: a4 = u64 [s1 + 0xe8]\n 26302: u64 [a5 + 0x560] = a4\n 26306: a4 = u64 [s1 + 0xc8]\n 26310: u64 [a5 + 0x558] = a4\n 26314: a4 = u64 [s1 + 0xc0]\n 26318: u64 [a5 + 0x550] = a4\n 26322: a4 = u64 [s1 + 0xb8]\n 26326: u64 [a5 + 0x548] = a4\n 26330: a4 = a5 + 0x500\n 26334: u64 [a4 + 0x80] = a2\n 26338: u64 [a4 + 0x78] = a1\n 26341: u64 [a4 + 0x70] = a0\n 26344: a0 = s1 + 0x2f20\n 26348: a1 = s1 + 0x2f00\n 26352: a2 = s1 + 0x2ee0\n 26356: u64 [a4 + 0x68] = a3\n 26359: ra = 1106, jump @2218\n      : @1059 [@dyn 553] (gas: 2)\n 26365: a0 = 0x3000\n 26369: t0 = 1108, jump @2669\n      : @1060 [@dyn 554] (gas: 14)\n 26376: a0 = u64 [a4 + 0x98]\n 26380: a1 = u64 [a4 + 0xa0]\n 26384: a2 = u64 [a4 + 0x88]\n 26388: a3 = u64 [a4 + 0x90]\n 26392: a4 = u64 [s1 + 0xb0]\n 26396: u64 [a4 + 0x10] = a0\n 26399: u64 [a4 + 0x18] = a1\n 26402: u64 [a4] = a2\n 26404: u64 [a4 + 0x8] = a3\n 26407: a0 = u64 [s1 + 0x138]\n 26411: ra = 0x456\n 26415: ecalli 0 // 'address'\n 26416: t0 = 0x458\n 26420: jump @2555\n      : @1061 [@dyn 555] (gas: 1)\n 26424: t0 = 1112, jump @2555\n      : @1062 [@dyn 556] (gas: 1)\n 26431: jump @1064 if a1 == 0\n      : @1063 (gas: 1)\n 26434: jump @848\n      : @1064 (gas: 1)\n 26437: t0 = 1114, jump @2588\n      : @1065 [@dyn 557] (gas: 7)\n 26444: u64 [a4 + 1344] = 0\n 26448: a5 = a4 + 0x500\n 26452: u64 [a5 + 0x38] = a3\n 26455: u64 [a5 + 0x30] = a1\n 26458: a1 = s1 + 0x2ec0\n 26462: u64 [a5 + 0x28] = a2\n 26465: ra = 1116, jump @19\n      : @1066 [@dyn 558] (gas: 2)\n 26471: a1 = s1 + 0x2998\n 26475: t0 = 1118, jump @2671\n      : @1067 [@dyn 559] (gas: 3)\n 26482: a1 = s1 + 0x2ea0\n 26486: u64 [a2 + 1296] = 0\n 26490: ra = 1120, jump @19\n      : @1068 [@dyn 560] (gas: 1)\n 26496: t0 = 1122, jump @2555\n      : @1069 [@dyn 561] (gas: 1)\n 26503: jump @1071 if a1 == 0\n      : @1070 (gas: 1)\n 26506: jump @848\n      : @1071 (gas: 2)\n 26509: a1 = 0x40\n 26512: ra = 1124, jump @32\n      : @1072 [@dyn 562] (gas: 4)\n 26518: a1 = sp + 0xffffffffffffffe0\n 26521: a1 = a1 & 0xffffffffffffffe0\n 26524: u64 [s1 + 0xa8] = a1\n 26528: t0 = 1126, jump @2583\n      : @1073 [@dyn 563] (gas: 5)\n 26535: ra = 0x468\n 26539: ecalli 10 // 'hash_keccak_256'\n 26541: a3 = u64 [s1 + 0xa8]\n 26545: t0 = 0x46a\n 26549: jump @2572\n      : @1074 [@dyn 564] (gas: 2)\n 26553: a3 = u64 [s1 + 0xa8]\n 26557: t0 = 1130, jump @2572\n      : @1075 [@dyn 565] (gas: 7)\n 26564: u64 [a5 + 0xe0] = a3\n 26568: u64 [a5 + 0xd8] = a2\n 26572: u64 [a5 + 0xd0] = a1\n 26576: u64 [a5 + 0xc8] = a0\n 26580: a0 = s1 + 0x5160\n 26584: a1 = u64 [s1 + 0xb0]\n 26588: ra = 1132, jump @23\n      : @1076 [@dyn 566] (gas: 3)\n 26594: a0 = s1 + 0x2e80\n 26598: a1 = u64 [s1 + 0x218]\n 26602: ra = 1134, jump @21\n      : @1077 [@dyn 567] (gas: 22)\n 26608: a5 = s1 + 0x2998\n 26612: a3 = u64 [a5 + 0x4e8]\n 26616: a0 = u64 [a5 + 0x4f0]\n 26620: a1 = u64 [a5 + 0x4f8]\n 26624: a2 = u64 [a5 + 0x500]\n 26628: a4 = u64 [s1 + 0xe8]\n 26632: u64 [a5 + 0x4a0] = a4\n 26636: a4 = u64 [s1 + 0xc8]\n 26640: u64 [a5 + 0x498] = a4\n 26644: a4 = u64 [s1 + 0xc0]\n 26648: u64 [a5 + 0x490] = a4\n 26652: a4 = u64 [s1 + 0xb8]\n 26656: u64 [a5 + 0x488] = a4\n 26660: a4 = a5 + 0x400\n 26664: u64 [a4 + 0xc0] = a2\n 26668: u64 [a4 + 0xb8] = a1\n 26672: u64 [a4 + 0xb0] = a0\n 26676: a0 = s1 + 0x2e60\n 26680: a1 = s1 + 0x2e40\n 26684: a2 = s1 + 0x2e20\n 26688: u64 [a4 + 0xa8] = a3\n 26692: ra = 1136, jump @2218\n      : @1078 [@dyn 568] (gas: 15)\n 26698: a3 = s1 + 0x2998\n 26702: a4 = a3 + 0x400\n 26706: a0 = u64 [a4 + 0xe0]\n 26710: a1 = u64 [a4 + 0xd8]\n 26714: a2 = u64 [a4 + 0xd0]\n 26718: a3 = u64 [a4 + 0xc8]\n 26722: a4 = s1 + 0x5198\n 26726: u64 [a4] = a0\n 26728: a0 = a4 + 0xffffffffffffff00\n 26732: u64 [a0 + 0xf8] = a1\n 26736: u64 [a0 + 0xf0] = a2\n 26740: u64 [a0 + 0xe8] = a3\n 26744: a1 = s1 + 0x5180\n 26748: a0 = u64 [s1 + 0x218]\n 26752: ra = 1138, jump @23\n      : @1079 [@dyn 569] (gas: 3)\n 26758: a0 = s1 + 0x2e00\n 26762: a1 = 0x40\n 26765: ra = 1140, jump @17\n      : @1080 [@dyn 570] (gas: 7)\n 26771: a3 = s1 + 0x2998\n 26775: a5 = a3 + 0x400\n 26779: a0 = u64 [a5 + 0x80]\n 26783: a1 = u64 [a5 + 0x78]\n 26786: a2 = u64 [a5 + 0x70]\n 26789: a4 = u64 [a5 + 0x68]\n 26792: t0 = 1142, jump @2564\n      : @1081 [@dyn 571] (gas: 1)\n 26799: jump @1083 if a0 == 0\n      : @1082 (gas: 1)\n 26802: jump @848\n      : @1083 (gas: 23)\n 26805: a3 = a4\n 26807: a0 = u64 [s1 + 0x1d0]\n 26811: a0 = a0 << 0x20\n 26814: a1 = u64 [s1 + 0x1a0]\n 26818: a1 = a1 << 0x20\n 26821: a0 = a0 >> 0x20\n 26824: u64 [s1 + 0x1a0] = a0\n 26828: a1 = a1 >> 0x20\n 26831: u64 [s1 + 0x1d0] = a1\n 26835: a2 = s1 + 0x2998\n 26839: a0 = u64 [s1 + 0xb8]\n 26843: a5 = a2 + 0x400\n 26847: u64 [a5 + 0x48] = a0\n 26850: a0 = u64 [s1 + 0xc0]\n 26854: u64 [a5 + 0x50] = a0\n 26857: a0 = u64 [s1 + 0xc8]\n 26861: u64 [a5 + 0x58] = a0\n 26864: a1 = s1 + 0x2de0\n 26868: a0 = u64 [s1 + 0xe8]\n 26872: u64 [a5 + 0x60] = a0\n 26875: a0 = a4\n 26877: u64 [s1 + 0xb0] = a3\n 26881: ra = 1144, jump @19\n      : @1084 [@dyn 572] (gas: 15)\n 26887: a0 = u64 [s1 + 0x218]\n 26891: a1 = u64 [a0]\n 26893: u64 [s1 + 0xe8] = a1\n 26897: a1 = u64 [a0 + 0x8]\n 26900: u64 [s1 + 0xc8] = a1\n 26904: a1 = u64 [a0 + 0x10]\n 26907: u64 [s1 + 0xc0] = a1\n 26911: a0 = u64 [a0 + 0x18]\n 26914: u64 [s1 + 0xb8] = a0\n 26918: a0 = u64 [s1 + 0x138]\n 26922: ra = 0x47a\n 26926: ecalli 0 // 'address'\n 26927: a2 = u64 [s1 + 0x1e8]\n 26931: t0 = 0x47c\n 26935: jump @2592\n      : @1085 [@dyn 573] (gas: 2)\n 26939: a2 = u64 [s1 + 0x1e8]\n 26943: t0 = 1148, jump @2592\n      : @1086 [@dyn 574] (gas: 36)\n 26950: t0 = a1 | a0\n 26953: a3 = a3 >> 0x20\n 26956: a2 = reverse a2\n 26958: a1 = a2 << 0x20\n 26961: t1 = a1 | a3\n 26964: a2 = a2 >> 0x20\n 26967: a1 = s1 + 0x2998\n 26971: a0 = u64 [s1 + 0xb8]\n 26975: u64 [a1 + 0x400] = a0\n 26979: a0 = u64 [s1 + 0xc0]\n 26983: a3 = a1 + 0x300\n 26987: u64 [a3 + 0xf8] = a0\n 26991: a0 = u64 [s1 + 0xc8]\n 26995: u64 [a3 + 0xf0] = a0\n 26999: a0 = u64 [s1 + 0xe8]\n 27003: u64 [a3 + 0xe8] = a0\n 27007: a3 = u64 [0x20070]\n 27012: a4 = u64 [0x20078]\n 27017: a5 = u64 [0x20080]\n 27022: a0 = u64 [0x20088]\n 27027: u64 [a1 + 0x440] = a3\n 27031: a3 = a1 + 0x400\n 27035: u64 [a3 + 0x38] = a4\n 27038: u64 [a3 + 0x30] = a5\n 27041: u64 [a3 + 0x28] = a0\n 27044: u64 [a3 + 0x18] = a2\n 27047: u64 [a1 + 0x410] = t1\n 27051: u64 [a1 + 0x408] = t0\n 27055: a0 = a1\n 27057: a1 = 0x20\n 27060: a2 = s1 + 0x2dc0\n 27064: a3 = s1 + 0x2da0\n 27068: a4 = s1 + 0x2d80\n 27072: u64 [a0 + 1056] = 0\n 27076: a0 = u64 [s1 + 0xb0]\n 27080: ra = 1150, jump @29\n      : @1087 [@dyn 575] (gas: 30)\n 27086: a0 = u64 [s1 + 0x108]\n 27090: a1 = s1 + 0x2998\n 27094: a2 = a1 + 0x300\n 27098: u64 [a2 + 0xa0] = a0\n 27102: a0 = u64 [s1 + 0x100]\n 27106: u64 [a2 + 0x98] = a0\n 27110: a0 = u64 [s1 + 0xf8]\n 27114: u64 [a2 + 0x90] = a0\n 27118: a0 = u64 [s1 + 0xf0]\n 27122: u64 [a2 + 0x88] = a0\n 27126: a0 = u64 [s1 + 0x140]\n 27130: u64 [a2 + 0xc0] = a0\n 27134: a0 = u64 [s1 + 0x158]\n 27138: u64 [a2 + 0xb8] = a0\n 27142: a0 = u64 [s1 + 0x150]\n 27146: u64 [a2 + 0xb0] = a0\n 27150: a0 = u64 [s1 + 0x148]\n 27154: u64 [a2 + 0xa8] = a0\n 27158: a0 = u64 [s1 + 0x1a0]\n 27162: u64 [a2 + 0xd8] = a0\n 27166: a0 = u64 [s1 + 0x1d8]\n 27170: u64 [a2 + 0xd0] = a0\n 27174: a0 = u64 [s1 + 0x1e0]\n 27178: u64 [a2 + 0xc8] = a0\n 27182: a3 = a1\n 27184: a0 = s1 + 0x2d60\n 27188: a1 = s1 + 0x2d40\n 27192: a2 = s1 + 0x2d20\n 27196: u64 [a3 + 992] = 0\n 27200: ra = 1152, jump @2015\n      : @1088 [@dyn 576] (gas: 30)\n 27206: a1 = s1 + 0x2998\n 27210: a0 = u64 [s1 + 0x140]\n 27214: a2 = a1 + 0x300\n 27218: u64 [a2 + 0x60] = a0\n 27221: a0 = u64 [s1 + 0x210]\n 27225: u64 [a2 + 0x40] = a0\n 27228: a0 = u64 [s1 + 0x1c8]\n 27232: u64 [a2 + 0x38] = a0\n 27235: a0 = u64 [s1 + 0x1b8]\n 27239: u64 [a2 + 0x30] = a0\n 27242: a0 = u64 [s1 + 0x1c0]\n 27246: u64 [a2 + 0x28] = a0\n 27249: a0 = u64 [s1 + 0x158]\n 27253: u64 [a2 + 0x58] = a0\n 27256: a0 = u64 [s1 + 0x150]\n 27260: u64 [a2 + 0x50] = a0\n 27263: a0 = u64 [s1 + 0x148]\n 27267: u64 [a2 + 0x48] = a0\n 27270: a0 = u64 [s1 + 0x1d0]\n 27274: u64 [a2 + 0x78] = a0\n 27277: a0 = u64 [s1 + 0x1a8]\n 27281: u64 [a2 + 0x70] = a0\n 27284: a0 = u64 [s1 + 0x1b0]\n 27288: u64 [a2 + 0x68] = a0\n 27291: a3 = a1\n 27293: a0 = s1 + 0x2d00\n 27297: a1 = s1 + 0x2ce0\n 27301: a2 = s1 + 0x2cc0\n 27305: u64 [a3 + 896] = 0\n 27309: ra = 1154, jump @2015\n      : @1089 [@dyn 577] (gas: 3)\n 27315: a0 = s1 + 0x2ca0\n 27319: a1 = 0x40\n 27322: ra = 1156, jump @17\n      : @1090 [@dyn 578] (gas: 7)\n 27328: a1 = s1 + 0x2998\n 27332: a4 = a1 + 0x300\n 27336: a0 = u64 [a4 + 0x20]\n 27339: a2 = u64 [a4 + 0x18]\n 27342: a3 = u64 [a4 + 0x10]\n 27345: a1 = u64 [a4 + 0x8]\n 27348: t0 = 1158, jump @2616\n      : @1091 [@dyn 579] (gas: 1)\n 27355: jump @1093 if a0 == 0\n      : @1092 (gas: 1)\n 27358: jump @848\n      : @1093 (gas: 9)\n 27361: a2 = s1 + 0x2998\n 27365: u64 [a2 + 760] = 0\n 27369: u64 [a2 + 752] = 0\n 27373: u64 [a2 + 744] = 0\n 27377: a0 = 0x70a0823100000000\n 27387: a1 = s1 + 0x2c80\n 27391: u64 [a2 + 0x300] = a0\n 27395: a0 = u64 [s1 + 0x208]\n 27399: ra = 1160, jump @19\n      : @1094 [@dyn 580] (gas: 5)\n 27405: a0 = u64 [s1 + 0x138]\n 27409: ra = 0x48a\n 27413: ecalli 0 // 'address'\n 27414: t0 = 0x48c\n 27418: jump @2601\n      : @1095 [@dyn 581] (gas: 1)\n 27422: t0 = 1164, jump @2601\n      : @1096 [@dyn 582] (gas: 1)\n 27429: jump @1098 if a1 != 0\n      : @1097 (gas: 1)\n 27432: jump @848\n      : @1098 (gas: 1)\n 27435: t0 = 1166, jump @2580\n      : @1099 [@dyn 583] (gas: 7)\n 27442: u64 [a4 + 736] = 0\n 27446: a5 = a4 + 0x200\n 27450: u64 [a5 + 0xd8] = a1\n 27454: u64 [a5 + 0xd0] = a2\n 27458: a1 = s1 + 0x2c60\n 27462: u64 [a5 + 0xc8] = a3\n 27466: ra = 1168, jump @19\n      : @1100 [@dyn 584] (gas: 16)\n 27472: ecalli 12 // 'ref_time_left'\n 27474: a0 = u64 [s1 + 0x110]\n 27478: a1 = u64 [s1 + 0x1e8]\n 27482: u64 [a1 + 0x8] = a0\n 27485: a0 = u64 [s1 + 0x120]\n 27489: u64 [a1] = a0\n 27491: a0 = u64 [s1 + 0x118]\n 27495: u32 [a1 + 0x10] = a0\n 27498: a0 = s1 + 0x5198\n 27502: u64 [a0 + 32] = 0\n 27505: u64 [a0 + 24] = 0\n 27508: u64 [a0 + 16] = 0\n 27511: u64 [a0 + 8] = 0\n 27514: a1 = 0x24\n 27517: a0 = u64 [s1 + 0x208]\n 27521: ra = 1170, jump @32\n      : @1101 [@dyn 585] (gas: 4)\n 27527: u64 [s1 + 0x1d8] = a0\n 27531: a1 = 0x20\n 27534: a0 = u64 [s1 + 0x208]\n 27538: ra = 1172, jump @32\n      : @1102 [@dyn 586] (gas: 12)\n 27544: u64 [s1 + 480] = 0x20\n 27549: a1 = s1 + 0x5198\n 27553: u32 [a1 + 40] = 0x20\n 27557: u64 [a1 + 96] = 0\n 27560: u64 [a1 + 88] = 0\n 27563: u64 [a1 + 80] = 0\n 27566: u64 [a1 + 72] = 0\n 27569: a1 = s1 + 0x51a0\n 27573: a1 = a1 << 0x20\n 27576: a1 = a1 >> 0x20\n 27579: a2 = 0x51e0\n 27583: t0 = 1174, jump @2637\n      : @1103 [@dyn 587] (gas: 6)\n 27590: a4 = u64 [s1 + 0x130]\n 27594: a4 = a4 | a1\n 27597: a0 = a0 << 0x20\n 27600: a0 = a0 >> 0x20\n 27603: a1 = 0x51c0\n 27607: t0 = 1176, jump @2636\n      : @1104 [@dyn 588] (gas: 2)\n 27614: ecalli 1 // 'call'\n 27616: fallthrough\n      : @1105 (gas: 1)\n 27617: jump @1107 if a0 == 0\n      : @1106 (gas: 1)\n 27620: jump @1829\n      : @1107 (gas: 2)\n 27623: ecalli 14 // 'return_data_size'\n 27625: fallthrough\n      : @1108 (gas: 1)\n 27626: jump @1110 if a0 >=u 32\n      : @1109 (gas: 3)\n 27630: ecalli 14 // 'return_data_size'\n 27632: u64 [s1 + 0x1e0] = a0\n 27636: fallthrough\n      : @1110 (gas: 19)\n 27637: a2 = s1 + 0x2998\n 27641: a0 = u64 [s1 + 0x1e0]\n 27645: a4 = a2 + 0x200\n 27649: u64 [a4 + 0x68] = a0\n 27652: a0 = u64 [s1 + 0x208]\n 27656: u64 [a4 + 0x88] = a0\n 27660: u64 [s1 + 472] = 0\n 27664: u64 [a2 + 624] = 0\n 27668: a0 = u64 [s1 + 0x1f0]\n 27672: u64 [a4 + 0x90] = a0\n 27676: u64 [a2 + 632] = 0\n 27680: a0 = u64 [s1 + 0x1f8]\n 27684: u64 [a4 + 0x98] = a0\n 27688: u64 [a2 + 640] = 0\n 27692: a0 = s1 + 0x2c20\n 27696: a1 = s1 + 0x2c00\n 27700: a3 = u64 [s1 + 0x200]\n 27704: u64 [a4 + 0xa0] = a3\n 27708: ra = 1178, jump @1919\n      : @1111 [@dyn 589] (gas: 4)\n 27714: a3 = u64 [s1 + 0x1d8]\n 27718: a0 = a3 >u 0\n 27720: a1 = u64 [s1 + 0x1e0]\n 27724: t0 = 1180, jump @2556\n      : @1112 [@dyn 590] (gas: 1)\n 27731: jump @1114 if a2 != 0\n      : @1113 (gas: 1)\n 27734: jump @1917\n      : @1114 (gas: 3)\n 27737: a0 = s1 + 0x2be0\n 27741: a1 = u64 [s1 + 0x208]\n 27745: ra = 1182, jump @17\n      : @1115 [@dyn 591] (gas: 13)\n 27751: a1 = s1 + 0x2998\n 27755: a2 = a1 + 0x200\n 27759: a0 = u64 [a2 + 0x60]\n 27762: u64 [s1 + 0x1b0] = a0\n 27766: a0 = u64 [a2 + 0x58]\n 27769: u64 [s1 + 0x1d0] = a0\n 27773: a0 = u64 [a2 + 0x50]\n 27776: u64 [s1 + 0x1d8] = a0\n 27780: a0 = u64 [a2 + 0x48]\n 27783: u64 [s1 + 0x1e0] = a0\n 27787: a0 = s1 + 0x2bc0\n 27791: a1 = 0x40\n 27794: ra = 1184, jump @17\n      : @1116 [@dyn 592] (gas: 7)\n 27800: a1 = s1 + 0x2998\n 27804: a4 = a1 + 0x200\n 27808: a0 = u64 [a4 + 0x40]\n 27811: a2 = u64 [a4 + 0x38]\n 27814: a3 = u64 [a4 + 0x30]\n 27817: a1 = u64 [a4 + 0x28]\n 27820: t0 = 1186, jump @2616\n      : @1117 [@dyn 593] (gas: 1)\n 27827: jump @1119 if a0 == 0\n      : @1118 (gas: 1)\n 27830: jump @848\n      : @1119 (gas: 9)\n 27833: a2 = s1 + 0x2998\n 27837: u64 [a2 + 536] = 0\n 27841: u64 [a2 + 528] = 0\n 27845: u64 [a2 + 520] = 0\n 27849: a0 = 0x70a0823100000000\n 27859: a1 = s1 + 0x2ba0\n 27863: u64 [a2 + 0x220] = a0\n 27867: a0 = u64 [s1 + 0x208]\n 27871: ra = 1188, jump @19\n      : @1120 [@dyn 594] (gas: 5)\n 27877: a0 = u64 [s1 + 0x138]\n 27881: ra = 0x4a6\n 27885: ecalli 0 // 'address'\n 27886: t0 = 0x4a8\n 27890: jump @2601\n      : @1121 [@dyn 595] (gas: 1)\n 27894: t0 = 1192, jump @2601\n      : @1122 [@dyn 596] (gas: 1)\n 27901: jump @1124 if a1 != 0\n      : @1123 (gas: 1)\n 27904: jump @848\n      : @1124 (gas: 1)\n 27907: t0 = 1194, jump @2580\n      : @1125 [@dyn 597] (gas: 7)\n 27914: u64 [a4 + 512] = 0\n 27918: a5 = a4 + 0x100\n 27922: u64 [a5 + 0xf8] = a1\n 27926: u64 [a5 + 0xf0] = a2\n 27930: a1 = s1 + 0x2b80\n 27934: u64 [a5 + 0xe8] = a3\n 27938: ra = 1196, jump @19\n      : @1126 [@dyn 598] (gas: 16)\n 27944: ecalli 12 // 'ref_time_left'\n 27946: a0 = u64 [s1 + 0xd0]\n 27950: a1 = u64 [s1 + 0x1e8]\n 27954: u64 [a1 + 0x8] = a0\n 27957: a0 = u64 [s1 + 0xe0]\n 27961: u64 [a1] = a0\n 27963: a0 = u64 [s1 + 0xd8]\n 27967: u32 [a1 + 0x10] = a0\n 27970: a0 = s1 + 0x5198\n 27974: u64 [a0 + 160] = 0\n 27978: u64 [a0 + 152] = 0\n 27982: u64 [a0 + 144] = 0\n 27986: u64 [a0 + 136] = 0\n 27990: a1 = 0x24\n 27993: a0 = u64 [s1 + 0x208]\n 27997: ra = 1198, jump @32\n      : @1127 [@dyn 599] (gas: 4)\n 28003: u64 [s1 + 0x1a0] = a0\n 28007: a1 = 0x20\n 28010: a0 = u64 [s1 + 0x208]\n 28014: ra = 1200, jump @32\n      : @1128 [@dyn 600] (gas: 22)\n 28020: u64 [s1 + 424] = 0x20\n 28025: a1 = s1 + 0x5198\n 28029: u32 [a1 + 168] = 0x20\n 28034: u64 [a1 + 224] = 0\n 28038: u64 [a1 + 216] = 0\n 28042: u64 [a1 + 208] = 0\n 28046: u64 [a1 + 200] = 0\n 28050: a1 = s1 + 0x5220\n 28054: a1 = a1 << 0x20\n 28057: a1 = a1 >> 0x20\n 28060: a2 = s1 + 0x5260\n 28064: a2 = a2 << 0x20\n 28067: a3 = a2 | a1\n 28070: a1 = u64 [s1 + 0x1a0]\n 28074: a1 = a1 << 0x20\n 28077: a1 = a1 >> 0x20\n 28080: a4 = u64 [s1 + 0x130]\n 28084: a4 = a4 | a1\n 28087: a0 = a0 << 0x20\n 28090: a0 = a0 >> 0x20\n 28093: a1 = 0x5240\n 28097: t0 = 1202, jump @2636\n      : @1129 [@dyn 601] (gas: 2)\n 28104: ecalli 1 // 'call'\n 28106: fallthrough\n      : @1130 (gas: 1)\n 28107: jump @1132 if a0 == 0\n      : @1131 (gas: 1)\n 28110: jump @1843\n      : @1132 (gas: 2)\n 28113: ecalli 14 // 'return_data_size'\n 28115: fallthrough\n      : @1133 (gas: 1)\n 28116: jump @1135 if a0 >=u 32\n      : @1134 (gas: 3)\n 28120: ecalli 14 // 'return_data_size'\n 28122: u64 [s1 + 0x1a8] = a0\n 28126: fallthrough\n      : @1135 (gas: 19)\n 28127: a2 = s1 + 0x2998\n 28131: a0 = u64 [s1 + 0x1a8]\n 28135: a4 = a2 + 0x100\n 28139: u64 [a4 + 0x88] = a0\n 28143: a0 = u64 [s1 + 0x208]\n 28147: u64 [a4 + 0xa8] = a0\n 28151: u64 [s1 + 536] = 0\n 28155: u64 [a2 + 400] = 0\n 28159: a0 = u64 [s1 + 0x1f0]\n 28163: u64 [a4 + 0xb0] = a0\n 28167: u64 [a2 + 408] = 0\n 28171: a0 = u64 [s1 + 0x1f8]\n 28175: u64 [a4 + 0xb8] = a0\n 28179: u64 [a2 + 416] = 0\n 28183: a0 = s1 + 0x2b40\n 28187: a1 = s1 + 0x2b20\n 28191: a3 = u64 [s1 + 0x200]\n 28195: u64 [a4 + 0xc0] = a3\n 28199: ra = 1204, jump @1919\n      : @1136 [@dyn 602] (gas: 4)\n 28205: a3 = u64 [s1 + 0x218]\n 28209: a0 = a3 >u 0\n 28211: a1 = u64 [s1 + 0x1a8]\n 28215: t0 = 1206, jump @2556\n      : @1137 [@dyn 603] (gas: 1)\n 28222: jump @1139 if a2 != 0\n      : @1138 (gas: 1)\n 28225: jump @1918\n      : @1139 (gas: 3)\n 28228: a0 = s1 + 0x2b00\n 28232: a1 = u64 [s1 + 0x208]\n 28236: ra = 1208, jump @17\n      : @1140 [@dyn 604] (gas: 38)\n 28242: a5 = s1 + 0x2998\n 28246: a0 = u64 [a5 + 0x168]\n 28250: a1 = u64 [a5 + 0x170]\n 28254: a2 = u64 [a5 + 0x178]\n 28258: a3 = u64 [a5 + 0x180]\n 28262: a4 = u64 [s1 + 0x160]\n 28266: u64 [a5 + 0x100] = a4\n 28270: a4 = u64 [s1 + 0x168]\n 28274: u64 [a5 + 0xf8] = a4\n 28278: a4 = u64 [s1 + 0x170]\n 28282: u64 [a5 + 0xf0] = a4\n 28286: a4 = u64 [s1 + 0x178]\n 28290: u64 [a5 + 0xe8] = a4\n 28294: a4 = u64 [s1 + 0x180]\n 28298: u64 [a5 + 0x120] = a4\n 28302: a4 = u64 [s1 + 0x188]\n 28306: u64 [a5 + 0x118] = a4\n 28310: a4 = u64 [s1 + 0x190]\n 28314: u64 [a5 + 0x110] = a4\n 28318: a4 = u64 [s1 + 0x198]\n 28322: u64 [a5 + 0x108] = a4\n 28326: u64 [a5 + 0x140] = a3\n 28330: u64 [a5 + 0x138] = a2\n 28334: u64 [a5 + 0x130] = a1\n 28338: u64 [a5 + 0x128] = a0\n 28342: a0 = u64 [s1 + 0x1b0]\n 28346: u64 [a5 + 0x160] = a0\n 28350: a0 = u64 [s1 + 0x1d0]\n 28354: u64 [a5 + 0x158] = a0\n 28358: a0 = u64 [s1 + 0x1d8]\n 28362: u64 [a5 + 0x150] = a0\n 28366: a0 = s1 + 0x2ae0\n 28370: a1 = s1 + 0x2ac0\n 28374: a2 = s1 + 0x2aa0\n 28378: a3 = s1 + 0x2a80\n 28382: a4 = u64 [s1 + 0x1e0]\n 28386: u64 [a5 + 0x148] = a4\n 28390: ra = 1210, jump @2248\n      : @1141 [@dyn 605] (gas: 8)\n 28396: a0 = u64 [s1 + 0x80]\n 28400: a1 = u64 [s1 + 0x78]\n 28403: a0 = a0 | a1\n 28406: a1 = u64 [s1 + 0x90]\n 28410: a2 = u64 [s1 + 0x88]\n 28414: a1 = a1 | a2\n 28417: a0 = a0 | a1\n 28420: jump @1145 if a0 == 0\n      : @1142 (gas: 8)\n 28424: a1 = s1 + 0x5198\n 28428: u64 [a1 + 288] = 0\n 28432: u64 [a1 + 280] = 0\n 28436: u64 [a1 + 272] = 0\n 28440: u64 [a1 + 264] = 0x8\n 28445: a0 = s1 + 0x2a60\n 28449: a1 = s1 + 0x52a0\n 28453: ra = 1212, jump @21\n      : @1143 [@dyn 606] (gas: 27)\n 28459: a0 = s1 + 0x2998\n 28463: a4 = u64 [a0 + 0xd8]\n 28467: a1 = u64 [a0 + 0xd0]\n 28471: t0 = u64 [a0 + 0xc8]\n 28475: a3 = u64 [a0 + 0xe0]\n 28479: a2 = a4 << 0x10\n 28482: a5 = a1 >> 0x30\n 28485: a2 = a2 | a5\n 28488: a4 = a4 >> 0x30\n 28491: a3 = a3 << 0x10\n 28494: a4 = a4 | a3\n 28497: a3 = 0xffffffffffff\n 28507: a5 = a4 & a3\n 28510: a1 = a1 & a3\n 28513: u64 [a0 + 128] = 0\n 28517: u64 [a0 + 120] = 0\n 28520: u64 [a0 + 160] = 0\n 28524: u64 [a0 + 152] = 0\n 28528: u64 [a0 + 0x90] = a1\n 28532: u64 [a0 + 0x88] = t0\n 28536: u64 [a0 + 0x68] = a2\n 28539: a3 = a0\n 28541: a0 = s1 + 0x2a40\n 28545: a1 = s1 + 0x2a20\n 28549: a2 = s1 + 0x2a00\n 28553: u64 [a3 + 0x70] = a5\n 28556: ra = 1214, jump @2197\n      : @1144 [@dyn 607] (gas: 18)\n 28562: a3 = s1 + 0x2998\n 28566: a0 = u64 [a3 + 0xa8]\n 28570: a1 = u64 [a3 + 0xb0]\n 28574: a2 = u64 [a3 + 0xb8]\n 28578: a3 = u64 [a3 + 0xc0]\n 28582: a5 = s1 + 0x5198\n 28586: u64 [a5 + 320] = 0\n 28590: u64 [a5 + 312] = 0\n 28594: u64 [a5 + 304] = 0\n 28598: u64 [a5 + 296] = 0xb\n 28603: a4 = a5 + 0x100\n 28607: u64 [a4 + 0x60] = a3\n 28610: u64 [a4 + 0x58] = a2\n 28613: u64 [a4 + 0x50] = a1\n 28616: u64 [a4 + 0x48] = a0\n 28619: a0 = s1 + 0x52c0\n 28623: a1 = s1 + 0x52e0\n 28627: ra = 1216, jump @23\n      : @1145 [@dyn 608] (gas: 3)\n 28633: a0 = s1 + 0x29e0\n 28637: a1 = 0x40\n 28640: ra = 1218, jump @17\n      : @1146 [@dyn 609] (gas: 6)\n 28646: a0 = s1 + 0x2998\n 28650: a3 = u64 [a0 + 0x60]\n 28653: a4 = u64 [a0 + 0x58]\n 28656: a2 = u64 [a0 + 0x50]\n 28659: a1 = u64 [a0 + 0x48]\n 28662: t0 = 1220, jump @2582\n      : @1147 [@dyn 610] (gas: 1)\n 28669: jump @1149 if a0 == 0\n      : @1148 (gas: 1)\n 28672: jump @848\n      : @1149 (gas: 12)\n 28675: a0 = s1 + 0x2998\n 28679: a1 = u64 [s1 + 0xf0]\n 28683: u64 [a0 + 0x28] = a1\n 28686: a1 = u64 [s1 + 0xf8]\n 28690: u64 [a0 + 0x30] = a1\n 28693: a1 = u64 [s1 + 0x100]\n 28697: u64 [a0 + 0x38] = a1\n 28700: a1 = s1 + 0x29c0\n 28704: a2 = u64 [s1 + 0x108]\n 28708: u64 [a0 + 0x40] = a2\n 28711: a0 = u64 [s1 + 0x218]\n 28715: ra = 1222, jump @19\n      : @1150 [@dyn 611] (gas: 1)\n 28721: t0 = 1224, jump @2576\n      : @1151 [@dyn 612] (gas: 1)\n 28728: jump @1153 if a1 != 0\n      : @1152 (gas: 1)\n 28731: jump @848\n      : @1153 (gas: 15)\n 28734: a0 = 0xffffffff\n 28744: u64 [s1 + 0x1f8] = a0\n 28748: a0 = u64 [s1 + 0x218]\n 28752: i32 a0 = a0 + 0x20\n 28755: a3 = s1 + 0x2998\n 28759: a1 = u64 [s1 + 0x1c0]\n 28763: u64 [a3 + 0x8] = a1\n 28766: a1 = u64 [s1 + 0x1b8]\n 28770: u64 [a3 + 0x10] = a1\n 28773: a1 = u64 [s1 + 0x1c8]\n 28777: u64 [a3 + 0x18] = a1\n 28780: a1 = s1 + 0x29a0\n 28784: a2 = u64 [s1 + 0x210]\n 28788: u64 [a3 + 0x20] = a2\n 28791: ra = 1226, jump @19\n      : @1154 [@dyn 613] (gas: 16)\n 28797: a0 = u64 [s1 + 0x148]\n 28801: a0 = a0 & 0xffffffffffffffff\n 28804: u64 [s1 + 0x208] = a0\n 28808: a0 = u64 [s1 + 0x150]\n 28812: a0 = a0 & 0xffffffffffffffff\n 28815: u64 [s1 + 0x200] = a0\n 28819: a0 = u64 [s1 + 0x158]\n 28823: a1 = u64 [s1 + 0x1f8]\n 28827: a0 = a0 & a1\n 28830: u64 [s1 + 0x1f8] = a0\n 28834: a0 = u64 [s1 + 0x138]\n 28838: ra = 0x4cc\n 28842: ecalli 5 // 'caller'\n 28844: a2 = u64 [s1 + 0x1e8]\n 28848: t0 = 0x4ce\n 28852: jump @2592\n      : @1155 [@dyn 614] (gas: 2)\n 28856: a2 = u64 [s1 + 0x1e8]\n 28860: t0 = 1230, jump @2592\n      : @1156 [@dyn 615] (gas: 36)\n 28867: t0 = a1 | a0\n 28870: a3 = a3 >> 0x20\n 28873: a2 = reverse a2\n 28875: a1 = a2 << 0x20\n 28878: t2 = a1 | a3\n 28881: a2 = a2 >> 0x20\n 28884: a0 = s1 + 0x2198\n 28888: u64 [a0 + 1984] = 0\n 28892: a1 = u64 [s1 + 0x1f8]\n 28896: a3 = a0 + 0x700\n 28900: u64 [a3 + 0xb8] = a1\n 28904: a1 = u64 [s1 + 0x200]\n 28908: u64 [a3 + 0xb0] = a1\n 28912: a1 = u64 [s1 + 0x208]\n 28916: u64 [a3 + 0xa8] = a1\n 28920: u64 [a0 + 2016] = 0\n 28924: t1 = a0\n 28926: a3 = u64 [0x20090]\n 28931: a4 = u64 [0x20098]\n 28936: a5 = u64 [0x200a0]\n 28941: a0 = u64 [0x200a8]\n 28946: a1 = s1 + 0x2998\n 28950: u64 [a1] = a3\n 28952: a3 = a1 + 0xffffffffffffff00\n 28956: u64 [a3 + 0xf8] = a4\n 28960: u64 [a3 + 0xf0] = a5\n 28964: u64 [a3 + 0xe8] = a0\n 28968: u64 [t1 + 0x7d8] = a2\n 28972: u64 [t1 + 0x7d0] = t2\n 28976: a1 = 0x40\n 28979: a2 = s1 + 0x2980\n 28983: a3 = s1 + 0x2960\n 28987: a4 = s1 + 0x2940\n 28991: u64 [t1 + 0x7c8] = t0\n 28995: a0 = u64 [s1 + 0x218]\n 28999: ra = 1232, jump @29\n      : @1157 [@dyn 616] (gas: 12)\n 29005: a1 = s1 + 0x5198\n 29009: u64 [a1 + 384] = 0\n 29013: u64 [a1 + 376] = 0\n 29017: u64 [a1 + 368] = 0\n 29021: u64 [a1 + 360] = 0xc\n 29026: u64 [a1 + 416] = 0\n 29030: u64 [a1 + 408] = 0\n 29034: u64 [a1 + 400] = 0\n 29038: u64 [a1 + 392] = 0x1\n 29043: a0 = s1 + 0x5300\n 29047: a1 = s1 + 0x5320\n 29051: ra = 1234, jump @23\n      : @1158 [@dyn 617] (gas: 3)\n 29057: a0 = s1 + 0x2920\n 29061: a1 = 0x40\n 29064: ra = 1236, jump @17\n      : @1159 [@dyn 618] (gas: 7)\n 29070: a0 = s1 + 0x2198\n 29074: a5 = a0 + 0x700\n 29078: a3 = u64 [a5 + 0xa0]\n 29082: a4 = u64 [a5 + 0x98]\n 29086: a2 = u64 [a5 + 0x90]\n 29090: a1 = u64 [a5 + 0x88]\n 29094: t0 = 1238, jump @2582\n      : @1160 [@dyn 619] (gas: 1)\n 29101: jump @1162 if a0 == 0\n      : @1161 (gas: 1)\n 29104: jump @848\n      : @1162 (gas: 13)\n 29107: a0 = s1 + 0x2198\n 29111: a1 = u64 [s1 + 0xf0]\n 29115: a3 = a0 + 0x700\n 29119: u64 [a3 + 0x68] = a1\n 29122: a1 = u64 [s1 + 0xf8]\n 29126: u64 [a3 + 0x70] = a1\n 29129: a1 = u64 [s1 + 0x100]\n 29133: u64 [a3 + 0x78] = a1\n 29136: a1 = s1 + 0x2900\n 29140: a2 = u64 [s1 + 0x108]\n 29144: u64 [a3 + 0x80] = a2\n 29148: a0 = u64 [s1 + 0x218]\n 29152: ra = 1240, jump @19\n      : @1163 [@dyn 620] (gas: 1)\n 29158: t0 = 1242, jump @2576\n      : @1164 [@dyn 621] (gas: 1)\n 29165: jump @1166 if a1 != 0\n      : @1165 (gas: 1)\n 29168: jump @848\n      : @1166 (gas: 15)\n 29171: a0 = u64 [s1 + 0x218]\n 29175: i32 a0 = a0 + 0x20\n 29178: a2 = s1 + 0x2198\n 29182: a3 = s1 + 0x100\n 29186: a1 = u64 [a3 + 0xc0]\n 29190: a4 = a2 + 0x700\n 29194: u64 [a4 + 0x48] = a1\n 29197: a1 = u64 [a3 + 0xb8]\n 29201: u64 [a4 + 0x50] = a1\n 29204: a1 = u64 [a3 + 0xc8]\n 29208: u64 [a4 + 0x58] = a1\n 29211: a1 = s1 + 0x28e0\n 29215: a3 = u64 [s1 + 0x210]\n 29219: u64 [a4 + 0x60] = a3\n 29222: ra = 1244, jump @19\n      : @1167 [@dyn 622] (gas: 3)\n 29228: a1 = 0x40\n 29231: a0 = u64 [s1 + 0x218]\n 29235: ra = 1246, jump @32\n      : @1168 [@dyn 623] (gas: 5)\n 29241: i32 a1 = a0 + 0\n 29243: a2 = 0x40\n 29246: a0 = 0\n 29248: ecalli 15 // 'seal_return'\n 29250: jump @955\n      : @1169 (gas: 3)\n 29253: a0 = s1 + 0x2a0\n 29257: a1 = 0x40\n 29260: ra = 1248, jump @17\n      : @1170 [@dyn 624] (gas: 13)\n 29266: a1 = s1 + 0x200\n 29270: a4 = u64 [a1 + 0xb8]\n 29274: a5 = u64 [a1 + 0xb0]\n 29278: a3 = u64 [a1 + 0xa8]\n 29282: a0 = u64 [a1 + 0xa0]\n 29286: a2 = a3 | a4\n 29289: a1 = a0 | a5\n 29292: a1 = a1 | a2\n 29295: a1 = a1 >> 0x20\n 29298: a2 = a2 | a5\n 29301: a2 = a2 << 0x20\n 29304: a1 = a1 | a2\n 29307: jump @1172 if a1 == 0\n      : @1171 (gas: 1)\n 29310: jump @848\n      : @1172 (gas: 11)\n 29313: u64 [s1 + 656] = 0\n 29317: u64 [s1 + 648] = 0\n 29321: u64 [s1 + 640] = 0\n 29325: a2 = 0x8c379a000000000\n 29335: a1 = s1 + 0x280\n 29339: u64 [s1 + 0x298] = a2\n 29343: u64 [s1 + 0x218] = a0\n 29347: u64 [s1 + 0x210] = a3\n 29351: u64 [s1 + 0x208] = a4\n 29355: u64 [s1 + 0x200] = a5\n 29359: ra = 1250, jump @19\n      : @1173 [@dyn 625] (gas: 6)\n 29365: a5 = s1 + 0x200\n 29369: a1 = u64 [a5 + 0x18]\n 29372: a0 = u64 [a5 + 0x8]\n 29375: a3 = u64 [a5]\n 29377: a3 = a3 | a0\n 29380: t0 = 1252, jump @2570\n      : @1174 [@dyn 626] (gas: 1)\n 29387: jump @1176 if a0 != 0\n      : @1175 (gas: 1)\n 29390: jump @848\n      : @1176 (gas: 9)\n 29393: i32 a0 = a1 + 0x4\n 29396: u64 [s1 + 632] = 0\n 29400: u64 [s1 + 624] = 0\n 29404: u64 [s1 + 608] = 0x20\n 29409: a1 = s1 + 0x260\n 29413: u64 [s1 + 616] = 0\n 29417: u64 [s1 + 0x208] = a3\n 29421: u64 [s1 + 0x200] = a4\n 29425: ra = 1254, jump @19\n      : @1177 [@dyn 627] (gas: 1)\n 29431: t0 = 1256, jump @2587\n      : @1178 [@dyn 628] (gas: 1)\n 29438: jump @1180 if a0 != 0\n      : @1179 (gas: 1)\n 29441: jump @848\n      : @1180 (gas: 7)\n 29444: i32 a0 = a1 + 0x24\n 29447: u64 [s1 + 600] = 0\n 29451: u64 [s1 + 592] = 0\n 29455: u64 [s1 + 576] = 0x15\n 29460: a1 = s1 + 0x240\n 29464: u64 [s1 + 584] = 0\n 29468: ra = 1258, jump @19\n      : @1181 [@dyn 629] (gas: 9)\n 29474: a3 = s1 + 0x200\n 29478: a2 = u64 [a3 + 0x18]\n 29481: a0 = 0xffffffbc\n 29491: a0 = a2 <u a0\n 29494: a1 = u64 [a3 + 0x10]\n 29497: a0 = 0 if a1 != 0\n 29499: a1 = u64 [a3 + 0x8]\n 29502: a0 = 0 if a1 != 0\n 29504: jump @1183 if a0 != 0\n      : @1182 (gas: 1)\n 29507: jump @848\n      : @1183 (gas: 12)\n 29510: i32 a0 = a2 + 0x44\n 29513: a1 = u64 [0x20048]\n 29518: a2 = u64 [0x20050]\n 29523: a3 = s1 + 0x200\n 29527: u64 [a3 + 0x38] = a1\n 29530: u64 [a3 + 0x30] = a2\n 29533: a1 = 0x49445f544f000000\n 29543: u64 [a3 + 0x28] = a1\n 29546: a1 = s1 + 0x220\n 29550: u64 [s1 + 544] = 0\n 29554: ra = 0x4fa\n 29558: jump @19\n      : @1184 (gas: 3)\n 29561: a0 = s1 + 0x19e0\n 29565: a1 = 0x40\n 29568: ra = 1260, jump @17\n      : @1185 [@dyn 630] (gas: 13)\n 29574: a4 = s1 + 0x1998\n 29578: t0 = u64 [a4 + 0x60]\n 29581: a5 = u64 [a4 + 0x58]\n 29584: a3 = u64 [a4 + 0x50]\n 29587: a0 = u64 [a4 + 0x48]\n 29590: a2 = a3 | t0\n 29593: a1 = a0 | a5\n 29596: a1 = a1 | a2\n 29599: a1 = a1 >> 0x20\n 29602: a2 = a2 | a5\n 29605: a2 = a2 << 0x20\n 29608: a1 = a1 | a2\n 29611: jump @1187 if a1 == 0\n      : @1186 (gas: 1)\n 29614: jump @848\n      : @1187 (gas: 11)\n 29617: u64 [a4 + 56] = 0\n 29620: u64 [a4 + 48] = 0\n 29623: u64 [a4 + 40] = 0\n 29626: u64 [s1 + 0x210] = a3\n 29630: a3 = 0x8c379a000000000\n 29640: a1 = s1 + 0x19c0\n 29644: u64 [a4 + 0x40] = a3\n 29647: u64 [s1 + 0x218] = a0\n 29651: u64 [s1 + 0x208] = t0\n 29655: u64 [s1 + 0x200] = a5\n 29659: ra = 1262, jump @19\n      : @1188 [@dyn 631] (gas: 6)\n 29665: a5 = s1 + 0x200\n 29669: a1 = u64 [a5 + 0x18]\n 29672: a0 = u64 [a5 + 0x8]\n 29675: a3 = u64 [a5]\n 29677: a3 = a3 | a0\n 29680: t0 = 1264, jump @2570\n      : @1189 [@dyn 632] (gas: 1)\n 29687: jump @1191 if a0 != 0\n      : @1190 (gas: 1)\n 29690: jump @848\n      : @1191 (gas: 11)\n 29693: i32 a0 = a1 + 0x4\n 29696: a2 = s1 + 0x1998\n 29700: a5 = 0\n 29702: u64 [a2 + 32] = 0\n 29705: u64 [a2 + 24] = 0\n 29708: u64 [a2 + 8] = 0x20\n 29712: a1 = s1 + 0x19a0\n 29716: u64 [a2 + 16] = 0\n 29719: u64 [s1 + 0x208] = a3\n 29723: u64 [s1 + 0x200] = a4\n 29727: ra = 1266, jump @19\n      : @1192 [@dyn 633] (gas: 1)\n 29733: t0 = 1268, jump @2587\n      : @1193 [@dyn 634] (gas: 1)\n 29740: jump @1195 if a0 != 0\n      : @1194 (gas: 1)\n 29743: jump @848\n      : @1195 (gas: 8)\n 29746: i32 a0 = a1 + 0x24\n 29749: a4 = s1 + 0x1998\n 29753: u64 [a4 + 0] = 0\n 29755: u64 [a4 + 4294967288] = 0\n 29758: u64 [a4 + 4294967272] = 0x14\n 29762: a1 = s1 + 0x1980\n 29766: u64 [a4 + 4294967280] = 0\n 29769: ra = 1270, jump @19\n      : @1196 [@dyn 635] (gas: 1)\n 29775: t0 = 1272, jump @2618\n      : @1197 [@dyn 636] (gas: 1)\n 29782: jump @1199 if a0 != 0\n      : @1198 (gas: 1)\n 29785: jump @848\n      : @1199 (gas: 12)\n 29788: i32 a0 = a3 + 0x44\n 29791: a1 = u64 [0x20048]\n 29796: a2 = u64 [0x200f8]\n 29801: a3 = s1 + 0x1198\n 29805: a4 = a3 + 0x700\n 29809: u64 [a4 + 0xe0] = a1\n 29813: u64 [a4 + 0xd8] = a2\n 29817: a1 = 0x4444454e00000000\n 29827: u64 [a4 + 0xd0] = a1\n 29831: a1 = s1 + 0x1960\n 29835: u64 [a3 + 1992] = 0\n 29839: ra = 1274, jump @19\n      : @1200 [@dyn 637] (gas: 3)\n 29845: a1 = 0x64\n 29848: a0 = u64 [s1 + 0x218]\n 29852: ra = 1276, jump @32\n      : @1201 [@dyn 638] (gas: 1)\n 29858: t0 = 1278, jump @2626\n      : @1202 [@dyn 639] (gas: 2)\n 29865: ecalli 15 // 'seal_return'\n 29867: fallthrough\n      : @1203 (gas: 26)\n 29868: a5 = s1 + 0x100\n 29872: u64 [a5 + 0xc0] = a0\n 29876: u64 [a5 + 0xc8] = a1\n 29880: a0 = reverse t0\n 29882: a1 = a0 << 0x20\n 29885: a2 = u64 [a5 + 0xe8]\n 29889: a2 = reverse a2\n 29891: a2 = a2 >> 0x20\n 29894: a4 = a2 | a1\n 29897: a1 = reverse t1\n 29899: a2 = a1 << 0x20\n 29902: a3 = 0x30290\n 29907: a0 = a0 >> 0x20\n 29910: a0 = a0 | a2\n 29913: a1 = a1 >> 0x20\n 29916: u64 [s1 + 0xc8] = a1\n 29920: u32 [0x302a0] = a1\n 29925: u64 [s1 + 0xc0] = a0\n 29929: u64 [0x30298] = a0\n 29934: u64 [s1 + 0xd0] = a4\n 29938: u64 [0x30290] = a4\n 29943: u64 [a5 + 0xd0] = a3\n 29947: i32 a0 = a3 + 0\n 29949: u64 [s1 + 0x200] = a0\n 29953: ecalli 7 // 'code_size'\n 29955: fallthrough\n      : @1204 (gas: 1)\n 29956: jump @1206 if a0 != 0\n      : @1205 (gas: 1)\n 29959: jump @1901\n      : @1206 (gas: 4)\n 29962: a0 = s1 + 0x7ff\n 29966: a0 = a0 + 0x681\n 29970: a1 = 0x40\n 29973: ra = 1280, jump @17\n      : @1207 [@dyn 640] (gas: 15)\n 29979: a2 = s1 + 0x7ff\n 29983: a2 = a2 + 0x199\n 29987: t0 = u64 [a2 + 0x500]\n 29991: a1 = a2 + 0x400\n 29995: a4 = u64 [a1 + 0xf8]\n 29999: a5 = u64 [a1 + 0xf0]\n 30003: a0 = u64 [a1 + 0xe8]\n 30007: a3 = a5 | t0\n 30010: a1 = a0 | a4\n 30013: a1 = a1 | a3\n 30016: a1 = a1 >> 0x20\n 30019: a3 = a3 | a4\n 30022: a3 = a3 << 0x20\n 30025: a1 = a1 | a3\n 30028: jump @1209 if a1 == 0\n      : @1208 (gas: 1)\n 30031: jump @848\n      : @1209 (gas: 12)\n 30034: u64 [a2 + 1240] = 0\n 30038: u64 [a2 + 1232] = 0\n 30042: u64 [a2 + 1224] = 0\n 30046: a3 = 0x10d1e85c00000000\n 30056: a1 = s1 + 0x7ff\n 30060: a1 = a1 + 0x661\n 30064: u64 [a2 + 0x4e0] = a3\n 30068: u64 [s1 + 0xf8] = t0\n 30072: u64 [s1 + 0xd8] = a4\n 30076: u64 [s1 + 0x1e8] = a5\n 30080: u64 [s1 + 0x210] = a0\n 30084: ra = 1282, jump @19\n      : @1210 [@dyn 641] (gas: 4)\n 30090: a0 = u64 [s1 + 0x200]\n 30094: ra = 0x504\n 30098: ecalli 5 // 'caller'\n 30100: fallthrough\n      : @1211 [@dyn 642] (gas: 11)\n 30101: a4 = u64 [s1 + 0x210]\n 30105: a0 = u64 [s1 + 0xf8]\n 30109: a1 = u64 [s1 + 0xd8]\n 30113: a5 = a1 | a0\n 30116: a2 = 0x100000000\n 30126: a0 = 0xfffffffc\n 30136: a0 = a4 <u a0\n 30139: a1 = u64 [s1 + 0x1e8]\n 30143: a0 = 0 if a1 != 0\n 30145: a0 = 0 if a5 != 0\n 30147: jump @1213 if a0 != 0\n      : @1212 (gas: 1)\n 30150: jump @848\n      : @1213 (gas: 3)\n 30153: u64 [s1 + 0xb8] = a2\n 30157: a2 = u64 [s1 + 0x1d0]\n 30161: t0 = 1286, jump @2563\n      : @1214 [@dyn 643] (gas: 10)\n 30168: a4 = s1 + 0x7ff\n 30172: a4 = a4 + 0x199\n 30176: u64 [a4 + 1216] = 0\n 30180: u64 [a4 + 0x4b8] = a1\n 30184: u64 [a4 + 0x4b0] = a2\n 30188: a1 = s1 + 0x7ff\n 30192: a1 = a1 + 0x641\n 30196: u64 [a4 + 0x4a8] = a3\n 30200: u64 [s1 + 0x200] = a5\n 30204: ra = 1288, jump @19\n      : @1215 [@dyn 644] (gas: 5)\n 30210: a2 = u64 [s1 + 0x210]\n 30214: a0 = u64 [s1 + 0xb8]\n 30218: a0 = a0 + 0xffffffffffffffdc\n 30221: a0 = a2 <u a0\n 30224: t0 = 1290, jump @2613\n      : @1216 [@dyn 645] (gas: 1)\n 30231: jump @1218 if a0 != 0\n      : @1217 (gas: 1)\n 30234: jump @848\n      : @1218 (gas: 15)\n 30237: i32 a0 = a2 + 0x24\n 30240: a1 = u64 [s1 + 0x180]\n 30244: a3 = s1 + 0x7ff\n 30248: a3 = a3 + 0x199\n 30252: a4 = a3 + 0x400\n 30256: u64 [a4 + 0x88] = a1\n 30260: a1 = u64 [s1 + 0x188]\n 30264: u64 [a4 + 0x90] = a1\n 30268: a1 = u64 [s1 + 0x190]\n 30272: u64 [a4 + 0x98] = a1\n 30276: a1 = s1 + 0x7ff\n 30280: a1 = a1 + 0x621\n 30284: a2 = u64 [s1 + 0x198]\n 30288: u64 [a4 + 0xa0] = a2\n 30292: ra = 1292, jump @19\n      : @1219 [@dyn 646] (gas: 4)\n 30298: a4 = u64 [s1 + 0x200]\n 30302: a1 = u64 [s1 + 0x210]\n 30306: a3 = u64 [s1 + 0x1e8]\n 30310: t0 = 1294, jump @2652\n      : @1220 [@dyn 647] (gas: 1)\n 30317: jump @1222 if a0 != 0\n      : @1221 (gas: 1)\n 30320: jump @848\n      : @1222 (gas: 16)\n 30323: i32 a0 = a1 + 0x44\n 30326: a1 = u64 [s1 + 0x160]\n 30330: u64 [s1 + 0xb8] = a2\n 30334: a5 = s1 + 0x7ff\n 30338: a5 = a5 + 0x199\n 30342: a3 = a5 + 0x400\n 30346: u64 [a3 + 0x68] = a1\n 30349: a1 = u64 [s1 + 0x168]\n 30353: u64 [a3 + 0x70] = a1\n 30356: a1 = u64 [s1 + 0x170]\n 30360: u64 [a3 + 0x78] = a1\n 30363: a1 = s1 + 0x7ff\n 30367: a1 = a1 + 0x601\n 30371: a2 = u64 [s1 + 0x178]\n 30375: u64 [a3 + 0x80] = a2\n 30379: ra = 1296, jump @19\n      : @1223 [@dyn 648] (gas: 5)\n 30385: a2 = u64 [s1 + 0x210]\n 30389: a0 = u64 [s1 + 0xb8]\n 30393: a0 = a0 + 0xffffffffffffff9c\n 30396: a0 = a2 <u a0\n 30399: t0 = 1298, jump @2613\n      : @1224 [@dyn 649] (gas: 1)\n 30406: jump @1226 if a0 != 0\n      : @1225 (gas: 1)\n 30409: jump @848\n      : @1226 (gas: 10)\n 30412: i32 a0 = a2 + 0x64\n 30415: a3 = s1 + 0x7ff\n 30419: a3 = a3 + 0x199\n 30423: u64 [a3 + 1120] = 0\n 30427: u64 [a3 + 1112] = 0\n 30431: u64 [a3 + 1096] = 0x80\n 30437: a1 = s1 + 0x7ff\n 30441: a1 = a1 + 0x5e1\n 30445: u64 [a3 + 1104] = 0\n 30449: ra = 1300, jump @19\n      : @1227 [@dyn 650] (gas: 4)\n 30455: a0 = 0xffffff7c\n 30465: a1 = u64 [s1 + 0x210]\n 30469: a0 = a1 <u a0\n 30472: t0 = 1302, jump @2613\n      : @1228 [@dyn 651] (gas: 1)\n 30479: jump @1230 if a0 != 0\n      : @1229 (gas: 1)\n 30482: jump @848\n      : @1230 (gas: 16)\n 30485: a0 = u64 [s1 + 0x210]\n 30489: i32 a0 = a0 + 0x84\n 30493: a2 = s1 + 0x7ff\n 30497: a2 = a2 + 0x199\n 30501: a1 = u64 [s1 + 0x1e0]\n 30505: a4 = a2 + 0x400\n 30509: u64 [a4 + 0x28] = a1\n 30512: a1 = u64 [s1 + 0x1d8]\n 30516: u64 [a4 + 0x30] = a1\n 30519: a1 = u64 [s1 + 0x1f0]\n 30523: u64 [a4 + 0x38] = a1\n 30526: a1 = s1 + 0x7ff\n 30530: a1 = a1 + 0x5c1\n 30534: a3 = u64 [s1 + 0x1f8]\n 30538: u64 [a4 + 0x40] = a3\n 30541: ra = 1304, jump @19\n      : @1231 [@dyn 652] (gas: 9)\n 30547: a3 = s1 + 0x100\n 30551: a0 = u64 [a3 + 0xc0]\n 30555: a0 = a0 >> 0x20\n 30558: a1 = u64 [a3 + 0xc8]\n 30562: a2 = u64 [a3 + 0xf0]\n 30566: a1 = a1 | a2\n 30569: a1 = a1 << 0x20\n 30572: a0 = a0 | a1\n 30575: jump @1233 if a0 == 0\n      : @1232 (gas: 1)\n 30578: jump @848\n      : @1233 (gas: 5)\n 30581: a1 = 0xffffff5c\n 30591: a0 = u64 [s1 + 0x210]\n 30595: u64 [s1 + 0x1c8] = a1\n 30599: a0 = a0 <u a1\n 30602: t0 = 1306, jump @2613\n      : @1234 [@dyn 653] (gas: 1)\n 30609: jump @1236 if a0 != 0\n      : @1235 (gas: 1)\n 30612: jump @848\n      : @1236 (gas: 7)\n 30615: a0 = u64 [s1 + 0x208]\n 30619: i32 a0 = a0 + 0x24\n 30622: u64 [s1 + 0x208] = a0\n 30626: a0 = u64 [s1 + 0x210]\n 30630: i32 a0 = a0 + 0xa4\n 30634: a1 = u64 [s1 + 0x1e0]\n 30638: ra = 1308, jump @32\n      : @1237 [@dyn 654] (gas: 5)\n 30644: i32 a0 = a0 + 0\n 30646: a1 = i32 [s1 + 0x1e0]\n 30650: a2 = u64 [s1 + 0x208]\n 30654: ecalli 2 // 'call_data_copy'\n 30656: fallthrough\n      : @1238 (gas: 28)\n 30657: a0 = u64 [s1 + 0x210]\n 30661: t0 = u64 [s1 + 0x1e0]\n 30665: t0 = t0 + a0\n 30668: a1 = t0 <u a0\n 30671: a2 = u64 [s1 + 0x1d8]\n 30675: a0 = u64 [s1 + 0x1e8]\n 30679: a2 = a2 + a0\n 30682: a2 = a2 + a1\n 30685: a3 = a2 ^ a0\n 30688: a4 = a2 <u a0\n 30691: a4 = a1 if a3 == 0\n 30694: a1 = u64 [s1 + 0x1f0]\n 30698: a0 = u64 [s1 + 0xd8]\n 30702: a1 = a1 + a0\n 30705: a3 = a1 <u a0\n 30708: a5 = u64 [s1 + 0x1f8]\n 30712: a0 = u64 [s1 + 0xf8]\n 30716: a5 = a5 + a0\n 30719: a3 = a3 + a5\n 30722: a4 = a4 + a1\n 30725: a1 = a4 <u a1\n 30728: a1 = a1 + a3\n 30731: a1 = a1 | a4\n 30734: a0 = u64 [s1 + 0x1c8]\n 30738: a3 = t0 <u a0\n 30741: a3 = 0 if a2 != 0\n 30743: a3 = 0 if a1 != 0\n 30745: jump @1240 if a3 != 0\n      : @1239 (gas: 1)\n 30748: jump @848\n      : @1240 (gas: 10)\n 30751: i32 a0 = t0 + 0xa4\n 30755: a2 = s1 + 0x7ff\n 30759: a2 = a2 + 0x199\n 30763: u64 [a2 + 1056] = 0\n 30767: u64 [a2 + 1048] = 0\n 30771: u64 [a2 + 1040] = 0\n 30775: a1 = s1 + 0x7ff\n 30779: a1 = a1 + 0x5a1\n 30783: u64 [a2 + 1032] = 0\n 30787: ra = 1310, jump @19\n      : @1241 [@dyn 655] (gas: 16)\n 30793: a0 = u64 [s1 + 0x1e0]\n 30797: a0 = a0 + 0x1f\n 30800: a1 = 0x1ffffffe0\n 30810: a0 = a0 & a1\n 30813: u64 [s1 + 0x208] = a0\n 30817: ecalli 12 // 'ref_time_left'\n 30819: a0 = u64 [s1 + 0x1d0]\n 30823: a1 = u64 [s1 + 0xc0]\n 30827: u64 [a0 + 0x8] = a1\n 30830: a1 = u64 [s1 + 0xd0]\n 30834: u64 [a0] = a1\n 30836: a1 = u64 [s1 + 0xc8]\n 30840: u32 [a0 + 0x10] = a1\n 30843: t0 = 0x520\n 30847: a1 = s1 + 0x4198\n 30851: fallthrough\n      : @1242 [@dyn 656] (gas: 7)\n 30852: u64 [a1 + 1504] = 0\n 30856: u64 [a1 + 1496] = 0\n 30860: u64 [a1 + 1488] = 0\n 30864: a0 = 0xffffff5c\n 30874: u64 [a1 + 1480] = 0\n 30878: a2 = u64 [s1 + 0x208]\n 30882: jump @1244 if a2 <u a0\n      : @1243 (gas: 1)\n 30885: jump @848\n      : @1244 (gas: 4)\n 30888: i32 a1 = a2 + 0xa4\n 30892: u64 [s1 + 0x208] = a1\n 30896: a0 = u64 [s1 + 0x210]\n 30900: ra = 1314, jump @32\n      : @1245 [@dyn 657] (gas: 4)\n 30906: u64 [s1 + 0x200] = a0\n 30910: a0 = u64 [s1 + 0x210]\n 30914: a1 = 0\n 30916: ra = 1316, jump @32\n      : @1246 [@dyn 658] (gas: 34)\n 30922: a2 = s1 + 0x4198\n 30926: u32 [a2 + 1512] = 0\n 30930: a3 = a2 + 0x600\n 30934: u64 [a3 + 32] = 0xffffffffffffffff\n 30938: u64 [a3 + 24] = 0xffffffffffffffff\n 30942: u64 [a3 + 16] = 0xffffffffffffffff\n 30946: u64 [a3 + 8] = 0xffffffffffffffff\n 30950: a1 = u64 [s1 + 0x1d0]\n 30954: a1 = a1 << 0x20\n 30957: a1 = a1 >> 0x20\n 30960: a2 = 0x800000000\n 30970: t0 = a1 | a2\n 30973: a1 = s1 + 0x4760\n 30977: a1 = a1 << 0x20\n 30980: a1 = a1 >> 0x20\n 30983: a2 = s1 + 0x47a0\n 30987: a2 = a2 << 0x20\n 30990: a3 = a2 | a1\n 30993: a1 = u64 [s1 + 0x200]\n 30997: a1 = a1 << 0x20\n 31000: a1 = a1 >> 0x20\n 31003: a4 = u64 [s1 + 0x208]\n 31007: a4 = a4 << 0x20\n 31010: a4 = a4 | a1\n 31013: a0 = a0 << 0x20\n 31016: a0 = a0 >> 0x20\n 31019: a1 = s1 + 0x4780\n 31023: a1 = a1 << 0x20\n 31026: a5 = a1 | a0\n 31029: a1 = 0xffffffffffffffff\n 31032: a2 = 0xffffffffffffffff\n 31035: a0 = t0\n 31037: ecalli 1 // 'call'\n 31039: fallthrough\n      : @1247 (gas: 1)\n 31040: jump @1249 if a0 == 0\n      : @1248 (gas: 1)\n 31043: jump @1814\n      : @1249 (gas: 20)\n 31046: a2 = s1 + 0x7ff\n 31050: a2 = a2 + 0x199\n 31054: u64 [a2 + 960] = 0\n 31058: u64 [a2 + 952] = 0\n 31062: u64 [a2 + 944] = 0\n 31066: u64 [a2 + 936] = 0\n 31070: a0 = u64 [s1 + 0x210]\n 31074: a4 = a2 + 0x300\n 31078: u64 [a4 + 0xc8] = a0\n 31082: a0 = u64 [s1 + 0x1e8]\n 31086: u64 [a4 + 0xd0] = a0\n 31090: a0 = u64 [s1 + 0xd8]\n 31094: u64 [a4 + 0xd8] = a0\n 31098: a0 = s1 + 0x7ff\n 31102: a0 = a0 + 0x561\n 31106: a1 = s1 + 0x7ff\n 31110: a1 = a1 + 0x541\n 31114: a3 = u64 [s1 + 0xf8]\n 31118: u64 [a4 + 0xe0] = a3\n 31122: ra = 1318, jump @1919\n      : @1250 [@dyn 659] (gas: 6)\n 31128: a0 = u64 [s1 + 0x218]\n 31132: u64 [a0 + 24] = 0\n 31135: u64 [a0 + 16] = 0\n 31138: u64 [a0 + 8] = 0\n 31141: u64 [a0 + 0] = 0\n 31143: jump @220\n      : @1251 (gas: 8)\n 31146: a1 = s1 + 0x5198\n 31150: u64 [a1 + 1408] = 0\n 31154: u64 [a1 + 1400] = 0\n 31158: u64 [a1 + 1392] = 0\n 31162: u64 [a1 + 1384] = 0x3\n 31167: a0 = s1 + 0x4160\n 31171: a1 = s1 + 0x5700\n 31175: ra = 1320, jump @21\n      : @1252 [@dyn 660] (gas: 1)\n 31181: t0 = 1322, jump @2555\n      : @1253 [@dyn 661] (gas: 1)\n 31188: jump @1255 if a1 == 0\n      : @1254 (gas: 1)\n 31191: jump @848\n      : @1255 (gas: 23)\n 31194: a3 = s1 + 0x3998\n 31198: a4 = a3 + 0x700\n 31202: a1 = u64 [a4 + 0xe0]\n 31206: a5 = s1 + 0x100\n 31210: u64 [a5 + 0x58] = a1\n 31213: a1 = u64 [a4 + 0xd8]\n 31217: u64 [a5 + 0x50] = a1\n 31220: a1 = u64 [a4 + 0xd0]\n 31224: u64 [a5 + 0x48] = a1\n 31227: a1 = u64 [a4 + 0xc8]\n 31231: u64 [a5 + 0x40] = a1\n 31234: a1 = u64 [a5 + 0xc0]\n 31238: a1 = a1 << 0x20\n 31241: a2 = a1 >> 0x20\n 31244: u64 [a3 + 1984] = 0\n 31248: a1 = u64 [a5 + 0xc8]\n 31252: u64 [a4 + 0xa8] = a1\n 31256: a1 = u64 [a5 + 0xd0]\n 31260: u64 [a4 + 0xb0] = a1\n 31264: a1 = s1 + 0x4140\n 31268: u64 [a5 + 0x60] = a2\n 31271: u64 [a4 + 0xb8] = a2\n 31275: ra = 1324, jump @19\n      : @1256 [@dyn 662] (gas: 3)\n 31281: t0 = 0x52e\n 31285: a1 = s1 + 0x3998\n 31289: fallthrough\n      : @1257 [@dyn 663] (gas: 8)\n 31290: u64 [a1 + 1952] = 0\n 31294: u64 [a1 + 1944] = 0\n 31298: u64 [a1 + 1928] = 0x4\n 31303: a2 = a1\n 31305: a0 = 0x20\n 31308: a1 = s1 + 0x4120\n 31312: u64 [a2 + 1936] = 0\n 31316: ra = 1328, jump @19\n      : @1258 [@dyn 664] (gas: 9)\n 31322: a4 = u64 [s1 + 0x218]\n 31326: a0 = sp + 0xffffffffffffffe0\n 31329: a5 = a0 & 0xffffffffffffffe0\n 31332: sp = a5\n 31334: a1 = u64 [a4 + 0x10]\n 31337: a2 = u64 [a4 + 0x18]\n 31340: a3 = u64 [a4 + 0x8]\n 31343: a0 = u64 [a4]\n 31345: t0 = 1330, jump @2558\n      : @1259 [@dyn 665] (gas: 1)\n 31352: jump @1261 if a1 == 0\n      : @1260 (gas: 1)\n 31355: jump @848\n      : @1261 (gas: 3)\n 31358: a1 = 0x40\n 31361: u64 [s1 + 0x168] = a5\n 31365: ra = 1332, jump @32\n      : @1262 [@dyn 666] (gas: 4)\n 31371: a1 = sp + 0xffffffffffffffe0\n 31374: a1 = a1 & 0xffffffffffffffe0\n 31377: u64 [s1 + 0x138] = a1\n 31381: t0 = 1334, jump @2583\n      : @1263 [@dyn 667] (gas: 5)\n 31388: ra = 0x538\n 31392: ecalli 10 // 'hash_keccak_256'\n 31394: a3 = u64 [s1 + 0x138]\n 31398: t0 = 0x53a\n 31402: jump @2578\n      : @1264 [@dyn 668] (gas: 2)\n 31406: a3 = u64 [s1 + 0x138]\n 31410: t0 = 1338, jump @2578\n      : @1265 [@dyn 669] (gas: 7)\n 31417: a1 = u64 [s1 + 0x168]\n 31421: u64 [a1 + 0x18] = a3\n 31424: u64 [a1 + 0x10] = a2\n 31427: u64 [a1 + 0x8] = a4\n 31430: u64 [a1] = a0\n 31432: a0 = s1 + 0x4100\n 31436: ra = 1340, jump @21\n      : @1266 [@dyn 670] (gas: 18)\n 31442: t1 = s1 + 0x3998\n 31446: a0 = u64 [t1 + 0x768]\n 31450: t0 = u64 [t1 + 0x780]\n 31454: t2 = u64 [t1 + 0x770]\n 31458: ra = u64 [t1 + 0x778]\n 31462: u64 [s1 + 0x138] = a0\n 31466: a0 = a0 + 0x1\n 31469: a1 = a0 <u 0x1\n 31472: a1 = a1 + t2\n 31475: a2 = a0 | a1\n 31478: a2 = a2 <u 0x1\n 31481: a2 = a2 + ra\n 31484: a3 = a2 <u ra\n 31487: a3 = a3 + t0\n 31490: a4 = a1 | a3\n 31493: a5 = a0 | a2\n 31496: a4 = a4 | a5\n 31499: jump @1397 if a4 != 0\n      : @1267 (gas: 6)\n 31503: a4 = u64 [s1 + 0x218]\n 31507: a1 = u64 [a4 + 0x10]\n 31510: a2 = u64 [a4 + 0x18]\n 31513: a3 = u64 [a4 + 0x8]\n 31516: a0 = u64 [a4]\n 31518: t0 = 1342, jump @2558\n      : @1268 [@dyn 671] (gas: 1)\n 31525: jump @1270 if a1 == 0\n      : @1269 (gas: 1)\n 31528: jump @848\n      : @1270 (gas: 7)\n 31531: u64 [t1 + 760] = 0\n 31535: u64 [t1 + 752] = 0\n 31539: a1 = 0x4e487b7100000000\n 31549: u64 [t1 + 0x300] = a1\n 31553: a1 = s1 + 0x3c80\n 31557: u64 [t1 + 744] = 0\n 31561: ra = 1344, jump @19\n      : @1271 [@dyn 672] (gas: 3)\n 31567: t0 = 0x542\n 31571: a1 = s1 + 0x3998\n 31575: fallthrough\n      : @1272 [@dyn 673] (gas: 8)\n 31576: u64 [a1 + 736] = 0\n 31580: u64 [a1 + 728] = 0\n 31584: u64 [a1 + 712] = 0x11\n 31589: a2 = a1\n 31591: a0 = 0x4\n 31594: a1 = s1 + 0x3c60\n 31598: u64 [a2 + 720] = 0\n 31602: ra = 1348, jump @19\n      : @1273 [@dyn 674] (gas: 1)\n 31608: t0 = 1350, jump @2555\n      : @1274 [@dyn 675] (gas: 1)\n 31615: jump @1276 if a1 == 0\n      : @1275 (gas: 1)\n 31618: jump @848\n      : @1276 (gas: 2)\n 31621: a1 = 0x24\n 31624: ra = 1352, jump @32\n      : @1277 [@dyn 676] (gas: 2)\n 31630: i32 a1 = a0 + 0\n 31632: fallthrough\n      : @1278 (gas: 4)\n 31633: a0 = 0x1\n 31636: a2 = 0x24\n 31639: ecalli 15 // 'seal_return'\n 31641: fallthrough\n      : @1279 (gas: 3)\n 31642: a0 = s1 + 0x24e0\n 31646: a1 = 0x40\n 31649: ra = 1354, jump @17\n      : @1280 [@dyn 677] (gas: 3)\n 31655: a0 = s1 + 0x2198\n 31659: a2 = a0 + 0x300\n 31663: t0 = 1356, jump @2569\n      : @1281 [@dyn 678] (gas: 4)\n 31670: ra = 0x54e\n 31674: ecalli 14 // 'return_data_size'\n 31676: t0 = 0x550\n 31680: jump @2557\n      : @1282 [@dyn 679] (gas: 1)\n 31684: t0 = 1360, jump @2557\n      : @1283 [@dyn 680] (gas: 1)\n 31691: jump @1285 if a2 == 0\n      : @1284 (gas: 1)\n 31694: jump @848\n      : @1285 (gas: 14)\n 31697: t0 = a0\n 31699: a3 = s1 + 0x200\n 31703: a4 = u64 [a3 + 0x10]\n 31706: a5 = u64 [a3 + 0x8]\n 31709: a0 = a4 | a5\n 31712: a2 = u64 [a3]\n 31714: a3 = u64 [s1 + 0x1f8]\n 31718: a2 = a2 | a3\n 31721: a0 = a0 | a2\n 31724: a0 = a0 >> 0x20\n 31727: a2 = a2 | a5\n 31730: a2 = a2 << 0x20\n 31733: a2 = a2 | a0\n 31736: jump @1287 if a2 == 0\n      : @1286 (gas: 1)\n 31739: jump @848\n      : @1287 (gas: 2)\n 31742: a2 = t0 >> 0x20\n 31745: jump @1289 if a2 == 0\n      : @1288 (gas: 1)\n 31748: jump @848\n      : @1289 (gas: 8)\n 31751: a0 = a4\n 31753: i32 a1 = a1 + 0\n 31755: u64 [s1 + 0x208] = a1\n 31759: i32 a1 = t0 + 0\n 31761: u64 [s1 + 0x218] = a1\n 31765: a1 = t0\n 31767: u64 [s1 + 0x200] = t0\n 31771: ra = 1362, jump @32\n      : @1290 [@dyn 681] (gas: 11)\n 31777: a1 = s1 + 0x4998\n 31781: a2 = u64 [s1 + 0x200]\n 31785: u32 [a1 + 0x388] = a2\n 31789: i32 a0 = a0 + 0\n 31791: a1 = s1 + 0x5000\n 31795: i32 a1 = a1 + 0xfffffffffffffd20\n 31799: a2 = u64 [s1 + 0x208]\n 31803: ecalli 13 // 'return_data_copy'\n 31805: a0 = s1 + 0x4998\n 31809: a0 = i32 [a0 + 0x388]\n 31813: fallthrough\n      : @1291 (gas: 2)\n 31814: a1 = u64 [s1 + 0x218]\n 31818: jump @1293 if a0 >=u a1\n      : @1292 (gas: 1)\n 31821: jump @848\n      : @1293 (gas: 2)\n 31824: ecalli 14 // 'return_data_size'\n 31826: fallthrough\n      : @1294 (gas: 3)\n 31827: a1 = a0\n 31829: a0 = a0 >> 0x20\n 31832: jump @1381 if a0 == 0\n      : @1295 (gas: 1)\n 31836: jump @848\n      : @1296 (gas: 3)\n 31839: a0 = s1 + 0x44e0\n 31843: a1 = 0x40\n 31846: ra = 1364, jump @17\n      : @1297 [@dyn 682] (gas: 3)\n 31852: a0 = s1 + 0x4198\n 31856: a2 = a0 + 0x300\n 31860: t0 = 1366, jump @2569\n      : @1298 [@dyn 683] (gas: 4)\n 31867: ra = 0x558\n 31871: ecalli 14 // 'return_data_size'\n 31873: t0 = 0x55a\n 31877: jump @2557\n      : @1299 [@dyn 684] (gas: 1)\n 31881: t0 = 1370, jump @2557\n      : @1300 [@dyn 685] (gas: 1)\n 31888: jump @1302 if a2 == 0\n      : @1301 (gas: 1)\n 31891: jump @848\n      : @1302 (gas: 14)\n 31894: t0 = a0\n 31896: a5 = s1 + 0x200\n 31900: a3 = u64 [a5 + 0x10]\n 31903: a4 = u64 [a5 + 0x8]\n 31906: a0 = a3 | a4\n 31909: a2 = u64 [a5]\n 31911: a5 = u64 [s1 + 0x1f8]\n 31915: a2 = a2 | a5\n 31918: a0 = a0 | a2\n 31921: a0 = a0 >> 0x20\n 31924: a2 = a2 | a4\n 31927: a2 = a2 << 0x20\n 31930: a2 = a2 | a0\n 31933: jump @1304 if a2 == 0\n      : @1303 (gas: 1)\n 31936: jump @848\n      : @1304 (gas: 2)\n 31939: a2 = t0 >> 0x20\n 31942: jump @1306 if a2 == 0\n      : @1305 (gas: 1)\n 31945: jump @848\n      : @1306 (gas: 8)\n 31948: a0 = a3\n 31950: i32 a1 = a1 + 0\n 31952: u64 [s1 + 0x208] = a1\n 31956: i32 a1 = t0 + 0\n 31958: u64 [s1 + 0x218] = a1\n 31962: a1 = t0\n 31964: u64 [s1 + 0x200] = t0\n 31968: ra = 1372, jump @32\n      : @1307 [@dyn 686] (gas: 11)\n 31974: a1 = s1 + 0x5198\n 31978: a2 = u64 [s1 + 0x200]\n 31982: u32 [a1 + 0x768] = a2\n 31986: i32 a0 = a0 + 0\n 31988: a1 = s1 + 0x6000\n 31992: i32 a1 = a1 + 0xfffffffffffff900\n 31996: a2 = u64 [s1 + 0x208]\n 32000: ecalli 13 // 'return_data_copy'\n 32002: a0 = s1 + 0x5198\n 32006: a0 = i32 [a0 + 0x768]\n 32010: jump @1376\n      : @1308 (gas: 15)\n 32013: a5 = s1 + 0x200\n 32017: a0 = u64 [a5 + 0x18]\n 32020: t0 = 0x55e\n 32024: a1 = u64 [a0 + 0x10]\n 32027: a2 = u64 [a0 + 0x18]\n 32030: a3 = u64 [a0 + 0x8]\n 32033: a0 = u64 [a0]\n 32035: a2 = a2 | a3\n 32038: a3 = a0 | a1\n 32041: a3 = a3 | a2\n 32044: a3 = a3 >> 0x20\n 32047: a1 = a1 | a2\n 32050: a1 = a1 << 0x20\n 32053: a1 = a1 | a3\n 32056: fallthrough\n      : @1309 [@dyn 687] (gas: 3)\n 32057: a2 = u64 [a5 + 0x10]\n 32060: a3 = u64 [a5 + 0x8]\n 32063: jump @1311 if a1 == 0\n      : @1310 (gas: 1)\n 32066: jump @848\n      : @1311 (gas: 8)\n 32069: u64 [a4 + 1472] = 0\n 32073: a5 = a4 + 0x500\n 32077: u64 [a5 + 0xa8] = a3\n 32081: u64 [a5 + 0xb0] = a2\n 32085: a1 = s1 + 0x1740\n 32089: a2 = u64 [s1 + 0x1b0]\n 32093: u64 [a5 + 0xb8] = a2\n 32097: ra = 1376, jump @19\n      : @1312 [@dyn 688] (gas: 3)\n 32103: t0 = 0x562\n 32107: a1 = s1 + 0x1198\n 32111: fallthrough\n      : @1313 [@dyn 689] (gas: 8)\n 32112: u64 [a1 + 1440] = 0\n 32116: u64 [a1 + 1432] = 0\n 32120: u64 [a1 + 1416] = 0x2\n 32125: a2 = a1\n 32127: a0 = 0x20\n 32130: a1 = s1 + 0x1720\n 32134: u64 [a2 + 1424] = 0\n 32138: ra = 1380, jump @19\n      : @1314 [@dyn 690] (gas: 1)\n 32144: t0 = 1382, jump @2555\n      : @1315 [@dyn 691] (gas: 1)\n 32151: jump @1317 if a1 == 0\n      : @1316 (gas: 1)\n 32154: jump @848\n      : @1317 (gas: 2)\n 32157: a1 = 0x40\n 32160: ra = 1384, jump @32\n      : @1318 [@dyn 692] (gas: 4)\n 32166: a1 = sp + 0xffffffffffffffe0\n 32169: a1 = a1 & 0xffffffffffffffe0\n 32172: u64 [s1 + 0x1a0] = a1\n 32176: t0 = 1386, jump @2583\n      : @1319 [@dyn 693] (gas: 5)\n 32183: ra = 0x56c\n 32187: ecalli 10 // 'hash_keccak_256'\n 32189: a3 = u64 [s1 + 0x1a0]\n 32193: t0 = 0x56e\n 32197: jump @2630\n      : @1320 [@dyn 694] (gas: 2)\n 32201: a3 = u64 [s1 + 0x1a0]\n 32205: t0 = 1390, jump @2630\n      : @1321 [@dyn 695] (gas: 16)\n 32212: u64 [s1 + 0x1a0] = a0\n 32216: a0 = reverse a1\n 32218: u64 [s1 + 0x180] = a0\n 32222: a0 = reverse a2\n 32224: u64 [s1 + 0x170] = a0\n 32228: a0 = reverse a3\n 32230: u64 [s1 + 0x168] = a0\n 32234: a0 = sp + 0xffffffffffffffe0\n 32237: a0 = a0 & 0xffffffffffffffe0\n 32240: u64 [s1 + 0x198] = a0\n 32244: sp = a0\n 32246: a0 = u64 [s1 + 0x178]\n 32250: ra = 0x570\n 32254: ecalli 5 // 'caller'\n 32256: t0 = 0x572\n 32260: jump @2566\n      : @1322 [@dyn 696] (gas: 1)\n 32264: t0 = 1394, jump @2566\n      : @1323 [@dyn 697] (gas: 8)\n 32271: u64 [a2 + 1408] = 0\n 32275: a4 = a2 + 0x500\n 32279: u64 [a4 + 0x78] = a1\n 32282: u64 [a4 + 0x70] = a0\n 32285: a1 = s1 + 0x1700\n 32289: u64 [a4 + 0x68] = a3\n 32292: a0 = 0\n 32294: ra = 1396, jump @19\n      : @1324 [@dyn 698] (gas: 14)\n 32300: a0 = u64 [s1 + 0x168]\n 32304: a1 = s1 + 0x1198\n 32308: a2 = a1 + 0x500\n 32312: u64 [a2 + 0x60] = a0\n 32315: a0 = u64 [s1 + 0x170]\n 32319: u64 [a2 + 0x58] = a0\n 32322: a0 = u64 [s1 + 0x180]\n 32326: u64 [a2 + 0x50] = a0\n 32329: a3 = a1\n 32331: a0 = 0x20\n 32334: a1 = s1 + 0x16e0\n 32338: a2 = u64 [s1 + 0x1a0]\n 32342: u64 [a3 + 0x548] = a2\n 32346: ra = 1398, jump @19\n      : @1325 [@dyn 699] (gas: 3)\n 32352: a1 = u64 [s1 + 0x190]\n 32356: a0 = i32 [a1]\n 32358: jump @1327 if a0 >=u 64\n      : @1326 (gas: 2)\n 32362: u32 [a1 + 0] = 0x40\n 32365: fallthrough\n      : @1327 (gas: 12)\n 32366: a0 = sp + 0xffffffffffffffe0\n 32369: a0 = a0 & 0xffffffffffffffe0\n 32372: u64 [s1 + 0x1a0] = a0\n 32376: sp = a0\n 32378: i32 a2 = a0 + 0\n 32380: a1 = 0x40\n 32383: a0 = u64 [s1 + 0x188]\n 32387: ra = 0x578\n 32391: ecalli 10 // 'hash_keccak_256'\n 32393: a3 = u64 [s1 + 0x1a0]\n 32397: t0 = 0x57a\n 32401: jump @2578\n      : @1328 [@dyn 700] (gas: 2)\n 32405: a3 = u64 [s1 + 0x1a0]\n 32409: t0 = 1402, jump @2578\n      : @1329 [@dyn 701] (gas: 11)\n 32416: a1 = u64 [s1 + 0x198]\n 32420: u64 [a1 + 0x18] = a3\n 32423: u64 [a1 + 0x10] = a2\n 32426: u64 [a1 + 0x8] = a4\n 32429: u64 [a1] = a0\n 32431: a0 = sp + 0xffffffffffffffe0\n 32434: a0 = a0 & 0xffffffffffffffe0\n 32437: u64 [s1 + 0x1a0] = a0\n 32441: sp = a0\n 32443: a0 = s1 + 0x16c0\n 32447: ra = 1404, jump @21\n      : @1330 [@dyn 702] (gas: 22)\n 32453: a5 = s1 + 0x1198\n 32457: a3 = u64 [a5 + 0x528]\n 32461: a0 = u64 [a5 + 0x530]\n 32465: a1 = u64 [a5 + 0x538]\n 32469: a2 = u64 [a5 + 0x540]\n 32473: a4 = u64 [s1 + 0x1d0]\n 32477: u64 [a5 + 0x4e0] = a4\n 32481: a4 = u64 [s1 + 0x1c8]\n 32485: u64 [a5 + 0x4d8] = a4\n 32489: a4 = u64 [s1 + 0x1c0]\n 32493: u64 [a5 + 0x4d0] = a4\n 32497: a4 = u64 [s1 + 0x1b8]\n 32501: u64 [a5 + 0x4c8] = a4\n 32505: u64 [a5 + 0x500] = a2\n 32509: a4 = a5 + 0x400\n 32513: u64 [a4 + 0xf8] = a1\n 32517: u64 [a4 + 0xf0] = a0\n 32521: a0 = s1 + 0x16a0\n 32525: a1 = s1 + 0x1680\n 32529: a2 = s1 + 0x1660\n 32533: u64 [a4 + 0xe8] = a3\n 32537: ra = 1406, jump @2218\n      : @1331 [@dyn 703] (gas: 23)\n 32543: t2 = s1 + 0x1198\n 32547: a0 = u64 [t2 + 0x518]\n 32551: t0 = u64 [t2 + 0x510]\n 32555: t1 = u64 [t2 + 0x508]\n 32559: ra = u64 [t2 + 0x520]\n 32563: a5 = u64 [s1 + 0x1a0]\n 32567: u64 [a5 + 0x10] = a0\n 32570: a3 = u64 [s1 + 0x218]\n 32574: a4 = u64 [a3 + 0x10]\n 32577: a2 = u64 [a3 + 0x18]\n 32580: a1 = u64 [a3 + 0x8]\n 32583: a0 = u64 [a3]\n 32585: u64 [a5 + 0x18] = ra\n 32588: u64 [a5] = t1\n 32590: a1 = a1 | a2\n 32593: a2 = a0 | a4\n 32596: a2 = a2 | a1\n 32599: a1 = a1 | a4\n 32602: a2 = a2 >> 0x20\n 32605: a1 = a1 << 0x20\n 32608: a1 = a1 | a2\n 32611: u64 [a5 + 0x8] = t0\n 32614: jump @1333 if a1 == 0\n      : @1332 (gas: 1)\n 32617: jump @848\n      : @1333 (gas: 10)\n 32620: u64 [t2 + 1216] = 0\n 32624: a1 = u64 [s1 + 0x208]\n 32628: a3 = t2 + 0x400\n 32632: u64 [a3 + 0xa8] = a1\n 32636: a1 = u64 [s1 + 0x1b0]\n 32640: u64 [a3 + 0xb8] = a1\n 32644: a1 = s1 + 0x1640\n 32648: a2 = u64 [s1 + 0x210]\n 32652: u64 [a3 + 0xb0] = a2\n 32656: ra = 1408, jump @19\n      : @1334 [@dyn 704] (gas: 3)\n 32662: t0 = 0x582\n 32666: a1 = s1 + 0x1198\n 32670: fallthrough\n      : @1335 [@dyn 705] (gas: 8)\n 32671: u64 [a1 + 1184] = 0\n 32675: u64 [a1 + 1176] = 0\n 32679: u64 [a1 + 1160] = 0x2\n 32684: a2 = a1\n 32686: a0 = 0x20\n 32689: a1 = s1 + 0x1620\n 32693: u64 [a2 + 1168] = 0\n 32697: ra = 1412, jump @19\n      : @1336 [@dyn 706] (gas: 1)\n 32703: t0 = 1414, jump @2555\n      : @1337 [@dyn 707] (gas: 1)\n 32710: jump @1339 if a1 == 0\n      : @1338 (gas: 1)\n 32713: jump @848\n      : @1339 (gas: 2)\n 32716: a1 = 0x40\n 32719: ra = 1416, jump @32\n      : @1340 [@dyn 708] (gas: 4)\n 32725: a1 = sp + 0xffffffffffffffe0\n 32728: a1 = a1 & 0xffffffffffffffe0\n 32731: u64 [s1 + 0x218] = a1\n 32735: t0 = 1418, jump @2583\n      : @1341 [@dyn 709] (gas: 5)\n 32742: ra = 0x58c\n 32746: ecalli 10 // 'hash_keccak_256'\n 32748: a3 = u64 [s1 + 0x218]\n 32752: t0 = 0x58e\n 32756: jump @2630\n      : @1342 [@dyn 710] (gas: 2)\n 32760: a3 = u64 [s1 + 0x218]\n 32764: t0 = 1422, jump @2630\n      : @1343 [@dyn 711] (gas: 16)\n 32771: u64 [s1 + 0x1b0] = a0\n 32775: a0 = reverse a1\n 32777: u64 [s1 + 0x198] = a0\n 32781: a0 = reverse a2\n 32783: u64 [s1 + 0x180] = a0\n 32787: a0 = reverse a3\n 32789: u64 [s1 + 0x170] = a0\n 32793: a0 = sp + 0xffffffffffffffe0\n 32796: a0 = a0 & 0xffffffffffffffe0\n 32799: u64 [s1 + 0x218] = a0\n 32803: sp = a0\n 32805: a0 = u64 [s1 + 0x178]\n 32809: ra = 0x590\n 32813: ecalli 5 // 'caller'\n 32815: t0 = 0x592\n 32819: jump @2566\n      : @1344 [@dyn 712] (gas: 1)\n 32823: t0 = 1426, jump @2566\n      : @1345 [@dyn 713] (gas: 8)\n 32830: u64 [a2 + 1152] = 0\n 32834: a4 = a2 + 0x400\n 32838: u64 [a4 + 0x78] = a1\n 32841: u64 [a4 + 0x70] = a0\n 32844: a1 = s1 + 0x1600\n 32848: u64 [a4 + 0x68] = a3\n 32851: a0 = 0\n 32853: ra = 1428, jump @19\n      : @1346 [@dyn 714] (gas: 14)\n 32859: a0 = u64 [s1 + 0x170]\n 32863: a1 = s1 + 0x1198\n 32867: a2 = a1 + 0x400\n 32871: u64 [a2 + 0x60] = a0\n 32874: a0 = u64 [s1 + 0x180]\n 32878: u64 [a2 + 0x58] = a0\n 32881: a0 = u64 [s1 + 0x198]\n 32885: u64 [a2 + 0x50] = a0\n 32888: a3 = a1\n 32890: a0 = 0x20\n 32893: a1 = s1 + 0x15e0\n 32897: a2 = u64 [s1 + 0x1b0]\n 32901: u64 [a3 + 0x448] = a2\n 32905: ra = 1430, jump @19\n      : @1347 [@dyn 715] (gas: 3)\n 32911: a0 = u64 [s1 + 0x190]\n 32915: a0 = i32 [a0]\n 32917: jump @1349 if a0 >=u 64\n      : @1348 (gas: 3)\n 32921: a0 = u64 [s1 + 0x190]\n 32925: u32 [a0 + 0] = 0x40\n 32928: fallthrough\n      : @1349 (gas: 12)\n 32929: a0 = sp + 0xffffffffffffffe0\n 32932: a0 = a0 & 0xffffffffffffffe0\n 32935: u64 [s1 + 0x1b0] = a0\n 32939: sp = a0\n 32941: i32 a2 = a0 + 0\n 32943: a1 = 0x40\n 32946: a0 = u64 [s1 + 0x188]\n 32950: ra = 0x598\n 32954: ecalli 10 // 'hash_keccak_256'\n 32956: a3 = u64 [s1 + 0x1b0]\n 32960: t0 = 0x59a\n 32964: jump @2632\n      : @1350 [@dyn 716] (gas: 2)\n 32968: a3 = u64 [s1 + 0x1b0]\n 32972: t0 = 1434, jump @2632\n      : @1351 [@dyn 717] (gas: 7)\n 32979: a0 = u64 [s1 + 0x218]\n 32983: u64 [a0 + 0x18] = a3\n 32986: u64 [a0 + 0x10] = a2\n 32989: u64 [a0 + 0x8] = a1\n 32992: u64 [a0] = a4\n 32994: a1 = u64 [s1 + 0x1a0]\n 32998: ra = 1436, jump @23\n      : @1352 [@dyn 718] (gas: 2)\n 33004: a4 = s1 + 0x1198\n 33008: jump @720\n      : @1353 (gas: 3)\n 33011: a0 = s1 + 0x39e0\n 33015: a1 = 0x40\n 33018: ra = 1438, jump @17\n      : @1354 [@dyn 719] (gas: 13)\n 33025: a0 = s1 + 0x3998\n 33029: a1 = u64 [a0 + 0x60]\n 33032: u64 [s1 + 0x200] = a1\n 33036: a1 = u64 [a0 + 0x58]\n 33039: u64 [s1 + 0x208] = a1\n 33043: a1 = u64 [a0 + 0x50]\n 33046: u64 [s1 + 0x1f8] = a1\n 33050: a0 = u64 [a0 + 0x48]\n 33053: u64 [s1 + 0x210] = a0\n 33057: ra = 0x5a0\n 33061: ecalli 14 // 'return_data_size'\n 33063: t0 = 0x5a2\n 33067: jump @2557\n      : @1355 [@dyn 720] (gas: 1)\n 33071: t0 = 1442, jump @2557\n      : @1356 [@dyn 721] (gas: 1)\n 33078: jump @1358 if a2 == 0\n      : @1357 (gas: 1)\n 33081: jump @848\n      : @1358 (gas: 14)\n 33084: t0 = a0\n 33086: a3 = s1 + 0x200\n 33090: a4 = u64 [a3 + 0x10]\n 33093: a5 = u64 [a3 + 0x8]\n 33096: a0 = a4 | a5\n 33099: a2 = u64 [a3]\n 33101: a3 = u64 [s1 + 0x1f8]\n 33105: a2 = a2 | a3\n 33108: a0 = a0 | a2\n 33111: a0 = a0 >> 0x20\n 33114: a2 = a2 | a5\n 33117: a2 = a2 << 0x20\n 33120: a2 = a2 | a0\n 33123: jump @1360 if a2 == 0\n      : @1359 (gas: 1)\n 33126: jump @848\n      : @1360 (gas: 2)\n 33129: a2 = t0 >> 0x20\n 33132: jump @1362 if a2 == 0\n      : @1361 (gas: 1)\n 33135: jump @848\n      : @1362 (gas: 8)\n 33138: a0 = a4\n 33140: i32 a1 = a1 + 0\n 33142: u64 [s1 + 0x208] = a1\n 33146: i32 a1 = t0 + 0\n 33148: u64 [s1 + 0x218] = a1\n 33152: a1 = t0\n 33154: u64 [s1 + 0x200] = t0\n 33158: ra = 1444, jump @32\n      : @1363 [@dyn 722] (gas: 11)\n 33164: a1 = s1 + 0x5198\n 33168: a2 = u64 [s1 + 0x200]\n 33172: u32 [a1 + 0x328] = a2\n 33176: i32 a0 = a0 + 0\n 33178: a1 = s1 + 0x5000\n 33182: i32 a1 = a1 + 0x4c0\n 33186: a2 = u64 [s1 + 0x208]\n 33190: ecalli 13 // 'return_data_copy'\n 33192: a0 = s1 + 0x5198\n 33196: a0 = i32 [a0 + 0x328]\n 33200: jump @1376\n      : @1364 (gas: 3)\n 33203: a0 = s1 + 0x3340\n 33207: a1 = 0x40\n 33210: ra = 1446, jump @17\n      : @1365 [@dyn 723] (gas: 3)\n 33217: a0 = s1 + 0x3198\n 33221: a2 = a0 + 0x100\n 33225: t0 = 1448, jump @2635\n      : @1366 [@dyn 724] (gas: 4)\n 33232: ra = 0x5aa\n 33236: ecalli 14 // 'return_data_size'\n 33238: t0 = 0x5ac\n 33242: jump @2557\n      : @1367 [@dyn 725] (gas: 1)\n 33246: t0 = 1452, jump @2557\n      : @1368 [@dyn 726] (gas: 1)\n 33253: jump @1370 if a2 == 0\n      : @1369 (gas: 1)\n 33256: jump @848\n      : @1370 (gas: 14)\n 33259: t0 = a0\n 33261: a3 = s1 + 0x200\n 33265: a4 = u64 [a3 + 0x10]\n 33268: a5 = u64 [a3 + 0x8]\n 33271: a0 = a4 | a5\n 33274: a2 = u64 [a3]\n 33276: a3 = u64 [s1 + 0x1f8]\n 33280: a2 = a2 | a3\n 33283: a0 = a0 | a2\n 33286: a0 = a0 >> 0x20\n 33289: a2 = a2 | a5\n 33292: a2 = a2 << 0x20\n 33295: a2 = a2 | a0\n 33298: jump @1372 if a2 == 0\n      : @1371 (gas: 1)\n 33301: jump @848\n      : @1372 (gas: 2)\n 33304: a2 = t0 >> 0x20\n 33307: jump @1374 if a2 == 0\n      : @1373 (gas: 1)\n 33310: jump @848\n      : @1374 (gas: 8)\n 33313: a0 = a4\n 33315: i32 a1 = a1 + 0\n 33317: u64 [s1 + 0x208] = a1\n 33321: i32 a1 = t0 + 0\n 33323: u64 [s1 + 0x218] = a1\n 33327: a1 = t0\n 33329: u64 [s1 + 0x200] = t0\n 33333: ra = 1454, jump @32\n      : @1375 [@dyn 727] (gas: 11)\n 33339: a1 = s1 + 0x4998\n 33343: a2 = u64 [s1 + 0x200]\n 33347: u32 [a1 + 0x6e8] = a2\n 33351: i32 a0 = a0 + 0\n 33353: a1 = s1 + 0x5000\n 33357: i32 a1 = a1 + 0x80\n 33361: a2 = u64 [s1 + 0x208]\n 33365: ecalli 13 // 'return_data_copy'\n 33367: a0 = s1 + 0x4998\n 33371: a0 = i32 [a0 + 0x6e8]\n 33375: fallthrough\n      : @1376 (gas: 2)\n 33376: a1 = u64 [s1 + 0x218]\n 33380: jump @1378 if a0 >=u a1\n      : @1377 (gas: 1)\n 33383: jump @848\n      : @1378 (gas: 2)\n 33386: ecalli 14 // 'return_data_size'\n 33388: fallthrough\n      : @1379 (gas: 3)\n 33389: a1 = a0\n 33391: a0 = a0 >> 0x20\n 33394: jump @1381 if a0 == 0\n      : @1380 (gas: 1)\n 33397: jump @848\n      : @1381 (gas: 3)\n 33400: a0 = u64 [s1 + 0x210]\n 33404: u64 [s1 + 0x218] = a1\n 33408: ra = 1456, jump @32\n      : @1382 [@dyn 728] (gas: 5)\n 33414: i32 a1 = a0 + 0\n 33416: a2 = i32 [s1 + 0x218]\n 33420: a0 = 0x1\n 33423: ecalli 15 // 'seal_return'\n 33425: jump @1874\n      : @1383 (gas: 4)\n 33428: a0 = s1 + 0x7ff\n 33432: a0 = a0 + 0x4c1\n 33436: a1 = 0x40\n 33439: ra = 1458, jump @17\n      : @1384 [@dyn 729] (gas: 4)\n 33446: a0 = s1 + 0x7ff\n 33450: a0 = a0 + 0x199\n 33454: a2 = a0 + 0x300\n 33458: t0 = 1460, jump @2634\n      : @1385 [@dyn 730] (gas: 4)\n 33465: ra = 0x5b6\n 33469: ecalli 14 // 'return_data_size'\n 33471: t0 = 0x5b8\n 33475: jump @2557\n      : @1386 [@dyn 731] (gas: 1)\n 33479: t0 = 1464, jump @2557\n      : @1387 [@dyn 732] (gas: 1)\n 33486: jump @1389 if a2 == 0\n      : @1388 (gas: 1)\n 33489: jump @848\n      : @1389 (gas: 13)\n 33492: a5 = s1 + 0x200\n 33496: a2 = u64 [a5 + 0x10]\n 33499: a4 = u64 [a5 + 0x8]\n 33502: a3 = a2 | a4\n 33505: a2 = u64 [a5]\n 33507: a5 = u64 [s1 + 0x1f8]\n 33511: a2 = a2 | a5\n 33514: a3 = a3 | a2\n 33517: a3 = a3 >> 0x20\n 33520: a2 = a2 | a4\n 33523: a2 = a2 << 0x20\n 33526: a3 = a3 | a2\n 33529: jump @1391 if a3 == 0\n      : @1390 (gas: 1)\n 33532: jump @848\n      : @1391 (gas: 3)\n 33535: a2 = a0\n 33537: a0 = a0 >> 0x20\n 33540: jump @1393 if a0 == 0\n      : @1392 (gas: 1)\n 33543: jump @848\n      : @1393 (gas: 8)\n 33546: i32 a1 = a1 + 0\n 33548: u64 [s1 + 0x208] = a1\n 33552: a1 = a2\n 33554: u64 [s1 + 0x1f0] = a2\n 33558: i32 a0 = a2 + 0\n 33560: u64 [s1 + 0x218] = a0\n 33564: a0 = u64 [s1 + 0x210]\n 33568: ra = 1466, jump @32\n      : @1394 [@dyn 733] (gas: 11)\n 33574: a1 = s1 + 0x4198\n 33578: a2 = u64 [s1 + 0x1f0]\n 33582: u32 [a1 + 0x6a8] = a2\n 33586: i32 a0 = a0 + 0\n 33588: a1 = s1 + 0x5000\n 33592: i32 a1 = a1 + 0xfffffffffffff840\n 33596: a2 = u64 [s1 + 0x208]\n 33600: ecalli 13 // 'return_data_copy'\n 33602: a0 = s1 + 0x4198\n 33606: a0 = i32 [a0 + 0x6a8]\n 33610: fallthrough\n      : @1395 (gas: 2)\n 33611: a1 = u64 [s1 + 0x218]\n 33615: jump @1378 if a0 >=u a1\n      : @1396 (gas: 1)\n 33619: jump @848\n      : @1397 (gas: 12)\n 33622: u64 [s1 + 0x108] = ra\n 33626: u64 [s1 + 0x110] = t2\n 33630: u64 [s1 + 0x118] = t0\n 33634: a4 = s1 + 0x5198\n 33638: a5 = a4 + 0x500\n 33642: u64 [a5 + 0x88] = a0\n 33646: u64 [a5 + 0x90] = a1\n 33650: u64 [a5 + 0x98] = a2\n 33654: u64 [a5 + 0xa0] = a3\n 33658: a1 = s1 + 0x5720\n 33662: a0 = u64 [s1 + 0x168]\n 33666: ra = 1468, jump @23\n      : @1398 [@dyn 734] (gas: 3)\n 33673: a0 = s1 + 0x40e0\n 33677: a1 = 0x40\n 33680: ra = 1470, jump @17\n      : @1399 [@dyn 735] (gas: 26)\n 33687: t0 = s1 + 0x3998\n 33691: a1 = t0 + 0x700\n 33695: a0 = u64 [a1 + 0x48]\n 33698: a3 = u64 [a1 + 0x60]\n 33701: a2 = u64 [a1 + 0x50]\n 33704: a4 = u64 [a1 + 0x58]\n 33707: a5 = a0 + 0x20\n 33710: u64 [s1 + 0x168] = a0\n 33714: a0 = a5 <u a0\n 33717: a1 = a2 + a0\n 33720: u64 [s1 + 0x130] = a2\n 33724: a2 = a1 <u a2\n 33727: a2 = a0 if a0 == 0\n 33730: a2 = a2 + a4\n 33733: u64 [s1 + 0x120] = a4\n 33737: a0 = a2 <u a4\n 33740: u64 [s1 + 0x128] = a3\n 33744: a0 = a0 + a3\n 33747: a3 = a5 | a2\n 33750: a0 = a0 | a1\n 33753: a3 = a3 | a0\n 33756: a3 = a3 >> 0x20\n 33759: a0 = a0 | a2\n 33762: a0 = a0 << 0x20\n 33765: a0 = a0 | a3\n 33768: jump @1401 if a0 == 0\n      : @1400 (gas: 1)\n 33771: jump @848\n      : @1401 (gas: 14)\n 33774: a3 = s1 + 0x200\n 33778: a0 = u64 [0x20028]\n 33783: a1 = u64 [0x20030]\n 33788: a2 = u64 [0x20038]\n 33793: a4 = t0 + 0x700\n 33797: u64 [a4 + 0x40] = a0\n 33800: a0 = u64 [0x20040]\n 33805: u64 [a4 + 0x38] = a1\n 33808: u64 [a4 + 0x30] = a2\n 33811: a1 = s1 + 0x40c0\n 33815: u64 [a4 + 0x28] = a0\n 33818: u64 [a3 + 0x8] = a5\n 33821: a0 = a5\n 33823: ra = 1472, jump @19\n      : @1402 [@dyn 736] (gas: 4)\n 33830: a5 = s1 + 0x100\n 33834: a1 = u64 [a5 + 0x68]\n 33837: a0 = a1 + 0x40\n 33840: t0 = 1474, jump @2560\n      : @1403 [@dyn 737] (gas: 1)\n 33846: jump @1405 if a1 == 0\n      : @1404 (gas: 1)\n 33849: jump @848\n      : @1405 (gas: 11)\n 33852: a3 = s1 + 0x3998\n 33856: u64 [a3 + 1824] = 0\n 33860: a1 = u64 [s1 + 0x1c8]\n 33864: a4 = a3 + 0x700\n 33868: u64 [a4 + 0x8] = a1\n 33871: a1 = u64 [s1 + 0x1d0]\n 33875: u64 [a4 + 0x10] = a1\n 33878: a1 = s1 + 0x40a0\n 33882: a2 = u64 [s1 + 0x160]\n 33886: u64 [a4 + 0x18] = a2\n 33889: ra = 1476, jump @19\n      : @1406 [@dyn 738] (gas: 4)\n 33896: a5 = s1 + 0x100\n 33900: a1 = u64 [a5 + 0x68]\n 33903: a0 = a1 + 0x60\n 33906: t0 = 1478, jump @2560\n      : @1407 [@dyn 739] (gas: 1)\n 33912: jump @1409 if a1 == 0\n      : @1408 (gas: 1)\n 33915: jump @848\n      : @1409 (gas: 16)\n 33918: a2 = 0xffffffff\n 33928: a1 = u64 [s1 + 0x1b8]\n 33932: u64 [s1 + 0x200] = a2\n 33936: a2 = a2 & a1\n 33939: a1 = u64 [s1 + 0x1b0]\n 33943: a1 = a1 & 0xffffffffffffffff\n 33946: a3 = u64 [s1 + 0x1a8]\n 33950: a3 = a3 & 0xffffffffffffffff\n 33953: a4 = s1 + 0x3998\n 33957: u64 [a4 + 1792] = 0\n 33961: a5 = a4 + 0x600\n 33965: u64 [a5 + 0xe8] = a3\n 33969: u64 [a5 + 0xf0] = a1\n 33973: a1 = s1 + 0x4080\n 33977: u64 [a5 + 0xf8] = a2\n 33981: ra = 1480, jump @19\n      : @1410 [@dyn 740] (gas: 4)\n 33988: a5 = s1 + 0x100\n 33992: a1 = u64 [a5 + 0x68]\n 33995: a0 = a1 + 0x80\n 33999: t0 = 1482, jump @2560\n      : @1411 [@dyn 741] (gas: 1)\n 34005: jump @1413 if a1 == 0\n      : @1412 (gas: 1)\n 34008: jump @848\n      : @1413 (gas: 3)\n 34011: t0 = 0x5cc\n 34015: a2 = s1 + 0x3998\n 34019: fallthrough\n      : @1414 [@dyn 742] (gas: 11)\n 34020: a1 = u64 [s1 + 0x188]\n 34024: a4 = a2 + 0x600\n 34028: u64 [a4 + 0xc8] = a1\n 34032: a1 = u64 [s1 + 0x190]\n 34036: u64 [a4 + 0xd0] = a1\n 34040: a1 = u64 [s1 + 0x198]\n 34044: u64 [a4 + 0xd8] = a1\n 34048: a1 = s1 + 0x4060\n 34052: a3 = u64 [s1 + 0x1a0]\n 34056: u64 [a4 + 0xe0] = a3\n 34060: ra = 1486, jump @19\n      : @1415 [@dyn 743] (gas: 4)\n 34067: a5 = s1 + 0x100\n 34071: a1 = u64 [a5 + 0x68]\n 34074: a0 = a1 + 0xa0\n 34078: t0 = 1488, jump @2560\n      : @1416 [@dyn 744] (gas: 1)\n 34084: jump @1418 if a1 == 0\n      : @1417 (gas: 1)\n 34087: jump @848\n      : @1418 (gas: 3)\n 34090: t0 = 0x5d2\n 34094: a2 = s1 + 0x3998\n 34098: fallthrough\n      : @1419 [@dyn 745] (gas: 11)\n 34099: a1 = u64 [s1 + 0x138]\n 34103: a4 = a2 + 0x600\n 34107: u64 [a4 + 0xa8] = a1\n 34111: a1 = u64 [s1 + 0x110]\n 34115: u64 [a4 + 0xb0] = a1\n 34119: a1 = u64 [s1 + 0x108]\n 34123: u64 [a4 + 0xb8] = a1\n 34127: a1 = s1 + 0x4040\n 34131: a3 = u64 [s1 + 0x118]\n 34135: u64 [a4 + 0xc0] = a3\n 34139: ra = 1492, jump @19\n      : @1420 [@dyn 746] (gas: 4)\n 34146: a5 = s1 + 0x100\n 34150: a1 = u64 [a5 + 0x68]\n 34153: a0 = a1 + 0xc0\n 34157: t0 = 1494, jump @2560\n      : @1421 [@dyn 747] (gas: 1)\n 34163: jump @1423 if a1 == 0\n      : @1422 (gas: 1)\n 34166: jump @848\n      : @1423 (gas: 3)\n 34169: t0 = 0x5d8\n 34173: a2 = s1 + 0x3998\n 34177: fallthrough\n      : @1424 [@dyn 748] (gas: 11)\n 34178: a1 = u64 [s1 + 0x1d8]\n 34182: a4 = a2 + 0x600\n 34186: u64 [a4 + 0x88] = a1\n 34190: a1 = u64 [s1 + 0x1e0]\n 34194: u64 [a4 + 0x90] = a1\n 34198: a1 = u64 [s1 + 0x1e8]\n 34202: u64 [a4 + 0x98] = a1\n 34206: a1 = s1 + 0x4020\n 34210: a3 = u64 [s1 + 0x210]\n 34214: u64 [a4 + 0xa0] = a3\n 34218: ra = 1498, jump @19\n      : @1425 [@dyn 749] (gas: 13)\n 34225: a4 = s1 + 0x100\n 34229: a0 = u64 [a4 + 0x68]\n 34232: a3 = u64 [a4 + 0x20]\n 34235: a0 = a0 | a3\n 34238: a1 = u64 [a4 + 0x30]\n 34241: a2 = u64 [a4 + 0x28]\n 34244: a1 = a1 | a2\n 34247: a0 = a0 | a1\n 34250: a0 = a0 >> 0x20\n 34253: a1 = a1 | a3\n 34256: a1 = a1 << 0x20\n 34259: a0 = a0 | a1\n 34262: jump @1427 if a0 == 0\n      : @1426 (gas: 1)\n 34265: jump @848\n      : @1427 (gas: 3)\n 34268: t0 = 0x5dc\n 34272: a2 = s1 + 0x3998\n 34276: fallthrough\n      : @1428 [@dyn 750] (gas: 7)\n 34277: u64 [a2 + 1664] = 0\n 34281: u64 [a2 + 1656] = 0\n 34285: u64 [a2 + 1648] = 0\n 34289: a1 = s1 + 0x4000\n 34293: u64 [a2 + 1640] = 0xc0\n 34299: a0 = u64 [s1 + 0x168]\n 34303: ra = 1502, jump @19\n      : @1429 [@dyn 751] (gas: 18)\n 34310: a1 = s1 + 0x3998\n 34314: u64 [a1 + 1600] = 0\n 34318: u64 [a1 + 1592] = 0\n 34322: u64 [a1 + 1584] = 0\n 34326: a2 = a1 + 0x600\n 34330: u64 [a2 + 40] = 0xe0\n 34335: a0 = u64 [s1 + 0x128]\n 34339: u64 [a2 + 0x60] = a0\n 34342: a0 = u64 [s1 + 0x120]\n 34346: u64 [a2 + 0x58] = a0\n 34349: a0 = u64 [s1 + 0x130]\n 34353: u64 [a2 + 0x50] = a0\n 34356: a3 = a1\n 34358: a0 = s1 + 0x3fe0\n 34362: a1 = s1 + 0x3fc0\n 34366: a2 = u64 [s1 + 0x168]\n 34370: u64 [a3 + 0x648] = a2\n 34374: ra = 1504, jump @1919\n      : @1430 [@dyn 752] (gas: 3)\n 34380: a0 = s1 + 0x3fa0\n 34384: a1 = u64 [s1 + 0x168]\n 34388: ra = 1506, jump @17\n      : @1431 [@dyn 753] (gas: 7)\n 34395: a3 = s1 + 0x3998\n 34399: a5 = a3 + 0x600\n 34403: a0 = u64 [a5 + 0x20]\n 34406: a1 = u64 [a5 + 0x18]\n 34409: a2 = u64 [a5 + 0x10]\n 34412: a4 = u64 [a5 + 0x8]\n 34415: t0 = 1508, jump @2564\n      : @1432 [@dyn 754] (gas: 1)\n 34421: jump @1434 if a0 == 0\n      : @1433 (gas: 1)\n 34424: jump @848\n      : @1434 (gas: 5)\n 34427: a3 = a4\n 34429: a0 = u64 [s1 + 0x208]\n 34433: a1 = a4\n 34435: u64 [s1 + 0x210] = a3\n 34439: ra = 1510, jump @32\n      : @1435 [@dyn 755] (gas: 1)\n 34446: t0 = 1512, jump @2650\n      : @1436 [@dyn 756] (gas: 13)\n 34453: ecalli 10 // 'hash_keccak_256'\n 34455: a1 = u64 [s1 + 0x208]\n 34459: a0 = u64 [a1 + 0x18]\n 34462: u64 [s1 + 0x1e0] = a0\n 34466: a0 = u64 [a1 + 0x10]\n 34469: u64 [s1 + 0x1d8] = a0\n 34473: a0 = u64 [a1 + 0x8]\n 34476: u64 [s1 + 0x168] = a0\n 34480: a0 = u64 [a1]\n 34482: u64 [s1 + 0x138] = a0\n 34486: a0 = s1 + 0x3f80\n 34490: a1 = 0x40\n 34493: ra = 1514, jump @17\n      : @1437 [@dyn 757] (gas: 27)\n 34500: a0 = s1 + 0x3998\n 34504: a3 = a0 + 0x500\n 34508: a1 = u64 [a3 + 0xe8]\n 34512: a4 = u64 [a0 + 0x600]\n 34516: a2 = u64 [a3 + 0xf0]\n 34520: a5 = u64 [a3 + 0xf8]\n 34524: a3 = a1 + 0x20\n 34527: u64 [s1 + 0x210] = a1\n 34531: a0 = a3 <u a1\n 34534: a1 = a2 + a0\n 34537: u64 [s1 + 0x208] = a2\n 34541: a2 = a1 <u a2\n 34544: a2 = a0 if a0 == 0\n 34547: a2 = a2 + a5\n 34550: u64 [s1 + 0x1f0] = a5\n 34554: a0 = a2 <u a5\n 34557: u64 [s1 + 0x1f8] = a4\n 34561: a0 = a0 + a4\n 34564: u64 [s1 + 0x1e8] = a3\n 34568: a3 = a3 | a2\n 34571: a0 = a0 | a1\n 34574: a3 = a3 | a0\n 34577: a3 = a3 >> 0x20\n 34580: a0 = a0 | a2\n 34583: a0 = a0 << 0x20\n 34586: a0 = a0 | a3\n 34589: jump @1439 if a0 == 0\n      : @1438 (gas: 1)\n 34592: jump @848\n      : @1439 (gas: 3)\n 34595: t0 = 0x5ec\n 34599: a2 = s1 + 0x3998\n 34603: fallthrough\n      : @1440 [@dyn 758] (gas: 8)\n 34604: u64 [a2 + 1496] = 0\n 34608: u64 [a2 + 1488] = 0\n 34612: u64 [a2 + 1480] = 0\n 34616: a0 = 0x1901000000000000\n 34626: a1 = s1 + 0x3f60\n 34630: u64 [a2 + 0x5e0] = a0\n 34634: a0 = u64 [s1 + 0x1e8]\n 34638: ra = 1518, jump @19\n      : @1441 [@dyn 759] (gas: 12)\n 34645: a1 = u64 [s1 + 0x210]\n 34649: a0 = a1 + 0x22\n 34652: a1 = a0 <u a1\n 34655: a3 = u64 [s1 + 0x208]\n 34659: a2 = a3 + a1\n 34662: a3 = a2 <u a3\n 34665: a3 = a1 if a1 == 0\n 34668: a1 = u64 [s1 + 0x1f0]\n 34672: a3 = a3 + a1\n 34675: a1 = a3 <u a1\n 34678: a4 = u64 [s1 + 0x1f8]\n 34682: t0 = 1520, jump @2562\n      : @1442 [@dyn 760] (gas: 1)\n 34688: jump @1444 if a1 == 0\n      : @1443 (gas: 1)\n 34691: jump @848\n      : @1444 (gas: 3)\n 34694: t0 = 0x5f2\n 34698: a2 = s1 + 0x3998\n 34702: fallthrough\n      : @1445 [@dyn 761] (gas: 11)\n 34703: a1 = u64 [s1 + 0x140]\n 34707: a4 = a2 + 0x500\n 34711: u64 [a4 + 0xa8] = a1\n 34715: a1 = u64 [s1 + 0x148]\n 34719: u64 [a4 + 0xb0] = a1\n 34723: a1 = u64 [s1 + 0x150]\n 34727: u64 [a4 + 0xb8] = a1\n 34731: a1 = s1 + 0x3f40\n 34735: a3 = u64 [s1 + 0x158]\n 34739: u64 [a4 + 0xc0] = a3\n 34743: ra = 1524, jump @19\n      : @1446 [@dyn 762] (gas: 12)\n 34750: a1 = u64 [s1 + 0x210]\n 34754: a0 = a1 + 0x42\n 34757: a1 = a0 <u a1\n 34760: a3 = u64 [s1 + 0x208]\n 34764: a2 = a3 + a1\n 34767: a3 = a2 <u a3\n 34770: a3 = a1 if a1 == 0\n 34773: a1 = u64 [s1 + 0x1f0]\n 34777: a3 = a3 + a1\n 34780: a1 = a3 <u a1\n 34783: a4 = u64 [s1 + 0x1f8]\n 34787: t0 = 1526, jump @2562\n      : @1447 [@dyn 763] (gas: 1)\n 34793: jump @1449 if a1 == 0\n      : @1448 (gas: 1)\n 34796: jump @848\n      : @1449 (gas: 16)\n 34799: a1 = u64 [s1 + 0x138]\n 34803: a2 = reverse a1\n 34805: a1 = u64 [s1 + 0x168]\n 34809: a1 = reverse a1\n 34811: a3 = u64 [s1 + 0x1d8]\n 34815: a3 = reverse a3\n 34817: a4 = u64 [s1 + 0x1e0]\n 34821: a4 = reverse a4\n 34823: a5 = s1 + 0x3998\n 34827: u64 [a5 + 0x588] = a4\n 34831: a4 = a5 + 0x500\n 34835: u64 [a4 + 0x90] = a3\n 34839: u64 [a4 + 0x98] = a1\n 34843: a1 = s1 + 0x3f20\n 34847: u64 [a4 + 0xa0] = a2\n 34851: ra = 1528, jump @19\n      : @1450 [@dyn 764] (gas: 12)\n 34858: a0 = u64 [s1 + 0x210]\n 34862: a3 = u64 [s1 + 0x1f0]\n 34866: a0 = a0 | a3\n 34869: a1 = u64 [s1 + 0x208]\n 34873: a2 = u64 [s1 + 0x1f8]\n 34877: a1 = a1 | a2\n 34880: a0 = a0 | a1\n 34883: a0 = a0 >> 0x20\n 34886: a1 = a1 | a3\n 34889: a1 = a1 << 0x20\n 34892: a0 = a0 | a1\n 34895: jump @1452 if a0 == 0\n      : @1451 (gas: 1)\n 34898: jump @848\n      : @1452 (gas: 3)\n 34901: t0 = 0x5fa\n 34905: a2 = s1 + 0x3998\n 34909: fallthrough\n      : @1453 [@dyn 765] (gas: 7)\n 34910: u64 [a2 + 1408] = 0\n 34914: u64 [a2 + 1400] = 0\n 34918: u64 [a2 + 1392] = 0\n 34922: a1 = s1 + 0x3f00\n 34926: u64 [a2 + 1384] = 0x42\n 34931: a0 = u64 [s1 + 0x210]\n 34935: ra = 1532, jump @19\n      : @1454 [@dyn 766] (gas: 18)\n 34942: a1 = s1 + 0x3998\n 34946: u64 [a1 + 1344] = 0\n 34950: u64 [a1 + 1336] = 0\n 34954: u64 [a1 + 1328] = 0\n 34958: a2 = a1 + 0x500\n 34962: u64 [a2 + 40] = 0x62\n 34966: a0 = u64 [s1 + 0x1f8]\n 34970: u64 [a2 + 0x60] = a0\n 34973: a0 = u64 [s1 + 0x1f0]\n 34977: u64 [a2 + 0x58] = a0\n 34980: a0 = u64 [s1 + 0x208]\n 34984: u64 [a2 + 0x50] = a0\n 34987: a3 = a1\n 34989: a0 = s1 + 0x3ee0\n 34993: a1 = s1 + 0x3ec0\n 34997: a2 = u64 [s1 + 0x210]\n 35001: u64 [a3 + 0x548] = a2\n 35005: ra = 1534, jump @1919\n      : @1455 [@dyn 767] (gas: 3)\n 35011: a0 = s1 + 0x3ea0\n 35015: a1 = u64 [s1 + 0x210]\n 35019: ra = 1536, jump @17\n      : @1456 [@dyn 768] (gas: 7)\n 35026: a3 = s1 + 0x3998\n 35030: a5 = a3 + 0x500\n 35034: a0 = u64 [a5 + 0x20]\n 35037: a1 = u64 [a5 + 0x18]\n 35040: a2 = u64 [a5 + 0x10]\n 35043: a4 = u64 [a5 + 0x8]\n 35046: t0 = 1538, jump @2564\n      : @1457 [@dyn 769] (gas: 1)\n 35052: jump @1459 if a0 == 0\n      : @1458 (gas: 1)\n 35055: jump @848\n      : @1459 (gas: 5)\n 35058: a3 = a4\n 35060: a0 = u64 [s1 + 0x1e8]\n 35064: a1 = a4\n 35066: u64 [s1 + 0x210] = a3\n 35070: ra = 1540, jump @32\n      : @1460 [@dyn 770] (gas: 1)\n 35077: t0 = 1542, jump @2650\n      : @1461 [@dyn 771] (gas: 13)\n 35084: ecalli 10 // 'hash_keccak_256'\n 35086: a1 = u64 [s1 + 0x208]\n 35090: a0 = u64 [a1 + 0x18]\n 35093: u64 [s1 + 0x168] = a0\n 35097: a0 = u64 [a1 + 0x10]\n 35100: u64 [s1 + 0x1d8] = a0\n 35104: a0 = u64 [a1 + 0x8]\n 35107: u64 [s1 + 0x1e0] = a0\n 35111: a0 = u64 [a1]\n 35113: u64 [s1 + 0x1e8] = a0\n 35117: a0 = s1 + 0x3e80\n 35121: a1 = 0x40\n 35124: ra = 1544, jump @17\n      : @1462 [@dyn 772] (gas: 18)\n 35131: a0 = s1 + 0x3998\n 35135: a3 = u64 [a0 + 0x500]\n 35139: a5 = a0 + 0x400\n 35143: a4 = u64 [a5 + 0xf8]\n 35147: a2 = u64 [a5 + 0xf0]\n 35151: a1 = u64 [a5 + 0xe8]\n 35155: u64 [s1 + 0x208] = a2\n 35159: u64 [s1 + 0x1f8] = a3\n 35163: a0 = a2 | a3\n 35166: u64 [s1 + 0x210] = a1\n 35170: a1 = a1 | a4\n 35173: a1 = a1 | a0\n 35176: a1 = a1 >> 0x20\n 35179: u64 [s1 + 0x1f0] = a4\n 35183: a0 = a0 | a4\n 35186: a0 = a0 << 0x20\n 35189: a0 = a0 | a1\n 35192: jump @1464 if a0 == 0\n      : @1463 (gas: 1)\n 35195: jump @848\n      : @1464 (gas: 17)\n 35198: a0 = u64 [s1 + 0x168]\n 35202: a0 = reverse a0\n 35204: a1 = u64 [s1 + 0x1d8]\n 35208: a1 = reverse a1\n 35210: a2 = u64 [s1 + 0x1e0]\n 35214: a2 = reverse a2\n 35216: a3 = u64 [s1 + 0x1e8]\n 35220: a3 = reverse a3\n 35222: a4 = s1 + 0x3998\n 35226: a5 = a4 + 0x400\n 35230: u64 [a5 + 0xe0] = a3\n 35234: u64 [a5 + 0xd8] = a2\n 35238: u64 [a5 + 0xd0] = a1\n 35242: a1 = s1 + 0x3e60\n 35246: u64 [a5 + 0xc8] = a0\n 35250: a0 = u64 [s1 + 0x210]\n 35254: ra = 1546, jump @19\n      : @1465 [@dyn 773] (gas: 14)\n 35261: a3 = s1 + 0x100\n 35265: a0 = u64 [a3 + 0xf8]\n 35269: a2 = u64 [a3 + 0xf0]\n 35273: a2 = a2 | a0\n 35276: a0 = 0x100000000\n 35286: u64 [a3 + 0xf0] = a0\n 35290: a0 = 0xffffffe0\n 35300: a1 = u64 [s1 + 0x210]\n 35304: a0 = a1 <u a0\n 35307: a1 = u64 [s1 + 0x208]\n 35311: a0 = 0 if a1 != 0\n 35313: u64 [a3 + 0xf8] = a2\n 35317: a0 = 0 if a2 != 0\n 35319: jump @1467 if a0 != 0\n      : @1466 (gas: 1)\n 35322: jump @848\n      : @1467 (gas: 10)\n 35325: a1 = u8 [s1 + 0x170]\n 35329: a0 = u64 [s1 + 0x210]\n 35333: i32 a0 = a0 + 0x20\n 35336: a2 = s1 + 0x3998\n 35340: u64 [a2 + 1216] = 0\n 35344: u64 [a2 + 1208] = 0\n 35348: u64 [a2 + 0x4a8] = a1\n 35352: a1 = s1 + 0x3e40\n 35356: u64 [a2 + 1200] = 0\n 35360: ra = 1548, jump @19\n      : @1468 [@dyn 774] (gas: 6)\n 35367: a0 = s1 + 0x5000\n 35371: i32 a0 = a0 + 0x740\n 35375: a1 = 0xa4\n 35379: ra = 0x60e\n 35383: ecalli 3 // 'call_data_load'\n 35385: fallthrough\n      : @1469 [@dyn 775] (gas: 3)\n 35386: a0 = u64 [s1 + 0x1f0]\n 35390: a0 = a0 + 0xffffffffffffffc0\n 35393: t0 = 1552, jump @2641\n      : @1470 [@dyn 776] (gas: 1)\n 35400: jump @1472 if a0 != 0\n      : @1471 (gas: 1)\n 35403: jump @848\n      : @1472 (gas: 16)\n 35406: a0 = s1 + 0x5198\n 35410: a5 = a0 + 0x500\n 35414: a2 = u64 [a5 + 0xa8]\n 35418: a1 = u64 [a5 + 0xb0]\n 35422: a3 = u64 [a5 + 0xb8]\n 35426: a4 = u64 [a5 + 0xc0]\n 35430: a0 = u64 [s1 + 0x210]\n 35434: i32 a0 = a0 + 0x40\n 35437: a5 = s1 + 0x3998\n 35441: u64 [a5 + 0x4a0] = a4\n 35445: a4 = a5 + 0x400\n 35449: u64 [a4 + 0x98] = a3\n 35453: u64 [a4 + 0x90] = a1\n 35457: a1 = s1 + 0x3e20\n 35461: u64 [a4 + 0x88] = a2\n 35465: ra = 1554, jump @19\n      : @1473 [@dyn 777] (gas: 8)\n 35472: a0 = s1 + 0x5000\n 35476: i32 a0 = a0 + 0x760\n 35480: a1 = 0xc4\n 35484: ra = 0x614\n 35488: ecalli 3 // 'call_data_load'\n 35490: a0 = 0xffffffa0\n 35500: t0 = 0x616\n 35504: jump @2641\n      : @1474 [@dyn 778] (gas: 2)\n 35508: a0 = 0xffffffa0\n 35518: t0 = 1558, jump @2641\n      : @1475 [@dyn 779] (gas: 1)\n 35525: jump @1477 if a0 != 0\n      : @1476 (gas: 1)\n 35528: jump @848\n      : @1477 (gas: 16)\n 35531: a0 = s1 + 0x5198\n 35535: a5 = a0 + 0x500\n 35539: a2 = u64 [a5 + 0xc8]\n 35543: a1 = u64 [a5 + 0xd0]\n 35547: a3 = u64 [a5 + 0xd8]\n 35551: a4 = u64 [a5 + 0xe0]\n 35555: a0 = u64 [s1 + 0x210]\n 35559: i32 a0 = a0 + 0x60\n 35562: a5 = s1 + 0x3998\n 35566: u64 [a5 + 0x480] = a4\n 35570: a4 = a5 + 0x400\n 35574: u64 [a4 + 0x78] = a3\n 35577: u64 [a4 + 0x70] = a1\n 35580: a1 = s1 + 0x3e00\n 35584: u64 [a4 + 0x68] = a2\n 35587: ra = 1560, jump @19\n      : @1478 [@dyn 780] (gas: 1)\n 35594: t0 = 1562, jump @2615\n      : @1479 [@dyn 781] (gas: 1)\n 35600: jump @1481 if a4 == 0\n      : @1480 (gas: 1)\n 35603: jump @848\n      : @1481 (gas: 8)\n 35606: a4 = s1 + 0x3998\n 35610: a5 = a4 + 0x400\n 35614: u64 [a5 + 0x48] = a0\n 35617: u64 [a5 + 0x50] = a3\n 35620: u64 [a5 + 0x58] = a1\n 35623: a1 = s1 + 0x3de0\n 35627: u64 [a5 + 0x60] = a2\n 35630: ra = 1564, jump @19\n      : @1482 [@dyn 782] (gas: 2)\n 35637: ecalli 12 // 'ref_time_left'\n 35639: fallthrough\n      : @1483 (gas: 24)\n 35640: a2 = u64 [s1 + 0x218]\n 35644: a0 = u64 [a2 + 0x10]\n 35647: a4 = 0x30290\n 35652: a5 = u64 [a2]\n 35654: a1 = u64 [a2 + 0x18]\n 35657: a2 = u64 [a2 + 0x8]\n 35660: u64 [0x30298] = 0\n 35665: u64 [0x30290] = 0\n 35670: u64 [s1 + 0x208] = a4\n 35674: u32 [0x302a0] = 0x1000000\n 35683: a3 = s1 + 0x5198\n 35687: u64 [a3 + 1536] = 0\n 35691: u64 [a3 + 1528] = 0\n 35695: u64 [a3 + 1520] = 0\n 35699: a1 = a1 | a2\n 35702: u64 [s1 + 0x1f8] = a5\n 35706: a2 = a5 | a0\n 35709: a2 = a2 | a1\n 35712: a2 = a2 >> 0x20\n 35715: a0 = a0 | a1\n 35718: a0 = a0 << 0x20\n 35721: a0 = a0 | a2\n 35724: u64 [a3 + 1512] = 0\n 35728: jump @1485 if a0 == 0\n      : @1484 (gas: 1)\n 35731: jump @848\n      : @1485 (gas: 3)\n 35734: a1 = 0x80\n 35738: a0 = u64 [s1 + 0x210]\n 35742: ra = 1566, jump @32\n      : @1486 [@dyn 783] (gas: 4)\n 35749: u64 [s1 + 0x210] = a0\n 35753: a1 = 0x20\n 35756: a0 = u64 [s1 + 0x1f8]\n 35760: ra = 1568, jump @32\n      : @1487 [@dyn 784] (gas: 32)\n 35767: a1 = s1 + 0x5198\n 35771: u32 [a1 + 1544] = 0x20\n 35776: u64 [a1 + 1600] = 0\n 35780: u64 [a1 + 1592] = 0\n 35784: u64 [a1 + 1584] = 0\n 35788: u64 [a1 + 1576] = 0\n 35792: a1 = u64 [s1 + 0x208]\n 35796: a1 = a1 << 0x20\n 35799: a1 = a1 >> 0x20\n 35802: a2 = 0x1800000000\n 35812: t0 = a1 | a2\n 35815: a1 = s1 + 0x5780\n 35819: a1 = a1 << 0x20\n 35822: a1 = a1 >> 0x20\n 35825: a2 = s1 + 0x57c0\n 35829: a2 = a2 << 0x20\n 35832: a3 = a2 | a1\n 35835: a1 = u64 [s1 + 0x210]\n 35839: a1 = a1 << 0x20\n 35842: a1 = a1 >> 0x20\n 35845: a2 = 0x8000000000\n 35855: a4 = a1 | a2\n 35858: a0 = a0 << 0x20\n 35861: a0 = a0 >> 0x20\n 35864: a1 = s1 + 0x57a0\n 35868: a1 = a1 << 0x20\n 35871: a5 = a1 | a0\n 35874: a1 = 0xffffffffffffffff\n 35877: a2 = 0xffffffffffffffff\n 35880: a0 = t0\n 35882: ecalli 1 // 'call'\n 35884: fallthrough\n      : @1488 (gas: 1)\n 35885: jump @1490 if a0 == 0\n      : @1489 (gas: 1)\n 35888: jump @1858\n      : @1490 (gas: 13)\n 35891: a1 = u64 [s1 + 0x218]\n 35895: a0 = u64 [a1 + 0x10]\n 35898: a2 = u64 [a1 + 0x18]\n 35901: a3 = u64 [a1 + 0x8]\n 35904: a1 = u64 [a1]\n 35906: a2 = a2 | a3\n 35909: a3 = a1 | a0\n 35912: a3 = a3 | a2\n 35915: a3 = a3 >> 0x20\n 35918: a0 = a0 | a2\n 35921: a0 = a0 << 0x20\n 35924: a0 = a0 | a3\n 35927: jump @1492 if a0 == 0\n      : @1491 (gas: 1)\n 35930: jump @848\n      : @1492 (gas: 2)\n 35933: a0 = s1 + 0x3da0\n 35937: ra = 1570, jump @17\n      : @1493 [@dyn 785] (gas: 3)\n 35944: t0 = 0x624\n 35948: a2 = s1 + 0x3998\n 35952: fallthrough\n      : @1494 [@dyn 786] (gas: 11)\n 35953: a3 = a2 + 0x400\n 35957: a0 = u64 [a3 + 0x10]\n 35960: a1 = u64 [a3 + 0x18]\n 35963: a2 = u64 [a3 + 0x8]\n 35966: a0 = a0 & 0xffffffffffffffff\n 35969: a4 = u64 [s1 + 0x200]\n 35973: a1 = a1 & a4\n 35976: a2 = a2 & 0xffffffffffffffff\n 35979: a3 = a2 | a1\n 35982: a3 = a3 | a0\n 35985: jump @1496 if a3 != 0\n      : @1495 (gas: 1)\n 35988: jump @1874\n      : @1496 (gas: 10)\n 35991: a4 = s1 + 0x100\n 35995: a3 = u64 [a4 + 0xc8]\n 35999: a2 = a2 ^ a3\n 36002: a3 = u64 [a4 + 0x60]\n 36005: a1 = a1 ^ a3\n 36008: a3 = u64 [a4 + 0xd0]\n 36012: a0 = a0 ^ a3\n 36015: a0 = a0 | a2\n 36018: a0 = a0 | a1\n 36021: jump @1498 if a0 == 0\n      : @1497 (gas: 1)\n 36024: jump @1874\n      : @1498 (gas: 30)\n 36027: a3 = s1 + 0x3998\n 36031: a5 = s1 + 0x100\n 36035: a0 = u64 [a5 + 0x88]\n 36039: u64 [a3 + 0x308] = a0\n 36043: a0 = u64 [a5 + 0xa8]\n 36047: u64 [a3 + 0x328] = a0\n 36051: a0 = u64 [a5 + 0xc8]\n 36055: u64 [a3 + 0x348] = a0\n 36059: a0 = u64 [a5 + 0x90]\n 36063: u64 [a3 + 0x310] = a0\n 36067: a0 = u64 [a5 + 0xb0]\n 36071: u64 [a3 + 0x330] = a0\n 36075: a0 = u64 [a5 + 0xd0]\n 36079: u64 [a3 + 0x350] = a0\n 36083: a0 = u64 [a5 + 0x98]\n 36087: u64 [a3 + 0x318] = a0\n 36091: a0 = u64 [a5 + 0xb8]\n 36095: u64 [a3 + 0x338] = a0\n 36099: a0 = u64 [a5 + 0xc0]\n 36103: u64 [a3 + 0x358] = a0\n 36107: a0 = u64 [a5 + 0xa0]\n 36111: u64 [a3 + 0x320] = a0\n 36115: a0 = u64 [a5 + 0x78]\n 36118: u64 [a3 + 0x340] = a0\n 36122: a0 = s1 + 0x3ce0\n 36126: a1 = s1 + 0x3cc0\n 36130: a2 = s1 + 0x3ca0\n 36134: a4 = u64 [a5 + 0x80]\n 36138: u64 [a3 + 0x360] = a4\n 36142: ra = 1574, jump @2297\n      : @1499 [@dyn 787] (gas: 13)\n 36148: a3 = u64 [s1 + 0x218]\n 36152: a0 = u64 [a3 + 0x10]\n 36155: a1 = u64 [a3 + 0x18]\n 36158: a2 = u64 [a3 + 0x8]\n 36161: a4 = u64 [a3]\n 36163: a1 = a1 | a2\n 36166: a2 = a4 | a0\n 36169: a2 = a2 | a1\n 36172: a2 = a2 >> 0x20\n 36175: a0 = a0 | a1\n 36178: a0 = a0 << 0x20\n 36181: a0 = a0 | a2\n 36184: jump @1501 if a0 == 0\n      : @1500 (gas: 1)\n 36187: jump @848\n      : @1501 (gas: 6)\n 36190: a3 = a4\n 36192: a0 = a4\n 36194: u64 [s1 + 0x218] = a3\n 36198: a1 = a3\n 36200: ra = 0x260\n 36204: jump @32\n      : @1502 (gas: 3)\n 36208: a0 = s1 + 0x23e0\n 36212: a1 = 0x40\n 36215: ra = 1576, jump @17\n      : @1503 [@dyn 788] (gas: 3)\n 36222: a0 = s1 + 0x2198\n 36226: a2 = a0 + 0x200\n 36230: t0 = 1578, jump @2569\n      : @1504 [@dyn 789] (gas: 4)\n 36236: ra = 0x62c\n 36240: ecalli 14 // 'return_data_size'\n 36242: t0 = 0x62e\n 36246: jump @2557\n      : @1505 [@dyn 790] (gas: 1)\n 36249: t0 = 1582, jump @2557\n      : @1506 [@dyn 791] (gas: 1)\n 36255: jump @1508 if a2 == 0\n      : @1507 (gas: 1)\n 36258: jump @848\n      : @1508 (gas: 5)\n 36261: a3 = a0\n 36263: a5 = s1 + 0x200\n 36267: a4 = u64 [a5 + 0x8]\n 36270: a0 = u64 [a5 + 0x10]\n 36273: t0 = 1584, jump @2568\n      : @1509 [@dyn 792] (gas: 1)\n 36279: jump @1511 if a0 == 0\n      : @1510 (gas: 1)\n 36282: jump @848\n      : @1511 (gas: 2)\n 36285: a0 = a3 >> 0x20\n 36288: jump @1513 if a0 == 0\n      : @1512 (gas: 1)\n 36291: jump @848\n      : @1513 (gas: 1)\n 36294: t0 = 1586, jump @2599\n      : @1514 [@dyn 793] (gas: 1)\n 36300: ra = 1588, jump @32\n      : @1515 [@dyn 794] (gas: 11)\n 36307: a1 = s1 + 0x4998\n 36311: a2 = u64 [s1 + 0x1f0]\n 36315: u32 [a1 + 0x428] = a2\n 36319: i32 a0 = a0 + 0\n 36321: a1 = s1 + 0x5000\n 36325: i32 a1 = a1 + 0xfffffffffffffdc0\n 36329: a2 = u64 [s1 + 0x208]\n 36333: ecalli 13 // 'return_data_copy'\n 36335: a0 = s1 + 0x4998\n 36339: a0 = i32 [a0 + 0x428]\n 36343: jump @1291\n      : @1516 (gas: 3)\n 36346: a0 = s1 + 0x43e0\n 36350: a1 = 0x40\n 36353: ra = 1590, jump @17\n      : @1517 [@dyn 795] (gas: 3)\n 36360: a0 = s1 + 0x4198\n 36364: a2 = a0 + 0x200\n 36368: t0 = 1592, jump @2569\n      : @1518 [@dyn 796] (gas: 4)\n 36374: ra = 0x63a\n 36378: ecalli 14 // 'return_data_size'\n 36380: t0 = 0x63c\n 36384: jump @2557\n      : @1519 [@dyn 797] (gas: 1)\n 36387: t0 = 1596, jump @2557\n      : @1520 [@dyn 798] (gas: 1)\n 36393: jump @1522 if a2 == 0\n      : @1521 (gas: 1)\n 36396: jump @848\n      : @1522 (gas: 14)\n 36399: a4 = a0\n 36401: a5 = s1 + 0x200\n 36405: a3 = u64 [a5 + 0x8]\n 36408: a0 = u64 [a5 + 0x10]\n 36411: a0 = a0 | a3\n 36414: a2 = u64 [a5]\n 36416: a5 = u64 [s1 + 0x1f8]\n 36420: a2 = a2 | a5\n 36423: a0 = a0 | a2\n 36426: a0 = a0 >> 0x20\n 36429: a2 = a2 | a3\n 36432: a2 = a2 << 0x20\n 36435: a0 = a0 | a2\n 36438: jump @1524 if a0 == 0\n      : @1523 (gas: 1)\n 36441: jump @848\n      : @1524 (gas: 2)\n 36444: a0 = a4 >> 0x20\n 36447: jump @1526 if a0 == 0\n      : @1525 (gas: 1)\n 36450: jump @848\n      : @1526 (gas: 8)\n 36453: i32 a1 = a1 + 0\n 36455: u64 [s1 + 0x208] = a1\n 36459: a1 = a4\n 36461: u64 [s1 + 0x1f0] = a4\n 36465: i32 a0 = a4 + 0\n 36467: u64 [s1 + 0x218] = a0\n 36471: a0 = u64 [s1 + 0x210]\n 36475: ra = 1598, jump @32\n      : @1527 [@dyn 799] (gas: 11)\n 36482: a1 = s1 + 0x5998\n 36486: a2 = u64 [s1 + 0x1f0]\n 36490: u32 [a1 + 0x8] = a2\n 36493: i32 a0 = a0 + 0\n 36495: a1 = s1 + 0x6000\n 36499: i32 a1 = a1 + 0xfffffffffffff9a0\n 36503: a2 = u64 [s1 + 0x208]\n 36507: ecalli 13 // 'return_data_copy'\n 36509: a0 = s1 + 0x5998\n 36513: a0 = i32 [a0 + 0x8]\n 36516: jump @1376\n      : @1528 (gas: 3)\n 36519: a0 = s1 + 0x3820\n 36523: a1 = 0x40\n 36526: ra = 1600, jump @17\n      : @1529 [@dyn 800] (gas: 14)\n 36533: a0 = s1 + 0x3198\n 36537: a2 = a0 + 0x600\n 36541: a1 = u64 [a2 + 0xa0]\n 36545: u64 [s1 + 0x200] = a1\n 36549: a1 = u64 [a2 + 0x98]\n 36553: u64 [s1 + 0x208] = a1\n 36557: a1 = u64 [a2 + 0x90]\n 36561: u64 [s1 + 0x1f8] = a1\n 36565: a0 = u64 [a2 + 0x88]\n 36569: u64 [s1 + 0x210] = a0\n 36573: ra = 0x642\n 36577: ecalli 14 // 'return_data_size'\n 36579: t0 = 0x644\n 36583: jump @2557\n      : @1530 [@dyn 801] (gas: 1)\n 36586: t0 = 1604, jump @2557\n      : @1531 [@dyn 802] (gas: 1)\n 36592: jump @1533 if a2 == 0\n      : @1532 (gas: 1)\n 36595: jump @848\n      : @1533 (gas: 5)\n 36598: a3 = a0\n 36600: a5 = s1 + 0x200\n 36604: a4 = u64 [a5 + 0x8]\n 36607: a0 = u64 [a5 + 0x10]\n 36610: t0 = 1606, jump @2568\n      : @1534 [@dyn 803] (gas: 1)\n 36616: jump @1536 if a0 == 0\n      : @1535 (gas: 1)\n 36619: jump @848\n      : @1536 (gas: 2)\n 36622: a0 = a3 >> 0x20\n 36625: jump @1538 if a0 == 0\n      : @1537 (gas: 1)\n 36628: jump @848\n      : @1538 (gas: 1)\n 36631: t0 = 1608, jump @2599\n      : @1539 [@dyn 804] (gas: 1)\n 36637: ra = 1610, jump @32\n      : @1540 [@dyn 805] (gas: 11)\n 36644: a1 = s1 + 0x5198\n 36648: a2 = u64 [s1 + 0x1f0]\n 36652: u32 [a1 + 0x3c8] = a2\n 36656: i32 a0 = a0 + 0\n 36658: a1 = s1 + 0x5000\n 36662: i32 a1 = a1 + 0x560\n 36666: a2 = u64 [s1 + 0x208]\n 36670: ecalli 13 // 'return_data_copy'\n 36672: a0 = s1 + 0x5198\n 36676: a0 = i32 [a0 + 0x3c8]\n 36680: jump @1376\n      : @1541 (gas: 3)\n 36683: a0 = s1 + 0x3260\n 36687: a1 = 0x40\n 36690: ra = 1612, jump @17\n      : @1542 [@dyn 806] (gas: 13)\n 36697: a0 = s1 + 0x3198\n 36701: a1 = u64 [a0 + 0xe0]\n 36705: u64 [s1 + 0x200] = a1\n 36709: a1 = u64 [a0 + 0xd8]\n 36713: u64 [s1 + 0x208] = a1\n 36717: a1 = u64 [a0 + 0xd0]\n 36721: u64 [s1 + 0x1f8] = a1\n 36725: a0 = u64 [a0 + 0xc8]\n 36729: u64 [s1 + 0x210] = a0\n 36733: ra = 0x64e\n 36737: ecalli 14 // 'return_data_size'\n 36739: t0 = 0x650\n 36743: jump @2557\n      : @1543 [@dyn 807] (gas: 1)\n 36746: t0 = 1616, jump @2557\n      : @1544 [@dyn 808] (gas: 1)\n 36752: jump @1546 if a2 == 0\n      : @1545 (gas: 1)\n 36755: jump @848\n      : @1546 (gas: 5)\n 36758: a3 = a0\n 36760: a5 = s1 + 0x200\n 36764: a4 = u64 [a5 + 0x8]\n 36767: a0 = u64 [a5 + 0x10]\n 36770: t0 = 1618, jump @2568\n      : @1547 [@dyn 809] (gas: 1)\n 36776: jump @1549 if a0 == 0\n      : @1548 (gas: 1)\n 36779: jump @848\n      : @1549 (gas: 2)\n 36782: a0 = a3 >> 0x20\n 36785: jump @1551 if a0 == 0\n      : @1550 (gas: 1)\n 36788: jump @848\n      : @1551 (gas: 1)\n 36791: t0 = 1620, jump @2599\n      : @1552 [@dyn 810] (gas: 1)\n 36797: ra = 1622, jump @32\n      : @1553 [@dyn 811] (gas: 11)\n 36804: a1 = s1 + 0x4998\n 36808: a2 = u64 [s1 + 0x1f0]\n 36812: u32 [a1 + 0x768] = a2\n 36816: i32 a0 = a0 + 0\n 36818: a1 = s1 + 0x5000\n 36822: i32 a1 = a1 + 0x100\n 36826: a2 = u64 [s1 + 0x208]\n 36830: ecalli 13 // 'return_data_copy'\n 36832: a0 = s1 + 0x4998\n 36836: a0 = i32 [a0 + 0x768]\n 36840: jump @1376\n      : @1554 (gas: 20)\n 36843: u64 [a3 + 0x48] = a2\n 36846: a0 = u64 [s1 + 0x118]\n 36850: u64 [a3 + 0x68] = a0\n 36853: u64 [a3 + 0x50] = a4\n 36856: a0 = u64 [s1 + 0x120]\n 36860: u64 [a3 + 0x70] = a0\n 36863: u64 [a3 + 0x58] = a5\n 36866: a0 = u64 [s1 + 0x128]\n 36870: u64 [a3 + 0x78] = a0\n 36873: u64 [a3 + 0x60] = t0\n 36876: a0 = s1 + 0x2220\n 36880: a1 = s1 + 0x2200\n 36884: u64 [s1 + 0x218] = a2\n 36888: a2 = s1 + 0x21e0\n 36892: u64 [s1 + 0x208] = a4\n 36896: a4 = u64 [s1 + 0x130]\n 36900: u64 [a3 + 0x80] = a4\n 36904: u64 [s1 + 0x200] = a5\n 36908: u64 [s1 + 0x1f8] = t0\n 36912: ra = 1624, jump @2197\n      : @1555 [@dyn 812] (gas: 19)\n 36918: a5 = s1 + 0x2198\n 36922: a3 = u64 [a5 + 0x88]\n 36926: a0 = u64 [a5 + 0x90]\n 36930: a1 = u64 [a5 + 0x98]\n 36934: a2 = u64 [a5 + 0xa0]\n 36938: u64 [a5 + 0] = 0\n 36940: u64 [a5 + 4294967288] = 0\n 36943: a4 = u64 [s1 + 0x210]\n 36947: u64 [a5 + 0xfffffffffffffff0] = a4\n 36950: a4 = u64 [s1 + 0x1b0]\n 36954: u64 [a5 + 0xffffffffffffffe8] = a4\n 36957: u64 [a5 + 0x20] = a2\n 36960: u64 [a5 + 0x18] = a1\n 36963: u64 [a5 + 0x10] = a0\n 36966: a0 = s1 + 0x21c0\n 36970: a1 = s1 + 0x21a0\n 36974: a2 = s1 + 0x2180\n 36978: u64 [a5 + 0x8] = a3\n 36981: ra = 1626, jump @1990\n      : @1556 [@dyn 813] (gas: 12)\n 36987: a1 = s1 + 0x2198\n 36991: a0 = u64 [a1 + 0x28]\n 36994: u64 [s1 + 0xf0] = a0\n 36998: a0 = u64 [a1 + 0x30]\n 37001: u64 [s1 + 0xe8] = a0\n 37005: a0 = u64 [a1 + 0x38]\n 37008: u64 [s1 + 0xe0] = a0\n 37012: a0 = u64 [a1 + 0x40]\n 37015: u64 [s1 + 0x210] = a0\n 37019: t0 = 0x65c\n 37023: a1 = s1 + 0x1998\n 37027: fallthrough\n      : @1557 [@dyn 814] (gas: 22)\n 37028: a0 = u64 [s1 + 0x1f8]\n 37032: a2 = a1 + 0x700\n 37036: u64 [a2 + 0xa0] = a0\n 37040: a0 = u64 [s1 + 0x200]\n 37044: u64 [a2 + 0x98] = a0\n 37048: a0 = u64 [s1 + 0x208]\n 37052: u64 [a2 + 0x90] = a0\n 37056: a0 = u64 [s1 + 0x218]\n 37060: u64 [a2 + 0x88] = a0\n 37064: a0 = u64 [s1 + 0x110]\n 37068: u64 [a2 + 0xc0] = a0\n 37072: a0 = u64 [s1 + 0x108]\n 37076: u64 [a2 + 0xb8] = a0\n 37080: a0 = u64 [s1 + 0x100]\n 37084: u64 [a2 + 0xb0] = a0\n 37088: a4 = a1\n 37090: a0 = s1 + 0x2160\n 37094: a1 = s1 + 0x2140\n 37098: a2 = s1 + 0x2120\n 37102: a3 = u64 [s1 + 0xf8]\n 37106: u64 [a4 + 0x7a8] = a3\n 37110: ra = 1630, jump @2197\n      : @1558 [@dyn 815] (gas: 20)\n 37116: a5 = s1 + 0x1998\n 37120: a3 = u64 [a5 + 0x7c8]\n 37124: a0 = u64 [a5 + 0x7d0]\n 37128: a1 = u64 [a5 + 0x7d8]\n 37132: a2 = u64 [a5 + 0x7e0]\n 37136: u64 [a5 + 1856] = 0\n 37140: u64 [a5 + 1848] = 0\n 37144: a4 = u64 [s1 + 0xd8]\n 37148: u64 [a5 + 0x730] = a4\n 37152: a4 = u64 [s1 + 0x1a8]\n 37156: u64 [a5 + 0x728] = a4\n 37160: a4 = a5 + 0x700\n 37164: u64 [a4 + 0x60] = a2\n 37167: u64 [a4 + 0x58] = a1\n 37170: u64 [a4 + 0x50] = a0\n 37173: a0 = s1 + 0x2100\n 37177: a1 = s1 + 0x20e0\n 37181: a2 = s1 + 0x20c0\n 37185: u64 [a4 + 0x48] = a3\n 37188: ra = 1632, jump @1990\n      : @1559 [@dyn 816] (gas: 32)\n 37194: a1 = s1 + 0x1998\n 37198: a4 = a1 + 0x700\n 37202: a2 = u64 [a4 + 0x80]\n 37206: ra = u64 [a1 + 0x770]\n 37210: a0 = u64 [a4 + 0x68]\n 37213: u64 [s1 + 0x218] = a0\n 37217: a3 = u64 [a4 + 0x78]\n 37220: t1 = u64 [s1 + 0x210]\n 37224: t2 = t1 ^ a2\n 37227: a1 = u64 [s1 + 0xe8]\n 37231: a4 = a1 ^ ra\n 37234: u64 [s1 + 0x208] = a4\n 37238: a4 = a1 <u ra\n 37241: t0 = u64 [s1 + 0xf0]\n 37245: a5 = t0 <u a0\n 37248: a0 = u64 [s1 + 0x208]\n 37252: a5 = a4 if a0 != 0\n 37255: a4 = t1 <u a2\n 37258: t1 = u64 [s1 + 0xe0]\n 37262: a0 = t1 <u a3\n 37265: a0 = a4 if t2 != 0\n 37268: a4 = t1 ^ a3\n 37271: a4 = a4 | t2\n 37274: a5 = a0 if a4 != 0\n 37277: a4 = u64 [s1 + 0x210]\n 37281: a0 = t0\n 37283: a4 = a2 if a5 == 0\n 37286: t1 = a3 if a5 == 0\n 37289: a1 = ra if a5 == 0\n 37292: a3 = u64 [s1 + 0x218]\n 37296: a0 = a3 if a5 == 0\n 37299: fallthrough\n      : @1560 (gas: 8)\n 37300: u64 [s1 + 0xf0] = a0\n 37304: u64 [s1 + 0xe0] = t1\n 37308: a0 = a0 | t1\n 37311: u64 [s1 + 0xe8] = a1\n 37315: u64 [s1 + 0x210] = a4\n 37319: a1 = a1 | a4\n 37322: a0 = a0 | a1\n 37325: jump @1583 if a0 != 0\n      : @1561 (gas: 3)\n 37329: a0 = s1 + 0x1c80\n 37333: a1 = 0x40\n 37336: ra = 1634, jump @17\n      : @1562 [@dyn 817] (gas: 7)\n 37343: a0 = s1 + 0x1998\n 37347: a3 = u64 [a0 + 0x300]\n 37351: a5 = a0 + 0x200\n 37355: a4 = u64 [a5 + 0xf8]\n 37359: a2 = u64 [a5 + 0xf0]\n 37363: a1 = u64 [a5 + 0xe8]\n 37367: t0 = 1636, jump @2586\n      : @1563 [@dyn 818] (gas: 1)\n 37373: jump @1565 if a0 == 0\n      : @1564 (gas: 1)\n 37376: jump @848\n      : @1565 (gas: 7)\n 37379: a2 = s1 + 0x1998\n 37383: u64 [a2 + 728] = 0\n 37387: u64 [a2 + 720] = 0\n 37391: u64 [a2 + 712] = 0\n 37395: t0 = 0x666\n 37399: a0 = 0x8c379a000000000\n 37409: fallthrough\n      : @1566 [@dyn 819] (gas: 4)\n 37410: a1 = s1 + 0x1c60\n 37414: u64 [a2 + 0x2e0] = a0\n 37418: a0 = u64 [s1 + 0x218]\n 37422: ra = 1640, jump @19\n      : @1567 [@dyn 820] (gas: 1)\n 37429: t0 = 1642, jump @2561\n      : @1568 [@dyn 821] (gas: 1)\n 37435: jump @1570 if a0 != 0\n      : @1569 (gas: 1)\n 37438: jump @848\n      : @1570 (gas: 9)\n 37441: a0 = u64 [s1 + 0x218]\n 37445: i32 a0 = a0 + 0x4\n 37448: a2 = s1 + 0x1998\n 37452: u64 [a2 + 704] = 0\n 37456: u64 [a2 + 696] = 0\n 37460: u64 [a2 + 680] = 0x20\n 37465: a1 = s1 + 0x1c40\n 37469: u64 [a2 + 688] = 0\n 37473: ra = 1644, jump @19\n      : @1571 [@dyn 822] (gas: 4)\n 37480: a2 = s1 + 0x200\n 37484: a0 = u64 [a2]\n 37486: a0 = a0 + 0xffffffffffffffdc\n 37489: t0 = 1646, jump @2559\n      : @1572 [@dyn 823] (gas: 1)\n 37495: jump @1574 if a0 != 0\n      : @1573 (gas: 1)\n 37498: jump @848\n      : @1574 (gas: 9)\n 37501: a0 = u64 [s1 + 0x218]\n 37505: i32 a0 = a0 + 0x24\n 37508: a2 = s1 + 0x1998\n 37512: u64 [a2 + 672] = 0\n 37516: u64 [a2 + 664] = 0\n 37520: u64 [a2 + 648] = 0x28\n 37525: a1 = s1 + 0x1c20\n 37529: u64 [a2 + 656] = 0\n 37533: ra = 1648, jump @19\n      : @1575 [@dyn 824] (gas: 5)\n 37540: a0 = 0x100000000\n 37550: a2 = s1 + 0x200\n 37554: u64 [a2] = a0\n 37556: a0 = 0xffffffbc\n 37566: t0 = 1650, jump @2559\n      : @1576 [@dyn 825] (gas: 1)\n 37572: jump @1578 if a0 != 0\n      : @1577 (gas: 1)\n 37575: jump @848\n      : @1578 (gas: 14)\n 37578: a0 = u64 [s1 + 0x218]\n 37582: i32 a0 = a0 + 0x44\n 37585: a1 = u64 [0x20048]\n 37590: a4 = s1 + 0x1998\n 37594: a5 = a4 + 0x200\n 37598: u64 [a5 + 0x80] = a1\n 37602: a1 = u64 [0x200b0]\n 37607: a2 = u64 [0x200b8]\n 37612: a3 = u64 [0x200c0]\n 37617: u64 [a5 + 0x78] = a1\n 37620: u64 [a5 + 0x70] = a2\n 37623: a1 = s1 + 0x1c00\n 37627: u64 [a5 + 0x68] = a3\n 37630: ra = 1652, jump @19\n      : @1579 [@dyn 826] (gas: 4)\n 37637: a2 = s1 + 0x200\n 37641: a0 = u64 [a2]\n 37643: a0 = a0 + 0xffffffffffffff9c\n 37646: t0 = 1654, jump @2559\n      : @1580 [@dyn 827] (gas: 1)\n 37652: jump @1582 if a0 != 0\n      : @1581 (gas: 1)\n 37655: jump @848\n      : @1582 (gas: 11)\n 37658: a0 = u64 [s1 + 0x218]\n 37662: i32 a0 = a0 + 0x64\n 37665: a1 = u64 [0x200f0]\n 37670: a2 = s1 + 0x1998\n 37674: u64 [a2 + 600] = 0\n 37678: u64 [a2 + 592] = 0\n 37682: u64 [a2 + 0x260] = a1\n 37686: a1 = s1 + 0x1be0\n 37690: u64 [a2 + 584] = 0\n 37694: ra = 0x368\n 37698: jump @19\n      : @1583 (gas: 23)\n 37702: a1 = s1 + 0x1998\n 37706: a0 = u64 [s1 + 0xf0]\n 37710: a2 = a1 + 0x400\n 37714: u64 [a2 + 0xe8] = a0\n 37718: a0 = u64 [s1 + 0x158]\n 37722: a3 = a1 + 0x500\n 37726: u64 [a3 + 0x8] = a0\n 37729: a0 = u64 [s1 + 0xe8]\n 37733: u64 [a2 + 0xf0] = a0\n 37737: a0 = u64 [s1 + 0x160]\n 37741: u64 [a3 + 0x10] = a0\n 37744: a0 = u64 [s1 + 0xe0]\n 37748: u64 [a2 + 0xf8] = a0\n 37752: a0 = u64 [s1 + 0x168]\n 37756: u64 [a3 + 0x18] = a0\n 37759: a0 = u64 [s1 + 0x210]\n 37763: u64 [a3] = a0\n 37765: a3 = a1\n 37767: a0 = s1 + 0x1ea0\n 37771: a1 = s1 + 0x1e80\n 37775: a2 = u64 [s1 + 0x170]\n 37779: u64 [a3 + 0x520] = a2\n 37783: ra = 1656, jump @2452\n      : @1584 [@dyn 828] (gas: 40)\n 37789: a0 = u64 [s1 + 0x178]\n 37793: a1 = s1 + 0x1998\n 37797: a2 = a1 + 0x400\n 37801: u64 [a2 + 0x80] = a0\n 37805: a0 = u64 [s1 + 0x180]\n 37809: u64 [a2 + 0x78] = a0\n 37812: a0 = u64 [s1 + 0x198]\n 37816: u64 [a2 + 0x70] = a0\n 37819: a0 = u64 [s1 + 0x1a8]\n 37823: u64 [a2 + 0x68] = a0\n 37826: a0 = u64 [s1 + 0x188]\n 37830: u64 [a2 + 0xa0] = a0\n 37834: a0 = u64 [s1 + 0x190]\n 37838: u64 [a2 + 0x98] = a0\n 37842: a0 = u64 [s1 + 0x1a0]\n 37846: u64 [a2 + 0x90] = a0\n 37850: a0 = u64 [s1 + 0x1b0]\n 37854: u64 [a2 + 0x88] = a0\n 37858: a0 = u64 [s1 + 0x148]\n 37862: u64 [a2 + 0xc0] = a0\n 37866: a0 = u64 [s1 + 0x1c8]\n 37870: u64 [a2 + 0xb8] = a0\n 37874: a0 = u64 [s1 + 0x1d0]\n 37878: u64 [a2 + 0xb0] = a0\n 37882: a0 = u64 [s1 + 0x1d8]\n 37886: u64 [a2 + 0xa8] = a0\n 37890: a0 = u64 [s1 + 0x138]\n 37894: u64 [a2 + 0xe0] = a0\n 37898: a0 = u64 [s1 + 0x140]\n 37902: u64 [a2 + 0xd8] = a0\n 37906: a0 = u64 [s1 + 0x1b8]\n 37910: u64 [a2 + 0xd0] = a0\n 37914: a5 = a1\n 37916: a0 = s1 + 0x1e60\n 37920: a1 = s1 + 0x1e40\n 37924: a2 = s1 + 0x1e20\n 37928: a3 = s1 + 0x1e00\n 37932: a4 = u64 [s1 + 0x1c0]\n 37936: u64 [a5 + 0x4c8] = a4\n 37940: ra = 1658, jump @2248\n      : @1585 [@dyn 829] (gas: 8)\n 37946: a0 = u64 [s1 + 0xc0]\n 37950: a1 = u64 [s1 + 0xb8]\n 37954: a0 = a0 | a1\n 37957: a1 = u64 [s1 + 0xd0]\n 37961: a2 = u64 [s1 + 0xc8]\n 37965: a1 = a1 | a2\n 37968: a0 = a0 | a1\n 37971: jump @1589 if a0 == 0\n      : @1586 (gas: 8)\n 37975: a1 = s1 + 0x4998\n 37979: u64 [a1 + 1184] = 0\n 37983: u64 [a1 + 1176] = 0\n 37987: u64 [a1 + 1168] = 0\n 37991: u64 [a1 + 1160] = 0x8\n 37996: a0 = s1 + 0x1de0\n 38000: a1 = s1 + 0x4e20\n 38004: ra = 1660, jump @21\n      : @1587 [@dyn 830] (gas: 28)\n 38011: a5 = s1 + 0x1998\n 38015: a0 = u64 [a5 + 0x458]\n 38019: a1 = u64 [a5 + 0x460]\n 38023: a2 = u64 [a5 + 0x448]\n 38027: a3 = u64 [a5 + 0x450]\n 38031: a4 = a0 >> 0x30\n 38034: a1 = a1 << 0x10\n 38037: a1 = a1 | a4\n 38040: a0 = a0 << 0x10\n 38043: a4 = a3 >> 0x30\n 38046: a0 = a0 | a4\n 38049: t0 = a0 & 0xffffffffffffffff\n 38052: a0 = u64 [s1 + 0x1e0]\n 38056: a4 = a1 & a0\n 38059: a1 = a2 & 0xffffffffffffffff\n 38062: a2 = a3 & a0\n 38065: u64 [a5 + 1024] = 0\n 38069: u64 [a5 + 1016] = 0\n 38073: u64 [a5 + 1056] = 0\n 38077: u64 [a5 + 1048] = 0\n 38081: u64 [a5 + 0x410] = a2\n 38085: u64 [a5 + 0x408] = a1\n 38089: u64 [a5 + 0x3f0] = a4\n 38093: a0 = s1 + 0x1dc0\n 38097: a1 = s1 + 0x1da0\n 38101: a2 = s1 + 0x1d80\n 38105: u64 [a5 + 0x3e8] = t0\n 38109: ra = 1662, jump @2197\n      : @1588 [@dyn 831] (gas: 19)\n 38115: a3 = s1 + 0x1998\n 38119: a4 = a3 + 0x400\n 38123: a0 = u64 [a4 + 0x28]\n 38126: a1 = u64 [a4 + 0x30]\n 38129: a2 = u64 [a4 + 0x38]\n 38132: a3 = u64 [a4 + 0x40]\n 38135: a5 = s1 + 0x4998\n 38139: u64 [a5 + 1216] = 0\n 38143: u64 [a5 + 1208] = 0\n 38147: u64 [a5 + 1200] = 0\n 38151: u64 [a5 + 1192] = 0xb\n 38156: a4 = a5 + 0x400\n 38160: u64 [a4 + 0xe0] = a3\n 38164: u64 [a4 + 0xd8] = a2\n 38168: u64 [a4 + 0xd0] = a1\n 38172: u64 [a4 + 0xc8] = a0\n 38176: a0 = s1 + 0x4e40\n 38180: a1 = s1 + 0x4e60\n 38184: ra = 1664, jump @23\n      : @1589 [@dyn 832] (gas: 3)\n 38191: a0 = s1 + 0x1d60\n 38195: a1 = 0x40\n 38198: ra = 1666, jump @17\n      : @1590 [@dyn 833] (gas: 7)\n 38205: a0 = s1 + 0x1998\n 38209: a5 = a0 + 0x300\n 38213: a3 = u64 [a5 + 0xe0]\n 38217: a4 = u64 [a5 + 0xd8]\n 38221: a2 = u64 [a5 + 0xd0]\n 38225: a1 = u64 [a5 + 0xc8]\n 38229: t0 = 1668, jump @2582\n      : @1591 [@dyn 834] (gas: 1)\n 38235: jump @1593 if a0 == 0\n      : @1592 (gas: 1)\n 38238: jump @848\n      : @1593 (gas: 13)\n 38241: a0 = s1 + 0x1998\n 38245: a1 = u64 [s1 + 0x118]\n 38249: a3 = a0 + 0x300\n 38253: u64 [a3 + 0xa8] = a1\n 38257: a1 = u64 [s1 + 0x120]\n 38261: u64 [a3 + 0xb0] = a1\n 38265: a1 = u64 [s1 + 0x128]\n 38269: u64 [a3 + 0xb8] = a1\n 38273: a1 = s1 + 0x1d40\n 38277: a2 = u64 [s1 + 0x130]\n 38281: u64 [a3 + 0xc0] = a2\n 38285: a0 = u64 [s1 + 0x218]\n 38289: ra = 1670, jump @19\n      : @1594 [@dyn 835] (gas: 1)\n 38296: t0 = 1672, jump @2576\n      : @1595 [@dyn 836] (gas: 1)\n 38302: jump @1597 if a1 != 0\n      : @1596 (gas: 1)\n 38305: jump @848\n      : @1597 (gas: 14)\n 38308: a0 = u64 [s1 + 0x218]\n 38312: i32 a0 = a0 + 0x20\n 38315: a3 = s1 + 0x1998\n 38319: a1 = u64 [s1 + 0xf8]\n 38323: a4 = a3 + 0x300\n 38327: u64 [a4 + 0x88] = a1\n 38331: a1 = u64 [s1 + 0x100]\n 38335: u64 [a4 + 0x90] = a1\n 38339: a1 = u64 [s1 + 0x108]\n 38343: u64 [a4 + 0x98] = a1\n 38347: a1 = s1 + 0x1d20\n 38351: a2 = u64 [s1 + 0x110]\n 38355: u64 [a4 + 0xa0] = a2\n 38359: ra = 1674, jump @19\n      : @1598 [@dyn 837] (gas: 6)\n 38366: a0 = u64 [s1 + 0x150]\n 38370: ra = 0x68c\n 38374: ecalli 5 // 'caller'\n 38376: a2 = u64 [s1 + 0x1e8]\n 38380: t0 = 0x68e\n 38384: jump @2592\n      : @1599 [@dyn 838] (gas: 2)\n 38387: a2 = u64 [s1 + 0x1e8]\n 38391: t0 = 1678, jump @2592\n      : @1600 [@dyn 839] (gas: 50)\n 38397: t0 = a1 | a0\n 38400: a3 = a3 >> 0x20\n 38403: a2 = reverse a2\n 38405: a1 = a2 << 0x20\n 38408: a1 = a1 | a3\n 38411: a2 = a2 >> 0x20\n 38414: a3 = u64 [0x200d0]\n 38419: a0 = s1 + 0x1998\n 38423: u64 [a0 + 0x380] = a3\n 38427: a3 = u64 [0x200d8]\n 38432: a4 = u64 [0x200e0]\n 38437: a5 = u64 [0x200e8]\n 38442: u64 [a0 + 0x378] = a3\n 38446: a3 = a0 + 0x300\n 38450: u64 [a3 + 0x70] = a4\n 38453: u64 [a0 + 864] = 0\n 38457: u64 [a3 + 0x68] = a5\n 38460: u64 [a3 + 0x58] = a2\n 38463: u64 [a3 + 0x50] = a1\n 38466: a1 = 0x40\n 38469: a2 = s1 + 0x1d00\n 38473: a3 = s1 + 0x1ce0\n 38477: u64 [a0 + 0x348] = t0\n 38481: a0 = u64 [s1 + 0x218]\n 38485: ra = 0x690\n 38489: sp = sp + 0xffffffffffffff60\n 38493: u64 [sp + 0x98] = ra\n 38497: u64 [sp + 0x90] = s0\n 38501: u64 [sp + 0x88] = s1\n 38505: s0 = sp + 0xa0\n 38509: sp = sp & 0xffffffffffffffe0\n 38512: a4 = u64 [a3]\n 38514: u64 [sp + 0x38] = a4\n 38517: a4 = u64 [a3 + 0x8]\n 38520: u64 [sp + 0x30] = a4\n 38523: a4 = u64 [a3 + 0x10]\n 38526: u64 [sp + 0x28] = a4\n 38529: a3 = u64 [a3 + 0x18]\n 38532: u64 [sp + 0x20] = a3\n 38535: a3 = u64 [a2]\n 38537: u64 [sp + 0x18] = a3\n 38540: a3 = u64 [a2 + 0x8]\n 38543: u64 [sp + 0x10] = a3\n 38546: a3 = u64 [a2 + 0x10]\n 38549: u64 [sp + 0x8] = a3\n 38552: a2 = u64 [a2 + 0x18]\n 38555: u64 [sp] = a2\n 38557: s1 = a1\n 38559: ra = 0xe\n 38562: jump @32\n      : @1601 [@dyn 840] (gas: 12)\n 38566: a1 = s1 + 0x4998\n 38570: u64 [a1 + 1280] = 0\n 38574: u64 [a1 + 1272] = 0\n 38578: u64 [a1 + 1264] = 0\n 38582: u64 [a1 + 1256] = 0xc\n 38587: u64 [a1 + 1312] = 0\n 38591: u64 [a1 + 1304] = 0\n 38595: u64 [a1 + 1296] = 0\n 38599: u64 [a1 + 1288] = 0x1\n 38604: a0 = s1 + 0x4e80\n 38608: a1 = s1 + 0x4ea0\n 38612: ra = 1682, jump @23\n      : @1602 [@dyn 841] (gas: 3)\n 38619: a0 = s1 + 0x1cc0\n 38623: a1 = 0x40\n 38626: ra = 1684, jump @17\n      : @1603 [@dyn 842] (gas: 7)\n 38633: a3 = s1 + 0x1998\n 38637: a5 = a3 + 0x300\n 38641: a0 = u64 [a5 + 0x40]\n 38644: a1 = u64 [a5 + 0x38]\n 38647: a2 = u64 [a5 + 0x30]\n 38650: a4 = u64 [a5 + 0x28]\n 38653: t0 = 1686, jump @2564\n      : @1604 [@dyn 843] (gas: 1)\n 38659: jump @1606 if a0 == 0\n      : @1605 (gas: 1)\n 38662: jump @848\n      : @1606 (gas: 16)\n 38665: a3 = a4\n 38667: a0 = s1 + 0x1998\n 38671: a1 = u64 [s1 + 0xf0]\n 38675: a4 = a0 + 0x300\n 38679: u64 [a4 + 0x8] = a1\n 38682: a1 = u64 [s1 + 0xe8]\n 38686: u64 [a4 + 0x10] = a1\n 38689: a1 = u64 [s1 + 0xe0]\n 38693: u64 [a4 + 0x18] = a1\n 38696: a1 = s1 + 0x1ca0\n 38700: a2 = u64 [s1 + 0x210]\n 38704: u64 [a4 + 0x20] = a2\n 38707: a0 = a3\n 38709: u64 [s1 + 0x218] = a3\n 38713: ra = 0x3c6\n 38717: jump @19\n      : @1607 (gas: 4)\n 38721: a0 = s1 + 0x7ff\n 38725: a0 = a0 + 0x3e1\n 38729: a1 = 0x40\n 38732: ra = 1688, jump @17\n      : @1608 [@dyn 844] (gas: 4)\n 38739: a0 = s1 + 0x7ff\n 38743: a0 = a0 + 0x199\n 38747: a2 = a0 + 0x200\n 38751: t0 = 1690, jump @2569\n      : @1609 [@dyn 845] (gas: 4)\n 38757: ra = 0x69c\n 38761: ecalli 14 // 'return_data_size'\n 38763: t0 = 0x69e\n 38767: jump @2557\n      : @1610 [@dyn 846] (gas: 1)\n 38770: t0 = 1694, jump @2557\n      : @1611 [@dyn 847] (gas: 1)\n 38776: jump @1613 if a2 == 0\n      : @1612 (gas: 1)\n 38779: jump @848\n      : @1613 (gas: 5)\n 38782: a3 = a0\n 38784: a5 = s1 + 0x200\n 38788: a0 = u64 [a5 + 0x10]\n 38791: a4 = u64 [a5 + 0x8]\n 38794: t0 = 1696, jump @2568\n      : @1614 [@dyn 848] (gas: 1)\n 38800: jump @1616 if a0 == 0\n      : @1615 (gas: 1)\n 38803: jump @848\n      : @1616 (gas: 2)\n 38806: a0 = a3 >> 0x20\n 38809: jump @1618 if a0 == 0\n      : @1617 (gas: 1)\n 38812: jump @848\n      : @1618 (gas: 1)\n 38815: t0 = 1698, jump @2579\n      : @1619 [@dyn 849] (gas: 1)\n 38821: ra = 1700, jump @32\n      : @1620 [@dyn 850] (gas: 11)\n 38828: a1 = s1 + 0x4198\n 38832: a2 = u64 [s1 + 0x1f0]\n 38836: u32 [a1 + 0x728] = a2\n 38840: i32 a0 = a0 + 0\n 38842: a1 = s1 + 0x5000\n 38846: i32 a1 = a1 + 0xfffffffffffff8c0\n 38850: a2 = u64 [s1 + 0x208]\n 38854: ecalli 13 // 'return_data_copy'\n 38856: a0 = s1 + 0x4198\n 38860: a0 = i32 [a0 + 0x728]\n 38864: jump @1395\n      : @1621 (gas: 3)\n 38867: a0 = s1 + 0x2000\n 38871: a1 = u64 [s1 + 0x218]\n 38875: ra = 1702, jump @21\n      : @1622 [@dyn 851] (gas: 28)\n 38882: a0 = s1 + 0x1998\n 38886: t0 = u64 [a0 + 0x680]\n 38890: t1 = u64 [a0 + 0x678]\n 38894: a2 = u64 [a0 + 0x670]\n 38898: a4 = u64 [a0 + 0x668]\n 38902: a1 = sp + 0xffffffffffffffe0\n 38905: a1 = a1 & 0xffffffffffffffe0\n 38908: sp = a1\n 38910: t2 = a4 + 0x3e8\n 38914: a0 = t2 <u a4\n 38917: a3 = a2 + a0\n 38920: a5 = a3 <u a2\n 38923: a5 = a0 if a0 == 0\n 38926: a5 = a5 + t1\n 38929: a0 = a5 <u t1\n 38932: a0 = a0 + t0\n 38935: u64 [a1 + 0x10] = a5\n 38938: u64 [a1 + 0x8] = a3\n 38941: u64 [a1] = t2\n 38943: a2 = a2 + 0x1\n 38946: a3 = a4 <u 0xfffffffffffffc18\n 38950: a3 = a3 ^ 0x1\n 38953: a3 = 0 if a2 != 0\n 38955: a2 = t1 & t0\n 38958: a2 = a2 + 0x1\n 38961: a3 = 0 if a2 != 0\n 38963: u64 [a1 + 0x18] = a0\n 38966: jump @1679 if a3 == 0\n      : @1623 (gas: 1)\n 38970: t0 = 1704, jump @2555\n      : @1624 [@dyn 852] (gas: 1)\n 38976: jump @1626 if a1 == 0\n      : @1625 (gas: 1)\n 38979: jump @848\n      : @1626 (gas: 8)\n 38982: a2 = s1 + 0x1998\n 38986: u64 [a2 + 504] = 0\n 38990: u64 [a2 + 496] = 0\n 38994: a1 = 0x4e487b7100000000\n 39004: u64 [a2 + 0x200] = a1\n 39008: a1 = s1 + 0x1b80\n 39012: u64 [a2 + 488] = 0\n 39016: ra = 1706, jump @19\n      : @1627 [@dyn 853] (gas: 3)\n 39023: t0 = 0x6ac\n 39027: a1 = s1 + 0x1998\n 39031: fallthrough\n      : @1628 [@dyn 854] (gas: 9)\n 39032: u64 [a1 + 480] = 0\n 39036: u64 [a1 + 472] = 0\n 39040: u64 [a1 + 456] = 0x11\n 39045: a2 = a1\n 39047: a0 = 0x4\n 39050: a1 = s1 + 0x1b60\n 39054: u64 [a2 + 464] = 0\n 39058: ra = 0x544\n 39062: jump @19\n      : @1629 (gas: 9)\n 39066: a0 = u64 [s1 + 0x218]\n 39070: a1 = u64 [a0 + 0x18]\n 39073: u64 [s1 + 0xa8] = a1\n 39077: a1 = u64 [a0 + 0x10]\n 39080: u64 [s1 + 0xa0] = a1\n 39084: a1 = u64 [a0 + 0x8]\n 39087: u64 [s1 + 0x98] = a1\n 39091: a0 = u64 [a0]\n 39093: fallthrough\n      : @1630 (gas: 26)\n 39094: u64 [s1 + 0x90] = a0\n 39098: a5 = s1 + 0x100\n 39102: a0 = u64 [a5 + 0x60]\n 39105: a1 = s1 + 0x7ff\n 39109: a1 = a1 + 0x199\n 39113: u64 [a1 + 0x68] = a0\n 39116: u64 [a1 + 160] = 0\n 39120: u64 [a1 + 152] = 0\n 39124: a0 = u64 [a5 + 0x38]\n 39127: u64 [a1 + 0x88] = a0\n 39131: a0 = u64 [a5 + 0x68]\n 39134: u64 [a1 + 0x70] = a0\n 39137: a0 = u64 [a5 + 0x30]\n 39140: u64 [a1 + 0x90] = a0\n 39144: a0 = u64 [a5 + 0x70]\n 39147: u64 [a1 + 0x78] = a0\n 39150: a4 = a1\n 39152: a0 = s1 + 0x7ff\n 39156: a0 = a0 + 0x241\n 39160: a1 = s1 + 0x7ff\n 39164: a1 = a1 + 0x221\n 39168: a2 = s1 + 0x7ff\n 39172: a2 = a2 + 0x201\n 39176: a3 = u64 [a5 + 0x78]\n 39179: u64 [a4 + 0x80] = a3\n 39183: ra = 1710, jump @1980\n      : @1631 [@dyn 855] (gas: 22)\n 39189: a3 = s1 + 0x7ff\n 39193: a3 = a3 + 0x199\n 39197: a0 = u64 [a3 + 0xb0]\n 39201: a1 = u64 [a3 + 0xa8]\n 39205: a2 = u64 [a3 + 0xb8]\n 39209: a3 = u64 [a3 + 0xc0]\n 39213: a5 = u64 [s1 + 0xe0]\n 39217: a4 = a5 ^ a0\n 39220: a0 = a0 <u a5\n 39223: a5 = u64 [s1 + 0xb0]\n 39227: a1 = a1 <u a5\n 39230: a1 = a0 if a4 != 0\n 39233: a4 = u64 [s1 + 0xf0]\n 39237: a0 = a4 ^ a3\n 39240: a3 = a3 <u a4\n 39243: a5 = u64 [s1 + 0xe8]\n 39247: a4 = a2 <u a5\n 39250: a4 = a3 if a0 != 0\n 39253: a2 = a2 ^ a5\n 39256: a0 = a0 | a2\n 39259: a1 = a4 if a0 != 0\n 39262: jump @1635 if a1 == 0\n      : @1632 (gas: 25)\n 39266: a5 = s1 + 0x100\n 39270: a0 = u64 [a5 + 0x60]\n 39273: a1 = s1 + 0x7ff\n 39277: a1 = a1 + 0x199\n 39281: u64 [a1 + 0x8] = a0\n 39284: u64 [a1 + 64] = 0\n 39287: u64 [a1 + 56] = 0\n 39290: a0 = u64 [a5 + 0x38]\n 39293: u64 [a1 + 0x28] = a0\n 39296: a0 = u64 [a5 + 0x68]\n 39299: u64 [a1 + 0x10] = a0\n 39302: a0 = u64 [a5 + 0x30]\n 39305: u64 [a1 + 0x30] = a0\n 39308: a0 = u64 [a5 + 0x70]\n 39311: u64 [a1 + 0x18] = a0\n 39314: a4 = a1\n 39316: a0 = s1 + 0x7ff\n 39320: a0 = a0 + 0x1e1\n 39324: a1 = s1 + 0x7ff\n 39328: a1 = a1 + 0x1c1\n 39332: a2 = s1 + 0x7ff\n 39336: a2 = a2 + 0x1a1\n 39340: a3 = u64 [a5 + 0x78]\n 39343: u64 [a4 + 0x20] = a3\n 39346: ra = 1712, jump @1980\n      : @1633 [@dyn 856] (gas: 33)\n 39352: a3 = s1 + 0x7ff\n 39356: a3 = a3 + 0x199\n 39360: a0 = u64 [a3 + 0x48]\n 39363: a1 = u64 [a3 + 0x50]\n 39366: a2 = u64 [a3 + 0x58]\n 39369: a3 = u64 [a3 + 0x60]\n 39372: a4 = s1 + 0x1000\n 39376: u64 [a4 + 0xfffffffffffff958] = a3\n 39380: a3 = s1 + 0x1000\n 39384: u64 [a3 + 0xfffffffffffff950] = a2\n 39388: a2 = s1 + 0x1000\n 39392: u64 [a2 + 0xfffffffffffff948] = a1\n 39396: a1 = s1 + 0x1000\n 39400: u64 [a1 + 0xfffffffffffff940] = a0\n 39404: a0 = u64 [s1 + 0xf0]\n 39408: a1 = s1 + 0x1000\n 39412: u64 [a1 + 0xfffffffffffff978] = a0\n 39416: a0 = u64 [s1 + 0xe8]\n 39420: a1 = s1 + 0x1000\n 39424: u64 [a1 + 0xfffffffffffff970] = a0\n 39428: a0 = u64 [s1 + 0xe0]\n 39432: a1 = s1 + 0x1000\n 39436: u64 [a1 + 0xfffffffffffff968] = a0\n 39440: a0 = s1 + 0x7ff\n 39444: a0 = a0 + 0x181\n 39448: a1 = s1 + 0x7ff\n 39452: a1 = a1 + 0x161\n 39456: a2 = s1 + 0x7ff\n 39460: a2 = a2 + 0x141\n 39464: a3 = u64 [s1 + 0xb0]\n 39468: a4 = s1 + 0x1000\n 39472: u64 [a4 + 0xfffffffffffff960] = a3\n 39476: ra = 1714, jump @1980\n      : @1634 [@dyn 857] (gas: 12)\n 39482: a1 = s1 + 0x7ff\n 39486: a1 = a1 + 0x199\n 39490: a0 = u64 [a1]\n 39492: u64 [s1 + 0x88] = a0\n 39496: a0 = u64 [a1 + 0xfffffffffffffff8]\n 39499: u64 [s1 + 0x80] = a0\n 39503: a0 = s1 + 0x1000\n 39507: a0 = u64 [a0 + 0xfffffffffffff988]\n 39511: u64 [s1 + 0x78] = a0\n 39514: a0 = s1 + 0x1000\n 39518: a0 = u64 [a0 + 0xfffffffffffff980]\n 39522: jump @1636\n      : @1635 (gas: 9)\n 39524: a0 = u64 [s1 + 0x218]\n 39528: a1 = u64 [a0 + 0x18]\n 39531: u64 [s1 + 0x88] = a1\n 39535: a1 = u64 [a0 + 0x10]\n 39538: u64 [s1 + 0x80] = a1\n 39542: a1 = u64 [a0 + 0x8]\n 39545: u64 [s1 + 0x78] = a1\n 39548: a0 = u64 [a0]\n 39550: fallthrough\n      : @1636 (gas: 17)\n 39551: u64 [s1 + 0x70] = a0\n 39554: a0 = u64 [s1 + 0x98]\n 39558: a1 = u64 [s1 + 0x78]\n 39561: a0 = a0 | a1\n 39564: a1 = u64 [s1 + 0x90]\n 39568: a2 = u64 [s1 + 0x70]\n 39571: a1 = a1 | a2\n 39574: a2 = u64 [s1 + 0xa0]\n 39578: a3 = u64 [s1 + 0x80]\n 39582: a2 = a2 | a3\n 39585: a1 = a1 | a2\n 39588: a2 = u64 [s1 + 0xa8]\n 39592: a3 = u64 [s1 + 0x88]\n 39596: a2 = a2 | a3\n 39599: a0 = a0 | a2\n 39602: a0 = a0 | a1\n 39605: jump @1657 if a0 == 0\n      : @1637 (gas: 19)\n 39609: a0 = u64 [s1 + 0xb8]\n 39613: a1 = s1 + 0x1000\n 39617: u64 [a1 + 0xfffffffffffff840] = a0\n 39621: a0 = u64 [s1 + 0xc0]\n 39625: a1 = s1 + 0x1000\n 39629: u64 [a1 + 0xfffffffffffff848] = a0\n 39633: a0 = u64 [s1 + 0xc8]\n 39637: a1 = s1 + 0x1000\n 39641: u64 [a1 + 0xfffffffffffff850] = a0\n 39645: a0 = s1 + 0x7ff\n 39649: a0 = a0 + 0x61\n 39652: a1 = s1 + 0x7ff\n 39656: a1 = a1 + 0x41\n 39659: a2 = u64 [s1 + 0xd0]\n 39663: a3 = s1 + 0x1000\n 39667: u64 [a3 + 0xfffffffffffff858] = a2\n 39671: ra = 0x6b4\n 39675: t0 = 0x86e\n 39679: jump @2633\n      : @1638 [@dyn 858] (gas: 31)\n 39682: a0 = s1 + 0x1000\n 39686: a0 = u64 [a0 + 0xfffffffffffff860]\n 39690: u64 [s1 + 0x210] = a0\n 39694: a0 = s1 + 0x1000\n 39698: a0 = u64 [a0 + 0xfffffffffffff868]\n 39702: u64 [s1 + 0x208] = a0\n 39706: a0 = s1 + 0x1000\n 39710: a0 = u64 [a0 + 0xfffffffffffff870]\n 39714: u64 [s1 + 0x200] = a0\n 39718: a0 = s1 + 0x1000\n 39722: a0 = u64 [a0 + 0xfffffffffffff878]\n 39726: u64 [s1 + 0x1f8] = a0\n 39730: a0 = u64 [s1 + 0xa8]\n 39734: a1 = s1 + 0x1000\n 39738: u64 [a1 + 0xfffffffffffff818] = a0\n 39742: a0 = u64 [s1 + 0xa0]\n 39746: a1 = s1 + 0x1000\n 39750: u64 [a1 + 0xfffffffffffff810] = a0\n 39754: a0 = u64 [s1 + 0x98]\n 39758: a1 = s1 + 0x1000\n 39762: u64 [a1 + 0xfffffffffffff808] = a0\n 39766: a0 = s1 + 0x7ff\n 39770: a0 = a0 + 0x21\n 39773: a1 = s1 + 0x7ff\n 39777: a1 = a1 + 0x1\n 39780: a2 = u64 [s1 + 0x90]\n 39784: a3 = s1 + 0x1000\n 39788: u64 [a3 + 0xfffffffffffff800] = a2\n 39792: ra = 0x6b6\n 39796: t0 = 0x8b6\n 39800: jump @2633\n      : @1639 [@dyn 859] (gas: 24)\n 39803: a0 = s1 + 0x1000\n 39807: a0 = u64 [a0 + 0xfffffffffffff820]\n 39811: a1 = s1 + 0x1000\n 39815: a1 = u64 [a1 + 0xfffffffffffff828]\n 39819: a2 = s1 + 0x1000\n 39823: a2 = u64 [a2 + 0xfffffffffffff830]\n 39827: a3 = s1 + 0x1000\n 39831: a3 = u64 [a3 + 0xfffffffffffff838]\n 39835: u64 [s1 + 0x7b8] = a3\n 39839: u64 [s1 + 0x7b0] = a2\n 39843: u64 [s1 + 0x7a8] = a1\n 39847: u64 [s1 + 0x7a0] = a0\n 39851: a0 = u64 [s1 + 0x1f8]\n 39855: u64 [s1 + 0x7d8] = a0\n 39859: a0 = u64 [s1 + 0x200]\n 39863: u64 [s1 + 0x7d0] = a0\n 39867: a0 = u64 [s1 + 0x208]\n 39871: u64 [s1 + 0x7c8] = a0\n 39875: a0 = s1 + 0x7e0\n 39879: a1 = s1 + 0x7c0\n 39883: a2 = s1 + 0x7a0\n 39887: a3 = u64 [s1 + 0x210]\n 39891: u64 [s1 + 0x7c0] = a3\n 39895: ra = 1720, jump @2218\n      : @1640 [@dyn 860] (gas: 21)\n 39901: a0 = u64 [s1 + 0x7e0]\n 39905: u64 [s1 + 0x210] = a0\n 39909: a0 = u64 [s1 + 0x7e8]\n 39913: u64 [s1 + 0x208] = a0\n 39917: a0 = u64 [s1 + 0x7f0]\n 39921: u64 [s1 + 0x200] = a0\n 39925: a0 = u64 [s1 + 0x7f8]\n 39929: u64 [s1 + 0x1f8] = a0\n 39933: a0 = u64 [s1 + 0xf0]\n 39937: u64 [s1 + 0x778] = a0\n 39941: a0 = u64 [s1 + 0xe8]\n 39945: u64 [s1 + 0x770] = a0\n 39949: a0 = u64 [s1 + 0xe0]\n 39953: u64 [s1 + 0x768] = a0\n 39957: a0 = s1 + 0x780\n 39961: a1 = s1 + 0x760\n 39965: a2 = u64 [s1 + 0xb0]\n 39969: u64 [s1 + 0x760] = a2\n 39973: ra = 0x6ba\n 39977: t0 = 0x86e\n 39981: jump @2633\n      : @1641 [@dyn 861] (gas: 21)\n 39984: a0 = u64 [s1 + 0x780]\n 39988: u64 [s1 + 0x1f0] = a0\n 39992: a0 = u64 [s1 + 0x788]\n 39996: u64 [s1 + 0x1e8] = a0\n 40000: a0 = u64 [s1 + 0x790]\n 40004: u64 [s1 + 0x1e0] = a0\n 40008: a0 = u64 [s1 + 0x798]\n 40012: u64 [s1 + 0x1d8] = a0\n 40016: a0 = u64 [s1 + 0x88]\n 40020: u64 [s1 + 0x738] = a0\n 40024: a0 = u64 [s1 + 0x80]\n 40028: u64 [s1 + 0x730] = a0\n 40032: a0 = u64 [s1 + 0x78]\n 40035: u64 [s1 + 0x728] = a0\n 40039: a0 = s1 + 0x740\n 40043: a1 = s1 + 0x720\n 40047: a2 = u64 [s1 + 0x70]\n 40050: u64 [s1 + 0x720] = a2\n 40054: ra = 0x6bc\n 40058: t0 = 0x8b6\n 40062: jump @2633\n      : @1642 [@dyn 862] (gas: 20)\n 40065: a0 = u64 [s1 + 0x740]\n 40069: a1 = u64 [s1 + 0x748]\n 40073: a2 = u64 [s1 + 0x750]\n 40077: a3 = u64 [s1 + 0x758]\n 40081: u64 [s1 + 0x6d8] = a3\n 40085: u64 [s1 + 0x6d0] = a2\n 40089: u64 [s1 + 0x6c8] = a1\n 40093: u64 [s1 + 0x6c0] = a0\n 40097: a0 = u64 [s1 + 0x1d8]\n 40101: u64 [s1 + 0x6f8] = a0\n 40105: a0 = u64 [s1 + 0x1e0]\n 40109: u64 [s1 + 0x6f0] = a0\n 40113: a0 = u64 [s1 + 0x1e8]\n 40117: u64 [s1 + 0x6e8] = a0\n 40121: a0 = s1 + 0x700\n 40125: a1 = s1 + 0x6e0\n 40129: a2 = s1 + 0x6c0\n 40133: a3 = u64 [s1 + 0x1f0]\n 40137: u64 [s1 + 0x6e0] = a3\n 40141: ra = 1726, jump @2218\n      : @1643 [@dyn 863] (gas: 22)\n 40147: a4 = s1 + 0x700\n 40151: a0 = u64 [a4]\n 40153: a1 = u64 [a4 + 0x8]\n 40156: a2 = u64 [a4 + 0x10]\n 40159: a3 = u64 [a4 + 0x18]\n 40162: u64 [s1 + 0x678] = a3\n 40166: u64 [s1 + 0x670] = a2\n 40170: u64 [s1 + 0x668] = a1\n 40174: u64 [s1 + 0x660] = a0\n 40178: a0 = u64 [s1 + 0x1f8]\n 40182: u64 [s1 + 0x698] = a0\n 40186: a4 = s1 + 0x200\n 40190: a0 = u64 [a4]\n 40192: u64 [s1 + 0x690] = a0\n 40196: a0 = u64 [a4 + 0x8]\n 40199: u64 [s1 + 0x688] = a0\n 40203: a0 = s1 + 0x6a0\n 40207: a1 = s1 + 0x680\n 40211: a2 = s1 + 0x660\n 40215: a3 = u64 [a4 + 0x10]\n 40218: u64 [s1 + 0x680] = a3\n 40222: ra = 1728, jump @2197\n      : @1644 [@dyn 864] (gas: 24)\n 40228: a0 = u64 [s1 + 0x6b8]\n 40232: u64 [s1 + 0x28] = a0\n 40235: a0 = u64 [s1 + 0x6b0]\n 40239: u64 [s1 + 0x30] = a0\n 40242: a0 = u64 [s1 + 0x6a8]\n 40246: u64 [s1 + 0x20] = a0\n 40249: a0 = u64 [s1 + 0x6a0]\n 40253: u64 [s1 + 0x18] = a0\n 40256: u64 [s1 + 1560] = 0\n 40260: u64 [s1 + 1552] = 0\n 40264: a0 = u64 [s1 + 0x130]\n 40268: u64 [s1 + 0x608] = a0\n 40272: a0 = u64 [s1 + 0x138]\n 40276: u64 [s1 + 0x600] = a0\n 40280: u64 [s1 + 1592] = 0\n 40284: u64 [s1 + 1584] = 0\n 40288: a0 = u64 [s1 + 0x1a0]\n 40292: u64 [s1 + 0x628] = a0\n 40296: a0 = s1 + 0x640\n 40300: a1 = s1 + 0x620\n 40304: a2 = s1 + 0x600\n 40308: a3 = u64 [s1 + 0x140]\n 40312: u64 [s1 + 0x620] = a3\n 40316: ra = 1730, jump @2197\n      : @1645 [@dyn 865] (gas: 30)\n 40322: t1 = u64 [s1 + 0x658]\n 40326: a0 = s1 + 0x600\n 40330: a4 = u64 [a0 + 0x50]\n 40333: a5 = u64 [a0 + 0x40]\n 40336: a3 = u64 [a0 + 0x48]\n 40339: a1 = 0xf4240\n 40344: a0 = a5 mulhu a1\n 40347: a2 = a3 * a1\n 40350: a0 = a0 + a2\n 40353: u64 [s1 + 0x68] = a0\n 40356: a0 = a0 <u a2\n 40359: a2 = a3 mulhu a1\n 40362: a0 = a0 + a2\n 40365: a2 = a4 * a1\n 40368: a2 = a2 + a0\n 40371: u64 [s1 + 0x60] = a2\n 40374: a0 = a2 <u a0\n 40377: u64 [s1 + 0x38] = a3\n 40380: a2 = a3 | t1\n 40383: u64 [s1 + 0x48] = a5\n 40386: a3 = a5 | a4\n 40389: t0 = a3 | a2\n 40392: u64 [s1 + 0x50] = t1\n 40395: a3 = t1 * a1\n 40398: u64 [s1 + 0x40] = a4\n 40401: a2 = a4 mulhu a1\n 40404: a3 = a3 + a2\n 40407: a4 = a3 + a0\n 40410: u64 [s1 + 0x130] = a4\n 40414: jump @1648 if t0 == 0\n      : @1646 (gas: 9)\n 40417: a4 = u64 [s1 + 0x130]\n 40421: a0 = 0 if a4 != 0\n 40423: a2 = a3 <u a2\n 40426: a3 = u64 [s1 + 0x50]\n 40429: a3 = a3 mulhu a1\n 40432: a3 = a3 >u 0\n 40434: a2 = a2 | a3\n 40437: a0 = a0 | a2\n 40440: jump @1648 if a0 == 0\n      : @1647 (gas: 1)\n 40443: jump @1912\n      : @1648 (gas: 9)\n 40446: a0 = u64 [s1 + 0x218]\n 40450: a2 = u64 [a0 + 0x10]\n 40453: a3 = u64 [a0 + 0x18]\n 40456: a4 = u64 [a0 + 0x8]\n 40459: a0 = u64 [a0]\n 40461: a3 = a3 | a4\n 40464: a4 = a0 | a2\n 40467: a4 = a4 | a3\n 40470: jump @1723 if a4 != 0\n      : @1649 (gas: 55)\n 40474: a0 = u64 [s1 + 0x48]\n 40477: a2 = a0 * 0xf4240\n 40482: u64 [s1 + 0x58] = a2\n 40485: ra = u64 [s1 + 0x60]\n 40488: a0 = a2 | ra\n 40491: t0 = u64 [s1 + 0x68]\n 40494: t2 = u64 [s1 + 0x130]\n 40498: a1 = t0 | t2\n 40501: a0 = a0 | a1\n 40504: a0 = a0 <u 0x1\n 40507: u64 [s1 + 0x218] = a0\n 40511: a0 = clz ra\n 40513: a0 = a0 + 0x40\n 40516: a1 = clz t2\n 40518: a1 = a0 if t2 == 0\n 40521: a0 = clz a2\n 40523: a0 = a0 + 0x40\n 40526: a2 = clz t0\n 40528: a2 = a0 if t0 == 0\n 40531: a0 = a2 + 0x80\n 40535: a4 = ra | t2\n 40538: a1 = a0 if a4 == 0\n 40541: a2 = a0 <u a2\n 40544: a2 = 0 if a4 != 0\n 40546: a4 = a2 >u 0\n 40548: a0 = a1 <u 0xed\n 40552: a5 = a0 ^ 0x1\n 40555: a4 = a5 if a2 == 0\n 40558: a0 = a4 <u 0x1\n 40561: a3 = a0 + 0xffffffffffffffff\n 40564: t1 = -a4\n 40566: a2 = -a2\n 40568: a2 = a2 - a5\n 40571: a0 = 0xec - a1\n 40575: u64 [s1 + 0x200] = t1\n 40579: a1 = t1 >u 0\n 40581: a5 = a3 >u 0\n 40583: u64 [s1 + 0x208] = a3\n 40587: a5 = a1 if a3 == 0\n 40590: a1 = a2 >u 0\n 40592: u64 [s1 + 0x210] = a0\n 40596: a3 = a0 <u 0x100\n 40600: a3 = a3 ^ 0x1\n 40603: a3 = a1 if a2 != 0\n 40606: a3 = a5 if a4 != 0\n 40609: a0 = u64 [s1 + 0x218]\n 40613: a0 = a0 | a3\n 40616: t2 = 0 if a0 != 0\n 40618: a5 = ra\n 40620: a5 = 0 if a0 != 0\n 40622: a4 = t0\n 40624: a4 = 0 if a0 != 0\n 40626: a1 = u64 [s1 + 0x58]\n 40629: a1 = 0 if a0 != 0\n 40631: jump @1734 if a0 != 0\n      : @1650 (gas: 10)\n 40635: t1 = a2\n 40637: a3 = s1 + 0x200\n 40641: a0 = u64 [a3 + 0x10]\n 40644: a0 = a0 ^ 0xff\n 40648: a2 = u64 [a3]\n 40650: t0 = a0 | a2\n 40653: a0 = u64 [a3 + 0x8]\n 40656: a0 = t1 | a0\n 40659: a0 = t0 | a0\n 40662: jump @1734 if a0 == 0\n      : @1651 (gas: 21)\n 40666: a2 = u64 [s1 + 0x210]\n 40670: a1 = a2 + 0x1\n 40673: u64 [s1 + 0x218] = a1\n 40677: a0 = a1 <u 0x1\n 40680: a0 = a0 + t1\n 40683: u64 [s1 + 0x1e8] = a0\n 40687: a0 = a0 | a1\n 40690: a0 = a0 <u 0x1\n 40693: a1 = u64 [s1 + 0x200]\n 40697: a0 = a0 + a1\n 40700: u64 [s1 + 0x1d8] = a0\n 40704: a0 = a0 <u a1\n 40707: a1 = u64 [s1 + 0x208]\n 40711: a0 = a0 + a1\n 40714: u64 [s1 + 0x1e0] = a0\n 40718: a1 = 0xff - a2\n 40722: u64 [s1 + 0x208] = a1\n 40726: a2 = 0x80 - a1\n 40730: a0 = u64 [s1 + 0x58]\n 40733: a1 = u64 [s1 + 0x68]\n 40736: ra = 1732, jump @2677\n      : @1652 [@dyn 866] (gas: 6)\n 40742: u64 [s1 + 0x200] = a0\n 40746: u64 [s1 + 0x1f8] = a1\n 40750: a0 = u64 [s1 + 0x60]\n 40753: a1 = u64 [s1 + 0x130]\n 40757: a2 = u64 [s1 + 0x208]\n 40761: ra = 1734, jump @2682\n      : @1653 [@dyn 867] (gas: 9)\n 40767: u64 [s1 + 0x1f0] = a0\n 40771: a0 = u64 [s1 + 0x1f8]\n 40775: a0 = a0 | a1\n 40778: u64 [s1 + 0x1f8] = a0\n 40782: a1 = u64 [s1 + 0x210]\n 40786: a2 = 0x7f - a1\n 40789: a0 = u64 [s1 + 0x58]\n 40792: a1 = u64 [s1 + 0x68]\n 40795: ra = 1736, jump @2682\n      : @1654 [@dyn 868] (gas: 18)\n 40801: a2 = u64 [s1 + 0x208]\n 40805: a3 = a2 <u 0x80\n 40809: u64 [s1 + 0x210] = a3\n 40813: a4 = u64 [s1 + 0x1f8]\n 40817: a1 = a4 if a3 != 0\n 40820: a4 = u64 [s1 + 0x130]\n 40824: a1 = a4 if a2 == 0\n 40827: u64 [s1 + 0x1f8] = a1\n 40831: a1 = u64 [s1 + 0x200]\n 40835: a4 = u64 [s1 + 0x1f0]\n 40839: a1 = a1 | a4\n 40842: a1 = a0 if a3 == 0\n 40845: a0 = u64 [s1 + 0x60]\n 40848: a1 = a0 if a2 == 0\n 40851: u64 [s1 + 0x200] = a1\n 40855: a0 = u64 [s1 + 0x58]\n 40858: a1 = u64 [s1 + 0x68]\n 40861: ra = 1738, jump @2682\n      : @1655 [@dyn 869] (gas: 14)\n 40867: a5 = s1 + 0x100\n 40871: a2 = u64 [a5 + 0xe8]\n 40875: a3 = u64 [a5 + 0xe0]\n 40879: a2 = a2 | a3\n 40882: a3 = u64 [s1 + 0x218]\n 40886: a4 = u64 [a5 + 0xd8]\n 40890: a3 = a3 | a4\n 40893: a2 = a2 | a3\n 40896: a3 = u64 [s1 + 0x210]\n 40900: a1 = 0 if a3 == 0\n 40902: u64 [a5 + 0xf0] = a1\n 40906: a0 = 0 if a3 == 0\n 40908: u64 [s1 + 0x208] = a0\n 40912: jump @1727 if a2 != 0\n      : @1656 (gas: 3)\n 40916: u64 [s1 + 528] = 0\n 40920: u64 [s1 + 440] = 0\n 40924: jump @1733\n      : @1657 (gas: 4)\n 40927: a0 = s1 + 0x7ff\n 40931: a0 = a0 + 0x121\n 40935: a1 = 0x40\n 40938: ra = 1740, jump @17\n      : @1658 [@dyn 870] (gas: 9)\n 40945: a0 = s1 + 0x1000\n 40949: a2 = u64 [a0 + 0xfffffffffffff938]\n 40953: a0 = s1 + 0x1000\n 40957: a3 = u64 [a0 + 0xfffffffffffff930]\n 40961: a0 = s1 + 0x1000\n 40965: a0 = u64 [a0 + 0xfffffffffffff928]\n 40969: a1 = s1 + 0x1000\n 40973: a1 = u64 [a1 + 0xfffffffffffff920]\n 40977: t0 = 1742, jump @2575\n      : @1659 [@dyn 871] (gas: 1)\n 40983: jump @1661 if a0 == 0\n      : @1660 (gas: 1)\n 40986: jump @848\n      : @1661 (gas: 9)\n 40989: a0 = s1 + 0x1000\n 40993: u64 [a0 + 4294965520] = 0\n 40997: a0 = s1 + 0x1000\n 41001: u64 [a0 + 4294965512] = 0\n 41005: a0 = s1 + 0x1000\n 41009: u64 [a0 + 4294965504] = 0\n 41013: t0 = 0x6d0\n 41017: a0 = 0x8c379a000000000\n 41027: fallthrough\n      : @1662 [@dyn 872] (gas: 6)\n 41028: a1 = s1 + 0x7ff\n 41032: a1 = a1 + 0x101\n 41036: a2 = s1 + 0x1000\n 41040: u64 [a2 + 0xfffffffffffff918] = a0\n 41044: a0 = u64 [s1 + 0x218]\n 41048: ra = 1746, jump @19\n      : @1663 [@dyn 873] (gas: 1)\n 41055: t0 = 1748, jump @2561\n      : @1664 [@dyn 874] (gas: 1)\n 41061: jump @1666 if a0 != 0\n      : @1665 (gas: 1)\n 41064: jump @848\n      : @1666 (gas: 13)\n 41067: a0 = u64 [s1 + 0x218]\n 41071: i32 a0 = a0 + 0x4\n 41074: a1 = s1 + 0x1000\n 41078: u64 [a1 + 4294965496] = 0\n 41082: a1 = s1 + 0x1000\n 41086: u64 [a1 + 4294965488] = 0\n 41090: a2 = s1 + 0x1000\n 41094: u64 [a2 + 4294965472] = 0x20\n 41099: a1 = s1 + 0x7ff\n 41103: a1 = a1 + 0xe1\n 41107: a2 = s1 + 0x1000\n 41111: u64 [a2 + 4294965480] = 0\n 41115: ra = 1750, jump @19\n      : @1667 [@dyn 875] (gas: 4)\n 41122: a2 = s1 + 0x200\n 41126: a0 = u64 [a2]\n 41128: a0 = a0 + 0xffffffffffffffdc\n 41131: t0 = 1752, jump @2559\n      : @1668 [@dyn 876] (gas: 1)\n 41137: jump @1670 if a0 != 0\n      : @1669 (gas: 1)\n 41140: jump @848\n      : @1670 (gas: 13)\n 41143: a0 = u64 [s1 + 0x218]\n 41147: i32 a0 = a0 + 0x24\n 41150: a1 = s1 + 0x1000\n 41154: u64 [a1 + 4294965464] = 0\n 41158: a1 = s1 + 0x1000\n 41162: u64 [a1 + 4294965456] = 0\n 41166: a2 = s1 + 0x1000\n 41170: u64 [a2 + 4294965440] = 0x24\n 41175: a1 = s1 + 0x7ff\n 41179: a1 = a1 + 0xc1\n 41183: a2 = s1 + 0x1000\n 41187: u64 [a2 + 4294965448] = 0\n 41191: ra = 1754, jump @19\n      : @1671 [@dyn 877] (gas: 5)\n 41198: a0 = 0x100000000\n 41208: a2 = s1 + 0x200\n 41212: u64 [a2] = a0\n 41214: a0 = 0xffffffbc\n 41224: t0 = 1756, jump @2559\n      : @1672 [@dyn 878] (gas: 1)\n 41230: jump @1674 if a0 != 0\n      : @1673 (gas: 1)\n 41233: jump @848\n      : @1674 (gas: 17)\n 41236: a0 = u64 [s1 + 0x218]\n 41240: i32 a0 = a0 + 0x44\n 41243: a1 = u64 [0x20048]\n 41248: a2 = s1 + 0x1000\n 41252: u64 [a2 + 0xfffffffffffff8b8] = a1\n 41256: a1 = u64 [0x200b0]\n 41261: a2 = u64 [0x200b8]\n 41266: a3 = u64 [0x20110]\n 41271: a4 = s1 + 0x1000\n 41275: u64 [a4 + 0xfffffffffffff8b0] = a1\n 41279: a1 = s1 + 0x1000\n 41283: u64 [a1 + 0xfffffffffffff8a8] = a2\n 41287: a1 = s1 + 0x7ff\n 41291: a1 = a1 + 0xa1\n 41295: a2 = s1 + 0x1000\n 41299: u64 [a2 + 0xfffffffffffff8a0] = a3\n 41303: ra = 1758, jump @19\n      : @1675 [@dyn 879] (gas: 4)\n 41310: a2 = s1 + 0x200\n 41314: a0 = u64 [a2]\n 41316: a0 = a0 + 0xffffffffffffff9c\n 41319: t0 = 1760, jump @2559\n      : @1676 [@dyn 880] (gas: 1)\n 41325: jump @1678 if a0 != 0\n      : @1677 (gas: 1)\n 41328: jump @848\n      : @1678 (gas: 15)\n 41331: a0 = u64 [s1 + 0x218]\n 41335: i32 a0 = a0 + 0x64\n 41338: a1 = s1 + 0x1000\n 41342: u64 [a1 + 4294965392] = 0\n 41346: a1 = s1 + 0x1000\n 41350: u64 [a1 + 4294965384] = 0\n 41354: a1 = 0x4f554e5400000000\n 41364: a2 = s1 + 0x1000\n 41368: u64 [a2 + 0xfffffffffffff898] = a1\n 41372: a1 = s1 + 0x7ff\n 41376: a1 = a1 + 0x81\n 41380: a2 = s1 + 0x1000\n 41384: u64 [a2 + 4294965376] = 0\n 41388: ra = 0x368\n 41392: jump @19\n      : @1679 (gas: 2)\n 41396: a0 = u64 [s1 + 0x218]\n 41400: ra = 1762, jump @23\n      : @1680 [@dyn 881] (gas: 1)\n 41407: t0 = 1764, jump @2615\n      : @1681 [@dyn 882] (gas: 1)\n 41413: jump @1683 if a4 == 0\n      : @1682 (gas: 1)\n 41416: jump @848\n      : @1683 (gas: 8)\n 41419: a4 = s1 + 0x1998\n 41423: a5 = a4 + 0x600\n 41427: u64 [a5 + 0x48] = a0\n 41430: u64 [a5 + 0x50] = a3\n 41433: u64 [a5 + 0x58] = a1\n 41436: a1 = s1 + 0x1fe0\n 41440: u64 [a5 + 0x60] = a2\n 41443: ra = 1766, jump @19\n      : @1684 [@dyn 883] (gas: 3)\n 41450: t0 = 0x6e8\n 41454: a1 = s1 + 0x1998\n 41458: fallthrough\n      : @1685 [@dyn 884] (gas: 8)\n 41459: u64 [a1 + 1600] = 0\n 41463: u64 [a1 + 1592] = 0\n 41467: u64 [a1 + 1576] = 0x1\n 41472: a2 = a1\n 41474: a0 = 0x20\n 41477: a1 = s1 + 0x1fc0\n 41481: u64 [a2 + 1584] = 0\n 41485: ra = 1770, jump @19\n      : @1686 [@dyn 885] (gas: 1)\n 41492: t0 = 1772, jump @2555\n      : @1687 [@dyn 886] (gas: 1)\n 41498: jump @1689 if a1 == 0\n      : @1688 (gas: 1)\n 41501: jump @848\n      : @1689 (gas: 2)\n 41504: a1 = 0x40\n 41507: ra = 1774, jump @32\n      : @1690 [@dyn 887] (gas: 4)\n 41514: a1 = sp + 0xffffffffffffffe0\n 41517: a1 = a1 & 0xffffffffffffffe0\n 41520: u64 [s1 + 0xf0] = a1\n 41524: t0 = 1776, jump @2583\n      : @1691 [@dyn 888] (gas: 5)\n 41530: ra = 0x6f2\n 41534: ecalli 10 // 'hash_keccak_256'\n 41536: a3 = u64 [s1 + 0xf0]\n 41540: t0 = 0x6f4\n 41544: jump @2600\n      : @1692 [@dyn 889] (gas: 2)\n 41547: a3 = u64 [s1 + 0xf0]\n 41551: t0 = 1780, jump @2600\n      : @1693 [@dyn 890] (gas: 7)\n 41557: u64 [a5 + 0x60] = a3\n 41560: u64 [a5 + 0x58] = a2\n 41563: u64 [a5 + 0x50] = a1\n 41566: u64 [a5 + 0x48] = a0\n 41569: a0 = s1 + 0x1fa0\n 41573: a1 = s1 + 0x4de0\n 41577: ra = 1782, jump @21\n      : @1694 [@dyn 891] (gas: 2)\n 41584: a1 = s1 + 0x1998\n 41588: fallthrough\n      : @1695 (gas: 34)\n 41589: t0 = u64 [a1 + 0x620]\n 41593: t1 = u64 [a1 + 0x618]\n 41597: a0 = u64 [a1 + 0x610]\n 41601: t2 = u64 [a1 + 0x608]\n 41605: a4 = sp + 0xffffffffffffffe0\n 41608: a3 = a4 & 0xffffffffffffffe0\n 41611: sp = a3\n 41613: a4 = t2 + 0x3e8\n 41617: a5 = a4 <u t2\n 41620: a2 = a0 + a5\n 41623: a1 = a2 <u a0\n 41626: a1 = a5 if a5 == 0\n 41629: a1 = a1 + t1\n 41632: a5 = a1 <u t1\n 41635: ra = t0 + a5\n 41638: u64 [a3 + 0x10] = a1\n 41641: u64 [a3 + 0x8] = a2\n 41644: u64 [a3] = a4\n 41646: a0 = a0 + 0x1\n 41649: a1 = t2 <u 0xfffffffffffffc18\n 41653: a4 = a1 ^ 0x1\n 41656: a4 = 0 if a0 != 0\n 41658: a2 = t1 & t0\n 41661: a0 = u64 [s1 + 0x218]\n 41665: t0 = u64 [a0 + 0x18]\n 41668: a1 = u64 [a0 + 0x10]\n 41671: a5 = u64 [a0 + 0x8]\n 41674: a0 = u64 [a0]\n 41676: a2 = a2 + 0x1\n 41679: a4 = 0 if a2 != 0\n 41681: u64 [s1 + 0xf0] = a3\n 41685: u64 [a3 + 0x18] = ra\n 41688: a2 = a0 | a1\n 41691: jump @1794 if a4 == 0\n      : @1696 (gas: 7)\n 41695: a3 = a5 | t0\n 41698: a2 = a2 | a3\n 41701: a2 = a2 >> 0x20\n 41704: a1 = a1 | a3\n 41707: a1 = a1 << 0x20\n 41710: a1 = a1 | a2\n 41713: jump @1698 if a1 == 0\n      : @1697 (gas: 1)\n 41716: jump @848\n      : @1698 (gas: 8)\n 41719: a2 = s1 + 0x1998\n 41723: u64 [a2 + 568] = 0\n 41727: u64 [a2 + 560] = 0\n 41731: a1 = 0x4e487b7100000000\n 41741: u64 [a2 + 0x240] = a1\n 41745: a1 = s1 + 0x1bc0\n 41749: u64 [a2 + 552] = 0\n 41753: ra = 1784, jump @19\n      : @1699 [@dyn 892] (gas: 3)\n 41760: t0 = 0x6fa\n 41764: a1 = s1 + 0x1998\n 41768: fallthrough\n      : @1700 [@dyn 893] (gas: 9)\n 41769: u64 [a1 + 544] = 0\n 41773: u64 [a1 + 536] = 0\n 41777: u64 [a1 + 520] = 0x11\n 41782: a2 = a1\n 41784: a0 = 0x4\n 41787: a1 = s1 + 0x1ba0\n 41791: u64 [a2 + 528] = 0\n 41795: ra = 0x544\n 41799: jump @19\n      : @1701 (gas: 3)\n 41803: a0 = s1 + 0x28c0\n 41807: a1 = 0x40\n 41810: ra = 1788, jump @17\n      : @1702 [@dyn 894] (gas: 7)\n 41817: a0 = s1 + 0x2198\n 41821: a5 = a0 + 0x700\n 41825: a3 = u64 [a5 + 0x40]\n 41828: a4 = u64 [a5 + 0x38]\n 41831: a2 = u64 [a5 + 0x30]\n 41834: a1 = u64 [a5 + 0x28]\n 41837: t0 = 1790, jump @2586\n      : @1703 [@dyn 895] (gas: 1)\n 41843: jump @1705 if a0 == 0\n      : @1704 (gas: 1)\n 41846: jump @848\n      : @1705 (gas: 7)\n 41849: a2 = s1 + 0x2198\n 41853: u64 [a2 + 1816] = 0\n 41857: u64 [a2 + 1808] = 0\n 41861: u64 [a2 + 1800] = 0\n 41865: t0 = 0x700\n 41869: a0 = 0x8c379a000000000\n 41879: fallthrough\n      : @1706 [@dyn 896] (gas: 4)\n 41880: a1 = s1 + 0x28a0\n 41884: u64 [a2 + 0x720] = a0\n 41888: a0 = u64 [s1 + 0x218]\n 41892: ra = 1794, jump @19\n      : @1707 [@dyn 897] (gas: 1)\n 41899: t0 = 1796, jump @2561\n      : @1708 [@dyn 898] (gas: 1)\n 41905: jump @1710 if a0 != 0\n      : @1709 (gas: 1)\n 41908: jump @848\n      : @1710 (gas: 9)\n 41911: a0 = u64 [s1 + 0x218]\n 41915: i32 a0 = a0 + 0x4\n 41918: a2 = s1 + 0x2198\n 41922: u64 [a2 + 1792] = 0\n 41926: u64 [a2 + 1784] = 0\n 41930: u64 [a2 + 1768] = 0x20\n 41935: a1 = s1 + 0x2880\n 41939: u64 [a2 + 1776] = 0\n 41943: ra = 1798, jump @19\n      : @1711 [@dyn 899] (gas: 4)\n 41950: a2 = s1 + 0x200\n 41954: a0 = u64 [a2]\n 41956: a0 = a0 + 0xffffffffffffffdc\n 41959: t0 = 1800, jump @2559\n      : @1712 [@dyn 900] (gas: 1)\n 41965: jump @1714 if a0 != 0\n      : @1713 (gas: 1)\n 41968: jump @848\n      : @1714 (gas: 9)\n 41971: a0 = u64 [s1 + 0x218]\n 41975: i32 a0 = a0 + 0x24\n 41978: a2 = s1 + 0x2198\n 41982: u64 [a2 + 1760] = 0\n 41986: u64 [a2 + 1752] = 0\n 41990: u64 [a2 + 1736] = 0x28\n 41995: a1 = s1 + 0x2860\n 41999: u64 [a2 + 1744] = 0\n 42003: ra = 1802, jump @19\n      : @1715 [@dyn 901] (gas: 5)\n 42010: a0 = 0x100000000\n 42020: a2 = s1 + 0x200\n 42024: u64 [a2] = a0\n 42026: a0 = 0xffffffbc\n 42036: t0 = 1804, jump @2559\n      : @1716 [@dyn 902] (gas: 1)\n 42042: jump @1718 if a0 != 0\n      : @1717 (gas: 1)\n 42045: jump @848\n      : @1718 (gas: 14)\n 42048: a0 = u64 [s1 + 0x218]\n 42052: i32 a0 = a0 + 0x44\n 42055: a1 = u64 [0x20048]\n 42060: a4 = s1 + 0x2198\n 42064: a5 = a4 + 0x600\n 42068: u64 [a5 + 0xc0] = a1\n 42072: a1 = u64 [0x200b0]\n 42077: a2 = u64 [0x200b8]\n 42082: a3 = u64 [0x200c0]\n 42087: u64 [a5 + 0xb8] = a1\n 42091: u64 [a5 + 0xb0] = a2\n 42095: a1 = s1 + 0x2840\n 42099: u64 [a5 + 0xa8] = a3\n 42103: ra = 1806, jump @19\n      : @1719 [@dyn 903] (gas: 4)\n 42110: a2 = s1 + 0x200\n 42114: a0 = u64 [a2]\n 42116: a0 = a0 + 0xffffffffffffff9c\n 42119: t0 = 1808, jump @2559\n      : @1720 [@dyn 904] (gas: 1)\n 42125: jump @1722 if a0 != 0\n      : @1721 (gas: 1)\n 42128: jump @848\n      : @1722 (gas: 11)\n 42131: a0 = u64 [s1 + 0x218]\n 42135: i32 a0 = a0 + 0x64\n 42138: a1 = u64 [0x200c8]\n 42143: a2 = s1 + 0x2198\n 42147: u64 [a2 + 1688] = 0\n 42151: u64 [a2 + 1680] = 0\n 42155: u64 [a2 + 0x6a0] = a1\n 42159: a1 = s1 + 0x2820\n 42163: u64 [a2 + 1672] = 0\n 42167: ra = 0x368\n 42171: jump @19\n      : @1723 (gas: 5)\n 42175: a4 = a4 >> 0x20\n 42178: a2 = a2 | a3\n 42181: a2 = a2 << 0x20\n 42184: a2 = a2 | a4\n 42187: jump @1725 if a2 == 0\n      : @1724 (gas: 1)\n 42190: jump @848\n      : @1725 (gas: 7)\n 42193: u64 [s1 + 1456] = 0\n 42197: u64 [s1 + 1448] = 0\n 42201: a1 = 0x4e487b7100000000\n 42211: u64 [s1 + 0x5b8] = a1\n 42215: a1 = s1 + 0x5a0\n 42219: u64 [s1 + 1440] = 0\n 42223: ra = 1810, jump @19\n      : @1726 [@dyn 905] (gas: 8)\n 42230: u64 [s1 + 1432] = 0\n 42234: u64 [s1 + 1424] = 0\n 42238: u64 [s1 + 1408] = 0x12\n 42243: a0 = 0x4\n 42246: a1 = s1 + 0x580\n 42250: u64 [s1 + 1416] = 0\n 42254: ra = 0x544\n 42258: jump @19\n      : @1727 (gas: 6)\n 42262: u64 [s1 + 432] = 0xf4240\n 42269: a0 = u64 [s1 + 0x218]\n 42273: a2 = a0 + 0xffffffffffffff80\n 42276: a0 = u64 [s1 + 0x60]\n 42279: a1 = u64 [s1 + 0x130]\n 42283: ra = 1812, jump @2677\n      : @1728 [@dyn 906] (gas: 6)\n 42289: u64 [s1 + 0x210] = a0\n 42293: u64 [s1 + 0x1d0] = a1\n 42297: a0 = u64 [s1 + 0x58]\n 42300: a1 = u64 [s1 + 0x68]\n 42303: a2 = u64 [s1 + 0x218]\n 42307: ra = 1814, jump @2677\n      : @1729 [@dyn 907] (gas: 7)\n 42313: u64 [s1 + 0x1c8] = a0\n 42317: u64 [s1 + 0x1c0] = a1\n 42321: a1 = u64 [s1 + 0x218]\n 42325: a2 = 0x80 - a1\n 42329: a0 = u64 [s1 + 0x60]\n 42332: a1 = u64 [s1 + 0x130]\n 42336: ra = 1816, jump @2682\n      : @1730 [@dyn 908] (gas: 20)\n 42342: a2 = u64 [s1 + 0x1c0]\n 42346: a1 = a1 | a2\n 42349: a2 = u64 [s1 + 0x218]\n 42353: a3 = a2 <u 0x80\n 42357: u64 [s1 + 0x1b8] = a3\n 42361: a4 = u64 [s1 + 0x1d0]\n 42365: a1 = a4 if a3 == 0\n 42368: a4 = u64 [s1 + 0x68]\n 42371: a1 = a4 if a2 == 0\n 42374: u64 [s1 + 0x1d0] = a1\n 42378: a1 = u64 [s1 + 0x1c8]\n 42382: a1 = a1 | a0\n 42385: a0 = u64 [s1 + 0x210]\n 42389: a1 = a0 if a3 == 0\n 42392: a0 = u64 [s1 + 0x58]\n 42395: a1 = a0 if a2 == 0\n 42398: u64 [s1 + 0x10] = a1\n 42401: a0 = u64 [s1 + 0x60]\n 42404: a1 = u64 [s1 + 0x130]\n 42408: ra = 1818, jump @2677\n      : @1731 [@dyn 909] (gas: 15)\n 42414: ra = u64 [s1 + 0x10]\n 42417: u64 [s1 + 528] = 0\n 42421: u64 [s1 + 448] = 0\n 42425: a3 = s1 + 0x100\n 42429: a2 = u64 [a3 + 0xb8]\n 42433: a1 = 0 if a2 == 0\n 42435: u64 [a3 + 0xc8] = a1\n 42439: a0 = 0 if a2 == 0\n 42441: a1 = u64 [a3 + 0xb0]\n 42445: a2 = a1 + 0xffffffffffffffff\n 42448: u64 [a3 + 0xa8] = a2\n 42452: a2 = a1 >u 0\n 42454: a2 = a2 + 0xffffffffffffffff\n 42457: u64 [a3 + 0xa0] = a2\n 42461: fallthrough\n      : @1732 (gas: 91)\n 42462: u64 [s1 + 440] = 0\n 42466: a2 = ra >> 0x3f\n 42469: a5 = u64 [s1 + 0x1d0]\n 42473: a3 = a5 << 0x1\n 42476: t1 = a3 | a2\n 42479: a2 = ra << 0x1\n 42482: a1 = u64 [s1 + 0x1f8]\n 42486: a4 = a1 >> 0x3f\n 42489: t2 = a2 | a4\n 42492: a3 = u64 [s1 + 0x1a0]\n 42496: a4 = a3 ^ t1\n 42499: ra = a3 <u t1\n 42502: a2 = u64 [s1 + 0x1a8]\n 42506: t0 = a2 <u t2\n 42509: t0 = ra if a4 != 0\n 42512: a2 = u64 [s1 + 0x1c8]\n 42516: a2 = a2 << 0x1\n 42519: a4 = a0 >> 0x3f\n 42522: a2 = a2 | a4\n 42525: u64 [s1 + 0x1c8] = a2\n 42529: a4 = a5 >> 0x3f\n 42532: a0 = a0 << 0x1\n 42535: a4 = a4 | a0\n 42538: a0 = a1 << 0x1\n 42541: a1 = u64 [s1 + 0x200]\n 42545: a5 = a1 >> 0x3f\n 42548: a0 = a0 | a5\n 42551: u64 [s1 + 0x1f8] = a0\n 42555: a5 = a1 << 0x1\n 42558: a0 = u64 [s1 + 0x1f0]\n 42562: a1 = a0 >> 0x3f\n 42565: a1 = a1 | a5\n 42568: a5 = a0 << 0x1\n 42571: a0 = u64 [s1 + 0x208]\n 42575: ra = a0 >> 0x3f\n 42578: a5 = a5 | ra\n 42581: a0 = a0 << 0x1\n 42584: a2 = u64 [s1 + 0x210]\n 42588: a0 = a0 | a2\n 42591: u64 [s1 + 0x208] = a0\n 42595: a2 = u64 [s1 + 0x1c0]\n 42599: a0 = a2 | a5\n 42602: u64 [s1 + 0x1f0] = a0\n 42606: a0 = a2 | a1\n 42609: u64 [s1 + 0x200] = a0\n 42613: a0 = u64 [s1 + 0x1f8]\n 42617: a0 = a0 | a2\n 42620: u64 [s1 + 0x1f8] = a0\n 42624: a0 = a3 - a4\n 42627: a0 = a0 <u t0\n 42630: a1 = a3 <u a4\n 42633: a2 = u64 [s1 + 0x1c8]\n 42637: a5 = a3 - a2\n 42640: a5 = a5 - a1\n 42643: a5 = a5 - a0\n 42646: t0 = a5 >>a 0x3f\n 42649: a0 = u64 [s1 + 0x1b0]\n 42653: a0 = t0 & a0\n 42656: ra = t2 - a0\n 42659: a1 = t2 <u a0\n 42662: a0 = t1 - a1\n 42665: u64 [s1 + 0x1d0] = a0\n 42669: a1 = 0 if t1 != 0\n 42671: a0 = a4 - a1\n 42674: a1 = a4 <u a1\n 42677: a1 = a2 - a1\n 42680: u64 [s1 + 0x1c8] = a1\n 42684: a1 = s1 + 0x200\n 42688: a3 = u64 [a1 + 0x18]\n 42691: a5 = u64 [s1 + 0x1e8]\n 42695: a2 = a3 | a5\n 42698: a2 = a2 <u 0x1\n 42701: a4 = u64 [s1 + 0x1d8]\n 42705: t1 = a4 <u a2\n 42708: a4 = a4 - a2\n 42711: a2 = a3 <u 0x1\n 42714: a5 = a5 - a2\n 42717: a2 = u64 [s1 + 0x1e0]\n 42721: a2 = a2 - t1\n 42724: a3 = a3 + 0xffffffffffffffff\n 42727: u64 [s1 + 0x1e8] = a5\n 42731: u64 [s1 + 0x1e0] = a2\n 42735: a2 = a2 | a5\n 42738: u64 [a1 + 0x18] = a3\n 42741: a3 = a3 | a4\n 42744: a2 = a2 | a3\n 42747: a3 = t0 & 0x1\n 42750: u64 [a1 + 0x10] = a3\n 42753: u64 [s1 + 0x1d8] = a4\n 42757: u64 [s1 + 448] = 0\n 42761: jump @1732 if a2 != 0\n      : @1733 (gas: 21)\n 42765: a2 = u64 [s1 + 0x200]\n 42769: a0 = a2 >> 0x3f\n 42772: a1 = u64 [s1 + 0x1f8]\n 42776: a1 = a1 << 0x1\n 42779: t0 = a1 | a0\n 42782: a4 = u64 [s1 + 0x1f0]\n 42786: a1 = a4 >> 0x3f\n 42789: a2 = a2 << 0x1\n 42792: a2 = a2 | a1\n 42795: a1 = u64 [s1 + 0x208]\n 42799: a3 = a1 >> 0x3f\n 42802: a4 = a4 << 0x1\n 42805: a1 = a1 << 0x1\n 42808: a5 = u64 [s1 + 0x210]\n 42812: a1 = a1 | a5\n 42815: a0 = u64 [s1 + 0x1b8]\n 42819: a3 = a3 | a0\n 42822: a4 = a4 | a3\n 42825: a5 = a0 | a2\n 42828: t2 = a0 | t0\n 42831: fallthrough\n      : @1734 (gas: 12)\n 42832: a0 = u64 [s1 + 0x48]\n 42835: a0 = a0 ^ a1\n 42838: a1 = u64 [s1 + 0x40]\n 42841: a1 = a1 ^ a5\n 42844: a2 = u64 [s1 + 0x38]\n 42847: a2 = a2 ^ a4\n 42850: a4 = u64 [s1 + 0x50]\n 42853: a3 = t2 ^ a4\n 42856: a2 = a2 | a3\n 42859: a1 = a1 | a2\n 42862: a0 = a0 | a1\n 42865: jump @1754 if a0 != 0\n      : @1735 (gas: 20)\n 42869: a0 = u64 [s1 + 0x18]\n 42872: a1 = u64 [s1 + 0x58]\n 42875: a0 = a0 <u a1\n 42878: a2 = u64 [s1 + 0x20]\n 42881: a3 = u64 [s1 + 0x68]\n 42884: a1 = a2 ^ a3\n 42887: a2 = a2 <u a3\n 42890: a2 = a0 if a1 == 0\n 42893: a0 = u64 [s1 + 0x30]\n 42896: a5 = u64 [s1 + 0x60]\n 42899: t0 = a0 <u a5\n 42902: a3 = u64 [s1 + 0x28]\n 42905: a1 = u64 [s1 + 0x130]\n 42909: a4 = a3 ^ a1\n 42912: a3 = a3 <u a1\n 42915: a3 = t0 if a4 == 0\n 42918: a0 = a0 ^ a5\n 42921: a0 = a0 | a4\n 42924: a3 = a2 if a0 == 0\n 42927: jump @1772 if a3 == 0\n      : @1736 (gas: 3)\n 42931: a0 = s1 + 0x340\n 42935: a1 = 0x40\n 42938: ra = 1820, jump @17\n      : @1737 [@dyn 910] (gas: 6)\n 42945: a4 = s1 + 0x300\n 42949: a2 = u64 [a4 + 0x58]\n 42952: a3 = u64 [a4 + 0x50]\n 42955: a0 = u64 [a4 + 0x48]\n 42958: a1 = u64 [a4 + 0x40]\n 42961: t0 = 1822, jump @2575\n      : @1738 [@dyn 911] (gas: 1)\n 42967: jump @1740 if a0 == 0\n      : @1739 (gas: 1)\n 42970: jump @848\n      : @1740 (gas: 6)\n 42973: u64 [s1 + 816] = 0\n 42977: u64 [s1 + 808] = 0\n 42981: u64 [s1 + 800] = 0\n 42985: t0 = 0x720\n 42989: a0 = 0x8c379a000000000\n 42999: fallthrough\n      : @1741 [@dyn 912] (gas: 4)\n 43000: a1 = s1 + 0x320\n 43004: u64 [s1 + 0x338] = a0\n 43008: a0 = u64 [s1 + 0x218]\n 43012: ra = 1826, jump @19\n      : @1742 [@dyn 913] (gas: 1)\n 43019: t0 = 1828, jump @2561\n      : @1743 [@dyn 914] (gas: 1)\n 43025: jump @1745 if a0 != 0\n      : @1744 (gas: 1)\n 43028: jump @848\n      : @1745 (gas: 8)\n 43031: a0 = u64 [s1 + 0x218]\n 43035: i32 a0 = a0 + 0x4\n 43038: u64 [s1 + 792] = 0\n 43042: u64 [s1 + 784] = 0\n 43046: u64 [s1 + 768] = 0x20\n 43051: a1 = s1 + 0x300\n 43055: u64 [s1 + 776] = 0\n 43059: ra = 1830, jump @19\n      : @1746 [@dyn 915] (gas: 4)\n 43066: a2 = s1 + 0x200\n 43070: a0 = u64 [a2]\n 43072: a0 = a0 + 0xffffffffffffffdc\n 43075: t0 = 1832, jump @2559\n      : @1747 [@dyn 916] (gas: 1)\n 43081: jump @1749 if a0 != 0\n      : @1748 (gas: 1)\n 43084: jump @848\n      : @1749 (gas: 8)\n 43087: a0 = u64 [s1 + 0x218]\n 43091: i32 a0 = a0 + 0x24\n 43094: u64 [s1 + 760] = 0\n 43098: u64 [s1 + 752] = 0\n 43102: u64 [s1 + 736] = 0xc\n 43107: a1 = s1 + 0x2e0\n 43111: u64 [s1 + 744] = 0\n 43115: ra = 1834, jump @19\n      : @1750 [@dyn 917] (gas: 3)\n 43122: a0 = 0xffffffbc\n 43132: a2 = s1 + 0x200\n 43136: t0 = 1836, jump @2559\n      : @1751 [@dyn 918] (gas: 1)\n 43142: jump @1753 if a0 != 0\n      : @1752 (gas: 1)\n 43145: jump @848\n      : @1753 (gas: 12)\n 43148: a2 = s1 + 0x200\n 43152: a0 = u64 [a2 + 0x18]\n 43155: i32 a0 = a0 + 0x44\n 43158: a1 = u64 [0x20048]\n 43163: u64 [s1 + 712] = 0\n 43167: u64 [a2 + 0xd8] = a1\n 43171: a1 = 0x323a204b00000000\n 43181: u64 [a2 + 0xd0] = a1\n 43185: a1 = s1 + 0x2c0\n 43189: u64 [s1 + 704] = 0\n 43193: ra = 0x4fa\n 43197: jump @19\n      : @1754 (gas: 3)\n 43201: a0 = s1 + 0x560\n 43205: a1 = 0x40\n 43208: ra = 1838, jump @17\n      : @1755 [@dyn 919] (gas: 6)\n 43215: a4 = s1 + 0x500\n 43219: a2 = u64 [a4 + 0x78]\n 43222: a3 = u64 [a4 + 0x70]\n 43225: a0 = u64 [a4 + 0x68]\n 43228: a1 = u64 [a4 + 0x60]\n 43231: t0 = 1840, jump @2575\n      : @1756 [@dyn 920] (gas: 1)\n 43237: jump @1758 if a0 == 0\n      : @1757 (gas: 1)\n 43240: jump @848\n      : @1758 (gas: 6)\n 43243: u64 [s1 + 1360] = 0\n 43247: u64 [s1 + 1352] = 0\n 43251: u64 [s1 + 1344] = 0\n 43255: t0 = 0x732\n 43259: a0 = 0x8c379a000000000\n 43269: fallthrough\n      : @1759 [@dyn 921] (gas: 4)\n 43270: a1 = s1 + 0x540\n 43274: u64 [s1 + 0x558] = a0\n 43278: a0 = u64 [s1 + 0x218]\n 43282: ra = 1844, jump @19\n      : @1760 [@dyn 922] (gas: 1)\n 43289: t0 = 1846, jump @2561\n      : @1761 [@dyn 923] (gas: 1)\n 43295: jump @1763 if a0 != 0\n      : @1762 (gas: 1)\n 43298: jump @848\n      : @1763 (gas: 8)\n 43301: a0 = u64 [s1 + 0x218]\n 43305: i32 a0 = a0 + 0x4\n 43308: u64 [s1 + 1336] = 0\n 43312: u64 [s1 + 1328] = 0\n 43316: u64 [s1 + 1312] = 0x20\n 43321: a1 = s1 + 0x520\n 43325: u64 [s1 + 1320] = 0\n 43329: ra = 1848, jump @19\n      : @1764 [@dyn 924] (gas: 4)\n 43336: a2 = s1 + 0x200\n 43340: a0 = u64 [a2]\n 43342: a0 = a0 + 0xffffffffffffffdc\n 43345: t0 = 1850, jump @2559\n      : @1765 [@dyn 925] (gas: 1)\n 43351: jump @1767 if a0 != 0\n      : @1766 (gas: 1)\n 43354: jump @848\n      : @1767 (gas: 8)\n 43357: a0 = u64 [s1 + 0x218]\n 43361: i32 a0 = a0 + 0x24\n 43364: u64 [s1 + 1304] = 0\n 43368: u64 [s1 + 1296] = 0\n 43372: u64 [s1 + 1280] = 0x14\n 43377: a1 = s1 + 0x500\n 43381: u64 [s1 + 1288] = 0\n 43385: ra = 1852, jump @19\n      : @1768 [@dyn 926] (gas: 3)\n 43392: a0 = 0xffffffbc\n 43402: a2 = s1 + 0x200\n 43406: t0 = 1854, jump @2559\n      : @1769 [@dyn 927] (gas: 1)\n 43412: jump @1771 if a0 != 0\n      : @1770 (gas: 1)\n 43415: jump @848\n      : @1771 (gas: 13)\n 43418: a0 = u64 [s1 + 0x218]\n 43422: i32 a0 = a0 + 0x44\n 43425: a1 = u64 [0x20118]\n 43430: a2 = u64 [0x20120]\n 43435: a3 = s1 + 0x400\n 43439: u64 [a3 + 0xf8] = a1\n 43443: u64 [a3 + 0xf0] = a2\n 43447: a1 = 0x666c6f7700000000\n 43457: u64 [a3 + 0xe8] = a1\n 43461: a1 = s1 + 0x4e0\n 43465: u64 [s1 + 1248] = 0\n 43469: ra = 0x4fa\n 43473: jump @19\n      : @1772 (gas: 38)\n 43477: a1 = s1 + 0x100\n 43481: a0 = u64 [a1 + 0x38]\n 43484: u64 [s1 + 0x460] = a0\n 43488: a0 = u64 [a1 + 0x40]\n 43491: u64 [s1 + 0x480] = a0\n 43495: a0 = u64 [s1 + 0xb0]\n 43499: u64 [s1 + 0x4a0] = a0\n 43503: a0 = u64 [s1 + 0xb8]\n 43507: u64 [s1 + 0x4c0] = a0\n 43511: a0 = u64 [a1 + 0x20]\n 43514: u64 [s1 + 0x468] = a0\n 43518: a0 = u64 [a1 + 0x28]\n 43521: u64 [s1 + 0x488] = a0\n 43525: a0 = u64 [s1 + 0xe0]\n 43529: u64 [s1 + 0x4a8] = a0\n 43533: a0 = u64 [s1 + 0xc0]\n 43537: u64 [s1 + 0x4c8] = a0\n 43541: a0 = u64 [a1]\n 43543: u64 [s1 + 0x470] = a0\n 43547: a0 = u64 [a1 + 0x8]\n 43550: u64 [s1 + 0x490] = a0\n 43554: a0 = u64 [s1 + 0xe8]\n 43558: u64 [s1 + 0x4b0] = a0\n 43562: a0 = u64 [s1 + 0xc8]\n 43566: u64 [s1 + 0x4d0] = a0\n 43570: a0 = u64 [a1 + 0x10]\n 43573: u64 [s1 + 0x478] = a0\n 43577: a0 = u64 [a1 + 0x18]\n 43580: u64 [s1 + 0x498] = a0\n 43584: a0 = u64 [s1 + 0xf0]\n 43588: u64 [s1 + 0x4b8] = a0\n 43592: a0 = s1 + 0x4c0\n 43596: a1 = s1 + 0x4a0\n 43600: a2 = s1 + 0x480\n 43604: a3 = s1 + 0x460\n 43608: a4 = u64 [s1 + 0xd0]\n 43612: u64 [s1 + 0x4d8] = a4\n 43616: ra = 1856, jump @2248\n      : @1773 [@dyn 928] (gas: 3)\n 43622: a0 = s1 + 0x440\n 43626: a1 = 0x40\n 43629: ra = 1858, jump @17\n      : @1774 [@dyn 929] (gas: 6)\n 43636: a4 = s1 + 0x400\n 43640: a2 = u64 [a4 + 0x58]\n 43643: a3 = u64 [a4 + 0x50]\n 43646: a0 = u64 [a4 + 0x48]\n 43649: a1 = u64 [a4 + 0x40]\n 43652: t0 = 1860, jump @2575\n      : @1775 [@dyn 930] (gas: 1)\n 43658: jump @1777 if a0 == 0\n      : @1776 (gas: 1)\n 43661: jump @848\n      : @1777 (gas: 12)\n 43664: a0 = u64 [s1 + 0x90]\n 43668: a2 = s1 + 0x400\n 43672: u64 [a2 + 0x20] = a0\n 43675: a0 = u64 [s1 + 0x98]\n 43679: u64 [a2 + 0x28] = a0\n 43682: a0 = u64 [s1 + 0xa0]\n 43686: u64 [a2 + 0x30] = a0\n 43689: a1 = s1 + 0x420\n 43693: a0 = u64 [s1 + 0xa8]\n 43697: u64 [a2 + 0x38] = a0\n 43700: a0 = u64 [s1 + 0x218]\n 43704: ra = 1862, jump @19\n      : @1778 [@dyn 931] (gas: 14)\n 43711: a3 = s1 + 0x200\n 43715: a0 = u64 [a3 + 0x8]\n 43718: a2 = u64 [a3]\n 43720: a2 = a2 | a0\n 43723: a0 = 0x100000000\n 43733: u64 [a3] = a0\n 43735: a0 = 0xffffffe0\n 43745: a1 = u64 [a3 + 0x18]\n 43748: a0 = a1 <u a0\n 43751: a1 = u64 [a3 + 0x10]\n 43754: a0 = 0 if a1 != 0\n 43756: u64 [a3 + 0x8] = a2\n 43759: a0 = 0 if a2 != 0\n 43761: jump @1780 if a0 != 0\n      : @1779 (gas: 1)\n 43764: jump @848\n      : @1780 (gas: 13)\n 43767: a0 = u64 [s1 + 0x218]\n 43771: i32 a0 = a0 + 0x20\n 43774: a1 = u64 [s1 + 0x70]\n 43777: a3 = s1 + 0x400\n 43781: u64 [a3] = a1\n 43783: a1 = u64 [s1 + 0x78]\n 43786: u64 [a3 + 0x8] = a1\n 43789: a1 = u64 [s1 + 0x80]\n 43793: u64 [a3 + 0x10] = a1\n 43796: a1 = s1 + 0x400\n 43800: a2 = u64 [s1 + 0x88]\n 43804: u64 [a3 + 0x18] = a2\n 43807: ra = 1864, jump @19\n      : @1781 [@dyn 932] (gas: 4)\n 43814: a2 = s1 + 0x200\n 43818: a0 = u64 [a2]\n 43820: a0 = a0 + 0xffffffffffffffc0\n 43823: t0 = 1866, jump @2559\n      : @1782 [@dyn 933] (gas: 1)\n 43829: jump @1784 if a0 != 0\n      : @1783 (gas: 1)\n 43832: jump @848\n      : @1784 (gas: 14)\n 43835: a0 = u64 [s1 + 0x218]\n 43839: i32 a0 = a0 + 0x40\n 43842: a3 = s1 + 0x100\n 43846: a1 = u64 [a3 + 0x80]\n 43850: a4 = s1 + 0x300\n 43854: u64 [a4 + 0xe0] = a1\n 43858: a1 = u64 [a3 + 0x88]\n 43862: u64 [a4 + 0xe8] = a1\n 43866: a1 = u64 [a3 + 0x90]\n 43870: u64 [a4 + 0xf0] = a1\n 43874: a1 = s1 + 0x3e0\n 43878: a2 = u64 [a3 + 0x98]\n 43882: u64 [a4 + 0xf8] = a2\n 43886: ra = 1868, jump @19\n      : @1785 [@dyn 934] (gas: 3)\n 43893: a0 = 0xffffffa0\n 43903: a2 = s1 + 0x200\n 43907: t0 = 1870, jump @2559\n      : @1786 [@dyn 935] (gas: 1)\n 43913: jump @1788 if a0 != 0\n      : @1787 (gas: 1)\n 43916: jump @848\n      : @1788 (gas: 12)\n 43919: a0 = u64 [s1 + 0x218]\n 43923: i32 a0 = a0 + 0x60\n 43926: a1 = u64 [s1 + 0x160]\n 43930: u64 [s1 + 0x3c0] = a1\n 43934: a1 = u64 [s1 + 0x168]\n 43938: u64 [s1 + 0x3c8] = a1\n 43942: a1 = u64 [s1 + 0x170]\n 43946: u64 [s1 + 0x3d0] = a1\n 43950: a1 = s1 + 0x3c0\n 43954: a2 = u64 [s1 + 0x178]\n 43958: u64 [s1 + 0x3d8] = a2\n 43962: ra = 1872, jump @19\n      : @1789 [@dyn 936] (gas: 6)\n 43969: a0 = u64 [s1 + 0xd8]\n 43973: ra = 0x752\n 43977: ecalli 5 // 'caller'\n 43979: a2 = u64 [s1 + 0xf8]\n 43983: t0 = 0x754\n 43987: jump @2592\n      : @1790 [@dyn 937] (gas: 2)\n 43990: a2 = u64 [s1 + 0xf8]\n 43994: t0 = 1876, jump @2592\n      : @1791 [@dyn 938] (gas: 33)\n 44000: t0 = a1 | a0\n 44003: a3 = a3 >> 0x20\n 44006: a2 = reverse a2\n 44008: a1 = a2 << 0x20\n 44011: a1 = a1 | a3\n 44014: a2 = a2 >> 0x20\n 44017: u64 [s1 + 888] = 0\n 44021: a3 = s1 + 0x100\n 44025: a0 = u64 [a3 + 0x48]\n 44028: u64 [s1 + 0x370] = a0\n 44032: a0 = u64 [a3 + 0x50]\n 44035: u64 [s1 + 0x368] = a0\n 44039: a0 = u64 [a3 + 0x58]\n 44042: u64 [s1 + 0x360] = a0\n 44046: u64 [s1 + 920] = 0\n 44050: a3 = u64 [0x20128]\n 44055: a4 = u64 [0x20130]\n 44060: a5 = u64 [0x20138]\n 44065: a0 = u64 [0x20140]\n 44070: u64 [s1 + 0x3b8] = a3\n 44074: a3 = s1 + 0x300\n 44078: u64 [a3 + 0xb0] = a4\n 44082: u64 [a3 + 0xa8] = a5\n 44086: u64 [a3 + 0xa0] = a0\n 44090: u64 [a3 + 0x90] = a2\n 44094: u64 [a3 + 0x88] = a1\n 44098: a1 = 0x80\n 44102: a2 = s1 + 0x3a0\n 44106: a3 = s1 + 0x380\n 44110: a4 = s1 + 0x360\n 44114: u64 [s1 + 0x380] = t0\n 44118: a0 = u64 [s1 + 0x218]\n 44122: ra = 1878, jump @29\n      : @1792 [@dyn 939] (gas: 12)\n 44129: a1 = s1 + 0x4198\n 44133: u64 [a1 + 1888] = 0\n 44137: u64 [a1 + 1880] = 0\n 44141: u64 [a1 + 1872] = 0\n 44145: u64 [a1 + 1864] = 0xc\n 44150: u64 [a1 + 1920] = 0\n 44154: u64 [a1 + 1912] = 0\n 44158: u64 [a1 + 1904] = 0\n 44162: u64 [a1 + 1896] = 0x1\n 44167: a0 = s1 + 0x48e0\n 44171: a1 = s1 + 0x4900\n 44175: ra = 1880, jump @23\n      : @1793 [@dyn 940] (gas: 6)\n 44182: a1 = 0x20290\n 44187: i32 a1 = a1 + 0\n 44189: a0 = 0\n 44191: a2 = 0\n 44193: ecalli 15 // 'seal_return'\n 44195: jump @1858\n      : @1794 (gas: 7)\n 44198: a4 = a5 | t0\n 44201: a2 = a2 | a4\n 44204: a2 = a2 >> 0x20\n 44207: a4 = a4 | a1\n 44210: a4 = a4 << 0x20\n 44213: a2 = a2 | a4\n 44216: jump @1796 if a2 == 0\n      : @1795 (gas: 1)\n 44219: jump @848\n      : @1796 (gas: 8)\n 44222: a2 = s1 + 0x1998\n 44226: a3 = a2 + 0x500\n 44230: u64 [a3 + 0xe8] = a0\n 44234: u64 [a3 + 0xf0] = a5\n 44238: u64 [a3 + 0xf8] = a1\n 44242: a1 = s1 + 0x1f80\n 44246: u64 [a2 + 0x600] = t0\n 44250: ra = 1882, jump @19\n      : @1797 [@dyn 941] (gas: 2)\n 44257: a1 = s1 + 0x1998\n 44261: t0 = 1884, jump @2661\n      : @1798 [@dyn 942] (gas: 3)\n 44267: a1 = s1 + 0x1f60\n 44271: u64 [a2 + 1488] = 0\n 44275: ra = 1886, jump @19\n      : @1799 [@dyn 943] (gas: 1)\n 44282: t0 = 1888, jump @2555\n      : @1800 [@dyn 944] (gas: 1)\n 44288: jump @1802 if a1 == 0\n      : @1801 (gas: 1)\n 44291: jump @848\n      : @1802 (gas: 2)\n 44294: a1 = 0x40\n 44297: ra = 1890, jump @32\n      : @1803 [@dyn 945] (gas: 4)\n 44304: a1 = sp + 0xffffffffffffffe0\n 44307: a1 = a1 & 0xffffffffffffffe0\n 44310: u64 [s1 + 0xb0] = a1\n 44314: t0 = 1892, jump @2583\n      : @1804 [@dyn 946] (gas: 5)\n 44320: ra = 0x766\n 44324: ecalli 10 // 'hash_keccak_256'\n 44326: a3 = u64 [s1 + 0xb0]\n 44330: t0 = 0x768\n 44334: jump @2600\n      : @1805 [@dyn 947] (gas: 2)\n 44337: a3 = u64 [s1 + 0xb0]\n 44341: t0 = 1896, jump @2600\n      : @1806 [@dyn 948] (gas: 7)\n 44347: u64 [a5 + 0x80] = a3\n 44351: u64 [a5 + 0x78] = a2\n 44354: u64 [a5 + 0x70] = a1\n 44357: u64 [a5 + 0x68] = a0\n 44360: a0 = s1 + 0x4e00\n 44364: a1 = u64 [s1 + 0xf0]\n 44368: ra = 1898, jump @23\n      : @1807 [@dyn 949] (gas: 3)\n 44375: a0 = s1 + 0x1f40\n 44379: a1 = 0x40\n 44382: ra = 1900, jump @17\n      : @1808 [@dyn 950] (gas: 7)\n 44389: a3 = s1 + 0x1998\n 44393: a5 = a3 + 0x500\n 44397: a0 = u64 [a5 + 0xc0]\n 44401: a1 = u64 [a5 + 0xb8]\n 44405: a2 = u64 [a5 + 0xb0]\n 44409: a4 = u64 [a5 + 0xa8]\n 44413: t0 = 1902, jump @2564\n      : @1809 [@dyn 951] (gas: 1)\n 44419: jump @1811 if a0 == 0\n      : @1810 (gas: 1)\n 44422: jump @848\n      : @1811 (gas: 31)\n 44425: a3 = a4\n 44427: a0 = u64 [s1 + 0xe8]\n 44431: a1 = a0 + 0xfffffffffffffc18\n 44435: u64 [s1 + 0xf0] = a1\n 44439: a0 = a1 <u a0\n 44442: a2 = u64 [s1 + 0xe0]\n 44446: a1 = a2 + a0\n 44449: a4 = a1 + 0xffffffffffffffff\n 44452: u64 [s1 + 0xe8] = a4\n 44456: a1 = a4 ^ a2\n 44459: a2 = a4 <u a2\n 44462: a2 = a0 if a1 == 0\n 44465: a1 = u64 [s1 + 0xd8]\n 44469: a0 = a1 + 0xffffffffffffffff\n 44472: a2 = a2 + a0\n 44475: u64 [s1 + 0xe0] = a2\n 44479: a0 = a2 <u a0\n 44482: a1 = a1 <u 0x1\n 44485: a2 = u64 [s1 + 0x210]\n 44489: a1 = a2 - a1\n 44492: a0 = a0 + a1\n 44495: u64 [s1 + 0x210] = a0\n 44499: a2 = s1 + 0x1998\n 44503: u64 [a2 + 1440] = 0\n 44507: u64 [a2 + 1432] = 0\n 44511: u64 [a2 + 1424] = 0\n 44515: a1 = s1 + 0x1f20\n 44519: u64 [a2 + 1416] = 0x3e8\n 44525: a0 = a3\n 44527: u64 [s1 + 0xb0] = a3\n 44531: ra = 1904, jump @19\n      : @1812 [@dyn 952] (gas: 30)\n 44538: a3 = u64 [s1 + 0x218]\n 44542: a0 = u64 [a3]\n 44544: a1 = u64 [a3 + 0x8]\n 44547: a2 = u64 [a3 + 0x10]\n 44550: a3 = u64 [a3 + 0x18]\n 44553: a4 = s1 + 0x1998\n 44557: a5 = a4 + 0x500\n 44561: u64 [a5 + 0x40] = a3\n 44564: u64 [a5 + 0x38] = a2\n 44567: u64 [a5 + 0x30] = a1\n 44570: u64 [a5 + 0x28] = a0\n 44573: u64 [a5 + 0x60] = a3\n 44576: u64 [a5 + 0x58] = a2\n 44579: u64 [a5 + 0x50] = a1\n 44582: a1 = u64 [0x20070]\n 44587: a2 = u64 [0x20078]\n 44592: a3 = u64 [0x20080]\n 44597: u64 [a5 + 0x48] = a0\n 44600: u64 [a5 + 0x80] = a1\n 44604: u64 [a5 + 0x78] = a2\n 44607: u64 [a5 + 0x70] = a3\n 44610: a5 = a4\n 44612: a0 = u64 [0x20088]\n 44617: a1 = 0x20\n 44620: a2 = s1 + 0x1f00\n 44624: a3 = s1 + 0x1ee0\n 44628: a4 = s1 + 0x1ec0\n 44632: u64 [a5 + 0x568] = a0\n 44636: a0 = u64 [s1 + 0xb0]\n 44640: ra = 1906, jump @29\n      : @1813 [@dyn 953] (gas: 5)\n 44647: a4 = u64 [s1 + 0x210]\n 44651: t1 = u64 [s1 + 0xe0]\n 44655: a1 = u64 [s1 + 0xe8]\n 44659: a0 = u64 [s1 + 0xf0]\n 44663: jump @1560\n      : @1814 (gas: 4)\n 44666: a0 = s1 + 0x7ff\n 44670: a0 = a0 + 0x581\n 44674: a1 = 0x40\n 44677: ra = 1908, jump @17\n      : @1815 [@dyn 954] (gas: 13)\n 44684: a0 = s1 + 0x7ff\n 44688: a0 = a0 + 0x199\n 44692: a1 = u64 [a0 + 0x400]\n 44696: u64 [s1 + 0x210] = a1\n 44700: a2 = a0 + 0x300\n 44704: a1 = u64 [a2 + 0xf8]\n 44708: u64 [s1 + 0x208] = a1\n 44712: a1 = u64 [a2 + 0xf0]\n 44716: u64 [s1 + 0x200] = a1\n 44720: a0 = u64 [a2 + 0xe8]\n 44724: u64 [s1 + 0x218] = a0\n 44728: ecalli 14 // 'return_data_size'\n 44730: fallthrough\n      : @1816 (gas: 13)\n 44731: a4 = s1 + 0x200\n 44735: a1 = u64 [a4 + 0x10]\n 44738: a2 = u64 [a4]\n 44740: a1 = a1 | a2\n 44743: a3 = u64 [a4 + 0x8]\n 44746: a2 = u64 [a4 + 0x18]\n 44749: a2 = a2 | a3\n 44752: a2 = a2 | a1\n 44755: a2 = a2 >> 0x20\n 44758: a1 = a1 | a3\n 44761: a1 = a1 << 0x20\n 44764: a1 = a1 | a2\n 44767: jump @1818 if a1 == 0\n      : @1817 (gas: 1)\n 44770: jump @848\n      : @1818 (gas: 2)\n 44773: a1 = a0 >> 0x20\n 44776: jump @1820 if a1 == 0\n      : @1819 (gas: 1)\n 44779: jump @848\n      : @1820 (gas: 6)\n 44782: a1 = a0\n 44784: u64 [s1 + 0x208] = a0\n 44788: i32 a0 = a0 + 0\n 44790: u64 [s1 + 0x210] = a0\n 44794: a0 = u64 [s1 + 0x218]\n 44798: ra = 1910, jump @32\n      : @1821 [@dyn 955] (gas: 9)\n 44805: a1 = s1 + 0x4198\n 44809: a2 = u64 [s1 + 0x208]\n 44813: u32 [a1 + 0x628] = a2\n 44817: i32 a0 = a0 + 0\n 44819: a1 = s1 + 0x4000\n 44823: i32 a1 = a1 + 0x7c0\n 44827: a2 = 0\n 44829: ecalli 13 // 'return_data_copy'\n 44831: fallthrough\n      : @1822 (gas: 4)\n 44832: a0 = s1 + 0x4198\n 44836: a0 = i32 [a0 + 0x628]\n 44840: a1 = u64 [s1 + 0x210]\n 44844: jump @1824 if a0 >=u a1\n      : @1823 (gas: 1)\n 44847: jump @848\n      : @1824 (gas: 2)\n 44850: ecalli 14 // 'return_data_size'\n 44852: fallthrough\n      : @1825 (gas: 3)\n 44853: a1 = a0\n 44855: a0 = a0 >> 0x20\n 44858: jump @1827 if a0 == 0\n      : @1826 (gas: 1)\n 44861: jump @848\n      : @1827 (gas: 3)\n 44864: a0 = u64 [s1 + 0x218]\n 44868: u64 [s1 + 0x210] = a1\n 44872: ra = 1912, jump @32\n      : @1828 [@dyn 956] (gas: 5)\n 44879: i32 a1 = a0 + 0\n 44881: a2 = i32 [s1 + 0x210]\n 44885: a0 = 0x1\n 44888: ecalli 15 // 'seal_return'\n 44890: jump @1874\n      : @1829 (gas: 3)\n 44893: a0 = s1 + 0x2c40\n 44897: a1 = 0x40\n 44900: ra = 1914, jump @17\n      : @1830 [@dyn 957] (gas: 3)\n 44907: a0 = s1 + 0x2998\n 44911: a2 = a0 + 0x200\n 44915: t0 = 1916, jump @2635\n      : @1831 [@dyn 958] (gas: 4)\n 44921: ra = 0x77e\n 44925: ecalli 14 // 'return_data_size'\n 44927: t0 = 0x780\n 44931: jump @2557\n      : @1832 [@dyn 959] (gas: 1)\n 44934: t0 = 1920, jump @2557\n      : @1833 [@dyn 960] (gas: 1)\n 44940: jump @1835 if a2 == 0\n      : @1834 (gas: 1)\n 44943: jump @848\n      : @1835 (gas: 5)\n 44946: a3 = a0\n 44948: a5 = s1 + 0x200\n 44952: a0 = u64 [a5 + 0x10]\n 44955: a4 = u64 [a5 + 0x8]\n 44958: t0 = 1922, jump @2568\n      : @1836 [@dyn 961] (gas: 1)\n 44964: jump @1838 if a0 == 0\n      : @1837 (gas: 1)\n 44967: jump @848\n      : @1838 (gas: 2)\n 44970: a0 = a3 >> 0x20\n 44973: jump @1840 if a0 == 0\n      : @1839 (gas: 1)\n 44976: jump @848\n      : @1840 (gas: 1)\n 44979: t0 = 1924, jump @2579\n      : @1841 [@dyn 962] (gas: 1)\n 44985: ra = 1926, jump @32\n      : @1842 [@dyn 963] (gas: 11)\n 44992: a1 = s1 + 0x5198\n 44996: a2 = u64 [s1 + 0x1f0]\n 45000: u32 [a1 + 0x68] = a2\n 45003: i32 a0 = a0 + 0\n 45005: a1 = s1 + 0x5000\n 45009: i32 a1 = a1 + 0x200\n 45013: a2 = u64 [s1 + 0x208]\n 45017: ecalli 13 // 'return_data_copy'\n 45019: a0 = s1 + 0x5198\n 45023: a0 = i32 [a0 + 0x68]\n 45026: jump @1376\n      : @1843 (gas: 3)\n 45029: a0 = s1 + 0x2b60\n 45033: a1 = 0x40\n 45036: ra = 1928, jump @17\n      : @1844 [@dyn 964] (gas: 14)\n 45043: a0 = s1 + 0x2998\n 45047: a2 = a0 + 0x100\n 45051: a1 = u64 [a2 + 0xe0]\n 45055: u64 [s1 + 0x200] = a1\n 45059: a1 = u64 [a2 + 0xd8]\n 45063: u64 [s1 + 0x208] = a1\n 45067: a1 = u64 [a2 + 0xd0]\n 45071: u64 [s1 + 0x1f8] = a1\n 45075: a0 = u64 [a2 + 0xc8]\n 45079: u64 [s1 + 0x210] = a0\n 45083: ra = 0x78a\n 45087: ecalli 14 // 'return_data_size'\n 45089: t0 = 0x78c\n 45093: jump @2557\n      : @1845 [@dyn 965] (gas: 1)\n 45096: t0 = 1932, jump @2557\n      : @1846 [@dyn 966] (gas: 1)\n 45102: jump @1848 if a2 == 0\n      : @1847 (gas: 1)\n 45105: jump @848\n      : @1848 (gas: 5)\n 45108: a3 = a0\n 45110: a5 = s1 + 0x200\n 45114: a0 = u64 [a5 + 0x10]\n 45117: a4 = u64 [a5 + 0x8]\n 45120: t0 = 1934, jump @2568\n      : @1849 [@dyn 967] (gas: 1)\n 45126: jump @1851 if a0 == 0\n      : @1850 (gas: 1)\n 45129: jump @848\n      : @1851 (gas: 2)\n 45132: a0 = a3 >> 0x20\n 45135: jump @1853 if a0 == 0\n      : @1852 (gas: 1)\n 45138: jump @848\n      : @1853 (gas: 1)\n 45141: t0 = 1936, jump @2579\n      : @1854 [@dyn 968] (gas: 1)\n 45147: ra = 1938, jump @32\n      : @1855 [@dyn 969] (gas: 11)\n 45154: a1 = s1 + 0x5198\n 45158: a2 = u64 [s1 + 0x1f0]\n 45162: u32 [a1 + 0xe8] = a2\n 45166: i32 a0 = a0 + 0\n 45168: a1 = s1 + 0x5000\n 45172: i32 a1 = a1 + 0x280\n 45176: a2 = u64 [s1 + 0x208]\n 45180: ecalli 13 // 'return_data_copy'\n 45182: a0 = s1 + 0x5198\n 45186: a0 = i32 [a0 + 0xe8]\n 45190: jump @1376\n      : @1856 (gas: 6)\n 45193: a1 = 0x20290\n 45198: i32 a1 = a1 + 0\n 45200: a0 = 0x1\n 45203: a2 = 0\n 45205: ecalli 15 // 'seal_return'\n 45207: jump @1858\n      : @1857 (gas: 5)\n 45209: i32 a1 = a1 + 0\n 45211: a0 = 0x1\n 45214: a2 = 0\n 45216: ecalli 15 // 'seal_return'\n 45218: fallthrough\n      : @1858 (gas: 3)\n 45219: a0 = s1 + 0x3dc0\n 45223: a1 = 0x40\n 45226: ra = 1940, jump @17\n      : @1859 [@dyn 970] (gas: 3)\n 45233: a0 = s1 + 0x3998\n 45237: a2 = a0 + 0x400\n 45241: t0 = 1942, jump @2634\n      : @1860 [@dyn 971] (gas: 4)\n 45247: ra = 0x798\n 45251: ecalli 14 // 'return_data_size'\n 45253: t0 = 0x79a\n 45257: jump @2557\n      : @1861 [@dyn 972] (gas: 1)\n 45260: t0 = 1946, jump @2557\n      : @1862 [@dyn 973] (gas: 1)\n 45266: jump @1864 if a2 == 0\n      : @1863 (gas: 1)\n 45269: jump @848\n      : @1864 (gas: 5)\n 45272: a3 = a0\n 45274: a5 = s1 + 0x200\n 45278: a0 = u64 [a5 + 0x10]\n 45281: a4 = u64 [a5 + 0x8]\n 45284: t0 = 1948, jump @2568\n      : @1865 [@dyn 974] (gas: 1)\n 45290: jump @1867 if a0 == 0\n      : @1866 (gas: 1)\n 45293: jump @848\n      : @1867 (gas: 2)\n 45296: a0 = a3 >> 0x20\n 45299: jump @1869 if a0 == 0\n      : @1868 (gas: 1)\n 45302: jump @848\n      : @1869 (gas: 1)\n 45305: t0 = 1950, jump @2579\n      : @1870 [@dyn 975] (gas: 1)\n 45311: ra = 1952, jump @32\n      : @1871 [@dyn 976] (gas: 11)\n 45318: a1 = s1 + 0x5198\n 45322: a2 = u64 [s1 + 0x1f0]\n 45326: u32 [a1 + 0x648] = a2\n 45330: i32 a0 = a0 + 0\n 45332: a1 = s1 + 0x5000\n 45336: i32 a1 = a1 + 0x7e0\n 45340: a2 = u64 [s1 + 0x208]\n 45344: ecalli 13 // 'return_data_copy'\n 45346: a0 = s1 + 0x5198\n 45350: a0 = i32 [a0 + 0x648]\n 45354: jump @1376\n      : @1872 (gas: 3)\n 45357: a1 = a0\n 45359: u64 [s1 + 0x218] = a0\n 45363: ra = 1954, jump @32\n      : @1873 [@dyn 977] (gas: 5)\n 45370: a2 = i32 [s1 + 0x218]\n 45374: i32 a1 = a0 + 0\n 45376: a0 = 0x1\n 45379: ecalli 15 // 'seal_return'\n 45381: fallthrough\n      : @1874 (gas: 3)\n 45382: a0 = s1 + 0x3d80\n 45386: a1 = 0x40\n 45389: ra = 1956, jump @17\n      : @1875 [@dyn 978] (gas: 7)\n 45396: a0 = s1 + 0x3998\n 45400: a3 = u64 [a0 + 0x400]\n 45404: a5 = a0 + 0x300\n 45408: a4 = u64 [a5 + 0xf8]\n 45412: a2 = u64 [a5 + 0xf0]\n 45416: a1 = u64 [a5 + 0xe8]\n 45420: t0 = 1958, jump @2586\n      : @1876 [@dyn 979] (gas: 1)\n 45426: jump @1878 if a0 == 0\n      : @1877 (gas: 1)\n 45429: jump @848\n      : @1878 (gas: 7)\n 45432: a2 = s1 + 0x3998\n 45436: u64 [a2 + 984] = 0\n 45440: u64 [a2 + 976] = 0\n 45444: u64 [a2 + 968] = 0\n 45448: t0 = 0x7a8\n 45452: a0 = 0x8c379a000000000\n 45462: fallthrough\n      : @1879 [@dyn 980] (gas: 4)\n 45463: a1 = s1 + 0x3d60\n 45467: u64 [a2 + 0x3e0] = a0\n 45471: a0 = u64 [s1 + 0x218]\n 45475: ra = 1962, jump @19\n      : @1880 [@dyn 981] (gas: 1)\n 45482: t0 = 1964, jump @2561\n      : @1881 [@dyn 982] (gas: 1)\n 45488: jump @1883 if a0 != 0\n      : @1882 (gas: 1)\n 45491: jump @848\n      : @1883 (gas: 5)\n 45494: a0 = u64 [s1 + 0x218]\n 45498: i32 a0 = a0 + 0x4\n 45501: t0 = 0x7ae\n 45505: a2 = s1 + 0x3998\n 45509: fallthrough\n      : @1884 [@dyn 983] (gas: 6)\n 45510: u64 [a2 + 960] = 0\n 45514: u64 [a2 + 952] = 0\n 45518: u64 [a2 + 936] = 0x20\n 45523: a1 = s1 + 0x3d40\n 45527: u64 [a2 + 944] = 0\n 45531: ra = 1968, jump @19\n      : @1885 [@dyn 984] (gas: 4)\n 45538: a2 = s1 + 0x200\n 45542: a0 = u64 [a2]\n 45544: a0 = a0 + 0xffffffffffffffdc\n 45547: t0 = 1970, jump @2559\n      : @1886 [@dyn 985] (gas: 1)\n 45553: jump @1888 if a0 != 0\n      : @1887 (gas: 1)\n 45556: jump @848\n      : @1888 (gas: 5)\n 45559: a0 = u64 [s1 + 0x218]\n 45563: i32 a0 = a0 + 0x24\n 45566: t0 = 0x7b4\n 45570: a2 = s1 + 0x3998\n 45574: fallthrough\n      : @1889 [@dyn 986] (gas: 6)\n 45575: u64 [a2 + 928] = 0\n 45579: u64 [a2 + 920] = 0\n 45583: u64 [a2 + 904] = 0x1c\n 45588: a1 = s1 + 0x3d20\n 45592: u64 [a2 + 912] = 0\n 45596: ra = 1974, jump @19\n      : @1890 [@dyn 987] (gas: 3)\n 45603: a0 = 0xffffffbc\n 45613: a2 = s1 + 0x200\n 45617: t0 = 1976, jump @2559\n      : @1891 [@dyn 988] (gas: 1)\n 45623: jump @1893 if a0 != 0\n      : @1892 (gas: 1)\n 45626: jump @848\n      : @1893 (gas: 15)\n 45629: a0 = u64 [s1 + 0x218]\n 45633: i32 a0 = a0 + 0x44\n 45636: a1 = u64 [0x20048]\n 45641: a2 = u64 [0x20050]\n 45646: a3 = u64 [0x20058]\n 45651: a4 = s1 + 0x3998\n 45655: a5 = a4 + 0x300\n 45659: u64 [a5 + 0x80] = a1\n 45663: u64 [a5 + 0x78] = a2\n 45666: u64 [a5 + 0x70] = a3\n 45669: a2 = 0x5455524500000000\n 45679: a1 = s1 + 0x3d00\n 45683: u64 [a5 + 0x68] = a2\n 45686: ra = 0x4fa\n 45690: jump @19\n      : @1894 (gas: 2)\n 45694: a1 = 0x20290\n 45699: jump @1857\n      : @1895 (gas: 2)\n 45702: a1 = 0x20290\n 45707: jump @1857\n      : @1896 (gas: 2)\n 45710: a1 = 0x20290\n 45715: jump @1857\n      : @1897 (gas: 2)\n 45718: a1 = 0x20290\n 45723: jump @1857\n      : @1898 (gas: 2)\n 45726: a1 = 0x20290\n 45731: jump @1857\n      : @1899 (gas: 2)\n 45734: a1 = 0x20290\n 45739: jump @1857\n      : @1900 (gas: 2)\n 45742: a1 = 0x20290\n 45747: jump @1857\n      : @1901 (gas: 2)\n 45750: a1 = 0x20290\n 45755: jump @1857\n      : @1902 (gas: 5)\n 45758: a1 = 0x20290\n 45763: i32 a1 = a1 + 0\n 45765: a0 = 0x1\n 45768: ecalli 15 // 'seal_return'\n 45770: jump @1874\n      : @1903 (gas: 5)\n 45773: a1 = 0x20290\n 45778: i32 a1 = a1 + 0\n 45780: a0 = 0x1\n 45783: ecalli 15 // 'seal_return'\n 45785: jump @1874\n      : @1904 (gas: 5)\n 45788: a1 = 0x20290\n 45793: i32 a1 = a1 + 0\n 45795: a0 = 0x1\n 45798: ecalli 15 // 'seal_return'\n 45800: jump @1874\n      : @1905 (gas: 5)\n 45803: a1 = 0x20290\n 45808: i32 a1 = a1 + 0\n 45810: a0 = 0x1\n 45813: ecalli 15 // 'seal_return'\n 45815: jump @1874\n      : @1906 (gas: 5)\n 45818: a1 = 0x20290\n 45823: i32 a1 = a1 + 0\n 45825: a0 = 0x1\n 45828: ecalli 15 // 'seal_return'\n 45830: jump @1874\n      : @1907 (gas: 5)\n 45833: a1 = 0x20290\n 45838: i32 a1 = a1 + 0\n 45840: a0 = 0x1\n 45843: ecalli 15 // 'seal_return'\n 45845: jump @1874\n      : @1908 (gas: 5)\n 45848: a1 = 0x20290\n 45853: i32 a1 = a1 + 0\n 45855: a0 = 0x1\n 45858: ecalli 15 // 'seal_return'\n 45860: jump @1874\n      : @1909 (gas: 5)\n 45863: a1 = 0x20290\n 45868: i32 a1 = a1 + 0\n 45870: a0 = 0x1\n 45873: ecalli 15 // 'seal_return'\n 45875: jump @1874\n      : @1910 (gas: 5)\n 45878: a1 = 0x20290\n 45883: i32 a1 = a1 + 0\n 45885: a0 = 0x1\n 45888: ecalli 15 // 'seal_return'\n 45890: jump @1874\n      : @1911 (gas: 5)\n 45893: a1 = 0x20290\n 45898: i32 a1 = a1 + 0\n 45900: a0 = 0x1\n 45903: ecalli 15 // 'seal_return'\n 45905: jump @1874\n      : @1912 (gas: 8)\n 45908: u64 [s1 + 1520] = 0\n 45912: u64 [s1 + 1512] = 0\n 45916: u64 [s1 + 1504] = 0\n 45920: a0 = 0x4e487b7100000000\n 45930: a1 = s1 + 0x5e0\n 45934: u64 [s1 + 0x5f8] = a0\n 45938: a0 = 0\n 45940: ra = 1978, jump @19\n      : @1913 [@dyn 989] (gas: 7)\n 45947: u64 [s1 + 1496] = 0\n 45951: u64 [s1 + 1488] = 0\n 45955: u64 [s1 + 1472] = 0x11\n 45960: a0 = 0x4\n 45963: a1 = s1 + 0x5c0\n 45967: u64 [s1 + 1480] = 0\n 45971: ra = 1980, jump @19\n      : @1914 [@dyn 990] (gas: 2)\n 45978: a1 = i32 [0x2027c]\n 45983: jump @1916 if a1 >u 63\n      : @1915 (gas: 4)\n 45987: u32 [0x2027c] = 0x40\n 45993: a1 = 0x20290\n 45998: i32 a1 = a1 + 0\n 46000: jump @1278\n      : @1916 (gas: 3)\n 46003: a1 = 0x20290\n 46008: i32 a1 = a1 + 0\n 46010: jump @1278\n      : @1917 (gas: 5)\n 46013: a1 = 0x20290\n 46018: i32 a1 = a1 + 0\n 46020: a0 = 0x1\n 46023: ecalli 15 // 'seal_return'\n 46025: jump @1874\n      : @1918 (gas: 5)\n 46028: a1 = 0x20290\n 46033: i32 a1 = a1 + 0\n 46035: a0 = 0x1\n 46038: ecalli 15 // 'seal_return'\n 46040: jump @1874\n      : @1919 (gas: 46)\n 46043: sp = sp + 0xffffffffffffff70\n 46047: u64 [sp + 0x88] = ra\n 46051: u64 [sp + 0x80] = s0\n 46055: u64 [sp + 0x78] = s1\n 46058: s0 = sp + 0x90\n 46062: sp = sp & 0xfffffffffffffff0\n 46065: t0 = a0\n 46067: a2 = u64 [a1]\n 46069: t2 = u64 [a0 + 0x8]\n 46072: a5 = u64 [a1 + 0x8]\n 46075: t1 = u64 [a0]\n 46077: a3 = a2 + 0x1f\n 46080: ra = a3 <u a2\n 46083: a2 = a5 + ra\n 46086: a3 = a3 & 0xffffffffffffffe0\n 46089: u64 [sp + 0x8] = t1\n 46092: t1 = t1 + a3\n 46095: a4 = t1 <u a3\n 46098: a3 = a2 + t2\n 46101: a3 = a3 + a4\n 46104: s1 = a3 ^ a2\n 46107: a0 = a3 <u a2\n 46110: a0 = a4 if s1 == 0\n 46113: a4 = u64 [t0 + 0x18]\n 46116: a5 = a2 <u a5\n 46119: s1 = u64 [a1 + 0x10]\n 46122: t0 = u64 [t0 + 0x10]\n 46125: a1 = u64 [a1 + 0x18]\n 46128: a5 = ra if ra == 0\n 46131: a5 = a5 + s1\n 46134: s1 = a5 <u s1\n 46137: a2 = a5 + t0\n 46140: a0 = a0 + a2\n 46143: a5 = a2 <u a5\n 46146: a2 = a0 <u a2\n 46149: a1 = a1 + a4\n 46152: a1 = a1 + s1\n 46155: a1 = a1 + a5\n 46158: a5 = a1 + a2\n 46161: a1 = a5 >u 0\n 46163: a2 = a0 >u 0\n 46165: a2 = a1 if a5 != 0\n 46168: a1 = a0 | a5\n 46171: s1 = a3 >u 0\n 46173: s1 = a2 if a1 != 0\n 46176: jump @1923 if s1 != 0\n      : @1920 (gas: 13)\n 46179: a1 = u64 [sp + 0x8]\n 46182: a1 = t1 <u a1\n 46185: a2 = a3 ^ t2\n 46188: s1 = a3 <u t2\n 46191: s1 = a1 if a2 == 0\n 46194: a1 = a0 <u t0\n 46197: a2 = a5 ^ a4\n 46200: a4 = a5 <u a4\n 46203: a4 = a1 if a2 == 0\n 46206: a1 = a0 ^ t0\n 46209: a1 = a1 | a2\n 46212: a4 = s1 if a1 == 0\n 46215: jump @1923 if a4 != 0\n      : @1921 (gas: 7)\n 46218: u64 [sp + 0x50] = t1\n 46221: u64 [sp + 0x58] = a3\n 46224: u64 [sp + 0x60] = a0\n 46227: a0 = 0x40\n 46230: a1 = sp + 0x50\n 46233: u64 [sp + 0x68] = a5\n 46236: ra = 1982, jump @19\n      : @1922 [@dyn 991] (gas: 6)\n 46243: sp = s0 + 0xffffffffffffff70\n 46247: ra = u64 [sp + 0x88]\n 46251: s0 = u64 [sp + 0x80]\n 46255: s1 = u64 [sp + 0x78]\n 46258: sp = sp + 0x90\n 46262: ret\n      : @1923 (gas: 1)\n 46264: t0 = 1984, jump @2658\n      : @1924 [@dyn 992] (gas: 1)\n 46270: ra = 1986, jump @19\n      : @1925 [@dyn 993] (gas: 7)\n 46277: u64 [sp + 40] = 0\n 46280: u64 [sp + 32] = 0\n 46283: u64 [sp + 16] = 0x41\n 46287: a0 = 0x4\n 46290: a1 = sp + 0x10\n 46293: u64 [sp + 24] = 0\n 46296: ra = 1988, jump @19\n      : @1926 [@dyn 994] (gas: 2)\n 46303: a1 = i32 [0x2027c]\n 46308: jump @1928 if a1 >u 63\n      : @1927 (gas: 2)\n 46312: u32 [0x2027c] = 0x40\n 46318: fallthrough\n      : @1928 (gas: 8)\n 46319: a1 = 0x20290\n 46324: i32 a1 = a1 + 0\n 46326: a0 = 0x1\n 46329: a2 = 0x24\n 46332: ra = 0x7c6\n 46336: ecalli 15 // 'seal_return'\n 46338: t0 = 0x7c8\n 46342: jump @2675\n      : @1929 [@dyn 995] (gas: 1)\n 46345: t0 = 1992, jump @2675\n      : @1930 [@dyn 996] (gas: 5)\n 46351: a1 = 0x4\n 46354: ra = 0x7ca\n 46358: ecalli 3 // 'call_data_load'\n 46360: t0 = 0x7cc\n 46364: jump @2623\n      : @1931 [@dyn 997] (gas: 1)\n 46367: t0 = 1996, jump @2623\n      : @1932 [@dyn 998] (gas: 1)\n 46373: jump @1935 if a3 == 0\n      : @1933 (gas: 1)\n 46376: t0 = 1998, jump @2642\n      : @1934 [@dyn 999] (gas: 1)\n 46382: ret\n      : @1935 (gas: 8)\n 46384: a1 = 0x20290\n 46389: i32 a1 = a1 + 0\n 46391: a0 = 0x1\n 46394: a2 = 0\n 46396: ra = 0x7d0\n 46400: ecalli 15 // 'seal_return'\n 46402: t0 = 0x7d2\n 46406: jump @2675\n      : @1936 [@dyn 1000] (gas: 1)\n 46409: t0 = 2002, jump @2675\n      : @1937 [@dyn 1001] (gas: 5)\n 46415: a1 = 0x24\n 46418: ra = 0x7d4\n 46422: ecalli 3 // 'call_data_load'\n 46424: t0 = 0x7d6\n 46428: jump @2623\n      : @1938 [@dyn 1002] (gas: 1)\n 46431: t0 = 2006, jump @2623\n      : @1939 [@dyn 1003] (gas: 1)\n 46437: jump @1942 if a3 == 0\n      : @1940 (gas: 1)\n 46440: t0 = 2008, jump @2642\n      : @1941 [@dyn 1004] (gas: 1)\n 46446: ret\n      : @1942 (gas: 7)\n 46448: a1 = 0x20290\n 46453: i32 a1 = a1 + 0\n 46455: a0 = 0x1\n 46458: a2 = 0\n 46460: ra = 0x7da\n 46464: ecalli 15 // 'seal_return'\n 46466: fallthrough\n      : @1943 [@dyn 1005] (gas: 22)\n 46467: sp = sp + 0xfffffffffffffee0\n 46471: u64 [sp + 0x118] = ra\n 46475: u64 [sp + 0x110] = s0\n 46479: u64 [sp + 0x108] = s1\n 46483: s0 = sp + 0x120\n 46487: sp = sp & 0xfffffffffffffff0\n 46490: a4 = u64 [a1 + 0x10]\n 46493: a3 = u64 [a1 + 0x18]\n 46496: a5 = u64 [a1 + 0x8]\n 46499: t0 = u64 [a1]\n 46501: u64 [sp + 0x68] = a3\n 46504: u64 [sp + 0x78] = a5\n 46507: a1 = a5 | a3\n 46510: a3 = t0 | a4\n 46513: a3 = a3 | a1\n 46516: a3 = a3 >> 0x20\n 46519: u64 [sp + 0x70] = a4\n 46522: a1 = a1 | a4\n 46525: a1 = a1 << 0x20\n 46528: a1 = a1 | a3\n 46531: u64 [sp + 0x8] = a0\n 46534: jump @1958 if a1 != 0\n      : @1944 (gas: 15)\n 46538: a0 = u64 [a2 + 0x18]\n 46541: u64 [sp + 0x48] = a0\n 46544: s1 = u64 [a2 + 0x10]\n 46547: a0 = u64 [a2 + 0x8]\n 46550: u64 [sp + 0x50] = a0\n 46553: a0 = u64 [a2]\n 46555: u64 [sp + 0x58] = a0\n 46558: u64 [sp + 248] = 0\n 46562: u64 [sp + 240] = 0\n 46566: u64 [sp + 232] = 0\n 46570: a1 = sp + 0xe0\n 46574: u64 [sp + 224] = 0x20\n 46579: a0 = t0\n 46581: u64 [sp + 0x60] = t0\n 46584: ra = 2012, jump @19\n      : @1945 [@dyn 1006] (gas: 12)\n 46591: a1 = u64 [sp + 0x58]\n 46594: a0 = a1 | s1\n 46597: a2 = u64 [sp + 0x48]\n 46600: a3 = u64 [sp + 0x50]\n 46603: a2 = a2 | a3\n 46606: a0 = a0 | a2\n 46609: a0 = a0 >> 0x20\n 46612: u64 [sp + 0x20] = s1\n 46615: a2 = a2 | s1\n 46618: a2 = a2 << 0x20\n 46621: a0 = a0 | a2\n 46624: jump @1958 if a0 != 0\n      : @1946 (gas: 2)\n 46628: a0 = sp + 0xc0\n 46632: ra = 2014, jump @17\n      : @1947 [@dyn 1007] (gas: 13)\n 46639: a0 = u64 [sp + 0x70]\n 46642: a1 = u64 [sp + 0x68]\n 46645: a1 = a1 | a0\n 46648: a0 = 0x100000000\n 46658: u64 [sp + 0x10] = a0\n 46661: a0 = 0xffffffe0\n 46671: a2 = u64 [sp + 0x60]\n 46674: a0 = a2 <u a0\n 46677: a3 = u64 [sp + 0x78]\n 46680: a0 = 0 if a3 != 0\n 46682: u64 [sp + 0x18] = a1\n 46685: a0 = 0 if a1 != 0\n 46687: jump @1958 if a0 == 0\n      : @1948 (gas: 16)\n 46691: a3 = u64 [sp + 0xd8]\n 46695: a4 = u64 [sp + 0xd0]\n 46699: a5 = u64 [sp + 0xc8]\n 46703: a1 = u64 [sp + 0xc0]\n 46707: i32 a0 = a2 + 0x20\n 46710: u64 [sp + 0x28] = a1\n 46713: u64 [sp + 0xa0] = a1\n 46717: u64 [sp + 0x30] = a5\n 46720: u64 [sp + 0xa8] = a5\n 46724: u64 [sp + 0x38] = a4\n 46727: u64 [sp + 0xb0] = a4\n 46731: a1 = sp + 0xa0\n 46735: u64 [sp + 0x40] = a3\n 46738: u64 [sp + 0xb8] = a3\n 46742: s1 = a2\n 46744: ra = 2016, jump @19\n      : @1949 [@dyn 1008] (gas: 8)\n 46751: a0 = u64 [sp + 0x10]\n 46754: a0 = a0 + 0xffffffffffffffc0\n 46757: a0 = s1 <u a0\n 46760: a1 = u64 [sp + 0x78]\n 46763: a0 = 0 if a1 != 0\n 46765: a1 = u64 [sp + 0x18]\n 46768: a0 = 0 if a1 != 0\n 46770: jump @1958 if a0 == 0\n      : @1950 (gas: 10)\n 46774: a0 = u64 [sp + 0x48]\n 46777: a1 = u64 [sp + 0x20]\n 46780: a0 = a0 | a1\n 46783: a1 = 0xffffffe0\n 46793: a3 = u64 [sp + 0x58]\n 46796: a1 = a3 <u a1\n 46799: a4 = u64 [sp + 0x50]\n 46802: a1 = 0 if a4 != 0\n 46804: a1 = 0 if a0 != 0\n 46806: jump @1958 if a1 == 0\n      : @1951 (gas: 13)\n 46810: a2 = s1\n 46812: a1 = u64 [sp + 0x28]\n 46815: a5 = u64 [sp + 0x38]\n 46818: a0 = a1 | a5\n 46821: a4 = u64 [sp + 0x40]\n 46824: s1 = u64 [sp + 0x30]\n 46827: a4 = a4 | s1\n 46830: a0 = a0 | a4\n 46833: a0 = a0 >> 0x20\n 46836: a4 = a4 | a5\n 46839: a4 = a4 << 0x20\n 46842: a0 = a0 | a4\n 46845: jump @1958 if a0 != 0\n      : @1952 (gas: 5)\n 46849: i32 a0 = a2 + 0x40\n 46852: i32 a3 = a3 + 0x20\n 46855: u64 [sp + 0x58] = a3\n 46858: s1 = a1\n 46860: ra = 2018, jump @32\n      : @1953 [@dyn 1009] (gas: 4)\n 46867: u64 [sp + 0x50] = a0\n 46870: a0 = u64 [sp + 0x58]\n 46873: a1 = s1\n 46875: ra = 2020, jump @32\n      : @1954 [@dyn 1010] (gas: 4)\n 46882: a1 = a0\n 46884: a0 = u64 [sp + 0x50]\n 46887: a2 = s1\n 46889: ra = 2022, jump @0\n      : @1955 [@dyn 1011] (gas: 27)\n 46896: a0 = u64 [sp + 0x60]\n 46899: a0 = a0 + s1\n 46902: a1 = a0 <u s1\n 46905: a2 = u64 [sp + 0x78]\n 46908: a4 = u64 [sp + 0x30]\n 46911: a2 = a2 + a4\n 46914: a2 = a2 + a1\n 46917: a3 = a2 ^ a4\n 46920: a4 = a2 <u a4\n 46923: a4 = a1 if a3 == 0\n 46926: a1 = u64 [sp + 0x70]\n 46929: a3 = u64 [sp + 0x38]\n 46932: a1 = a1 + a3\n 46935: a3 = a1 <u a3\n 46938: a5 = u64 [sp + 0x68]\n 46941: s1 = u64 [sp + 0x40]\n 46944: a5 = a5 + s1\n 46947: a3 = a3 + a5\n 46950: a4 = a4 + a1\n 46953: a1 = a4 <u a1\n 46956: a1 = a1 + a3\n 46959: a1 = a1 | a4\n 46962: a3 = 0xffffffc0\n 46972: a3 = a0 <u a3\n 46975: a3 = 0 if a2 != 0\n 46977: a3 = 0 if a1 != 0\n 46979: jump @1958 if a3 == 0\n      : @1956 (gas: 7)\n 46983: i32 a0 = a0 + 0x40\n 46986: u64 [sp + 152] = 0\n 46990: u64 [sp + 144] = 0\n 46994: u64 [sp + 136] = 0\n 46998: a1 = sp + 0x80\n 47002: u64 [sp + 128] = 0\n 47006: ra = 2024, jump @19\n      : @1957 [@dyn 1012] (gas: 35)\n 47013: s1 = u64 [sp + 0x28]\n 47016: s1 = s1 + 0x1f\n 47019: a0 = 0x1ffffffe0\n 47029: a0 = a0 & s1\n 47032: a1 = u64 [sp + 0x60]\n 47035: a0 = a0 + a1\n 47038: a1 = a0 <u a1\n 47041: a3 = u64 [sp + 0x78]\n 47044: a2 = a3 + a1\n 47047: a3 = a2 <u a3\n 47050: a3 = a1 if a1 == 0\n 47053: a1 = u64 [sp + 0x70]\n 47056: a3 = a3 + a1\n 47059: a1 = a3 <u a1\n 47062: a4 = u64 [sp + 0x68]\n 47065: a1 = a1 + a4\n 47068: a4 = a0 + 0x40\n 47071: a0 = a4 <u a0\n 47074: a5 = a2 + a0\n 47077: a2 = a5 <u a2\n 47080: a2 = a0 if a0 == 0\n 47083: a2 = a2 + a3\n 47086: a0 = a2 <u a3\n 47089: a0 = a0 + a1\n 47092: a1 = u64 [sp + 0x8]\n 47095: u64 [a1] = a4\n 47097: u64 [a1 + 0x8] = a5\n 47100: u64 [a1 + 0x10] = a2\n 47103: u64 [a1 + 0x18] = a0\n 47106: sp = s0 + 0xfffffffffffffee0\n 47110: ra = u64 [sp + 0x118]\n 47114: s0 = u64 [sp + 0x110]\n 47118: s1 = u64 [sp + 0x108]\n 47122: sp = sp + 0x120\n 47126: ret\n      : @1958 (gas: 1)\n 47128: trap\n      : @1959 (gas: 14)\n 47129: sp = sp + 0xffffffffffffff20\n 47133: u64 [sp + 0xd8] = ra\n 47137: u64 [sp + 0xd0] = s0\n 47141: u64 [sp + 0xc8] = s1\n 47145: s0 = sp + 0xe0\n 47149: sp = sp & 0xfffffffffffffff0\n 47152: a1 = u64 [a0 + 0x10]\n 47155: a2 = u64 [a0 + 0x18]\n 47158: a3 = u64 [a0 + 0x8]\n 47161: a0 = u64 [a0]\n 47163: a2 = a2 | a3\n 47166: a0 = a0 | a1\n 47169: a0 = a0 | a2\n 47172: jump @1961 if a0 == 0\n      : @1960 (gas: 6)\n 47175: sp = s0 + 0xffffffffffffff20\n 47179: ra = u64 [sp + 0xd8]\n 47183: s0 = u64 [sp + 0xd0]\n 47187: s1 = u64 [sp + 0xc8]\n 47191: sp = sp + 0xe0\n 47195: ret\n      : @1961 (gas: 3)\n 47197: a0 = sp + 0xa0\n 47201: a1 = 0x40\n 47204: ra = 2026, jump @17\n      : @1962 [@dyn 1013] (gas: 1)\n 47211: t0 = 2028, jump @2590\n      : @1963 [@dyn 1014] (gas: 1)\n 47217: jump @1975 if a0 != 0\n      : @1964 (gas: 1)\n 47220: t0 = 2030, jump @2604\n      : @1965 [@dyn 1015] (gas: 1)\n 47226: ra = 2032, jump @19\n      : @1966 [@dyn 1016] (gas: 1)\n 47233: t0 = 2034, jump @2584\n      : @1967 [@dyn 1017] (gas: 1)\n 47239: jump @1975 if a0 == 0\n      : @1968 (gas: 1)\n 47242: t0 = 2036, jump @2625\n      : @1969 [@dyn 1018] (gas: 1)\n 47248: ra = 2038, jump @19\n      : @1970 [@dyn 1019] (gas: 1)\n 47255: t0 = 2040, jump @2603\n      : @1971 [@dyn 1020] (gas: 1)\n 47261: jump @1975 if a0 == 0\n      : @1972 (gas: 8)\n 47264: s1 = u64 [sp + 0x18]\n 47267: i32 a0 = s1 + 0x24\n 47270: u64 [sp + 88] = 0\n 47273: u64 [sp + 80] = 0\n 47276: u64 [sp + 72] = 0\n 47279: a1 = sp + 0x40\n 47282: u64 [sp + 64] = 0x11\n 47286: ra = 2042, jump @19\n      : @1973 [@dyn 1021] (gas: 1)\n 47293: t0 = 2044, jump @2596\n      : @1974 [@dyn 1022] (gas: 1)\n 47299: jump @1976 if a0 != 0\n      : @1975 (gas: 1)\n 47302: trap\n      : @1976 (gas: 11)\n 47303: s1 = u64 [sp + 0x18]\n 47306: i32 a0 = s1 + 0x44\n 47309: a1 = u64 [0x20148]\n 47314: a2 = u64 [0x20150]\n 47319: u64 [sp + 0x38] = a1\n 47322: u64 [sp + 32] = 0\n 47325: u64 [sp + 0x30] = a2\n 47328: a2 = 0x4400000000000000\n 47338: a1 = sp + 0x20\n 47341: u64 [sp + 0x28] = a2\n 47344: ra = 2046, jump @19\n      : @1977 [@dyn 1023] (gas: 3)\n 47351: a1 = 0x64\n 47354: a0 = s1\n 47356: ra = 2048, jump @32\n      : @1978 [@dyn 1024] (gas: 1)\n 47363: t0 = 2050, jump @2626\n      : @1979 [@dyn 1025] (gas: 3)\n 47369: ra = 0x804\n 47373: ecalli 15 // 'seal_return'\n 47375: fallthrough\n      : @1980 [@dyn 1026] (gas: 30)\n 47376: sp = sp + 0xffffffffffffff80\n 47379: u64 [sp + 0x78] = ra\n 47382: u64 [sp + 0x70] = s0\n 47385: u64 [sp + 0x68] = s1\n 47388: s0 = sp + 0x80\n 47392: sp = sp & 0xfffffffffffffff0\n 47395: a4 = u64 [a2]\n 47397: a3 = u64 [a1]\n 47399: s1 = u64 [a2 + 0x8]\n 47402: t1 = u64 [a1 + 0x8]\n 47405: t2 = u64 [a2 + 0x10]\n 47408: a5 = u64 [a1 + 0x10]\n 47411: a2 = u64 [a2 + 0x18]\n 47414: a1 = u64 [a1 + 0x18]\n 47417: t0 = t1 ^ s1\n 47420: u64 [sp + 0x8] = s1\n 47423: s1 = t1 <u s1\n 47426: u64 [sp + 0x18] = a4\n 47429: u64 [sp + 0x10] = a3\n 47432: a3 = a3 <u a4\n 47435: u64 [sp] = a3\n 47437: s1 = a3 if t0 == 0\n 47440: a3 = a1 ^ a2\n 47443: ra = a1 <u a2\n 47446: t0 = a5 <u t2\n 47449: ra = t0 if a3 == 0\n 47452: a4 = a5 ^ t2\n 47455: a3 = a3 | a4\n 47458: ra = s1 if a3 == 0\n 47461: jump @1982 if ra != 0\n      : @1981 (gas: 23)\n 47464: a3 = a5 - t2\n 47467: a1 = a1 - a2\n 47470: a1 = a1 - t0\n 47473: a2 = a3 <u s1\n 47476: a1 = a1 - a2\n 47479: a3 = a3 - s1\n 47482: a2 = u64 [sp + 0x8]\n 47485: a2 = t1 - a2\n 47488: a4 = u64 [sp]\n 47490: a2 = a2 - a4\n 47493: a4 = u64 [sp + 0x18]\n 47496: a5 = u64 [sp + 0x10]\n 47499: a4 = a5 - a4\n 47502: u64 [a0] = a4\n 47504: u64 [a0 + 0x8] = a2\n 47507: u64 [a0 + 0x10] = a3\n 47510: u64 [a0 + 0x18] = a1\n 47513: sp = s0 + 0xffffffffffffff80\n 47516: ra = u64 [sp + 0x78]\n 47519: s0 = u64 [sp + 0x70]\n 47522: s1 = u64 [sp + 0x68]\n 47525: sp = sp + 0x80\n 47529: ret\n      : @1982 (gas: 8)\n 47531: u64 [sp + 80] = 0\n 47534: u64 [sp + 72] = 0\n 47537: u64 [sp + 64] = 0\n 47540: a0 = 0x4e487b7100000000\n 47550: a1 = sp + 0x40\n 47553: u64 [sp + 0x58] = a0\n 47556: a0 = 0\n 47558: ra = 2054, jump @19\n      : @1983 [@dyn 1027] (gas: 7)\n 47565: u64 [sp + 56] = 0\n 47568: u64 [sp + 48] = 0\n 47571: u64 [sp + 32] = 0x11\n 47575: a0 = 0x4\n 47578: a1 = sp + 0x20\n 47581: u64 [sp + 40] = 0\n 47584: ra = 2056, jump @19\n      : @1984 [@dyn 1028] (gas: 2)\n 47591: a1 = i32 [0x2027c]\n 47596: jump @1986 if a1 >u 63\n      : @1985 (gas: 2)\n 47600: u32 [0x2027c] = 0x40\n 47606: fallthrough\n      : @1986 (gas: 7)\n 47607: a1 = 0x20290\n 47612: i32 a1 = a1 + 0\n 47614: a0 = 0x1\n 47617: a2 = 0x24\n 47620: ra = 0x80a\n 47624: ecalli 15 // 'seal_return'\n 47626: fallthrough\n      : @1987 [@dyn 1029] (gas: 14)\n 47627: sp = sp + 0xffffffffffffffa0\n 47630: u64 [sp + 0x58] = ra\n 47633: u64 [sp + 0x50] = s0\n 47636: u64 [sp + 0x48] = s1\n 47639: s0 = sp + 0x60\n 47642: sp = sp & 0xffffffffffffffe0\n 47645: s1 = a0\n 47647: u64 [sp + 56] = 0\n 47650: u64 [sp + 48] = 0\n 47653: u64 [sp + 40] = 0\n 47656: u64 [sp + 32] = 0x8\n 47660: a0 = sp\n 47662: a1 = sp + 0x20\n 47665: ra = 2060, jump @21\n      : @1988 [@dyn 1030] (gas: 28)\n 47672: t0 = u64 [sp]\n 47674: a1 = u64 [sp + 0x18]\n 47677: a2 = u64 [sp + 0x8]\n 47680: a3 = u64 [sp + 0x10]\n 47683: a4 = 0xffffffffffff\n 47693: a5 = a2 & a4\n 47696: a0 = a3 << 0x10\n 47699: a2 = a2 >> 0x30\n 47702: a0 = a0 | a2\n 47705: a3 = a3 >> 0x30\n 47708: a2 = a1 << 0x10\n 47711: a2 = a2 | a3\n 47714: a2 = a2 & a4\n 47717: a1 = a1 >> 0x20\n 47720: a3 = 0\n 47722: u64 [s1 + 80] = 0\n 47725: u64 [s1 + 88] = 0\n 47728: u64 [s1 + 0x40] = a1\n 47731: u64 [s1 + 72] = 0\n 47734: u64 [s1 + 48] = 0\n 47737: u64 [s1 + 56] = 0\n 47740: u64 [s1 + 16] = 0\n 47743: u64 [s1 + 24] = 0\n 47746: u64 [s1] = t0\n 47748: u64 [s1 + 0x8] = a5\n 47751: u64 [s1 + 0x20] = a0\n 47754: u64 [s1 + 0x28] = a2\n 47757: t0 = 2062, jump @2659\n      : @1989 [@dyn 1031] (gas: 1)\n 47763: ret\n      : @1990 (gas: 16)\n 47765: sp = sp + 0xfffffffffffffef0\n 47769: u64 [sp + 0x108] = ra\n 47773: u64 [sp + 0x100] = s0\n 47777: u64 [sp + 0xf8] = s1\n 47781: s0 = sp + 0x110\n 47785: sp = sp & 0xfffffffffffffff0\n 47788: t1 = u64 [a2 + 0x10]\n 47791: a5 = u64 [a2 + 0x18]\n 47794: s1 = u64 [a2 + 0x8]\n 47797: a2 = u64 [a2]\n 47799: a4 = s1 | a5\n 47802: a3 = a2 | t1\n 47805: a3 = a3 | a4\n 47808: u64 [sp] = a0\n 47810: u64 [sp + 0xa8] = a3\n 47814: jump @2010 if a3 == 0\n      : @1991 (gas: 73)\n 47818: a0 = u64 [a1 + 0x18]\n 47821: ra = u64 [a1 + 0x10]\n 47824: t0 = u64 [a1 + 0x8]\n 47827: t2 = u64 [a1]\n 47829: u64 [sp + 0x60] = t2\n 47832: a1 = clz t1\n 47834: a1 = a1 + 0x40\n 47837: a4 = clz a5\n 47839: a4 = a1 if a5 == 0\n 47842: u64 [sp + 0x30] = a2\n 47845: a1 = clz a2\n 47847: a2 = a1 + 0x40\n 47850: a1 = clz s1\n 47852: u64 [sp + 0x38] = s1\n 47855: a1 = a2 if s1 == 0\n 47858: a2 = a1 + 0x80\n 47862: u64 [sp + 0x40] = a5\n 47865: u64 [sp + 0x48] = t1\n 47868: a3 = t1 | a5\n 47871: a4 = a2 if a3 == 0\n 47874: a2 = a2 <u a1\n 47877: a2 = 0 if a3 != 0\n 47879: a1 = clz ra\n 47881: a1 = a1 + 0x40\n 47884: a5 = clz a0\n 47886: a5 = a1 if a0 == 0\n 47889: a1 = clz t2\n 47891: a1 = a1 + 0x40\n 47894: a3 = clz t0\n 47896: a3 = a1 if t0 == 0\n 47899: a1 = a3 + 0x80\n 47903: s1 = ra | a0\n 47906: a5 = a1 if s1 == 0\n 47909: a1 = a1 <u a3\n 47912: a1 = 0 if s1 != 0\n 47914: t1 = a2 ^ a1\n 47917: s1 = a2 <u a1\n 47920: a3 = a4 <u a5\n 47923: s1 = a3 if t1 == 0\n 47926: a2 = a2 - a1\n 47929: t2 = s1 <u 0x1\n 47932: t2 = t2 + 0xffffffffffffffff\n 47935: a3 = a2 - a3\n 47938: t1 = -s1\n 47940: a1 = a4 - a5\n 47943: a2 = t1 >u 0\n 47945: a4 = t2 >u 0\n 47947: a4 = a2 if t2 == 0\n 47950: u64 [sp + 0xa0] = a1\n 47954: a2 = a1 <u 0x100\n 47958: a2 = a2 ^ 0x1\n 47961: a5 = a3 >u 0\n 47963: a2 = a5 if a3 != 0\n 47966: a2 = a4 if s1 != 0\n 47969: s1 = u64 [sp + 0x60]\n 47972: a4 = s1 | ra\n 47975: a5 = t0 | a0\n 47978: a4 = a4 | a5\n 47981: a1 = u64 [sp + 0xa8]\n 47985: a5 = a1 <u 0x1\n 47988: a4 = a4 <u 0x1\n 47991: a4 = a4 | a5\n 47994: a2 = a2 | a4\n 47997: u64 [sp + 0x68] = a0\n 48000: a1 = a0\n 48002: a1 = 0 if a2 != 0\n 48004: a4 = ra\n 48006: a4 = 0 if a2 != 0\n 48008: u64 [sp + 0x58] = t0\n 48011: a5 = t0\n 48013: a5 = 0 if a2 != 0\n 48015: s1 = 0 if a2 != 0\n 48017: jump @2008 if a2 != 0\n      : @1992 (gas: 7)\n 48021: a0 = u64 [sp + 0xa0]\n 48025: a2 = a0 ^ 0xff\n 48029: t0 = a2 | t1\n 48032: a2 = a3 | t2\n 48035: a2 = t0 | a2\n 48038: a0 = u64 [sp]\n 48040: jump @2009 if a2 == 0\n      : @1993 (gas: 18)\n 48044: a2 = u64 [sp + 0xa0]\n 48048: a1 = a2 + 0x1\n 48051: u64 [sp + 0xa8] = a1\n 48055: u64 [sp + 0x50] = ra\n 48058: a0 = a1 <u 0x1\n 48061: a0 = a0 + a3\n 48064: u64 [sp + 0x80] = a0\n 48068: a0 = a0 | a1\n 48071: a0 = a0 <u 0x1\n 48074: a0 = a0 + t1\n 48077: u64 [sp + 0x70] = a0\n 48080: a0 = a0 <u t1\n 48083: a0 = a0 + t2\n 48086: u64 [sp + 0x78] = a0\n 48089: t0 = 0x810\n 48093: s1 = 0xff - a2\n 48097: a2 = 0x80 - s1\n 48101: fallthrough\n      : @1994 [@dyn 1032] (gas: 4)\n 48102: u64 [sp + 0x28] = s1\n 48105: a0 = u64 [sp + 0x60]\n 48108: a1 = u64 [sp + 0x58]\n 48111: ra = 2066, jump @2677\n      : @1995 [@dyn 1033] (gas: 6)\n 48117: u64 [sp + 0x98] = a0\n 48121: u64 [sp + 0x90] = a1\n 48125: a0 = u64 [sp + 0x50]\n 48128: a1 = u64 [sp + 0x68]\n 48131: a2 = s1\n 48133: ra = 2068, jump @2682\n      : @1996 [@dyn 1034] (gas: 10)\n 48139: u64 [sp + 0x88] = a0\n 48143: a0 = u64 [sp + 0x90]\n 48147: a0 = a0 | a1\n 48150: u64 [sp + 0x90] = a0\n 48154: a1 = u64 [sp + 0xa0]\n 48158: a2 = 0x7f - a1\n 48161: a0 = u64 [sp + 0x60]\n 48164: s1 = u64 [sp + 0x58]\n 48167: a1 = s1\n 48169: ra = 2070, jump @2682\n      : @1997 [@dyn 1035] (gas: 18)\n 48175: a2 = u64 [sp + 0x28]\n 48178: a3 = a2 <u 0x80\n 48182: u64 [sp + 0xa0] = a3\n 48186: a4 = u64 [sp + 0x90]\n 48190: a1 = a4 if a3 != 0\n 48193: a4 = u64 [sp + 0x68]\n 48196: a1 = a4 if a2 == 0\n 48199: u64 [sp + 0x90] = a1\n 48203: a1 = u64 [sp + 0x98]\n 48207: a4 = u64 [sp + 0x88]\n 48211: a1 = a1 | a4\n 48214: a1 = a0 if a3 == 0\n 48217: a0 = u64 [sp + 0x50]\n 48220: a1 = a0 if a2 == 0\n 48223: u64 [sp + 0x98] = a1\n 48227: a0 = u64 [sp + 0x60]\n 48230: a1 = s1\n 48232: ra = 2072, jump @2682\n      : @1998 [@dyn 1036] (gas: 13)\n 48238: a5 = u64 [sp + 0x70]\n 48241: a2 = u64 [sp + 0x78]\n 48244: a3 = u64 [sp + 0x80]\n 48248: a3 = a3 | a2\n 48251: a2 = u64 [sp + 0xa8]\n 48255: a2 = a2 | a5\n 48258: a2 = a2 | a3\n 48261: a3 = u64 [sp + 0xa0]\n 48265: a1 = 0 if a3 == 0\n 48267: u64 [sp + 0x88] = a1\n 48271: a0 = 0 if a3 == 0\n 48273: u64 [sp + 0xa0] = a0\n 48277: jump @2006 if a2 == 0\n      : @1999 (gas: 5)\n 48281: s1 = u64 [sp + 0xa8]\n 48285: a2 = s1 + 0xffffffffffffff80\n 48288: a0 = u64 [sp + 0x50]\n 48291: a1 = u64 [sp + 0x68]\n 48294: ra = 2074, jump @2677\n      : @2000 [@dyn 1037] (gas: 6)\n 48300: u64 [sp + 0x28] = a0\n 48303: u64 [sp + 0x18] = a1\n 48306: a0 = u64 [sp + 0x60]\n 48309: a1 = u64 [sp + 0x58]\n 48312: a2 = s1\n 48314: ra = 2076, jump @2677\n      : @2001 [@dyn 1038] (gas: 6)\n 48320: u64 [sp + 0x10] = a0\n 48323: u64 [sp + 0x20] = a1\n 48326: a2 = 0x80 - s1\n 48330: a0 = u64 [sp + 0x50]\n 48333: a1 = u64 [sp + 0x68]\n 48336: ra = 2078, jump @2682\n      : @2002 [@dyn 1039] (gas: 20)\n 48342: a2 = u64 [sp + 0x20]\n 48345: a1 = a1 | a2\n 48348: a2 = s1 <u 0x80\n 48352: u64 [sp + 0x20] = a2\n 48355: a3 = u64 [sp + 0x18]\n 48358: a1 = a3 if a2 == 0\n 48361: a3 = u64 [sp + 0x58]\n 48364: a3 = a1 if s1 != 0\n 48367: u64 [sp + 0x58] = a3\n 48370: a1 = u64 [sp + 0x10]\n 48373: a0 = a0 | a1\n 48376: a1 = u64 [sp + 0x28]\n 48379: a0 = a1 if a2 == 0\n 48382: a1 = u64 [sp + 0x60]\n 48385: a1 = a0 if s1 != 0\n 48388: u64 [sp + 0x60] = a1\n 48391: a0 = u64 [sp + 0x50]\n 48394: a1 = u64 [sp + 0x68]\n 48397: a2 = s1\n 48399: ra = 2080, jump @2677\n      : @2003 [@dyn 1040] (gas: 24)\n 48405: t0 = u64 [sp + 0x58]\n 48408: t2 = 0\n 48410: a2 = u64 [sp + 0x20]\n 48413: a1 = 0 if a2 == 0\n 48415: a0 = 0 if a2 == 0\n 48417: u64 [sp + 0x68] = a0\n 48420: a3 = u64 [sp + 0x30]\n 48423: a0 = a3 <u 0x1\n 48426: a2 = u64 [sp + 0x38]\n 48429: a0 = a2 - a0\n 48432: u64 [sp + 0x20] = a0\n 48435: a0 = a3 | a2\n 48438: a0 = a0 <u 0x1\n 48441: a2 = u64 [sp + 0x48]\n 48444: a4 = a2 - a0\n 48447: u64 [sp + 0x18] = a4\n 48450: a0 = a2 <u a0\n 48453: a2 = u64 [sp + 0x40]\n 48456: a2 = a2 - a0\n 48459: u64 [sp + 0x10] = a2\n 48462: a3 = a3 + 0xffffffffffffffff\n 48465: u64 [sp + 0x8] = a3\n 48468: ra = u64 [sp + 0x60]\n 48471: fallthrough\n      : @2004 (gas: 103)\n 48472: u64 [sp + 40] = 0\n 48475: a4 = ra >> 0x3f\n 48478: a3 = t0 << 0x1\n 48481: s1 = t0\n 48483: t0 = a3 | a4\n 48486: a4 = ra << 0x1\n 48489: ra = u64 [sp + 0x90]\n 48493: a2 = ra >> 0x3f\n 48496: a2 = a2 | a4\n 48499: u64 [sp + 0x60] = a2\n 48502: a0 = u64 [sp + 0x20]\n 48505: t1 = a0 ^ t0\n 48508: a4 = a0 <u t0\n 48511: a0 = u64 [sp + 0x8]\n 48514: a5 = t2\n 48516: t2 = a0 <u a2\n 48519: t2 = a4 if t1 != 0\n 48522: a1 = a1 << 0x1\n 48525: a0 = u64 [sp + 0x68]\n 48528: a2 = a0 >> 0x3f\n 48531: a1 = a1 | a2\n 48534: u64 [sp + 0x58] = a1\n 48537: a2 = s1 >> 0x3f\n 48540: a0 = a0 << 0x1\n 48543: t1 = a0 | a2\n 48546: a0 = ra << 0x1\n 48549: a1 = u64 [sp + 0x98]\n 48553: a2 = a1 >> 0x3f\n 48556: a0 = a0 | a2\n 48559: a2 = a1 << 0x1\n 48562: a1 = u64 [sp + 0x88]\n 48566: a4 = a1 >> 0x3f\n 48569: a2 = a2 | a4\n 48572: a4 = a1 << 0x1\n 48575: s1 = u64 [sp + 0xa0]\n 48579: ra = s1 >> 0x3f\n 48582: a4 = a4 | ra\n 48585: s1 = s1 << 0x1\n 48588: a5 = a5 | s1\n 48591: u64 [sp + 0xa0] = a5\n 48595: a4 = a4 | 0\n 48597: u64 [sp + 0x88] = a4\n 48601: a1 = a2 | 0\n 48603: u64 [sp + 0x98] = a1\n 48607: a0 = a0 | 0\n 48609: u64 [sp + 0x90] = a0\n 48613: a2 = u64 [sp + 0x18]\n 48616: a0 = a2 - t1\n 48619: a0 = a0 <u t2\n 48622: a2 = a2 <u t1\n 48625: a4 = u64 [sp + 0x10]\n 48628: a3 = u64 [sp + 0x58]\n 48631: a4 = a4 - a3\n 48634: a4 = a4 - a2\n 48637: a4 = a4 - a0\n 48640: a4 = a4 >>a 0x3f\n 48643: a0 = u64 [sp + 0x30]\n 48646: a1 = a4 & a0\n 48649: u64 [sp + 0x50] = a1\n 48652: a5 = u64 [sp + 0x38]\n 48655: a5 = a5 & a4\n 48658: a0 = t0 ^ a5\n 48661: s1 = t0 <u a5\n 48664: t2 = u64 [sp + 0x60]\n 48667: ra = t2 <u a1\n 48670: s1 = ra if a0 == 0\n 48673: a2 = u64 [sp + 0x48]\n 48676: a2 = a2 & a4\n 48679: a1 = t1 - a2\n 48682: a0 = a1 - s1\n 48685: u64 [sp + 0x68] = a0\n 48688: a0 = a1 <u s1\n 48691: a2 = t1 <u a2\n 48694: s1 = u64 [sp + 0x40]\n 48697: s1 = s1 & a4\n 48700: a1 = a3 - s1\n 48703: a1 = a1 - a2\n 48706: a1 = a1 - a0\n 48709: a3 = t0 - a5\n 48712: t0 = a3 - ra\n 48715: a0 = u64 [sp + 0x50]\n 48718: ra = t2 - a0\n 48721: a5 = u64 [sp + 0xa8]\n 48725: s1 = u64 [sp + 0x80]\n 48729: a0 = a5 | s1\n 48732: a0 = a0 <u 0x1\n 48735: a3 = u64 [sp + 0x70]\n 48738: a2 = a3 <u a0\n 48741: a0 = a3 - a0\n 48744: a3 = a5 <u 0x1\n 48747: s1 = s1 - a3\n 48750: a3 = u64 [sp + 0x78]\n 48753: a3 = a3 - a2\n 48756: a5 = a5 + 0xffffffffffffffff\n 48759: u64 [sp + 0x80] = s1\n 48763: u64 [sp + 0x78] = a3\n 48766: a2 = s1 | a3\n 48769: u64 [sp + 0xa8] = a5\n 48773: a3 = a5 | a0\n 48776: a2 = a2 | a3\n 48779: t2 = a4 & 0x1\n 48782: u64 [sp + 0x70] = a0\n 48785: jump @2004 if a2 != 0\n      : @2005 (gas: 1)\n 48789: jump @2007\n      : @2006 (gas: 3)\n 48791: t2 = 0\n 48793: u64 [sp + 40] = 0\n 48796: fallthrough\n      : @2007 (gas: 21)\n 48797: a3 = u64 [sp + 0x98]\n 48801: a0 = a3 >> 0x3f\n 48804: a1 = u64 [sp + 0x90]\n 48808: a1 = a1 << 0x1\n 48811: a0 = a0 | a1\n 48814: a5 = u64 [sp + 0x88]\n 48818: a1 = a5 >> 0x3f\n 48821: a3 = a3 << 0x1\n 48824: a1 = a1 | a3\n 48827: a2 = u64 [sp + 0xa0]\n 48831: a3 = a2 >> 0x3f\n 48834: a5 = a5 << 0x1\n 48837: s1 = a2 << 0x1\n 48840: s1 = t2 | s1\n 48843: a2 = u64 [sp + 0x28]\n 48846: a3 = a3 | a2\n 48849: a5 = a5 | a3\n 48852: a4 = a2 | a1\n 48855: a1 = a2 | a0\n 48858: a0 = u64 [sp]\n 48860: jump @2009\n      : @2008 (gas: 2)\n 48862: a0 = u64 [sp]\n 48864: fallthrough\n      : @2009 (gas: 10)\n 48865: u64 [a0] = s1\n 48867: u64 [a0 + 0x8] = a5\n 48870: u64 [a0 + 0x10] = a4\n 48873: u64 [a0 + 0x18] = a1\n 48876: sp = s0 + 0xfffffffffffffef0\n 48880: ra = u64 [sp + 0x108]\n 48884: s0 = u64 [sp + 0x100]\n 48888: s1 = u64 [sp + 0xf8]\n 48892: sp = sp + 0x110\n 48896: ret\n      : @2010 (gas: 8)\n 48898: u64 [sp + 224] = 0\n 48902: u64 [sp + 216] = 0\n 48906: u64 [sp + 208] = 0\n 48910: a0 = 0x4e487b7100000000\n 48920: a1 = sp + 0xd0\n 48924: u64 [sp + 0xe8] = a0\n 48928: a0 = 0\n 48930: ra = 2082, jump @19\n      : @2011 [@dyn 1041] (gas: 7)\n 48937: u64 [sp + 200] = 0\n 48941: u64 [sp + 192] = 0\n 48945: u64 [sp + 176] = 0x12\n 48950: a0 = 0x4\n 48953: a1 = sp + 0xb0\n 48957: u64 [sp + 184] = 0\n 48961: ra = 2084, jump @19\n      : @2012 [@dyn 1042] (gas: 2)\n 48968: a1 = i32 [0x2027c]\n 48973: jump @2014 if a1 >u 63\n      : @2013 (gas: 2)\n 48977: u32 [0x2027c] = 0x40\n 48983: fallthrough\n      : @2014 (gas: 7)\n 48984: a1 = 0x20290\n 48989: i32 a1 = a1 + 0\n 48991: a0 = 0x1\n 48994: a2 = 0x24\n 48997: ra = 0x826\n 49001: ecalli 15 // 'seal_return'\n 49003: fallthrough\n      : @2015 [@dyn 1043] (gas: 31)\n 49004: sp = sp + 0xfffffffffffffc00\n 49008: a3 = sp + 0x300\n 49012: u64 [a3 + 0xf8] = ra\n 49016: u64 [a3 + 0xf0] = s0\n 49020: u64 [a3 + 0xe8] = s1\n 49024: s0 = sp + 0x400\n 49028: sp = sp & 0xffffffffffffffe0\n 49031: s1 = sp\n 49033: a3 = u64 [a2 + 0x18]\n 49036: u64 [s1 + 0x40] = a3\n 49039: a3 = u64 [a2 + 0x10]\n 49042: u64 [s1 + 0x38] = a3\n 49045: a3 = u64 [a2 + 0x8]\n 49048: u64 [s1 + 0x30] = a3\n 49051: a2 = u64 [a2]\n 49053: u64 [s1 + 0x28] = a2\n 49056: a2 = u64 [a1 + 0x10]\n 49059: u64 [s1 + 0x48] = a2\n 49062: a2 = u64 [a1 + 0x8]\n 49065: u64 [s1 + 0x58] = a2\n 49068: a1 = u64 [a1]\n 49070: u64 [s1 + 0x50] = a1\n 49073: a1 = u64 [a0 + 0x10]\n 49076: u64 [s1 + 0x10] = a1\n 49079: a1 = u64 [a0 + 0x8]\n 49082: u64 [s1 + 0x8] = a1\n 49085: a0 = u64 [a0]\n 49087: u64 [s1 + 0x18] = a0\n 49090: a0 = s1 + 0x360\n 49094: a1 = 0x40\n 49097: ra = 2088, jump @17\n      : @2016 [@dyn 1044] (gas: 20)\n 49104: a5 = s1 + 0x300\n 49108: a0 = u64 [a5 + 0x78]\n 49111: u64 [s1 + 0x68] = a0\n 49114: a1 = u64 [a5 + 0x70]\n 49117: u64 [s1 + 0x60] = a1\n 49120: a3 = u64 [a5 + 0x68]\n 49123: u64 [s1 + 0x70] = a3\n 49126: a2 = u64 [a5 + 0x60]\n 49129: u64 [s1 + 0x78] = a2\n 49132: u64 [s1 + 824] = 0\n 49136: u64 [s1 + 816] = 0\n 49140: u64 [s1 + 808] = 0\n 49144: u64 [a5 + 32] = 0x40\n 49148: u64 [a5 + 0x58] = a0\n 49151: u64 [a5 + 0x50] = a1\n 49154: u64 [a5 + 0x48] = a3\n 49157: a0 = s1 + 0x340\n 49161: a1 = s1 + 0x320\n 49165: u64 [a5 + 0x40] = a2\n 49168: ra = 2090, jump @1919\n      : @2017 [@dyn 1045] (gas: 1)\n 49174: t0 = 2092, jump @2602\n      : @2018 [@dyn 1046] (gas: 1)\n 49180: jump @2071 if a0 != 0\n      : @2019 (gas: 7)\n 49184: u64 [s1 + 792] = 0\n 49188: u64 [s1 + 784] = 0\n 49192: u64 [s1 + 776] = 0\n 49196: a1 = s1 + 0x300\n 49200: u64 [s1 + 768] = 0x19\n 49205: a0 = u64 [s1 + 0x78]\n 49208: ra = 2094, jump @19\n      : @2020 [@dyn 1047] (gas: 1)\n 49215: t0 = 2096, jump @2589\n      : @2021 [@dyn 1048] (gas: 1)\n 49221: jump @2071 if a1 == 0\n      : @2022 (gas: 13)\n 49225: a0 = u64 [s1 + 0x78]\n 49228: i32 a0 = a0 + 0x20\n 49231: u64 [s1 + 0x78] = a0\n 49234: a3 = u64 [0x20158]\n 49239: a1 = u64 [0x20160]\n 49244: a2 = u64 [0x20168]\n 49249: u64 [s1 + 0x2f8] = a3\n 49253: u64 [s1 + 0x2f0] = a1\n 49257: u64 [s1 + 0x2e8] = a2\n 49261: a2 = 0x2900000000000000\n 49271: a1 = s1 + 0x2e0\n 49275: u64 [s1 + 0x2e0] = a2\n 49279: ra = 2098, jump @19\n      : @2023 [@dyn 1049] (gas: 3)\n 49286: a1 = 0x19\n 49289: a0 = u64 [s1 + 0x78]\n 49292: ra = 2100, jump @32\n      : @2024 [@dyn 1050] (gas: 14)\n 49299: a1 = sp + 0xffffffffffffffe0\n 49302: a1 = a1 & 0xffffffffffffffe0\n 49305: u64 [s1 + 0x78] = a1\n 49308: sp = a1\n 49310: i32 a0 = a0 + 0\n 49312: i32 a2 = a1 + 0\n 49314: a1 = 0x19\n 49317: ecalli 10 // 'hash_keccak_256'\n 49319: a0 = u64 [s1 + 0x78]\n 49322: a0 = u64 [a0]\n 49324: u64 [s1 + 0x20] = a0\n 49327: a0 = s1 + 0x2c0\n 49331: a1 = 0x40\n 49334: ra = 2102, jump @17\n      : @2025 [@dyn 1051] (gas: 25)\n 49341: a1 = s1 + 0x200\n 49345: a0 = u64 [a1 + 0xc0]\n 49349: a3 = u64 [a1 + 0xd8]\n 49353: a2 = u64 [a1 + 0xc8]\n 49357: a5 = u64 [a1 + 0xd0]\n 49361: a4 = a0 + 0x20\n 49364: u64 [s1 + 0x78] = a0\n 49367: a0 = a4 <u a0\n 49370: a1 = a2 + a0\n 49373: u64 [s1 + 0x70] = a2\n 49376: a2 = a1 <u a2\n 49379: a2 = a0 if a0 == 0\n 49382: a2 = a2 + a5\n 49385: u64 [s1 + 0x60] = a5\n 49388: a0 = a2 <u a5\n 49391: u64 [s1 + 0x68] = a3\n 49394: a0 = a0 + a3\n 49397: a3 = a4 | a2\n 49400: a0 = a0 | a1\n 49403: a3 = a3 | a0\n 49406: a3 = a3 >> 0x20\n 49409: a0 = a0 | a2\n 49412: a0 = a0 << 0x20\n 49415: a0 = a0 | a3\n 49418: jump @2071 if a0 != 0\n      : @2026 (gas: 12)\n 49422: a0 = u64 [s1 + 0x20]\n 49425: a0 = a0 << 0x20\n 49428: a0 = a0 >> 0x20\n 49431: a0 = reverse a0\n 49433: u64 [s1 + 688] = 0\n 49437: u64 [s1 + 680] = 0\n 49441: u64 [s1 + 672] = 0\n 49445: a1 = s1 + 0x2a0\n 49449: u64 [s1 + 0x2b8] = a0\n 49453: u64 [s1 + 0x20] = a4\n 49456: a0 = a4\n 49458: ra = 2104, jump @19\n      : @2027 [@dyn 1052] (gas: 12)\n 49465: a1 = u64 [s1 + 0x78]\n 49468: a0 = a1 + 0x24\n 49471: a1 = a0 <u a1\n 49474: a3 = u64 [s1 + 0x70]\n 49477: a2 = a3 + a1\n 49480: a3 = a2 <u a3\n 49483: a3 = a1 if a1 == 0\n 49486: a1 = u64 [s1 + 0x60]\n 49489: a3 = a3 + a1\n 49492: a1 = a3 <u a1\n 49495: a4 = u64 [s1 + 0x68]\n 49498: t0 = 2106, jump @2562\n      : @2028 [@dyn 1053] (gas: 1)\n 49504: jump @2071 if a1 != 0\n      : @2029 (gas: 12)\n 49508: a1 = u64 [s1 + 0x48]\n 49511: a1 = a1 << 0x20\n 49514: a2 = a1 >> 0x20\n 49517: u64 [s1 + 664] = 0\n 49521: a1 = u64 [s1 + 0x50]\n 49524: a3 = s1 + 0x200\n 49528: u64 [a3 + 0x80] = a1\n 49532: a1 = u64 [s1 + 0x58]\n 49535: u64 [a3 + 0x88] = a1\n 49539: a1 = s1 + 0x280\n 49543: u64 [a3 + 0x90] = a2\n 49547: ra = 2108, jump @19\n      : @2030 [@dyn 1054] (gas: 12)\n 49554: a1 = u64 [s1 + 0x78]\n 49557: a0 = a1 + 0x44\n 49560: a1 = a0 <u a1\n 49563: a3 = u64 [s1 + 0x70]\n 49566: a2 = a3 + a1\n 49569: a3 = a2 <u a3\n 49572: a3 = a1 if a1 == 0\n 49575: a1 = u64 [s1 + 0x60]\n 49578: a3 = a3 + a1\n 49581: a1 = a3 <u a1\n 49584: a4 = u64 [s1 + 0x68]\n 49587: t0 = 2110, jump @2562\n      : @2031 [@dyn 1055] (gas: 1)\n 49593: jump @2071 if a1 != 0\n      : @2032 (gas: 11)\n 49597: a1 = u64 [s1 + 0x28]\n 49600: a3 = s1 + 0x200\n 49604: u64 [a3 + 0x60] = a1\n 49607: a1 = u64 [s1 + 0x30]\n 49610: u64 [a3 + 0x68] = a1\n 49613: a1 = u64 [s1 + 0x38]\n 49616: u64 [a3 + 0x70] = a1\n 49619: a1 = s1 + 0x260\n 49623: a2 = u64 [s1 + 0x40]\n 49626: u64 [a3 + 0x78] = a2\n 49629: ra = 2112, jump @19\n      : @2033 [@dyn 1056] (gas: 12)\n 49636: a0 = u64 [s1 + 0x78]\n 49639: a3 = u64 [s1 + 0x60]\n 49642: a0 = a0 | a3\n 49645: a1 = u64 [s1 + 0x70]\n 49648: a2 = u64 [s1 + 0x68]\n 49651: a1 = a1 | a2\n 49654: a0 = a0 | a1\n 49657: a0 = a0 >> 0x20\n 49660: a1 = a1 | a3\n 49663: a1 = a1 << 0x20\n 49666: a0 = a0 | a1\n 49669: jump @2071 if a0 != 0\n      : @2034 (gas: 7)\n 49673: u64 [s1 + 600] = 0\n 49677: u64 [s1 + 592] = 0\n 49681: u64 [s1 + 584] = 0\n 49685: a1 = s1 + 0x240\n 49689: u64 [s1 + 576] = 0x44\n 49694: a0 = u64 [s1 + 0x78]\n 49697: ra = 2114, jump @19\n      : @2035 [@dyn 1057] (gas: 16)\n 49704: u64 [s1 + 536] = 0\n 49708: u64 [s1 + 528] = 0\n 49712: u64 [s1 + 520] = 0\n 49716: a3 = s1 + 0x200\n 49720: u64 [a3 + 0] = 0x64\n 49723: a0 = u64 [s1 + 0x68]\n 49726: u64 [a3 + 0x38] = a0\n 49729: a0 = u64 [s1 + 0x60]\n 49732: u64 [a3 + 0x30] = a0\n 49735: a0 = u64 [s1 + 0x70]\n 49738: u64 [a3 + 0x28] = a0\n 49741: a0 = s1 + 0x220\n 49745: a1 = s1 + 0x200\n 49749: a2 = u64 [s1 + 0x78]\n 49752: u64 [a3 + 0x20] = a2\n 49755: ra = 2116, jump @1919\n      : @2036 [@dyn 1058] (gas: 3)\n 49761: a0 = s1 + 0x1e0\n 49765: a1 = u64 [s1 + 0x78]\n 49768: ra = 2118, jump @17\n      : @2037 [@dyn 1059] (gas: 11)\n 49775: a1 = s1 + 0x100\n 49779: a0 = u64 [a1 + 0xf8]\n 49783: u64 [s1 + 0x70] = a0\n 49786: a0 = u64 [a1 + 0xf0]\n 49790: u64 [s1 + 0x68] = a0\n 49793: a0 = u64 [a1 + 0xe8]\n 49797: u64 [s1 + 0x60] = a0\n 49800: a0 = u64 [a1 + 0xe0]\n 49804: u64 [s1 + 0x78] = a0\n 49807: ecalli 12 // 'ref_time_left'\n 49809: fallthrough\n      : @2038 (gas: 36)\n 49810: u64 [s1 + 0x58] = a0\n 49813: a0 = u64 [s1 + 0x8]\n 49816: a0 = reverse a0\n 49818: a1 = a0 << 0x20\n 49821: a2 = u64 [s1 + 0x10]\n 49824: a2 = reverse a2\n 49826: a2 = a2 >> 0x20\n 49829: a1 = a1 | a2\n 49832: a2 = u64 [s1 + 0x18]\n 49835: a2 = reverse a2\n 49837: a3 = a2 << 0x20\n 49840: a4 = 0x30290\n 49845: a0 = a0 >> 0x20\n 49848: a0 = a0 | a3\n 49851: a2 = a2 >> 0x20\n 49854: u64 [0x30298] = a0\n 49859: u64 [0x30290] = a1\n 49864: u64 [s1 + 0x50] = a4\n 49867: u32 [0x302a0] = a2\n 49872: u64 [s1 + 920] = 0\n 49876: u64 [s1 + 912] = 0\n 49880: u64 [s1 + 904] = 0\n 49884: a0 = u64 [s1 + 0x70]\n 49887: a1 = u64 [s1 + 0x60]\n 49890: a0 = a0 | a1\n 49893: a1 = u64 [s1 + 0x78]\n 49896: a2 = a1\n 49898: a3 = u64 [s1 + 0x68]\n 49901: a1 = a1 | a3\n 49904: a1 = a1 | a0\n 49907: a1 = a1 >> 0x20\n 49910: a0 = a0 | a3\n 49913: a0 = a0 << 0x20\n 49916: a0 = a0 | a1\n 49919: u64 [s1 + 896] = 0\n 49923: jump @2071 if a0 != 0\n      : @2039 (gas: 5)\n 49927: a1 = a2\n 49929: i32 a0 = a2 + 0\n 49931: u64 [s1 + 0x70] = a0\n 49934: a0 = u64 [s1 + 0x20]\n 49937: ra = 2120, jump @32\n      : @2040 [@dyn 1060] (gas: 42)\n 49944: a1 = a0\n 49946: u32 [s1 + 928] = 0\n 49950: a0 = u64 [s1 + 0x70]\n 49953: a0 = a0 >u 0\n 49955: a3 = u64 [s1 + 0x58]\n 49958: a2 = a3 >u 0x8fc\n 49962: a0 = a0 | a2\n 49965: a2 = -a0\n 49967: a3 = s1 + 0x300\n 49971: u64 [a3 + 0xd8] = a2\n 49975: u64 [a3 + 0xd0] = a2\n 49979: u64 [a3 + 0xc8] = a2\n 49983: u64 [a3 + 0xc0] = a2\n 49987: a2 = u64 [s1 + 0x50]\n 49990: a2 = a2 << 0x20\n 49993: a2 = a2 >> 0x20\n 49996: a0 = a0 << 0x23\n 49999: a0 = a0 | a2\n 50002: a2 = s1 + 0x380\n 50006: a2 = a2 << 0x20\n 50009: a2 = a2 >> 0x20\n 50012: a3 = s1 + 0x3c0\n 50016: a3 = a3 << 0x20\n 50019: a3 = a3 | a2\n 50022: a1 = a1 << 0x20\n 50025: a2 = 0x20290\n 50030: a1 = a1 >> 0x20\n 50033: a4 = u64 [s1 + 0x78]\n 50036: a4 = a4 << 0x20\n 50039: a4 = a4 | a1\n 50042: u64 [s1 + 0x30] = a2\n 50045: a1 = a2 << 0x20\n 50048: a1 = a1 >> 0x20\n 50051: a2 = s1 + 0x3a0\n 50055: a2 = a2 << 0x20\n 50058: a5 = a2 | a1\n 50061: a1 = 0xffffffffffffffff\n 50064: a2 = 0xffffffffffffffff\n 50067: ecalli 1 // 'call'\n 50069: u64 [s1 + 0x70] = a0\n 50072: ecalli 14 // 'return_data_size'\n 50074: fallthrough\n      : @2041 (gas: 1)\n 50075: jump @2053 if a0 == 0\n      : @2042 (gas: 16)\n 50079: ecalli 14 // 'return_data_size'\n 50081: a2 = a0 + 0x1f\n 50084: u64 [s1 + 0x38] = a0\n 50087: a1 = a2 <u a0\n 50090: a0 = a2 & 0xffffffffffffffe0\n 50093: a2 = a0 + 0x20\n 50096: u64 [s1 + 0x40] = a2\n 50099: a0 = a2 <u a0\n 50102: a2 = a1 + a0\n 50105: u64 [s1 + 0x48] = a2\n 50108: a1 = a2 <u a1\n 50111: a1 = a0 if a0 == 0\n 50114: u64 [s1 + 0x50] = a1\n 50117: a0 = s1 + 0x1c0\n 50121: a1 = 0x40\n 50124: ra = 2122, jump @17\n      : @2043 [@dyn 1061] (gas: 23)\n 50131: a5 = s1 + 0x100\n 50135: a0 = u64 [a5 + 0xd8]\n 50139: u64 [s1 + 0x60] = a0\n 50142: a1 = u64 [a5 + 0xd0]\n 50146: u64 [s1 + 0x58] = a1\n 50149: a3 = u64 [a5 + 0xc8]\n 50153: u64 [s1 + 0x68] = a3\n 50156: a4 = u64 [a5 + 0xc0]\n 50160: u64 [s1 + 0x78] = a4\n 50163: u64 [s1 + 408] = 0\n 50167: a2 = u64 [s1 + 0x40]\n 50170: u64 [a5 + 0x80] = a2\n 50174: u64 [a5 + 0xb8] = a0\n 50178: u64 [a5 + 0xb0] = a1\n 50182: u64 [a5 + 0xa8] = a3\n 50186: u64 [a5 + 0xa0] = a4\n 50190: a0 = u64 [s1 + 0x48]\n 50193: u64 [a5 + 0x88] = a0\n 50197: a0 = s1 + 0x1a0\n 50201: a1 = s1 + 0x180\n 50205: a2 = u64 [s1 + 0x50]\n 50208: u64 [a5 + 0x90] = a2\n 50212: ra = 2124, jump @1919\n      : @2044 [@dyn 1062] (gas: 12)\n 50218: a0 = u64 [s1 + 0x78]\n 50221: a1 = u64 [s1 + 0x60]\n 50224: a2 = u64 [s1 + 0x68]\n 50227: a2 = a2 | a1\n 50230: a3 = u64 [s1 + 0x58]\n 50233: a1 = a0 | a3\n 50236: a1 = a1 | a2\n 50239: a1 = a1 >> 0x20\n 50242: a2 = a2 | a3\n 50245: a2 = a2 << 0x20\n 50248: a1 = a1 | a2\n 50251: jump @2071 if a1 != 0\n      : @2045 (gas: 7)\n 50255: u64 [s1 + 376] = 0\n 50259: u64 [s1 + 368] = 0\n 50263: u64 [s1 + 360] = 0\n 50267: a1 = s1 + 0x160\n 50271: a2 = u64 [s1 + 0x38]\n 50274: u64 [s1 + 0x160] = a2\n 50278: ra = 2126, jump @19\n      : @2046 [@dyn 1063] (gas: 2)\n 50285: ecalli 14 // 'return_data_size'\n 50287: fallthrough\n      : @2047 (gas: 10)\n 50288: a3 = u64 [s1 + 0x78]\n 50291: a1 = u64 [s1 + 0x60]\n 50294: a2 = u64 [s1 + 0x58]\n 50297: a1 = a1 | a2\n 50300: a2 = 0xffffffe0\n 50310: a2 = a3 <u a2\n 50313: a4 = u64 [s1 + 0x68]\n 50316: a2 = 0 if a4 != 0\n 50318: a2 = 0 if a1 != 0\n 50320: jump @2071 if a2 == 0\n      : @2048 (gas: 3)\n 50324: a1 = a0\n 50326: a0 = a0 >> 0x20\n 50329: jump @2071 if a0 != 0\n      : @2049 (gas: 7)\n 50333: i32 a0 = a3 + 0x20\n 50336: a2 = a1\n 50338: u64 [s1 + 0x60] = a1\n 50341: i32 a1 = a1 + 0\n 50343: u64 [s1 + 0x68] = a1\n 50346: a1 = a2\n 50348: ra = 2128, jump @32\n      : @2050 [@dyn 1064] (gas: 7)\n 50355: a1 = u64 [s1 + 0x60]\n 50358: u32 [s1 + 0x3e0] = a1\n 50362: i32 a0 = a0 + 0\n 50364: i32 a1 = s1 + 0x3e0\n 50368: a2 = 0\n 50370: ecalli 13 // 'return_data_copy'\n 50372: fallthrough\n      : @2051 (gas: 3)\n 50373: a0 = i32 [s1 + 0x3e0]\n 50377: a1 = u64 [s1 + 0x68]\n 50380: jump @2054 if a0 >=u a1\n      : @2052 (gas: 1)\n 50383: jump @2071\n      : @2053 (gas: 2)\n 50386: u64 [s1 + 120] = 0x60\n 50390: fallthrough\n      : @2054 (gas: 2)\n 50391: a0 = u64 [s1 + 0x70]\n 50394: jump @2062 if a0 != 0\n      : @2055 (gas: 3)\n 50398: a0 = s1 + 0x140\n 50402: a1 = u64 [s1 + 0x78]\n 50405: ra = 2130, jump @17\n      : @2056 [@dyn 1065] (gas: 9)\n 50412: a4 = s1 + 0x100\n 50416: a0 = u64 [a4 + 0x58]\n 50419: a1 = u64 [a4 + 0x50]\n 50422: a2 = u64 [a4 + 0x48]\n 50425: a3 = u64 [a4 + 0x40]\n 50428: a4 = a2 | a0\n 50431: a5 = a3 | a1\n 50434: a4 = a4 | a5\n 50437: jump @2061 if a4 == 0\n      : @2057 (gas: 10)\n 50440: a4 = a2 >u 0\n 50442: a3 = a3 <u 0x20\n 50445: a3 = a3 ^ 0x1\n 50448: a3 = a4 if a2 != 0\n 50451: a2 = a0 >s 0\n 50453: a4 = a1 >u 0\n 50455: a4 = a2 if a0 != 0\n 50458: a0 = a0 | a1\n 50461: a4 = a3 if a0 == 0\n 50464: jump @2072 if a4 == 0\n      : @2058 (gas: 4)\n 50468: a0 = u64 [s1 + 0x78]\n 50471: i32 a1 = a0 + 0x20\n 50474: a0 = s1 + 0x120\n 50478: ra = 2132, jump @17\n      : @2059 [@dyn 1066] (gas: 10)\n 50485: a4 = s1 + 0x100\n 50489: a0 = u64 [a4 + 0x38]\n 50492: a1 = u64 [a4 + 0x30]\n 50495: a2 = u64 [a4 + 0x20]\n 50498: a3 = u64 [a4 + 0x28]\n 50501: a4 = a1 | a0\n 50504: a5 = a2 <u 0x2\n 50507: a5 = 0 if a3 != 0\n 50509: a5 = 0 if a4 != 0\n 50511: jump @2072 if a5 == 0\n      : @2060 (gas: 4)\n 50515: a1 = a1 | a2\n 50518: a0 = a0 | a3\n 50521: a0 = a0 | a1\n 50524: jump @2062 if a0 == 0\n      : @2061 (gas: 7)\n 50527: sp = s0 + 0xfffffffffffffc00\n 50531: a0 = sp + 0x300\n 50535: ra = u64 [a0 + 0xf8]\n 50539: s0 = u64 [a0 + 0xf0]\n 50543: s1 = u64 [a0 + 0xe8]\n 50547: sp = sp + 0x400\n 50551: ret\n      : @2062 (gas: 3)\n 50553: a0 = s1 + 0x100\n 50557: a1 = 0x40\n 50560: ra = 2134, jump @17\n      : @2063 [@dyn 1067] (gas: 17)\n 50567: a4 = s1 + 0x100\n 50571: a2 = u64 [a4 + 0x18]\n 50574: a3 = u64 [a4 + 0x10]\n 50577: a0 = u64 [a4 + 0x8]\n 50580: a1 = u64 [a4]\n 50582: u64 [s1 + 0x70] = a0\n 50585: u64 [s1 + 0x68] = a2\n 50588: a0 = a0 | a2\n 50591: u64 [s1 + 0x78] = a1\n 50594: a1 = a1 | a3\n 50597: a1 = a1 | a0\n 50600: a1 = a1 >> 0x20\n 50603: u64 [s1 + 0x60] = a3\n 50606: a0 = a0 | a3\n 50609: a0 = a0 << 0x20\n 50612: a0 = a0 | a1\n 50615: jump @2071 if a0 != 0\n      : @2064 (gas: 6)\n 50619: u64 [s1 + 240] = 0\n 50623: u64 [s1 + 232] = 0\n 50627: u64 [s1 + 224] = 0\n 50631: t0 = 0x858\n 50635: a0 = 0x8c379a000000000\n 50645: fallthrough\n      : @2065 [@dyn 1068] (gas: 4)\n 50646: a1 = s1 + 0xe0\n 50650: u64 [s1 + 0xf8] = a0\n 50654: a0 = u64 [s1 + 0x78]\n 50657: ra = 2138, jump @19\n      : @2066 [@dyn 1069] (gas: 13)\n 50664: a0 = u64 [s1 + 0x68]\n 50667: a2 = u64 [s1 + 0x60]\n 50670: a2 = a2 | a0\n 50673: a0 = 0x100000000\n 50683: u64 [s1 + 0x60] = a0\n 50686: a0 = 0xfffffffc\n 50696: a1 = u64 [s1 + 0x78]\n 50699: a0 = a1 <u a0\n 50702: a1 = u64 [s1 + 0x70]\n 50705: a0 = 0 if a1 != 0\n 50707: u64 [s1 + 0x68] = a2\n 50710: a0 = 0 if a2 != 0\n 50712: jump @2071 if a0 == 0\n      : @2067 (gas: 8)\n 50715: a0 = u64 [s1 + 0x78]\n 50718: i32 a0 = a0 + 0x4\n 50721: u64 [s1 + 216] = 0\n 50725: u64 [s1 + 208] = 0\n 50729: u64 [s1 + 192] = 0x20\n 50734: a1 = s1 + 0xc0\n 50738: u64 [s1 + 200] = 0\n 50742: ra = 2140, jump @19\n      : @2068 [@dyn 1070] (gas: 9)\n 50749: a0 = u64 [s1 + 0x60]\n 50752: a0 = a0 + 0xffffffffffffffdc\n 50755: a1 = u64 [s1 + 0x78]\n 50758: a0 = a1 <u a0\n 50761: a1 = u64 [s1 + 0x70]\n 50764: a0 = 0 if a1 != 0\n 50766: a1 = u64 [s1 + 0x68]\n 50769: a0 = 0 if a1 != 0\n 50771: jump @2071 if a0 == 0\n      : @2069 (gas: 8)\n 50774: a0 = u64 [s1 + 0x78]\n 50777: i32 a0 = a0 + 0x24\n 50780: u64 [s1 + 184] = 0\n 50784: u64 [s1 + 176] = 0\n 50788: u64 [s1 + 160] = 0x1a\n 50793: a1 = s1 + 0xa0\n 50797: u64 [s1 + 168] = 0\n 50801: ra = 2142, jump @19\n      : @2070 [@dyn 1071] (gas: 8)\n 50808: a0 = 0xffffffbc\n 50818: a1 = u64 [s1 + 0x78]\n 50821: a0 = a1 <u a0\n 50824: a1 = u64 [s1 + 0x70]\n 50827: a0 = 0 if a1 != 0\n 50829: a1 = u64 [s1 + 0x68]\n 50832: a0 = 0 if a1 != 0\n 50834: jump @2073 if a0 != 0\n      : @2071 (gas: 1)\n 50837: trap\n      : @2072 (gas: 5)\n 50838: a1 = i32 [s1 + 0x30]\n 50841: a0 = 0x1\n 50844: a2 = 0\n 50846: ecalli 15 // 'seal_return'\n 50848: fallthrough\n      : @2073 (gas: 12)\n 50849: a0 = u64 [s1 + 0x78]\n 50852: i32 a0 = a0 + 0x44\n 50855: a1 = u64 [0x20170]\n 50860: a2 = u64 [0x20178]\n 50865: a3 = u64 [0x20180]\n 50870: u64 [s1 + 0x98] = a1\n 50874: u64 [s1 + 0x90] = a2\n 50878: u64 [s1 + 0x88] = a3\n 50882: a2 = 0x4544000000000000\n 50892: a1 = s1 + 0x80\n 50896: u64 [s1 + 0x80] = a2\n 50900: ra = 2144, jump @19\n      : @2074 [@dyn 1072] (gas: 3)\n 50907: a1 = 0x64\n 50910: a0 = u64 [s1 + 0x78]\n 50913: ra = 2146, jump @32\n      : @2075 [@dyn 1073] (gas: 1)\n 50920: t0 = 2148, jump @2626\n      : @2076 [@dyn 1074] (gas: 3)\n 50926: ra = 0x866\n 50930: ecalli 15 // 'seal_return'\n 50932: fallthrough\n      : @2077 [@dyn 1075] (gas: 70)\n 50933: sp = sp + 0xffffffffffffff40\n 50937: u64 [sp + 0xb8] = ra\n 50941: u64 [sp + 0xb0] = s0\n 50945: u64 [sp + 0xa8] = s1\n 50949: s0 = sp + 0xc0\n 50953: sp = sp & 0xfffffffffffffff0\n 50956: ra = u64 [a2]\n 50958: t0 = u64 [a1]\n 50960: a3 = u64 [a1 + 0x8]\n 50963: u64 [sp + 0x58] = a0\n 50966: a4 = u64 [a2 + 0x8]\n 50969: a0 = t0 mulhu ra\n 50972: s1 = a3 * ra\n 50975: a0 = a0 + s1\n 50978: s1 = a0 <u s1\n 50981: a5 = a3 mulhu ra\n 50984: a5 = a5 + s1\n 50987: s1 = t0 * a4\n 50990: a0 = a0 + s1\n 50993: u64 [sp + 0x50] = a0\n 50996: a0 = a0 <u s1\n 50999: s1 = t0 mulhu a4\n 51002: a0 = a0 + s1\n 51005: a0 = a0 + a5\n 51008: a5 = a0 <u a5\n 51011: s1 = a3 mulhu a4\n 51014: a5 = a5 + s1\n 51017: s1 = a3 * a4\n 51020: a0 = a0 + s1\n 51023: u64 [sp + 0x48] = a0\n 51026: s1 = a0 <u s1\n 51029: a5 = a5 + s1\n 51032: u64 [sp + 0x40] = a5\n 51035: t1 = u64 [a2 + 0x10]\n 51038: a2 = u64 [a2 + 0x18]\n 51041: t2 = u64 [a1 + 0x18]\n 51044: a0 = u64 [a1 + 0x10]\n 51047: a5 = a3 * t1\n 51050: u64 [sp + 0x20] = a2\n 51053: s1 = a2 * t0\n 51056: a1 = s1 + a5\n 51059: u64 [sp + 0x28] = a4\n 51062: s1 = a4 * a0\n 51065: a2 = t2 * ra\n 51068: a2 = a2 + s1\n 51071: s1 = t1 * t0\n 51074: a5 = a0 * ra\n 51077: s1 = s1 + a5\n 51080: u64 [sp + 0x30] = t1\n 51083: a4 = t1 mulhu t0\n 51086: u64 [sp + 0x10] = a4\n 51089: a4 = a4 + a1\n 51092: t1 = a0 mulhu ra\n 51095: a1 = t1 + a2\n 51098: a2 = s1 <u a5\n 51101: u64 [sp + 0x18] = a1\n 51104: u64 [sp + 0x8] = a4\n 51107: a5 = a1 + a4\n 51110: a2 = a2 + a5\n 51113: u64 [sp + 0x38] = t2\n 51116: a5 = a3 | t2\n 51119: a1 = t0 | a0\n 51122: a1 = a1 | a5\n 51125: a4 = u64 [sp + 0x40]\n 51128: a5 = u64 [sp + 0x48]\n 51131: s1 = s1 + a5\n 51134: t2 = s1 <u a5\n 51137: a2 = a2 + a4\n 51140: a2 = a2 + t2\n 51143: jump @2079 if a1 == 0\n      : @2078 (gas: 50)\n 51147: a1 = a2 ^ a4\n 51150: u64 [sp + 0x48] = a2\n 51153: a2 = u64 [sp + 0x48]\n 51156: a2 = a2 <u a4\n 51159: t2 = a2 if a1 != 0\n 51162: u64 [sp + 0x40] = s1\n 51165: a1 = u64 [sp + 0x10]\n 51168: a2 = u64 [sp + 0x8]\n 51171: s1 = a2 <u a1\n 51174: a2 = a3 >u 0\n 51176: a1 = u64 [sp + 0x20]\n 51179: a5 = a1 >u 0\n 51181: a2 = a2 & a5\n 51184: a5 = a1 mulhu t0\n 51187: a5 = a5 >u 0\n 51189: a2 = a2 | a5\n 51192: a4 = t1\n 51194: t1 = u64 [sp + 0x30]\n 51197: a3 = a3 mulhu t1\n 51200: a3 = a3 >u 0\n 51202: a2 = a2 | a3\n 51205: a2 = a2 | s1\n 51208: u64 [sp + 0x10] = a2\n 51211: a2 = u64 [sp + 0x18]\n 51214: a2 = a2 <u a4\n 51217: a4 = u64 [sp + 0x28]\n 51220: a3 = a4 >u 0\n 51222: s1 = u64 [sp + 0x38]\n 51225: a5 = s1 >u 0\n 51227: a3 = a3 & a5\n 51230: a5 = s1 mulhu ra\n 51233: a5 = a5 >u 0\n 51235: a3 = a3 | a5\n 51238: a5 = a4 mulhu a0\n 51241: a5 = a5 >u 0\n 51243: a3 = a3 | a5\n 51246: a2 = a2 | a3\n 51249: a3 = t1 | a1\n 51252: a5 = a0 | s1\n 51255: s1 = u64 [sp + 0x40]\n 51258: a3 = a3 >u 0\n 51260: a5 = a5 >u 0\n 51262: a3 = a3 & a5\n 51265: a2 = a2 | a3\n 51268: a1 = u64 [sp + 0x10]\n 51271: a1 = a1 | a2\n 51274: a2 = u64 [sp + 0x48]\n 51277: a0 = a1 | t2\n 51280: a0 = a0 & 0x1\n 51283: jump @2080 if a0 != 0\n      : @2079 (gas: 13)\n 51286: a0 = t0 * ra\n 51289: a1 = u64 [sp + 0x58]\n 51292: u64 [a1] = a0\n 51294: a0 = u64 [sp + 0x50]\n 51297: u64 [a1 + 0x8] = a0\n 51300: u64 [a1 + 0x10] = s1\n 51303: u64 [a1 + 0x18] = a2\n 51306: sp = s0 + 0xffffffffffffff40\n 51310: ra = u64 [sp + 0xb8]\n 51314: s0 = u64 [sp + 0xb0]\n 51318: s1 = u64 [sp + 0xa8]\n 51322: sp = sp + 0xc0\n 51326: ret\n      : @2080 (gas: 8)\n 51328: u64 [sp + 144] = 0\n 51332: u64 [sp + 136] = 0\n 51336: u64 [sp + 128] = 0\n 51340: a0 = 0x4e487b7100000000\n 51350: a1 = sp + 0x80\n 51354: u64 [sp + 0x98] = a0\n 51358: a0 = 0\n 51360: ra = 2152, jump @19\n      : @2081 [@dyn 1076] (gas: 7)\n 51367: u64 [sp + 120] = 0\n 51370: u64 [sp + 112] = 0\n 51373: u64 [sp + 96] = 0x11\n 51377: a0 = 0x4\n 51380: a1 = sp + 0x60\n 51383: u64 [sp + 104] = 0\n 51386: ra = 2154, jump @19\n      : @2082 [@dyn 1077] (gas: 2)\n 51393: a1 = i32 [0x2027c]\n 51398: jump @2084 if a1 >u 63\n      : @2083 (gas: 2)\n 51402: u32 [0x2027c] = 0x40\n 51408: fallthrough\n      : @2084 (gas: 8)\n 51409: a1 = 0x20290\n 51414: i32 a1 = a1 + 0\n 51416: a0 = 0x1\n 51419: a2 = 0x24\n 51422: ra = 0x86c\n 51426: ecalli 15 // 'seal_return'\n 51428: t0 = 0x86e\n 51432: jump @2633\n      : @2085 [@dyn 1078] (gas: 1)\n 51435: t0 = 2158, jump @2633\n      : @2086 [@dyn 1079] (gas: 20)\n 51441: a3 = 0x3e8\n 51445: a0 = s1 mulhu a3\n 51448: a1 = a2 * a3\n 51451: t0 = a1 + a0\n 51454: a0 = t0 <u a1\n 51457: a1 = a2 mulhu a3\n 51460: a0 = a0 + a1\n 51463: a1 = a5 * a3\n 51466: ra = a0 + a1\n 51469: a0 = ra <u a0\n 51472: u64 [sp + 0x18] = a2\n 51475: a1 = a2 | a4\n 51478: a2 = s1 | a5\n 51481: t1 = a2 | a1\n 51484: a2 = a4 * a3\n 51487: u64 [sp + 0x8] = a5\n 51490: a1 = a5 mulhu a3\n 51493: a2 = a2 + a1\n 51496: a5 = a2 + a0\n 51499: jump @2088 if t1 == 0\n      : @2087 (gas: 7)\n 51502: a0 = 0 if a5 != 0\n 51504: a1 = a2 <u a1\n 51507: a2 = a4 mulhu a3\n 51510: a2 = a2 >u 0\n 51512: a1 = a1 | a2\n 51515: a0 = a0 | a1\n 51518: jump @2130 if a0 != 0\n      : @2088 (gas: 9)\n 51522: u64 [sp + 0x20] = a4\n 51525: u64 [sp + 0x10] = s1\n 51528: a2 = s1 * 0x3e8\n 51532: u64 [sp + 0x40] = a2\n 51535: a0 = a2 | ra\n 51538: a1 = t0 | a5\n 51541: a0 = a0 | a1\n 51544: u64 [sp + 0x48] = t0\n 51547: t0 = 2160, jump @2654\n      : @2089 [@dyn 1080] (gas: 2)\n 51553: a0 = clz a2\n 51555: t0 = 2162, jump @2624\n      : @2090 [@dyn 1081] (gas: 36)\n 51561: t0 = a5\n 51563: a5 = a0 <u a1\n 51566: a5 = 0 if a2 != 0\n 51568: s1 = a5 >u 0\n 51570: a0 = a4 <u 0xf7\n 51574: a2 = a0 ^ 0x1\n 51577: s1 = a2 if a5 == 0\n 51580: a0 = s1 <u 0x1\n 51583: t2 = a0 + 0xffffffffffffffff\n 51586: a0 = -s1\n 51588: a5 = -a5\n 51590: a2 = a5 - a2\n 51593: t1 = 0xf6 - a4\n 51597: u64 [sp + 0xa8] = a0\n 51601: a4 = a0 >u 0\n 51603: a5 = t2 >u 0\n 51605: a5 = a4 if t2 == 0\n 51608: a4 = a2 >u 0\n 51610: a3 = t1 <u 0x100\n 51614: a3 = a3 ^ 0x1\n 51617: a3 = a4 if a2 != 0\n 51620: a3 = a5 if s1 != 0\n 51623: a0 = u64 [sp + 0xb8]\n 51627: a0 = a0 | a3\n 51630: a1 = u64 [sp + 0x48]\n 51633: u64 [sp + 0x30] = t0\n 51636: t0 = 0 if a0 != 0\n 51638: u64 [sp + 0x38] = ra\n 51641: a5 = ra\n 51643: ra = u64 [sp + 0x40]\n 51646: a5 = 0 if a0 != 0\n 51648: a4 = a1\n 51650: a4 = 0 if a0 != 0\n 51652: s1 = ra\n 51654: s1 = 0 if a0 != 0\n 51656: jump @2110 if a0 != 0\n      : @2091 (gas: 8)\n 51660: u64 [sp + 0xb0] = t1\n 51664: a0 = t1 ^ 0xff\n 51668: t1 = u64 [sp + 0xa8]\n 51672: a3 = a0 | t1\n 51675: a0 = a2 | t2\n 51678: a0 = a0 | a3\n 51681: a3 = u64 [sp + 0x28]\n 51684: jump @2113 if a0 == 0\n      : @2092 (gas: 1)\n 51688: t0 = 2164, jump @2581\n      : @2093 [@dyn 1082] (gas: 1)\n 51694: ra = 2166, jump @2677\n      : @2094 [@dyn 1083] (gas: 7)\n 51700: u64 [sp + 0xa8] = a0\n 51704: u64 [sp + 0xa0] = a1\n 51708: a0 = u64 [sp + 0x38]\n 51711: s1 = u64 [sp + 0x30]\n 51714: a1 = s1\n 51716: a2 = u64 [sp + 0x98]\n 51720: ra = 2168, jump @2682\n      : @2095 [@dyn 1084] (gas: 1)\n 51726: t0 = 2170, jump @2647\n      : @2096 [@dyn 1085] (gas: 1)\n 51732: ra = 2172, jump @2682\n      : @2097 [@dyn 1086] (gas: 1)\n 51738: t0 = 2174, jump @2594\n      : @2098 [@dyn 1087] (gas: 1)\n 51744: ra = 2176, jump @2682\n      : @2099 [@dyn 1088] (gas: 1)\n 51750: t0 = 2178, jump @2628\n      : @2100 [@dyn 1089] (gas: 1)\n 51756: jump @2111 if a4 == 0\n      : @2101 (gas: 5)\n 51760: s1 = u64 [sp + 0xb8]\n 51764: a2 = s1 + 0xffffffffffffff80\n 51767: a0 = u64 [sp + 0x38]\n 51770: a1 = u64 [sp + 0x30]\n 51773: ra = 2180, jump @2677\n      : @2102 [@dyn 1090] (gas: 6)\n 51779: u64 [sp + 0x78] = a0\n 51782: u64 [sp + 0x68] = a1\n 51785: a0 = u64 [sp + 0x40]\n 51788: a1 = u64 [sp + 0x48]\n 51791: a2 = s1\n 51793: ra = 2182, jump @2677\n      : @2103 [@dyn 1091] (gas: 6)\n 51799: u64 [sp + 0x60] = a0\n 51802: u64 [sp + 0x70] = a1\n 51805: a2 = 0x80 - s1\n 51809: a0 = u64 [sp + 0x38]\n 51812: a1 = u64 [sp + 0x30]\n 51815: ra = 2184, jump @2682\n      : @2104 [@dyn 1092] (gas: 1)\n 51821: t0 = 2186, jump @2591\n      : @2105 [@dyn 1093] (gas: 1)\n 51827: ra = 2188, jump @2677\n      : @2106 [@dyn 1094] (gas: 10)\n 51833: t0 = s1\n 51835: t2 = u64 [sp + 0x68]\n 51838: a5 = 0\n 51840: a4 = 0\n 51842: a2 = u64 [sp + 0x70]\n 51845: a1 = 0 if a2 == 0\n 51847: a0 = 0 if a2 == 0\n 51849: u64 [sp + 88] = 0x3e7\n 51854: u64 [sp + 80] = 0\n 51857: fallthrough\n      : @2107 (gas: 9)\n 51858: u64 [sp + 0x70] = a1\n 51861: u64 [sp + 0x68] = a5\n 51864: u64 [sp + 96] = 0\n 51867: a2 = t0 >> 0x3f\n 51870: s1 = t2\n 51872: a3 = t2 << 0x1\n 51875: t1 = a3 | a2\n 51878: a2 = t0 << 0x1\n 51881: t0 = 2190, jump @2640\n      : @2108 [@dyn 1095] (gas: 71)\n 51887: t0 = a5 <u a4\n 51890: t0 = t2 if ra != 0\n 51893: a5 = u64 [sp + 0x70]\n 51896: a5 = a5 << 0x1\n 51899: a4 = a0 >> 0x3f\n 51902: a4 = a4 | a5\n 51905: u64 [sp + 0x70] = a4\n 51908: a4 = s1 >> 0x3f\n 51911: a0 = a0 << 0x1\n 51914: a4 = a4 | a0\n 51917: a0 = a1 << 0x1\n 51920: a1 = u64 [sp + 0xa8]\n 51924: s1 = a1 >> 0x3f\n 51927: t2 = a0 | s1\n 51930: s1 = a1 << 0x1\n 51933: a1 = u64 [sp + 0x98]\n 51937: a5 = a1 >> 0x3f\n 51940: a5 = a5 | s1\n 51943: a0 = a1 << 0x1\n 51946: s1 = u64 [sp + 0xb0]\n 51950: a1 = s1 >> 0x3f\n 51953: a1 = a1 | a0\n 51956: s1 = s1 << 0x1\n 51959: a0 = u64 [sp + 0x68]\n 51962: s1 = s1 | a0\n 51965: u64 [sp + 0xb0] = s1\n 51969: ra = u64 [sp + 0xb8]\n 51973: a1 = a1 | a3\n 51976: u64 [sp + 0x98] = a1\n 51980: a0 = a3 | a5\n 51983: u64 [sp + 0xa8] = a0\n 51987: a0 = a3 | t2\n 51990: u64 [sp + 0xa0] = a0\n 51994: a0 = a2 - a4\n 51997: a0 = a0 <u t0\n 52000: a1 = a2 <u a4\n 52003: a3 = u64 [sp + 0x70]\n 52006: a5 = a2 - a3\n 52009: a5 = a5 - a1\n 52012: a5 = a5 - a0\n 52015: a5 = a5 >>a 0x3f\n 52018: a0 = a5 & 0x3e8\n 52022: a1 = u64 [sp + 0x78]\n 52025: t0 = a1 - a0\n 52028: a1 = a1 <u a0\n 52031: t2 = t1 - a1\n 52034: a1 = 0 if t1 != 0\n 52036: a0 = a4 - a1\n 52039: a1 = a4 <u a1\n 52042: a1 = a3 - a1\n 52045: s1 = u64 [sp + 0x90]\n 52049: a2 = ra | s1\n 52052: a2 = a2 <u 0x1\n 52055: a4 = u64 [sp + 0x80]\n 52059: a3 = a4 <u a2\n 52062: a2 = a4 - a2\n 52065: a4 = ra <u 0x1\n 52068: s1 = s1 - a4\n 52071: a4 = u64 [sp + 0x88]\n 52075: a4 = a4 - a3\n 52078: ra = ra + 0xffffffffffffffff\n 52081: u64 [sp + 0x90] = s1\n 52085: u64 [sp + 0x88] = a4\n 52089: a3 = s1 | a4\n 52092: u64 [sp + 0xb8] = ra\n 52096: a4 = ra | a2\n 52099: a3 = a3 | a4\n 52102: a5 = a5 & 0x1\n 52105: u64 [sp + 0x80] = a2\n 52109: a4 = 0\n 52111: jump @2107 if a3 != 0\n      : @2109 (gas: 1)\n 52115: jump @2112\n      : @2110 (gas: 2)\n 52117: a3 = u64 [sp + 0x28]\n 52120: jump @2113\n      : @2111 (gas: 3)\n 52122: a5 = 0\n 52124: u64 [sp + 96] = 0\n 52127: fallthrough\n      : @2112 (gas: 23)\n 52128: a2 = u64 [sp + 0xa8]\n 52132: a0 = a2 >> 0x3f\n 52135: a1 = u64 [sp + 0xa0]\n 52139: a1 = a1 << 0x1\n 52142: t0 = a1 | a0\n 52145: a3 = u64 [sp + 0x98]\n 52149: a1 = a3 >> 0x3f\n 52152: a2 = a2 << 0x1\n 52155: a1 = a1 | a2\n 52158: a4 = u64 [sp + 0xb0]\n 52162: a2 = a4 >> 0x3f\n 52165: a0 = a3 << 0x1\n 52168: a4 = a4 << 0x1\n 52171: s1 = a5 | a4\n 52174: a3 = u64 [sp + 0x60]\n 52177: a4 = a3 | a2\n 52180: a4 = a4 | a0\n 52183: a5 = a3 | a1\n 52186: t0 = a3 | t0\n 52189: a3 = u64 [sp + 0x28]\n 52192: a1 = u64 [sp + 0x48]\n 52195: ra = u64 [sp + 0x40]\n 52198: fallthrough\n      : @2113 (gas: 12)\n 52199: a0 = u64 [sp + 0x10]\n 52202: a0 = a0 ^ s1\n 52205: a2 = u64 [sp + 0x8]\n 52208: a2 = a2 ^ a5\n 52211: a0 = a0 | a2\n 52214: a2 = u64 [sp + 0x18]\n 52217: a4 = a4 ^ a2\n 52220: a2 = u64 [sp + 0x20]\n 52223: a2 = t0 ^ a2\n 52226: a2 = a2 | a4\n 52229: a0 = a0 | a2\n 52232: jump @2116 if a0 != 0\n      : @2114 (gas: 1)\n 52235: t0 = 2192, jump @2629\n      : @2115 [@dyn 1096] (gas: 1)\n 52241: ret\n      : @2116 (gas: 3)\n 52243: a0 = sp + 0x140\n 52247: a1 = 0x40\n 52250: ra = 2194, jump @17\n      : @2117 [@dyn 1097] (gas: 9)\n 52257: a2 = u64 [sp + 0x158]\n 52261: s1 = u64 [sp + 0x150]\n 52265: a0 = u64 [sp + 0x148]\n 52269: a1 = u64 [sp + 0x140]\n 52273: u64 [sp + 0xb0] = a0\n 52277: u64 [sp + 0xa8] = a2\n 52281: a0 = a0 | a2\n 52284: u64 [sp + 0xb8] = a1\n 52288: t0 = 2196, jump @2612\n      : @2118 [@dyn 1098] (gas: 1)\n 52294: jump @2129 if a0 != 0\n      : @2119 (gas: 1)\n 52297: t0 = 2198, jump @2657\n      : @2120 [@dyn 1099] (gas: 1)\n 52303: ra = 2200, jump @19\n      : @2121 [@dyn 1100] (gas: 1)\n 52310: t0 = 2202, jump @2614\n      : @2122 [@dyn 1101] (gas: 1)\n 52316: jump @2129 if a0 == 0\n      : @2123 (gas: 8)\n 52319: a0 = u64 [sp + 0xb8]\n 52323: i32 a0 = a0 + 0x4\n 52326: u64 [sp + 280] = 0\n 52330: u64 [sp + 272] = 0\n 52334: u64 [sp + 256] = 0x20\n 52339: a1 = sp + 0x100\n 52343: u64 [sp + 264] = 0\n 52347: ra = 2204, jump @19\n      : @2124 [@dyn 1102] (gas: 1)\n 52354: t0 = 2206, jump @2655\n      : @2125 [@dyn 1103] (gas: 1)\n 52360: jump @2129 if a0 == 0\n      : @2126 (gas: 8)\n 52363: s1 = u64 [sp + 0xb8]\n 52367: i32 a0 = s1 + 0x24\n 52370: u64 [sp + 248] = 0\n 52374: u64 [sp + 240] = 0\n 52378: u64 [sp + 224] = 0x14\n 52383: a1 = sp + 0xe0\n 52387: u64 [sp + 232] = 0\n 52391: ra = 2208, jump @19\n      : @2127 [@dyn 1104] (gas: 1)\n 52398: t0 = 2210, jump @2638\n      : @2128 [@dyn 1105] (gas: 1)\n 52404: jump @2136 if a0 != 0\n      : @2129 (gas: 1)\n 52407: trap\n      : @2130 (gas: 1)\n 52408: t0 = 2212, jump @2656\n      : @2131 [@dyn 1106] (gas: 1)\n 52414: ra = 2214, jump @19\n      : @2132 [@dyn 1107] (gas: 7)\n 52421: u64 [sp + 376] = 0\n 52425: u64 [sp + 368] = 0\n 52429: u64 [sp + 352] = 0x11\n 52434: a0 = 0x4\n 52437: a1 = sp + 0x160\n 52441: u64 [sp + 360] = 0\n 52445: ra = 2216, jump @19\n      : @2133 [@dyn 1108] (gas: 2)\n 52452: a1 = i32 [0x2027c]\n 52457: jump @2135 if a1 >u 63\n      : @2134 (gas: 2)\n 52461: u32 [0x2027c] = 0x40\n 52467: fallthrough\n      : @2135 (gas: 7)\n 52468: a1 = 0x20290\n 52473: i32 a1 = a1 + 0\n 52475: a0 = 0x1\n 52478: a2 = 0x24\n 52481: ra = 0x8aa\n 52485: ecalli 15 // 'seal_return'\n 52487: fallthrough\n      : @2136 [@dyn 1109] (gas: 5)\n 52488: s1 = u64 [sp + 0xb8]\n 52492: i32 a0 = s1 + 0x44\n 52495: a1 = u64 [0x20188]\n 52500: a2 = u64 [0x20190]\n 52505: t0 = 2220, jump @2673\n      : @2137 [@dyn 1110] (gas: 1)\n 52511: ra = 2222, jump @19\n      : @2138 [@dyn 1111] (gas: 3)\n 52518: a1 = 0x64\n 52521: a0 = s1\n 52523: ra = 2224, jump @32\n      : @2139 [@dyn 1112] (gas: 1)\n 52530: t0 = 2226, jump @2626\n      : @2140 [@dyn 1113] (gas: 4)\n 52536: ra = 0x8b4\n 52540: ecalli 15 // 'seal_return'\n 52542: t0 = 0x8b6\n 52546: jump @2633\n      : @2141 [@dyn 1114] (gas: 1)\n 52549: t0 = 2230, jump @2633\n      : @2142 [@dyn 1115] (gas: 23)\n 52555: t1 = 0x3\n 52558: a0 = s1 mulhu t1\n 52561: a1 = a2 << 0x1\n 52564: a1 = a1 + a2\n 52567: t0 = a1 + a0\n 52570: a0 = t0 <u a1\n 52573: a1 = a2 mulhu t1\n 52576: a0 = a0 + a1\n 52579: a1 = a5 << 0x1\n 52582: a1 = a1 + a5\n 52585: ra = a0 + a1\n 52588: a0 = ra <u a0\n 52591: u64 [sp + 0x18] = a2\n 52594: a1 = a2 | a4\n 52597: a2 = s1 | a5\n 52600: a3 = a2 | a1\n 52603: a1 = a4 << 0x1\n 52606: a2 = a1 + a4\n 52609: u64 [sp + 0x8] = a5\n 52612: a1 = a5 mulhu t1\n 52615: a2 = a2 + a1\n 52618: a5 = a2 + a0\n 52621: jump @2144 if a3 == 0\n      : @2143 (gas: 7)\n 52624: a0 = 0 if a5 != 0\n 52626: a1 = a2 <u a1\n 52629: a2 = a4 mulhu t1\n 52632: a2 = a2 >u 0\n 52634: a1 = a1 | a2\n 52637: a0 = a0 | a1\n 52640: jump @2186 if a0 != 0\n      : @2144 (gas: 10)\n 52644: u64 [sp + 0x20] = a4\n 52647: a0 = s1 << 0x1\n 52650: u64 [sp + 0x10] = s1\n 52653: s1 = s1 + a0\n 52656: u64 [sp + 0x40] = s1\n 52659: a0 = s1 | ra\n 52662: a1 = t0 | a5\n 52665: a0 = a0 | a1\n 52668: u64 [sp + 0x48] = t0\n 52671: t0 = 2232, jump @2654\n      : @2145 [@dyn 1116] (gas: 2)\n 52677: a0 = clz s1\n 52679: t0 = 2234, jump @2624\n      : @2146 [@dyn 1117] (gas: 36)\n 52685: t0 = a5\n 52687: a5 = a0 <u a1\n 52690: a5 = 0 if a2 != 0\n 52692: s1 = a5 >u 0\n 52694: a0 = a4 <u 0xff\n 52698: a2 = a0 ^ 0x1\n 52701: s1 = a2 if a5 == 0\n 52704: a0 = s1 <u 0x1\n 52707: t2 = a0 + 0xffffffffffffffff\n 52710: a0 = -s1\n 52712: a5 = -a5\n 52714: a2 = a5 - a2\n 52717: t1 = 0xfe - a4\n 52721: u64 [sp + 0xa8] = a0\n 52725: a4 = a0 >u 0\n 52727: a5 = t2 >u 0\n 52729: a5 = a4 if t2 == 0\n 52732: a4 = a2 >u 0\n 52734: a3 = t1 <u 0x100\n 52738: a3 = a3 ^ 0x1\n 52741: a3 = a4 if a2 != 0\n 52744: a3 = a5 if s1 != 0\n 52747: a0 = u64 [sp + 0xb8]\n 52751: a0 = a0 | a3\n 52754: a1 = u64 [sp + 0x48]\n 52757: u64 [sp + 0x30] = t0\n 52760: t0 = 0 if a0 != 0\n 52762: u64 [sp + 0x38] = ra\n 52765: a5 = ra\n 52767: ra = u64 [sp + 0x40]\n 52770: a5 = 0 if a0 != 0\n 52772: a4 = a1\n 52774: a4 = 0 if a0 != 0\n 52776: s1 = ra\n 52778: s1 = 0 if a0 != 0\n 52780: jump @2166 if a0 != 0\n      : @2147 (gas: 8)\n 52784: u64 [sp + 0xb0] = t1\n 52788: a0 = t1 ^ 0xff\n 52792: t1 = u64 [sp + 0xa8]\n 52796: a3 = a0 | t1\n 52799: a0 = a2 | t2\n 52802: a0 = a0 | a3\n 52805: a3 = u64 [sp + 0x28]\n 52808: jump @2169 if a0 == 0\n      : @2148 (gas: 1)\n 52812: t0 = 2236, jump @2581\n      : @2149 [@dyn 1118] (gas: 1)\n 52818: ra = 2238, jump @2677\n      : @2150 [@dyn 1119] (gas: 7)\n 52824: u64 [sp + 0xa8] = a0\n 52828: u64 [sp + 0xa0] = a1\n 52832: a0 = u64 [sp + 0x38]\n 52835: s1 = u64 [sp + 0x30]\n 52838: a1 = s1\n 52840: a2 = u64 [sp + 0x98]\n 52844: ra = 2240, jump @2682\n      : @2151 [@dyn 1120] (gas: 1)\n 52850: t0 = 2242, jump @2647\n      : @2152 [@dyn 1121] (gas: 1)\n 52856: ra = 2244, jump @2682\n      : @2153 [@dyn 1122] (gas: 1)\n 52862: t0 = 2246, jump @2594\n      : @2154 [@dyn 1123] (gas: 1)\n 52868: ra = 2248, jump @2682\n      : @2155 [@dyn 1124] (gas: 1)\n 52874: t0 = 2250, jump @2628\n      : @2156 [@dyn 1125] (gas: 1)\n 52880: jump @2167 if a4 == 0\n      : @2157 (gas: 5)\n 52884: s1 = u64 [sp + 0xb8]\n 52888: a2 = s1 + 0xffffffffffffff80\n 52891: a0 = u64 [sp + 0x38]\n 52894: a1 = u64 [sp + 0x30]\n 52897: ra = 2252, jump @2677\n      : @2158 [@dyn 1126] (gas: 6)\n 52903: u64 [sp + 0x78] = a0\n 52906: u64 [sp + 0x68] = a1\n 52909: a0 = u64 [sp + 0x40]\n 52912: a1 = u64 [sp + 0x48]\n 52915: a2 = s1\n 52917: ra = 2254, jump @2677\n      : @2159 [@dyn 1127] (gas: 6)\n 52923: u64 [sp + 0x60] = a0\n 52926: u64 [sp + 0x70] = a1\n 52929: a2 = 0x80 - s1\n 52933: a0 = u64 [sp + 0x38]\n 52936: a1 = u64 [sp + 0x30]\n 52939: ra = 2256, jump @2682\n      : @2160 [@dyn 1128] (gas: 1)\n 52945: t0 = 2258, jump @2591\n      : @2161 [@dyn 1129] (gas: 1)\n 52951: ra = 2260, jump @2677\n      : @2162 [@dyn 1130] (gas: 10)\n 52957: t0 = s1\n 52959: t2 = u64 [sp + 0x68]\n 52962: a5 = 0\n 52964: a4 = 0\n 52966: a2 = u64 [sp + 0x70]\n 52969: a1 = 0 if a2 == 0\n 52971: a0 = 0 if a2 == 0\n 52973: u64 [sp + 88] = 0x2\n 52977: u64 [sp + 80] = 0\n 52980: fallthrough\n      : @2163 (gas: 9)\n 52981: u64 [sp + 0x70] = a1\n 52984: u64 [sp + 0x68] = a5\n 52987: u64 [sp + 96] = 0\n 52990: a2 = t0 >> 0x3f\n 52993: s1 = t2\n 52995: a3 = t2 << 0x1\n 52998: t1 = a3 | a2\n 53001: a2 = t0 << 0x1\n 53004: t0 = 2262, jump @2640\n      : @2164 [@dyn 1131] (gas: 71)\n 53010: t0 = a5 <u a4\n 53013: t0 = t2 if ra != 0\n 53016: a5 = u64 [sp + 0x70]\n 53019: a5 = a5 << 0x1\n 53022: a4 = a0 >> 0x3f\n 53025: a4 = a4 | a5\n 53028: u64 [sp + 0x70] = a4\n 53031: a4 = s1 >> 0x3f\n 53034: a0 = a0 << 0x1\n 53037: a4 = a4 | a0\n 53040: a0 = a1 << 0x1\n 53043: a1 = u64 [sp + 0xa8]\n 53047: s1 = a1 >> 0x3f\n 53050: t2 = a0 | s1\n 53053: s1 = a1 << 0x1\n 53056: a1 = u64 [sp + 0x98]\n 53060: a5 = a1 >> 0x3f\n 53063: a5 = a5 | s1\n 53066: a0 = a1 << 0x1\n 53069: s1 = u64 [sp + 0xb0]\n 53073: a1 = s1 >> 0x3f\n 53076: a1 = a1 | a0\n 53079: s1 = s1 << 0x1\n 53082: a0 = u64 [sp + 0x68]\n 53085: s1 = s1 | a0\n 53088: u64 [sp + 0xb0] = s1\n 53092: ra = u64 [sp + 0xb8]\n 53096: a1 = a1 | a3\n 53099: u64 [sp + 0x98] = a1\n 53103: a0 = a3 | a5\n 53106: u64 [sp + 0xa8] = a0\n 53110: a0 = a3 | t2\n 53113: u64 [sp + 0xa0] = a0\n 53117: a0 = a2 - a4\n 53120: a0 = a0 <u t0\n 53123: a1 = a2 <u a4\n 53126: a3 = u64 [sp + 0x70]\n 53129: a5 = a2 - a3\n 53132: a5 = a5 - a1\n 53135: a5 = a5 - a0\n 53138: a5 = a5 >>a 0x3f\n 53141: a0 = a5 & 0x3\n 53144: a1 = u64 [sp + 0x78]\n 53147: t0 = a1 - a0\n 53150: a1 = a1 <u a0\n 53153: t2 = t1 - a1\n 53156: a1 = 0 if t1 != 0\n 53158: a0 = a4 - a1\n 53161: a1 = a4 <u a1\n 53164: a1 = a3 - a1\n 53167: s1 = u64 [sp + 0x90]\n 53171: a2 = ra | s1\n 53174: a2 = a2 <u 0x1\n 53177: a4 = u64 [sp + 0x80]\n 53181: a3 = a4 <u a2\n 53184: a2 = a4 - a2\n 53187: a4 = ra <u 0x1\n 53190: s1 = s1 - a4\n 53193: a4 = u64 [sp + 0x88]\n 53197: a4 = a4 - a3\n 53200: ra = ra + 0xffffffffffffffff\n 53203: u64 [sp + 0x90] = s1\n 53207: u64 [sp + 0x88] = a4\n 53211: a3 = s1 | a4\n 53214: u64 [sp + 0xb8] = ra\n 53218: a4 = ra | a2\n 53221: a3 = a3 | a4\n 53224: a5 = a5 & 0x1\n 53227: u64 [sp + 0x80] = a2\n 53231: a4 = 0\n 53233: jump @2163 if a3 != 0\n      : @2165 (gas: 1)\n 53237: jump @2168\n      : @2166 (gas: 2)\n 53239: a3 = u64 [sp + 0x28]\n 53242: jump @2169\n      : @2167 (gas: 3)\n 53244: a5 = 0\n 53246: u64 [sp + 96] = 0\n 53249: fallthrough\n      : @2168 (gas: 23)\n 53250: a2 = u64 [sp + 0xa8]\n 53254: a0 = a2 >> 0x3f\n 53257: a1 = u64 [sp + 0xa0]\n 53261: a1 = a1 << 0x1\n 53264: t0 = a1 | a0\n 53267: a3 = u64 [sp + 0x98]\n 53271: a1 = a3 >> 0x3f\n 53274: a2 = a2 << 0x1\n 53277: a1 = a1 | a2\n 53280: a4 = u64 [sp + 0xb0]\n 53284: a2 = a4 >> 0x3f\n 53287: a0 = a3 << 0x1\n 53290: a4 = a4 << 0x1\n 53293: s1 = a5 | a4\n 53296: a3 = u64 [sp + 0x60]\n 53299: a4 = a3 | a2\n 53302: a4 = a4 | a0\n 53305: a5 = a3 | a1\n 53308: t0 = a3 | t0\n 53311: a3 = u64 [sp + 0x28]\n 53314: a1 = u64 [sp + 0x48]\n 53317: ra = u64 [sp + 0x40]\n 53320: fallthrough\n      : @2169 (gas: 12)\n 53321: a0 = u64 [sp + 0x10]\n 53324: a0 = a0 ^ s1\n 53327: a2 = u64 [sp + 0x8]\n 53330: a2 = a2 ^ a5\n 53333: a0 = a0 | a2\n 53336: a2 = u64 [sp + 0x18]\n 53339: a4 = a4 ^ a2\n 53342: a2 = u64 [sp + 0x20]\n 53345: a2 = t0 ^ a2\n 53348: a2 = a2 | a4\n 53351: a0 = a0 | a2\n 53354: jump @2172 if a0 != 0\n      : @2170 (gas: 1)\n 53357: t0 = 2264, jump @2629\n      : @2171 [@dyn 1132] (gas: 1)\n 53363: ret\n      : @2172 (gas: 3)\n 53365: a0 = sp + 0x140\n 53369: a1 = 0x40\n 53372: ra = 2266, jump @17\n      : @2173 [@dyn 1133] (gas: 9)\n 53379: a2 = u64 [sp + 0x158]\n 53383: s1 = u64 [sp + 0x150]\n 53387: a0 = u64 [sp + 0x148]\n 53391: a1 = u64 [sp + 0x140]\n 53395: u64 [sp + 0xb0] = a0\n 53399: u64 [sp + 0xa8] = a2\n 53403: a0 = a0 | a2\n 53406: u64 [sp + 0xb8] = a1\n 53410: t0 = 2268, jump @2612\n      : @2174 [@dyn 1134] (gas: 1)\n 53416: jump @2185 if a0 != 0\n      : @2175 (gas: 1)\n 53419: t0 = 2270, jump @2657\n      : @2176 [@dyn 1135] (gas: 1)\n 53425: ra = 2272, jump @19\n      : @2177 [@dyn 1136] (gas: 1)\n 53432: t0 = 2274, jump @2614\n      : @2178 [@dyn 1137] (gas: 1)\n 53438: jump @2185 if a0 == 0\n      : @2179 (gas: 8)\n 53441: a0 = u64 [sp + 0xb8]\n 53445: i32 a0 = a0 + 0x4\n 53448: u64 [sp + 280] = 0\n 53452: u64 [sp + 272] = 0\n 53456: u64 [sp + 256] = 0x20\n 53461: a1 = sp + 0x100\n 53465: u64 [sp + 264] = 0\n 53469: ra = 2276, jump @19\n      : @2180 [@dyn 1138] (gas: 1)\n 53476: t0 = 2278, jump @2655\n      : @2181 [@dyn 1139] (gas: 1)\n 53482: jump @2185 if a0 == 0\n      : @2182 (gas: 8)\n 53485: s1 = u64 [sp + 0xb8]\n 53489: i32 a0 = s1 + 0x24\n 53492: u64 [sp + 248] = 0\n 53496: u64 [sp + 240] = 0\n 53500: u64 [sp + 224] = 0x14\n 53505: a1 = sp + 0xe0\n 53509: u64 [sp + 232] = 0\n 53513: ra = 2280, jump @19\n      : @2183 [@dyn 1140] (gas: 1)\n 53520: t0 = 2282, jump @2638\n      : @2184 [@dyn 1141] (gas: 1)\n 53526: jump @2192 if a0 != 0\n      : @2185 (gas: 1)\n 53529: trap\n      : @2186 (gas: 1)\n 53530: t0 = 2284, jump @2656\n      : @2187 [@dyn 1142] (gas: 1)\n 53536: ra = 2286, jump @19\n      : @2188 [@dyn 1143] (gas: 7)\n 53543: u64 [sp + 376] = 0\n 53547: u64 [sp + 368] = 0\n 53551: u64 [sp + 352] = 0x11\n 53556: a0 = 0x4\n 53559: a1 = sp + 0x160\n 53563: u64 [sp + 360] = 0\n 53567: ra = 2288, jump @19\n      : @2189 [@dyn 1144] (gas: 2)\n 53574: a1 = i32 [0x2027c]\n 53579: jump @2191 if a1 >u 63\n      : @2190 (gas: 2)\n 53583: u32 [0x2027c] = 0x40\n 53589: fallthrough\n      : @2191 (gas: 7)\n 53590: a1 = 0x20290\n 53595: i32 a1 = a1 + 0\n 53597: a0 = 0x1\n 53600: a2 = 0x24\n 53603: ra = 0x8f2\n 53607: ecalli 15 // 'seal_return'\n 53609: fallthrough\n      : @2192 [@dyn 1145] (gas: 5)\n 53610: s1 = u64 [sp + 0xb8]\n 53614: i32 a0 = s1 + 0x44\n 53617: a1 = u64 [0x20198]\n 53622: a2 = u64 [0x201a0]\n 53627: t0 = 2292, jump @2673\n      : @2193 [@dyn 1146] (gas: 1)\n 53633: ra = 2294, jump @19\n      : @2194 [@dyn 1147] (gas: 3)\n 53640: a1 = 0x64\n 53643: a0 = s1\n 53645: ra = 2296, jump @32\n      : @2195 [@dyn 1148] (gas: 1)\n 53652: t0 = 2298, jump @2626\n      : @2196 [@dyn 1149] (gas: 3)\n 53658: ra = 0x8fc\n 53662: ecalli 15 // 'seal_return'\n 53664: fallthrough\n      : @2197 [@dyn 1150] (gas: 15)\n 53665: sp = sp + 0xfffffffffffffe30\n 53669: u64 [sp + 0x1c8] = ra\n 53673: u64 [sp + 0x1c0] = s0\n 53677: u64 [sp + 0x1b8] = s1\n 53681: s0 = sp + 0x1d0\n 53685: sp = sp & 0xfffffffffffffff0\n 53688: t1 = u64 [a2 + 0x10]\n 53691: a5 = u64 [a2 + 0x18]\n 53694: s1 = u64 [a2 + 0x8]\n 53697: a4 = u64 [a2]\n 53699: a2 = s1 | a5\n 53702: a3 = a4 | t1\n 53705: a2 = a2 | a3\n 53708: a3 = a0\n 53710: jump @2212 if a2 == 0\n      : @2198 (gas: 25)\n 53714: t0 = u64 [a1 + 0x18]\n 53717: u64 [sp + 0x20] = t0\n 53720: a0 = u64 [a1 + 0x10]\n 53723: u64 [sp + 0x30] = a0\n 53726: a2 = u64 [a1 + 0x8]\n 53729: u64 [sp + 0x28] = a2\n 53732: a1 = u64 [a1]\n 53734: u64 [sp + 0x38] = a1\n 53737: u64 [sp + 0x150] = a4\n 53741: u64 [sp + 0x170] = a1\n 53745: u64 [sp + 0x158] = s1\n 53749: u64 [sp + 0x178] = a2\n 53753: u64 [sp + 0x160] = t1\n 53757: u64 [sp + 0x180] = a0\n 53761: u64 [sp + 0x168] = a5\n 53765: a0 = sp + 0x190\n 53769: a1 = sp + 0x170\n 53773: a2 = sp + 0x150\n 53777: u64 [sp + 0x188] = t0\n 53781: u64 [sp + 0x40] = a3\n 53784: u64 [sp] = t1\n 53786: u64 [sp + 0x48] = a4\n 53789: u64 [sp + 0x8] = s1\n 53792: s1 = a5\n 53794: ra = 2302, jump @2077\n      : @2199 [@dyn 1151] (gas: 23)\n 53800: a0 = u64 [sp + 0x1a8]\n 53804: a1 = u64 [sp + 0x1a0]\n 53808: u64 [sp + 0x18] = a1\n 53811: a2 = u64 [sp + 0x198]\n 53815: u64 [sp + 0x10] = a2\n 53818: a3 = u64 [sp + 0x190]\n 53822: u64 [sp + 0x108] = s1\n 53826: a4 = u64 [sp]\n 53828: u64 [sp + 0x100] = a4\n 53832: a4 = u64 [sp + 0x8]\n 53835: u64 [sp + 0xf8] = a4\n 53839: a4 = u64 [sp + 0x48]\n 53842: u64 [sp + 0xf0] = a4\n 53846: u64 [sp + 0x48] = a0\n 53849: u64 [sp + 0x128] = a0\n 53853: u64 [sp + 0x120] = a1\n 53857: u64 [sp + 0x118] = a2\n 53861: a0 = sp + 0x130\n 53865: a1 = sp + 0x110\n 53869: a2 = sp + 0xf0\n 53873: u64 [sp + 0x110] = a3\n 53877: s1 = a3\n 53879: ra = 2304, jump @1990\n      : @2200 [@dyn 1152] (gas: 19)\n 53885: a0 = u64 [sp + 0x148]\n 53889: a1 = u64 [sp + 0x138]\n 53893: a2 = u64 [sp + 0x130]\n 53897: a3 = u64 [sp + 0x140]\n 53901: a5 = u64 [sp + 0x20]\n 53904: a0 = a0 ^ a5\n 53907: a5 = u64 [sp + 0x28]\n 53910: a1 = a1 ^ a5\n 53913: a0 = a0 | a1\n 53916: a1 = u64 [sp + 0x30]\n 53919: a1 = a1 ^ a3\n 53922: a3 = u64 [sp + 0x40]\n 53925: a5 = u64 [sp + 0x38]\n 53928: a2 = a2 ^ a5\n 53931: a1 = a1 | a2\n 53934: a2 = u64 [sp + 0x10]\n 53937: a0 = a0 | a1\n 53940: a1 = u64 [sp + 0x18]\n 53943: jump @2213 if a0 == 0\n      : @2201 (gas: 3)\n 53947: a0 = sp + 0xd0\n 53951: a1 = 0x40\n 53954: ra = 2306, jump @17\n      : @2202 [@dyn 1153] (gas: 9)\n 53961: a2 = u64 [sp + 0xe8]\n 53965: s1 = u64 [sp + 0xe0]\n 53969: a0 = u64 [sp + 0xd8]\n 53973: a1 = u64 [sp + 0xd0]\n 53977: u64 [sp + 0x40] = a0\n 53980: u64 [sp + 0x38] = a2\n 53983: a0 = a0 | a2\n 53986: u64 [sp + 0x48] = a1\n 53989: t0 = 2308, jump @2612\n      : @2203 [@dyn 1154] (gas: 1)\n 53995: jump @2211 if a0 != 0\n      : @2204 (gas: 6)\n 53999: u64 [sp + 192] = 0\n 54003: u64 [sp + 184] = 0\n 54007: u64 [sp + 176] = 0\n 54011: t0 = 0x906\n 54015: a0 = 0x8c379a000000000\n 54025: fallthrough\n      : @2205 [@dyn 1155] (gas: 4)\n 54026: a1 = sp + 0xb0\n 54030: u64 [sp + 0xc8] = a0\n 54034: a0 = u64 [sp + 0x48]\n 54037: ra = 2312, jump @19\n      : @2206 [@dyn 1156] (gas: 11)\n 54044: a2 = u64 [sp + 0x38]\n 54047: a2 = a2 | s1\n 54050: s1 = 0x100000000\n 54060: a0 = 0xfffffffc\n 54070: a1 = u64 [sp + 0x48]\n 54073: a0 = a1 <u a0\n 54076: a1 = u64 [sp + 0x40]\n 54079: a0 = 0 if a1 != 0\n 54081: u64 [sp + 0x38] = a2\n 54084: a0 = 0 if a2 != 0\n 54086: jump @2211 if a0 == 0\n      : @2207 (gas: 8)\n 54089: a0 = u64 [sp + 0x48]\n 54092: i32 a0 = a0 + 0x4\n 54095: u64 [sp + 168] = 0\n 54099: u64 [sp + 160] = 0\n 54103: u64 [sp + 144] = 0x20\n 54108: a1 = sp + 0x90\n 54112: u64 [sp + 152] = 0\n 54116: ra = 2314, jump @19\n      : @2208 [@dyn 1157] (gas: 8)\n 54123: a0 = s1 + 0xffffffffffffffdc\n 54126: a1 = u64 [sp + 0x48]\n 54129: a0 = a1 <u a0\n 54132: a1 = u64 [sp + 0x40]\n 54135: a0 = 0 if a1 != 0\n 54137: a1 = u64 [sp + 0x38]\n 54140: a0 = 0 if a1 != 0\n 54142: jump @2211 if a0 == 0\n      : @2209 (gas: 8)\n 54145: s1 = u64 [sp + 0x48]\n 54148: i32 a0 = s1 + 0x24\n 54151: u64 [sp + 136] = 0\n 54155: u64 [sp + 128] = 0\n 54159: u64 [sp + 112] = 0x14\n 54163: a1 = sp + 0x70\n 54166: u64 [sp + 120] = 0\n 54169: ra = 2316, jump @19\n      : @2210 [@dyn 1158] (gas: 7)\n 54176: a0 = 0xffffffbc\n 54186: a0 = s1 <u a0\n 54189: a1 = u64 [sp + 0x40]\n 54192: a0 = 0 if a1 != 0\n 54194: a1 = u64 [sp + 0x38]\n 54197: a0 = 0 if a1 != 0\n 54199: jump @2214 if a0 != 0\n      : @2211 (gas: 1)\n 54202: trap\n      : @2212 (gas: 4)\n 54203: s1 = 0\n 54205: a1 = 0\n 54207: u64 [sp + 72] = 0\n 54210: fallthrough\n      : @2213 (gas: 11)\n 54211: u64 [a3] = s1\n 54213: u64 [a3 + 0x8] = a2\n 54216: u64 [a3 + 0x10] = a1\n 54219: a0 = u64 [sp + 0x48]\n 54222: u64 [a3 + 0x18] = a0\n 54225: sp = s0 + 0xfffffffffffffe30\n 54229: ra = u64 [sp + 0x1c8]\n 54233: s0 = u64 [sp + 0x1c0]\n 54237: s1 = u64 [sp + 0x1b8]\n 54241: sp = sp + 0x1d0\n 54245: ret\n      : @2214 (gas: 11)\n 54247: s1 = u64 [sp + 0x48]\n 54250: i32 a0 = s1 + 0x44\n 54253: a1 = u64 [0x201a8]\n 54258: a2 = u64 [0x201b0]\n 54263: u64 [sp + 0x68] = a1\n 54266: u64 [sp + 0x60] = a2\n 54269: a1 = 0x666c6f7700000000\n 54279: u64 [sp + 0x58] = a1\n 54282: a1 = sp + 0x50\n 54285: u64 [sp + 80] = 0\n 54288: ra = 2318, jump @19\n      : @2215 [@dyn 1159] (gas: 3)\n 54295: a1 = 0x64\n 54298: a0 = s1\n 54300: ra = 2320, jump @32\n      : @2216 [@dyn 1160] (gas: 1)\n 54307: t0 = 2322, jump @2626\n      : @2217 [@dyn 1161] (gas: 3)\n 54313: ra = 0x914\n 54317: ecalli 15 // 'seal_return'\n 54319: fallthrough\n      : @2218 [@dyn 1162] (gas: 30)\n 54320: sp = sp + 0xfffffffffffffec0\n 54324: u64 [sp + 0x138] = ra\n 54328: u64 [sp + 0x130] = s0\n 54332: u64 [sp + 0x128] = s1\n 54336: s0 = sp + 0x140\n 54340: sp = sp & 0xfffffffffffffff0\n 54343: t0 = u64 [a1]\n 54345: u64 [sp + 0x8] = t0\n 54348: a5 = u64 [a1 + 0x8]\n 54351: u64 [sp + 0x18] = a5\n 54354: a3 = u64 [a1 + 0x10]\n 54357: u64 [sp + 0x10] = a3\n 54360: s1 = u64 [a1 + 0x18]\n 54363: t1 = u64 [a2]\n 54365: a1 = u64 [a2 + 0x8]\n 54368: a4 = u64 [a2 + 0x10]\n 54371: a2 = u64 [a2 + 0x18]\n 54374: u64 [sp] = a0\n 54376: u64 [sp + 0xd8] = a2\n 54380: u64 [sp + 0xd0] = a4\n 54384: u64 [sp + 0xc8] = a1\n 54388: u64 [sp + 0xc0] = t1\n 54392: u64 [sp + 0xf8] = s1\n 54396: u64 [sp + 0xf0] = a3\n 54400: u64 [sp + 0xe8] = a5\n 54404: a0 = sp + 0x100\n 54408: a1 = sp + 0xe0\n 54412: a2 = sp + 0xc0\n 54416: u64 [sp + 0xe0] = t0\n 54420: ra = 2326, jump @1980\n      : @2219 [@dyn 1163] (gas: 19)\n 54426: a0 = u64 [sp + 0x118]\n 54430: a1 = u64 [sp + 0x110]\n 54434: a2 = u64 [sp + 0x108]\n 54438: t0 = u64 [sp + 0x100]\n 54442: a4 = a0 ^ s1\n 54445: a5 = s1 <u a0\n 54448: a3 = u64 [sp + 0x10]\n 54451: s1 = a3 <u a1\n 54454: s1 = a5 if a4 != 0\n 54457: a5 = u64 [sp + 0x18]\n 54460: t1 = a2 ^ a5\n 54463: t2 = a5 <u a2\n 54466: a5 = u64 [sp + 0x8]\n 54469: a5 = a5 <u t0\n 54472: a5 = t2 if t1 != 0\n 54475: a3 = a3 ^ a1\n 54478: a3 = a3 | a4\n 54481: a5 = s1 if a3 != 0\n 54484: jump @2221 if a5 != 0\n      : @2220 (gas: 11)\n 54487: a3 = u64 [sp]\n 54489: u64 [a3] = t0\n 54491: u64 [a3 + 0x8] = a2\n 54494: u64 [a3 + 0x10] = a1\n 54497: u64 [a3 + 0x18] = a0\n 54500: sp = s0 + 0xfffffffffffffec0\n 54504: ra = u64 [sp + 0x138]\n 54508: s0 = u64 [sp + 0x130]\n 54512: s1 = u64 [sp + 0x128]\n 54516: sp = sp + 0x140\n 54520: ret\n      : @2221 (gas: 3)\n 54522: a0 = sp + 0xa0\n 54526: a1 = 0x40\n 54529: ra = 2328, jump @17\n      : @2222 [@dyn 1164] (gas: 1)\n 54536: t0 = 2330, jump @2590\n      : @2223 [@dyn 1165] (gas: 1)\n 54542: jump @2235 if a0 != 0\n      : @2224 (gas: 1)\n 54545: t0 = 2332, jump @2604\n      : @2225 [@dyn 1166] (gas: 1)\n 54551: ra = 2334, jump @19\n      : @2226 [@dyn 1167] (gas: 1)\n 54558: t0 = 2336, jump @2584\n      : @2227 [@dyn 1168] (gas: 1)\n 54564: jump @2235 if a0 == 0\n      : @2228 (gas: 1)\n 54567: t0 = 2338, jump @2625\n      : @2229 [@dyn 1169] (gas: 1)\n 54573: ra = 2340, jump @19\n      : @2230 [@dyn 1170] (gas: 1)\n 54580: t0 = 2342, jump @2603\n      : @2231 [@dyn 1171] (gas: 1)\n 54586: jump @2235 if a0 == 0\n      : @2232 (gas: 8)\n 54589: s1 = u64 [sp + 0x18]\n 54592: i32 a0 = s1 + 0x24\n 54595: u64 [sp + 88] = 0\n 54598: u64 [sp + 80] = 0\n 54601: u64 [sp + 64] = 0x15\n 54605: a1 = sp + 0x40\n 54608: u64 [sp + 72] = 0\n 54611: ra = 2344, jump @19\n      : @2233 [@dyn 1172] (gas: 1)\n 54618: t0 = 2346, jump @2596\n      : @2234 [@dyn 1173] (gas: 1)\n 54624: jump @2236 if a0 != 0\n      : @2235 (gas: 1)\n 54627: trap\n      : @2236 (gas: 11)\n 54628: s1 = u64 [sp + 0x18]\n 54631: i32 a0 = s1 + 0x44\n 54634: a1 = u64 [0x201b8]\n 54639: a2 = u64 [0x201c0]\n 54644: u64 [sp + 0x38] = a1\n 54647: u64 [sp + 0x30] = a2\n 54650: a1 = 0x72666c6f77000000\n 54660: u64 [sp + 0x28] = a1\n 54663: a1 = sp + 0x20\n 54666: u64 [sp + 32] = 0\n 54669: ra = 2348, jump @19\n      : @2237 [@dyn 1174] (gas: 3)\n 54676: a1 = 0x64\n 54679: a0 = s1\n 54681: ra = 2350, jump @32\n      : @2238 [@dyn 1175] (gas: 1)\n 54688: t0 = 2352, jump @2626\n      : @2239 [@dyn 1176] (gas: 3)\n 54694: ra = 0x932\n 54698: ecalli 15 // 'seal_return'\n 54700: fallthrough\n      : @2240 [@dyn 1177] (gas: 45)\n 54701: sp = sp + 0xffffffffffffff90\n 54704: u64 [sp + 0x68] = ra\n 54707: u64 [sp + 0x60] = s0\n 54710: u64 [sp + 0x58] = s1\n 54713: s0 = sp + 0x70\n 54716: sp = sp & 0xfffffffffffffff0\n 54719: a3 = u64 [a1 + 0x18]\n 54722: u64 [sp + 0x8] = a3\n 54725: a4 = u64 [a2 + 0x18]\n 54728: t2 = u64 [a1]\n 54730: u64 [sp] = t2\n 54732: a3 = u64 [a1 + 0x8]\n 54735: s1 = u64 [a2 + 0x8]\n 54738: a5 = u64 [a2]\n 54740: t1 = u64 [a1 + 0x10]\n 54743: t0 = u64 [a2 + 0x10]\n 54746: a2 = s1 + a3\n 54749: t2 = t2 + a5\n 54752: a5 = t2 <u a5\n 54755: a2 = a2 + a5\n 54758: ra = a2 ^ s1\n 54761: s1 = a2 <u s1\n 54764: s1 = a5 if ra == 0\n 54767: a1 = t0 + t1\n 54770: a5 = u64 [sp + 0x8]\n 54773: a5 = a5 + a4\n 54776: a4 = a1 <u t0\n 54779: a4 = a4 + a5\n 54782: a5 = a1 + s1\n 54785: a1 = a5 <u a1\n 54788: ra = a4 + a1\n 54791: a4 = a2 ^ a3\n 54794: a3 = a2 <u a3\n 54797: a1 = u64 [sp]\n 54799: s1 = t2 <u a1\n 54802: s1 = a3 if a4 != 0\n 54805: t0 = a5 <u t1\n 54808: a1 = u64 [sp + 0x8]\n 54811: a4 = ra ^ a1\n 54814: a3 = ra <u a1\n 54817: a3 = t0 if a4 == 0\n 54820: a1 = a5 ^ t1\n 54823: a1 = a1 | a4\n 54826: s1 = a3 if a1 != 0\n 54829: jump @2242 if s1 != 0\n      : @2241 (gas: 10)\n 54832: u64 [a0] = t2\n 54834: u64 [a0 + 0x8] = a2\n 54837: u64 [a0 + 0x10] = a5\n 54840: u64 [a0 + 0x18] = ra\n 54843: sp = s0 + 0xffffffffffffff90\n 54846: ra = u64 [sp + 0x68]\n 54849: s0 = u64 [sp + 0x60]\n 54852: s1 = u64 [sp + 0x58]\n 54855: sp = sp + 0x70\n 54858: ret\n      : @2242 (gas: 1)\n 54860: t0 = 2356, jump @2658\n      : @2243 [@dyn 1178] (gas: 1)\n 54866: ra = 2358, jump @19\n      : @2244 [@dyn 1179] (gas: 7)\n 54873: u64 [sp + 40] = 0\n 54876: u64 [sp + 32] = 0\n 54879: u64 [sp + 16] = 0x11\n 54883: a0 = 0x4\n 54886: a1 = sp + 0x10\n 54889: u64 [sp + 24] = 0\n 54892: ra = 2360, jump @19\n      : @2245 [@dyn 1180] (gas: 2)\n 54899: a1 = i32 [0x2027c]\n 54904: jump @2247 if a1 >u 63\n      : @2246 (gas: 2)\n 54908: u32 [0x2027c] = 0x40\n 54914: fallthrough\n      : @2247 (gas: 7)\n 54915: a1 = 0x20290\n 54920: i32 a1 = a1 + 0\n 54922: a0 = 0x1\n 54925: a2 = 0x24\n 54928: ra = 0x93a\n 54932: ecalli 15 // 'seal_return'\n 54934: fallthrough\n      : @2248 [@dyn 1181] (gas: 22)\n 54935: sp = sp + 0xfffffffffffff960\n 54939: a4 = sp + 0x600\n 54943: u64 [a4 + 0x98] = ra\n 54947: u64 [a4 + 0x90] = s0\n 54951: u64 [a4 + 0x88] = s1\n 54955: s0 = sp + 0x6a0\n 54959: sp = sp & 0xffffffffffffffe0\n 54962: s1 = sp\n 54964: a4 = u64 [a0 + 0x18]\n 54967: a5 = u64 [a0 + 0x10]\n 54970: t2 = u64 [a0 + 0x8]\n 54973: t0 = a4 >u 0\n 54975: t1 = a5 >u 0\n 54977: t1 = t0 if a4 != 0\n 54980: u64 [s1 + 0xb8] = a4\n 54984: u64 [s1 + 0xb0] = a5\n 54988: t0 = a5 | a4\n 54991: u64 [s1 + 0xa8] = t2\n 54995: a4 = t2 >> 0x30\n 54998: a4 = a4 >u 0\n 55000: a4 = t1 if t0 != 0\n 55003: jump @2278 if a4 != 0\n      : @2249 (gas: 11)\n 55007: t0 = u64 [a1 + 0x18]\n 55010: a5 = u64 [a1 + 0x10]\n 55013: a4 = u64 [a1 + 0x8]\n 55016: u64 [s1 + 0x40] = t0\n 55019: u64 [s1 + 0x38] = a5\n 55022: t0 = a5 | t0\n 55025: u64 [s1 + 0x98] = a4\n 55029: a5 = a4 >> 0x30\n 55032: a5 = a5 <u 0x1\n 55035: a5 = 0 if t0 != 0\n 55037: jump @2278 if a5 == 0\n      : @2250 (gas: 27)\n 55041: a4 = u64 [a3 + 0x18]\n 55044: u64 [s1 + 0x60] = a4\n 55047: a4 = u64 [a3 + 0x10]\n 55050: u64 [s1 + 0x68] = a4\n 55053: a4 = u64 [a3 + 0x8]\n 55056: u64 [s1 + 0x70] = a4\n 55059: a3 = u64 [a3]\n 55061: u64 [s1 + 0x78] = a3\n 55064: a3 = u64 [a2 + 0x18]\n 55067: u64 [s1 + 0x50] = a3\n 55070: a3 = u64 [a2 + 0x10]\n 55073: u64 [s1 + 0x58] = a3\n 55076: a3 = u64 [a2 + 0x8]\n 55079: u64 [s1 + 0x80] = a3\n 55083: a2 = u64 [a2]\n 55085: u64 [s1 + 0x88] = a2\n 55089: a1 = u64 [a1]\n 55091: u64 [s1 + 0x90] = a1\n 55095: a0 = u64 [a0]\n 55097: u64 [s1 + 0xa0] = a0\n 55101: u64 [s1 + 1344] = 0x8\n 55106: u64 [s1 + 1368] = 0\n 55110: u64 [s1 + 1360] = 0\n 55114: u64 [s1 + 1352] = 0\n 55118: a0 = s1 + 0x480\n 55122: a1 = s1 + 0x540\n 55126: ra = 2364, jump @21\n      : @2251 [@dyn 1182] (gas: 6)\n 55133: a0 = u64 [s1 + 0x498]\n 55137: a0 = a0 >> 0x20\n 55140: u64 [s1 + 0x48] = a0\n 55143: i32 a0 = s1 + 0x560\n 55147: ecalli 11 // 'now'\n 55149: fallthrough\n      : @2252 (gas: 13)\n 55150: a5 = u64 [s1 + 0x48]\n 55153: a0 = u32 [s1 + 0x560]\n 55157: a1 = a0 <u a5\n 55160: t0 = -a1\n 55162: a4 = a0 - a5\n 55165: a1 = a1 << 0x20\n 55168: a2 = a4 >> 0x20\n 55171: a2 = a2 - a1\n 55174: a3 = t0 >> 0x20\n 55177: a3 = a3 - a1\n 55180: a2 = a2 | a3\n 55183: a2 = a2 | a3\n 55186: jump @2288 if a2 != 0\n      : @2253 (gas: 1)\n 55190: jump @2270 if a0 == a5\n      : @2254 (gas: 6)\n 55194: a0 = 0xffffffffffff\n 55204: a1 = u64 [s1 + 0x80]\n 55208: a1 = a1 & a0\n 55211: a2 = u64 [s1 + 0x88]\n 55215: a1 = a1 | a2\n 55218: jump @2270 if a1 == 0\n      : @2255 (gas: 5)\n 55222: a1 = u64 [s1 + 0x70]\n 55225: a0 = a0 & a1\n 55228: a1 = u64 [s1 + 0x78]\n 55231: a0 = a0 | a1\n 55234: jump @2270 if a0 == 0\n      : @2256 (gas: 13)\n 55238: a0 = u64 [s1 + 0x78]\n 55241: u64 [s1 + 0x440] = a0\n 55245: a0 = u64 [s1 + 0x70]\n 55248: u64 [s1 + 0x448] = a0\n 55252: a0 = u64 [s1 + 0x68]\n 55255: u64 [s1 + 0x450] = a0\n 55259: a0 = s1 + 0x460\n 55263: a1 = s1 + 0x440\n 55267: a2 = u64 [s1 + 0x60]\n 55270: u64 [s1 + 0x458] = a2\n 55274: u64 [s1 + 0x48] = a4\n 55277: u64 [s1 + 0x30] = t0\n 55280: ra = 2366, jump @2478\n      : @2257 [@dyn 1183] (gas: 20)\n 55286: a3 = u64 [s1 + 0x460]\n 55290: a0 = u64 [s1 + 0x468]\n 55294: a1 = u64 [s1 + 0x470]\n 55298: a2 = u64 [s1 + 0x478]\n 55302: a4 = u64 [s1 + 0x50]\n 55305: u64 [s1 + 0x3f8] = a4\n 55309: a4 = u64 [s1 + 0x58]\n 55312: u64 [s1 + 0x3f0] = a4\n 55316: a4 = u64 [s1 + 0x80]\n 55320: u64 [s1 + 0x3e8] = a4\n 55324: a4 = u64 [s1 + 0x88]\n 55328: u64 [s1 + 0x3e0] = a4\n 55332: u64 [s1 + 0x418] = a2\n 55336: u64 [s1 + 0x410] = a1\n 55340: u64 [s1 + 0x408] = a0\n 55344: a0 = s1 + 0x420\n 55348: a1 = s1 + 0x400\n 55352: a2 = s1 + 0x3e0\n 55356: u64 [s1 + 0x400] = a3\n 55360: ra = 2368, jump @2504\n      : @2258 [@dyn 1184] (gas: 19)\n 55366: a2 = s1 + 0x400\n 55370: a3 = u64 [a2 + 0x20]\n 55373: a0 = u64 [a2 + 0x28]\n 55376: a1 = u64 [a2 + 0x30]\n 55379: a2 = u32 [s1 + 0x438]\n 55383: a4 = u64 [s1 + 0x30]\n 55386: u64 [s1 + 0x398] = a4\n 55390: u64 [s1 + 0x390] = a4\n 55394: u64 [s1 + 0x388] = a4\n 55398: a4 = u64 [s1 + 0x48]\n 55401: u64 [s1 + 0x380] = a4\n 55405: u64 [s1 + 0x3b8] = a2\n 55409: u64 [s1 + 0x3b0] = a1\n 55413: u64 [s1 + 0x3a8] = a0\n 55417: a0 = s1 + 0x3c0\n 55421: a1 = s1 + 0x3a0\n 55425: a2 = s1 + 0x380\n 55429: u64 [s1 + 0x3a0] = a3\n 55433: ra = 2370, jump @2077\n      : @2259 [@dyn 1185] (gas: 15)\n 55439: a0 = u64 [s1 + 0x3c0]\n 55443: u64 [s1 + 0x28] = a0\n 55446: a0 = u64 [s1 + 0x3c8]\n 55450: u64 [s1 + 0x20] = a0\n 55453: a0 = u64 [s1 + 0x3d0]\n 55457: u64 [s1 + 0x18] = a0\n 55460: a0 = u64 [s1 + 0x3d8]\n 55464: u64 [s1 + 0x10] = a0\n 55467: u64 [s1 + 1432] = 0\n 55471: u64 [s1 + 1424] = 0\n 55475: u64 [s1 + 1416] = 0\n 55479: u64 [s1 + 1408] = 0x9\n 55484: a0 = s1 + 0x360\n 55488: a1 = s1 + 0x580\n 55492: ra = 2372, jump @21\n      : @2260 [@dyn 1186] (gas: 20)\n 55499: a3 = u64 [s1 + 0x360]\n 55503: a0 = u64 [s1 + 0x368]\n 55507: a1 = u64 [s1 + 0x370]\n 55511: a2 = u64 [s1 + 0x378]\n 55515: a4 = u64 [s1 + 0x10]\n 55518: u64 [s1 + 0x318] = a4\n 55522: a4 = u64 [s1 + 0x18]\n 55525: u64 [s1 + 0x310] = a4\n 55529: a4 = u64 [s1 + 0x20]\n 55532: u64 [s1 + 0x308] = a4\n 55536: a4 = u64 [s1 + 0x28]\n 55539: u64 [s1 + 0x300] = a4\n 55543: u64 [s1 + 0x338] = a2\n 55547: u64 [s1 + 0x330] = a1\n 55551: u64 [s1 + 0x328] = a0\n 55555: a0 = s1 + 0x340\n 55559: a1 = s1 + 0x320\n 55563: a2 = s1 + 0x300\n 55567: u64 [s1 + 0x320] = a3\n 55571: ra = 2374, jump @2240\n      : @2261 [@dyn 1187] (gas: 16)\n 55577: a4 = s1 + 0x300\n 55581: a0 = u64 [a4 + 0x40]\n 55584: a1 = u64 [a4 + 0x48]\n 55587: a2 = u64 [a4 + 0x50]\n 55590: a3 = u64 [a4 + 0x58]\n 55593: u64 [s1 + 1464] = 0\n 55597: u64 [s1 + 1456] = 0\n 55601: u64 [s1 + 1448] = 0\n 55605: u64 [s1 + 1440] = 0x9\n 55610: u64 [s1 + 0x5d8] = a3\n 55614: u64 [s1 + 0x5d0] = a2\n 55618: u64 [s1 + 0x5c8] = a1\n 55622: u64 [s1 + 0x5c0] = a0\n 55626: a0 = s1 + 0x5a0\n 55630: a1 = s1 + 0x5c0\n 55634: ra = 2376, jump @23\n      : @2262 [@dyn 1188] (gas: 11)\n 55641: a0 = u64 [s1 + 0x50]\n 55644: u64 [s1 + 0x2d8] = a0\n 55648: a0 = u64 [s1 + 0x58]\n 55651: u64 [s1 + 0x2d0] = a0\n 55655: a0 = u64 [s1 + 0x80]\n 55659: u64 [s1 + 0x2c8] = a0\n 55663: a0 = s1 + 0x2e0\n 55667: a1 = s1 + 0x2c0\n 55671: a2 = u64 [s1 + 0x88]\n 55675: u64 [s1 + 0x2c0] = a2\n 55679: ra = 2378, jump @2478\n      : @2263 [@dyn 1189] (gas: 12)\n 55685: a3 = u64 [s1 + 0x2e0]\n 55689: a0 = u64 [s1 + 0x2e8]\n 55693: a1 = u64 [s1 + 0x2f0]\n 55697: a2 = u64 [s1 + 0x2f8]\n 55701: a4 = u64 [s1 + 0x60]\n 55704: u64 [s1 + 0x278] = a4\n 55708: a4 = u64 [s1 + 0x68]\n 55711: u64 [s1 + 0x270] = a4\n 55715: a4 = u64 [s1 + 0x70]\n 55718: u64 [s1 + 0x268] = a4\n 55722: a4 = u64 [s1 + 0x78]\n 55725: t0 = 2380, jump @2608\n      : @2264 [@dyn 1190] (gas: 1)\n 55731: ra = 2382, jump @2504\n      : @2265 [@dyn 1191] (gas: 10)\n 55737: a3 = u64 [s1 + 0x2a0]\n 55741: a0 = u64 [s1 + 0x2a8]\n 55745: a1 = u64 [s1 + 0x2b0]\n 55749: a2 = u32 [s1 + 0x2b8]\n 55753: a4 = u64 [s1 + 0x30]\n 55756: u64 [s1 + 0x218] = a4\n 55760: u64 [s1 + 0x210] = a4\n 55764: u64 [s1 + 0x208] = a4\n 55768: a4 = u64 [s1 + 0x48]\n 55771: t0 = 2384, jump @2610\n      : @2266 [@dyn 1192] (gas: 1)\n 55777: ra = 2386, jump @2077\n      : @2267 [@dyn 1193] (gas: 16)\n 55783: a1 = s1 + 0x200\n 55787: a0 = u64 [a1 + 0x40]\n 55790: u64 [s1 + 0x88] = a0\n 55794: a0 = u64 [a1 + 0x48]\n 55797: u64 [s1 + 0x80] = a0\n 55801: a0 = u64 [a1 + 0x50]\n 55804: u64 [s1 + 0x78] = a0\n 55807: a0 = u64 [a1 + 0x58]\n 55810: u64 [s1 + 0x70] = a0\n 55813: u64 [s1 + 1528] = 0\n 55817: u64 [s1 + 1520] = 0\n 55821: u64 [s1 + 1512] = 0\n 55825: u64 [s1 + 1504] = 0xa\n 55830: a0 = s1 + 0x1e0\n 55834: a1 = s1 + 0x5e0\n 55838: ra = 2388, jump @21\n      : @2268 [@dyn 1194] (gas: 20)\n 55845: a3 = u64 [s1 + 0x1e0]\n 55849: a0 = u64 [s1 + 0x1e8]\n 55853: a1 = u64 [s1 + 0x1f0]\n 55857: a2 = u64 [s1 + 0x1f8]\n 55861: a4 = u64 [s1 + 0x70]\n 55864: u64 [s1 + 0x198] = a4\n 55868: a4 = u64 [s1 + 0x78]\n 55871: u64 [s1 + 0x190] = a4\n 55875: a4 = u64 [s1 + 0x80]\n 55879: u64 [s1 + 0x188] = a4\n 55883: a4 = u64 [s1 + 0x88]\n 55887: u64 [s1 + 0x180] = a4\n 55891: u64 [s1 + 0x1b8] = a2\n 55895: u64 [s1 + 0x1b0] = a1\n 55899: u64 [s1 + 0x1a8] = a0\n 55903: a0 = s1 + 0x1c0\n 55907: a1 = s1 + 0x1a0\n 55911: a2 = s1 + 0x180\n 55915: u64 [s1 + 0x1a0] = a3\n 55919: ra = 2390, jump @2240\n      : @2269 [@dyn 1195] (gas: 17)\n 55925: a4 = s1 + 0x100\n 55929: a0 = u64 [a4 + 0xc0]\n 55933: a1 = u64 [a4 + 0xc8]\n 55937: a2 = u64 [a4 + 0xd0]\n 55941: a3 = u64 [a4 + 0xd8]\n 55945: u64 [s1 + 1560] = 0\n 55949: u64 [s1 + 1552] = 0\n 55953: u64 [s1 + 1544] = 0\n 55957: a5 = s1 + 0x600\n 55961: u64 [a5 + 0] = 0xa\n 55964: u64 [a5 + 0x38] = a3\n 55967: u64 [a5 + 0x30] = a2\n 55970: u64 [a5 + 0x28] = a1\n 55973: u64 [a5 + 0x20] = a0\n 55976: a0 = s1 + 0x600\n 55980: a1 = s1 + 0x620\n 55984: ra = 2392, jump @23\n      : @2270 [@dyn 1196] (gas: 36)\n 55991: a0 = sp + 0xffffffffffffffe0\n 55994: a0 = a0 & 0xffffffffffffffe0\n 55997: u64 [s1 + 0x88] = a0\n 56001: sp = a0\n 56003: i32 a0 = s1 + 0x640\n 56007: ecalli 11 // 'now'\n 56009: a0 = u64 [s1 + 0x640]\n 56013: a0 = a0 << 0x20\n 56016: a4 = u64 [s1 + 0x90]\n 56020: a1 = a4 >> 0x10\n 56023: a3 = u64 [s1 + 0x98]\n 56027: a2 = a3 << 0x30\n 56030: a1 = a1 | a2\n 56033: a2 = a3 << 0x10\n 56036: a2 = a2 >> 0x20\n 56039: a3 = u64 [s1 + 0xb8]\n 56043: a0 = a0 | a3\n 56046: a0 = a0 | a2\n 56049: a2 = u64 [s1 + 0xb0]\n 56053: a1 = a1 | a2\n 56056: a3 = u64 [s1 + 0x88]\n 56060: u64 [a3 + 0x10] = a1\n 56063: a1 = a4 << 0x30\n 56066: a2 = u64 [s1 + 0xa8]\n 56070: a1 = a1 | a2\n 56073: u64 [a3 + 0x8] = a1\n 56076: u64 [a3 + 0x18] = a0\n 56079: u64 [s1 + 1632] = 0x8\n 56084: a0 = u64 [s1 + 0xa0]\n 56088: u64 [a3] = a0\n 56090: a1 = a3\n 56092: u64 [s1 + 1656] = 0\n 56096: u64 [s1 + 1648] = 0\n 56100: u64 [s1 + 1640] = 0\n 56104: a0 = s1 + 0x660\n 56108: ra = 2394, jump @23\n      : @2271 [@dyn 1197] (gas: 3)\n 56115: a0 = s1 + 0x160\n 56119: a1 = 0x40\n 56122: ra = 2396, jump @17\n      : @2272 [@dyn 1198] (gas: 16)\n 56129: a4 = s1 + 0x100\n 56133: a2 = u64 [a4 + 0x78]\n 56136: a3 = u64 [a4 + 0x70]\n 56139: a1 = u64 [a4 + 0x68]\n 56142: a0 = u64 [a4 + 0x60]\n 56145: u64 [s1 + 0x80] = a1\n 56149: u64 [s1 + 0x78] = a2\n 56152: a2 = a2 | a1\n 56155: a1 = a0 | a3\n 56158: a1 = a1 | a2\n 56161: a1 = a1 >> 0x20\n 56164: u64 [s1 + 0x70] = a3\n 56167: a2 = a2 | a3\n 56170: a2 = a2 << 0x20\n 56173: a1 = a1 | a2\n 56176: jump @2287 if a1 != 0\n      : @2273 (gas: 12)\n 56180: a1 = u64 [s1 + 0xa0]\n 56184: a3 = s1 + 0x100\n 56188: u64 [a3 + 0x40] = a1\n 56191: a1 = u64 [s1 + 0xa8]\n 56195: u64 [a3 + 0x48] = a1\n 56198: a1 = u64 [s1 + 0xb0]\n 56202: u64 [a3 + 0x50] = a1\n 56205: a1 = s1 + 0x140\n 56209: a2 = u64 [s1 + 0xb8]\n 56213: u64 [a3 + 0x58] = a2\n 56216: u64 [s1 + 0x88] = a0\n 56220: ra = 2398, jump @19\n      : @2274 [@dyn 1199] (gas: 10)\n 56227: a2 = u64 [s1 + 0x88]\n 56231: a0 = u64 [s1 + 0x78]\n 56234: a1 = u64 [s1 + 0x70]\n 56237: a0 = a0 | a1\n 56240: a1 = 0xffffffe0\n 56250: a1 = a2 <u a1\n 56253: a3 = u64 [s1 + 0x80]\n 56257: a1 = 0 if a3 != 0\n 56259: a1 = 0 if a0 != 0\n 56261: jump @2287 if a1 == 0\n      : @2275 (gas: 11)\n 56265: i32 a0 = a2 + 0x20\n 56268: a1 = u64 [s1 + 0x90]\n 56272: u64 [s1 + 0x120] = a1\n 56276: a1 = u64 [s1 + 0x98]\n 56280: u64 [s1 + 0x128] = a1\n 56284: a1 = u64 [s1 + 0x38]\n 56287: u64 [s1 + 0x130] = a1\n 56291: a1 = s1 + 0x120\n 56295: a2 = u64 [s1 + 0x40]\n 56298: u64 [s1 + 0x138] = a2\n 56302: ra = 2400, jump @19\n      : @2276 [@dyn 1200] (gas: 30)\n 56309: a0 = u64 [0x201d8]\n 56314: a1 = u64 [0x201e0]\n 56319: a4 = s1 + 0x100\n 56323: u64 [a4 + 0x18] = a0\n 56326: a0 = u64 [0x201e8]\n 56331: u64 [a4 + 0x10] = a1\n 56334: a3 = u64 [0x201f0]\n 56339: u64 [a4 + 0x8] = a0\n 56342: a1 = 0x40\n 56345: a2 = s1 + 0x100\n 56349: u64 [a4] = a3\n 56351: a0 = u64 [s1 + 0x88]\n 56355: ra = 0x962\n 56359: sp = sp + 0xffffffffffffffa0\n 56362: u64 [sp + 0x58] = ra\n 56365: u64 [sp + 0x50] = s0\n 56368: u64 [sp + 0x48] = s1\n 56371: s0 = sp + 0x60\n 56374: sp = sp & 0xffffffffffffffe0\n 56377: a3 = u64 [a2]\n 56379: u64 [sp + 0x18] = a3\n 56382: a3 = u64 [a2 + 0x8]\n 56385: u64 [sp + 0x10] = a3\n 56388: a3 = u64 [a2 + 0x10]\n 56391: u64 [sp + 0x8] = a3\n 56394: a2 = u64 [a2 + 0x18]\n 56397: u64 [sp] = a2\n 56399: s1 = a1\n 56401: ra = 0x8\n 56404: jump @32\n      : @2277 [@dyn 1201] (gas: 7)\n 56408: sp = s0 + 0xfffffffffffff960\n 56412: a0 = sp + 0x600\n 56416: ra = u64 [a0 + 0x98]\n 56420: s0 = u64 [a0 + 0x90]\n 56424: s1 = u64 [a0 + 0x88]\n 56428: sp = sp + 0x6a0\n 56432: ret\n      : @2278 (gas: 3)\n 56434: a0 = s1 + 0x520\n 56438: a1 = 0x40\n 56441: ra = 2404, jump @17\n      : @2279 [@dyn 1202] (gas: 17)\n 56448: a4 = s1 + 0x500\n 56452: a2 = u64 [a4 + 0x38]\n 56455: a3 = u64 [a4 + 0x30]\n 56458: a0 = u64 [a4 + 0x28]\n 56461: a1 = u64 [a4 + 0x20]\n 56464: u64 [s1 + 0xb0] = a0\n 56468: u64 [s1 + 0xa8] = a2\n 56472: a0 = a0 | a2\n 56475: u64 [s1 + 0xb8] = a1\n 56479: a1 = a1 | a3\n 56482: a1 = a1 | a0\n 56485: a1 = a1 >> 0x20\n 56488: u64 [s1 + 0xa0] = a3\n 56492: a0 = a0 | a3\n 56495: a0 = a0 << 0x20\n 56498: a0 = a0 | a1\n 56501: jump @2287 if a0 != 0\n      : @2280 (gas: 6)\n 56505: u64 [s1 + 1296] = 0\n 56509: u64 [s1 + 1288] = 0\n 56513: u64 [s1 + 1280] = 0\n 56517: t0 = 0x966\n 56521: a0 = 0x8c379a000000000\n 56531: fallthrough\n      : @2281 [@dyn 1203] (gas: 4)\n 56532: a1 = s1 + 0x500\n 56536: u64 [s1 + 0x518] = a0\n 56540: a0 = u64 [s1 + 0xb8]\n 56544: ra = 2408, jump @19\n      : @2282 [@dyn 1204] (gas: 13)\n 56551: a0 = u64 [s1 + 0xa8]\n 56555: a2 = u64 [s1 + 0xa0]\n 56559: a2 = a2 | a0\n 56562: a0 = 0x100000000\n 56572: u64 [s1 + 0xa0] = a0\n 56576: a0 = 0xfffffffc\n 56586: a1 = u64 [s1 + 0xb8]\n 56590: a0 = a1 <u a0\n 56593: a1 = u64 [s1 + 0xb0]\n 56597: a0 = 0 if a1 != 0\n 56599: u64 [s1 + 0xa8] = a2\n 56603: a0 = 0 if a2 != 0\n 56605: jump @2287 if a0 == 0\n      : @2283 (gas: 8)\n 56609: a0 = u64 [s1 + 0xb8]\n 56613: i32 a0 = a0 + 0x4\n 56616: u64 [s1 + 1272] = 0\n 56620: u64 [s1 + 1264] = 0\n 56624: u64 [s1 + 1248] = 0x20\n 56629: a1 = s1 + 0x4e0\n 56633: u64 [s1 + 1256] = 0\n 56637: ra = 2410, jump @19\n      : @2284 [@dyn 1205] (gas: 9)\n 56644: a0 = u64 [s1 + 0xa0]\n 56648: a0 = a0 + 0xffffffffffffffdc\n 56651: a1 = u64 [s1 + 0xb8]\n 56655: a0 = a1 <u a0\n 56658: a1 = u64 [s1 + 0xb0]\n 56662: a0 = 0 if a1 != 0\n 56664: a1 = u64 [s1 + 0xa8]\n 56668: a0 = 0 if a1 != 0\n 56670: jump @2287 if a0 == 0\n      : @2285 (gas: 8)\n 56673: a0 = u64 [s1 + 0xb8]\n 56677: i32 a0 = a0 + 0x24\n 56680: u64 [s1 + 1240] = 0\n 56684: u64 [s1 + 1232] = 0\n 56688: u64 [s1 + 1216] = 0x13\n 56693: a1 = s1 + 0x4c0\n 56697: u64 [s1 + 1224] = 0\n 56701: ra = 2412, jump @19\n      : @2286 [@dyn 1206] (gas: 8)\n 56708: a0 = 0xffffffbc\n 56718: a1 = u64 [s1 + 0xb8]\n 56722: a0 = a1 <u a0\n 56725: a1 = u64 [s1 + 0xb0]\n 56729: a0 = 0 if a1 != 0\n 56731: a1 = u64 [s1 + 0xa8]\n 56735: a0 = 0 if a1 != 0\n 56737: jump @2293 if a0 != 0\n      : @2287 (gas: 1)\n 56740: trap\n      : @2288 (gas: 8)\n 56741: u64 [s1 + 240] = 0\n 56745: u64 [s1 + 232] = 0\n 56749: u64 [s1 + 224] = 0\n 56753: a0 = 0x4e487b7100000000\n 56763: a1 = s1 + 0xe0\n 56767: u64 [s1 + 0xf8] = a0\n 56771: a0 = 0\n 56773: ra = 2414, jump @19\n      : @2289 [@dyn 1207] (gas: 7)\n 56780: u64 [s1 + 216] = 0\n 56784: u64 [s1 + 208] = 0\n 56788: u64 [s1 + 192] = 0x11\n 56793: a0 = 0x4\n 56796: a1 = s1 + 0xc0\n 56800: u64 [s1 + 200] = 0\n 56804: ra = 2416, jump @19\n      : @2290 [@dyn 1208] (gas: 2)\n 56811: a1 = i32 [0x2027c]\n 56816: jump @2292 if a1 >u 63\n      : @2291 (gas: 2)\n 56820: u32 [0x2027c] = 0x40\n 56826: fallthrough\n      : @2292 (gas: 6)\n 56827: a1 = 0x20290\n 56832: i32 a1 = a1 + 0\n 56834: a0 = 0x1\n 56837: a2 = 0x24\n 56840: ecalli 15 // 'seal_return'\n 56842: fallthrough\n      : @2293 (gas: 12)\n 56843: a0 = u64 [s1 + 0xb8]\n 56847: i32 a0 = a0 + 0x44\n 56850: a1 = u64 [0x201c8]\n 56855: a2 = u64 [0x201d0]\n 56860: a3 = s1 + 0x400\n 56864: u64 [a3 + 0xb8] = a1\n 56868: u64 [a3 + 0xb0] = a2\n 56872: a1 = 0x4c4f570000000000\n 56882: u64 [a3 + 0xa8] = a1\n 56886: a1 = s1 + 0x4a0\n 56890: u64 [s1 + 1184] = 0\n 56894: ra = 2418, jump @19\n      : @2294 [@dyn 1209] (gas: 3)\n 56901: a1 = 0x64\n 56904: a0 = u64 [s1 + 0xb8]\n 56908: ra = 2420, jump @32\n      : @2295 [@dyn 1210] (gas: 1)\n 56915: t0 = 2422, jump @2626\n      : @2296 [@dyn 1211] (gas: 3)\n 56921: ra = 0x978\n 56925: ecalli 15 // 'seal_return'\n 56927: fallthrough\n      : @2297 [@dyn 1212] (gas: 40)\n 56928: sp = sp + 0xfffffffffffffe00\n 56932: u64 [sp + 0x1f8] = ra\n 56936: u64 [sp + 0x1f0] = s0\n 56940: u64 [sp + 0x1e8] = s1\n 56944: s0 = sp + 0x200\n 56948: sp = sp & 0xffffffffffffffe0\n 56951: s1 = sp\n 56953: a3 = u64 [a1 + 0x10]\n 56956: u64 [s1 + 0x98] = a3\n 56960: a3 = u64 [a1 + 0x8]\n 56963: u64 [s1 + 0x90] = a3\n 56967: a1 = u64 [a1]\n 56969: u64 [s1 + 0x88] = a1\n 56973: t0 = u64 [a0]\n 56975: a1 = u64 [a0 + 0x8]\n 56978: a0 = u32 [a0 + 0x10]\n 56981: a4 = u64 [a2 + 0x18]\n 56984: a5 = u64 [a2 + 0x10]\n 56987: a3 = u64 [a2 + 0x8]\n 56990: a2 = u64 [a2]\n 56992: u64 [s1 + 0x28] = a4\n 56995: u64 [s1 + 0x1d8] = a4\n 56999: u64 [s1 + 0x20] = a5\n 57002: u64 [s1 + 0x1d0] = a5\n 57006: u64 [s1 + 0x18] = a3\n 57009: u64 [s1 + 0x1c8] = a3\n 57013: u64 [s1 + 0x10] = a2\n 57016: u64 [s1 + 0x1c0] = a2\n 57020: a2 = 0xffffffff\n 57030: u64 [s1 + 0x78] = a2\n 57033: u64 [s1 + 440] = 0\n 57037: u64 [s1 + 0x30] = a0\n 57040: u64 [s1 + 0x1b0] = a0\n 57044: u64 [s1 + 0x38] = a1\n 57047: u64 [s1 + 0x1a8] = a1\n 57051: a1 = s1 + 0x1a0\n 57055: u64 [s1 + 0x40] = t0\n 57058: u64 [s1 + 0x1a0] = t0\n 57062: a0 = 0\n 57064: ra = 2426, jump @19\n      : @2298 [@dyn 1213] (gas: 7)\n 57071: u64 [s1 + 408] = 0\n 57075: u64 [s1 + 400] = 0\n 57079: u64 [s1 + 384] = 0x2\n 57084: a0 = 0x20\n 57087: a1 = s1 + 0x180\n 57091: u64 [s1 + 392] = 0\n 57095: ra = 2428, jump @19\n      : @2299 [@dyn 1214] (gas: 3)\n 57102: a1 = 0x2027c\n 57107: a0 = i32 [0x2027c]\n 57112: jump @2301 if a0 >u 63\n      : @2300 (gas: 2)\n 57116: u32 [0x2027c] = 0x40\n 57122: fallthrough\n      : @2301 (gas: 15)\n 57123: a0 = sp + 0xffffffffffffffe0\n 57126: a2 = a0 & 0xffffffffffffffe0\n 57129: u64 [s1 + 0x68] = a2\n 57132: sp = a2\n 57134: a0 = 0x20290\n 57139: i32 a0 = a0 + 0\n 57141: i32 a2 = a2 + 0\n 57143: u64 [s1 + 0x80] = a1\n 57147: a1 = 0x40\n 57150: u64 [s1 + 0x70] = a0\n 57153: ra = 0x97e\n 57157: ecalli 10 // 'hash_keccak_256'\n 57159: a3 = u64 [s1 + 0x68]\n 57162: t0 = 0x980\n 57166: jump @2630\n      : @2302 [@dyn 1215] (gas: 2)\n 57169: a3 = u64 [s1 + 0x68]\n 57172: t0 = 2432, jump @2630\n      : @2303 [@dyn 1216] (gas: 28)\n 57178: u64 [s1 + 0x60] = a0\n 57181: a0 = reverse a1\n 57183: u64 [s1 + 0x58] = a0\n 57186: a0 = reverse a2\n 57188: u64 [s1 + 0x50] = a0\n 57191: a0 = reverse a3\n 57193: u64 [s1 + 0x48] = a0\n 57196: a0 = sp + 0xffffffffffffffe0\n 57199: a0 = a0 & 0xffffffffffffffe0\n 57202: u64 [s1 + 0x68] = a0\n 57205: sp = a0\n 57207: a0 = u64 [s1 + 0x88]\n 57211: a0 = a0 & 0xffffffffffffffff\n 57214: a1 = u64 [s1 + 0x90]\n 57218: a1 = a1 & 0xffffffffffffffff\n 57221: a2 = u64 [s1 + 0x98]\n 57225: a3 = u64 [s1 + 0x78]\n 57228: a2 = a2 & a3\n 57231: u64 [s1 + 376] = 0\n 57235: u64 [s1 + 0x78] = a2\n 57238: u64 [s1 + 0x170] = a2\n 57242: u64 [s1 + 0x88] = a1\n 57246: u64 [s1 + 0x168] = a1\n 57250: a1 = s1 + 0x160\n 57254: u64 [s1 + 0x90] = a0\n 57258: u64 [s1 + 0x160] = a0\n 57262: a0 = 0\n 57264: ra = 2434, jump @19\n      : @2304 [@dyn 1217] (gas: 12)\n 57271: a0 = u64 [s1 + 0x48]\n 57274: a3 = s1 + 0x100\n 57278: u64 [a3 + 0x58] = a0\n 57281: a0 = u64 [s1 + 0x50]\n 57284: u64 [a3 + 0x50] = a0\n 57287: a0 = u64 [s1 + 0x58]\n 57290: u64 [a3 + 0x48] = a0\n 57293: a0 = 0x20\n 57296: a1 = s1 + 0x140\n 57300: a2 = u64 [s1 + 0x60]\n 57303: u64 [a3 + 0x40] = a2\n 57306: ra = 2436, jump @19\n      : @2305 [@dyn 1218] (gas: 3)\n 57313: a1 = u64 [s1 + 0x80]\n 57317: a0 = i32 [a1]\n 57319: jump @2307 if a0 >u 63\n      : @2306 (gas: 2)\n 57323: u32 [a1 + 0] = 0x40\n 57326: fallthrough\n      : @2307 (gas: 4)\n 57327: a0 = sp + 0xffffffffffffffe0\n 57330: a0 = a0 & 0xffffffffffffffe0\n 57333: u64 [s1 + 0x98] = a0\n 57337: t0 = 2438, jump @2674\n      : @2308 [@dyn 1219] (gas: 5)\n 57343: ra = 0x988\n 57347: ecalli 10 // 'hash_keccak_256'\n 57349: a3 = u64 [s1 + 0x98]\n 57353: t0 = 0x98a\n 57357: jump @2632\n      : @2309 [@dyn 1220] (gas: 2)\n 57360: a3 = u64 [s1 + 0x98]\n 57364: t0 = 2442, jump @2632\n      : @2310 [@dyn 1221] (gas: 7)\n 57370: a0 = u64 [s1 + 0x68]\n 57373: u64 [a0 + 0x18] = a3\n 57376: u64 [a0 + 0x10] = a2\n 57379: u64 [a0 + 0x8] = a1\n 57382: u64 [a0] = a4\n 57384: a1 = s1 + 0x1c0\n 57388: ra = 2444, jump @23\n      : @2311 [@dyn 1222] (gas: 3)\n 57395: a0 = s1 + 0x120\n 57399: a1 = 0x40\n 57402: ra = 2446, jump @17\n      : @2312 [@dyn 1223] (gas: 6)\n 57409: a4 = s1 + 0x100\n 57413: a0 = u64 [a4 + 0x38]\n 57416: a1 = u64 [a4 + 0x30]\n 57419: a2 = u64 [a4 + 0x28]\n 57422: a3 = u64 [a4 + 0x20]\n 57425: t0 = 2448, jump @2597\n      : @2313 [@dyn 1224] (gas: 1)\n 57431: jump @2317 if a0 != 0\n      : @2314 (gas: 13)\n 57435: a0 = u64 [s1 + 0x10]\n 57438: a2 = s1 + 0x100\n 57442: u64 [a2] = a0\n 57444: a0 = u64 [s1 + 0x18]\n 57447: u64 [a2 + 0x8] = a0\n 57450: a0 = u64 [s1 + 0x20]\n 57453: u64 [a2 + 0x10] = a0\n 57456: a1 = s1 + 0x100\n 57460: a0 = u64 [s1 + 0x28]\n 57463: u64 [a2 + 0x18] = a0\n 57466: a0 = a3\n 57468: u64 [s1 + 0x98] = a3\n 57472: ra = 2450, jump @19\n      : @2315 [@dyn 1225] (gas: 28)\n 57479: u64 [s1 + 184] = 0\n 57483: a0 = u64 [s1 + 0x78]\n 57486: u64 [s1 + 0xb0] = a0\n 57490: a0 = u64 [s1 + 0x88]\n 57494: u64 [s1 + 0xa8] = a0\n 57498: a0 = u64 [s1 + 0x90]\n 57502: u64 [s1 + 0xa0] = a0\n 57506: u64 [s1 + 216] = 0\n 57510: a0 = u64 [s1 + 0x30]\n 57513: u64 [s1 + 0xd0] = a0\n 57517: a0 = u64 [s1 + 0x38]\n 57520: u64 [s1 + 0xc8] = a0\n 57524: a0 = u64 [0x201f8]\n 57529: a1 = u64 [0x20200]\n 57534: a2 = u64 [0x20208]\n 57539: a3 = u64 [s1 + 0x40]\n 57542: u64 [s1 + 0xc0] = a3\n 57546: u64 [s1 + 0xf8] = a0\n 57550: u64 [s1 + 0xf0] = a1\n 57554: u64 [s1 + 0xe8] = a2\n 57558: a0 = u64 [0x20210]\n 57563: a1 = 0x20\n 57566: a2 = s1 + 0xe0\n 57570: a3 = s1 + 0xc0\n 57574: a4 = s1 + 0xa0\n 57578: u64 [s1 + 0xe0] = a0\n 57582: a0 = u64 [s1 + 0x98]\n 57586: ra = 2452, jump @29\n      : @2316 [@dyn 1226] (gas: 6)\n 57593: sp = s0 + 0xfffffffffffffe00\n 57597: ra = u64 [sp + 0x1f8]\n 57601: s0 = u64 [sp + 0x1f0]\n 57605: s1 = u64 [sp + 0x1e8]\n 57609: sp = sp + 0x200\n 57613: ret\n      : @2317 (gas: 1)\n 57615: trap\n      : @2318 (gas: 36)\n 57616: sp = sp + 0xfffffffffffffc20\n 57620: a3 = sp + 0x300\n 57624: u64 [a3 + 0xd8] = ra\n 57628: u64 [a3 + 0xd0] = s0\n 57632: u64 [a3 + 0xc8] = s1\n 57636: s0 = sp + 0x3e0\n 57640: sp = sp & 0xffffffffffffffe0\n 57643: s1 = sp\n 57645: a3 = u64 [a2 + 0x18]\n 57648: u64 [s1 + 0x68] = a3\n 57651: a3 = u64 [a2 + 0x10]\n 57654: u64 [s1 + 0x60] = a3\n 57657: a3 = u64 [a2 + 0x8]\n 57660: u64 [s1 + 0x58] = a3\n 57663: a2 = u64 [a2]\n 57665: u64 [s1 + 0x50] = a2\n 57668: a2 = u64 [a1 + 0x10]\n 57671: u64 [s1 + 0x48] = a2\n 57674: a2 = u64 [a1 + 0x8]\n 57677: u64 [s1 + 0x28] = a2\n 57680: a1 = u64 [a1]\n 57682: u64 [s1 + 0x20] = a1\n 57685: a2 = u64 [a0]\n 57687: a1 = u64 [a0 + 0x8]\n 57690: a0 = u32 [a0 + 0x10]\n 57693: u64 [s1 + 792] = 0\n 57697: u64 [s1 + 0x30] = a0\n 57700: a3 = s1 + 0x300\n 57704: u64 [a3 + 0x10] = a0\n 57707: u64 [s1 + 0x38] = a1\n 57710: u64 [a3 + 0x8] = a1\n 57713: a1 = s1 + 0x300\n 57717: u64 [s1 + 0x40] = a2\n 57720: u64 [a3] = a2\n 57722: a0 = 0\n 57724: ra = 2454, jump @19\n      : @2319 [@dyn 1227] (gas: 7)\n 57731: u64 [s1 + 760] = 0\n 57735: u64 [s1 + 752] = 0\n 57739: u64 [s1 + 744] = 0\n 57743: a0 = 0x20\n 57746: a1 = s1 + 0x2e0\n 57750: u64 [s1 + 736] = 0x1\n 57755: ra = 2456, jump @19\n      : @2320 [@dyn 1228] (gas: 4)\n 57762: a0 = 0x2027c\n 57767: u64 [s1 + 0x78] = a0\n 57770: a0 = i32 [0x2027c]\n 57775: jump @2322 if a0 >u 63\n      : @2321 (gas: 3)\n 57779: a1 = u64 [s1 + 0x78]\n 57782: u32 [a1 + 0] = 0x40\n 57785: fallthrough\n      : @2322 (gas: 16)\n 57786: a0 = 0xffffffff\n 57796: u64 [s1 + 0x18] = a0\n 57799: a0 = sp + 0xffffffffffffffe0\n 57802: a2 = a0 & 0xffffffffffffffe0\n 57805: u64 [s1 + 0x10] = a2\n 57808: sp = a2\n 57810: a0 = 0x20290\n 57815: i32 a0 = a0 + 0\n 57817: i32 a2 = a2 + 0\n 57819: a1 = 0x40\n 57822: u64 [s1 + 0x70] = a0\n 57825: ra = 0x99a\n 57829: ecalli 10 // 'hash_keccak_256'\n 57831: a3 = u64 [s1 + 0x10]\n 57834: t0 = 0x99c\n 57838: jump @2631\n      : @2323 [@dyn 1229] (gas: 2)\n 57841: a3 = u64 [s1 + 0x10]\n 57844: t0 = 2460, jump @2631\n      : @2324 [@dyn 1230] (gas: 7)\n 57850: u64 [s1 + 0x358] = a3\n 57854: u64 [s1 + 0x350] = a2\n 57858: u64 [s1 + 0x348] = a1\n 57862: u64 [s1 + 0x340] = a0\n 57866: a0 = s1 + 0x2c0\n 57870: a1 = s1 + 0x340\n 57874: ra = 2462, jump @21\n      : @2325 [@dyn 1231] (gas: 12)\n 57881: a3 = u64 [s1 + 0x2c0]\n 57885: a0 = u64 [s1 + 0x2c8]\n 57889: a1 = u64 [s1 + 0x2d0]\n 57893: a2 = u64 [s1 + 0x2d8]\n 57897: a4 = u64 [s1 + 0x68]\n 57900: u64 [s1 + 0x278] = a4\n 57904: a4 = u64 [s1 + 0x60]\n 57907: u64 [s1 + 0x270] = a4\n 57911: a4 = u64 [s1 + 0x58]\n 57914: u64 [s1 + 0x268] = a4\n 57918: a4 = u64 [s1 + 0x50]\n 57921: t0 = 2464, jump @2608\n      : @2326 [@dyn 1232] (gas: 1)\n 57927: ra = 2466, jump @2218\n      : @2327 [@dyn 1233] (gas: 19)\n 57933: a0 = u64 [s1 + 0x2b8]\n 57937: a1 = u64 [s1 + 0x2b0]\n 57941: a2 = u64 [s1 + 0x2a8]\n 57945: a3 = u64 [s1 + 0x2a0]\n 57949: a4 = s1 + 0x300\n 57953: u64 [a4 + 0x38] = a0\n 57956: u64 [a4 + 0x30] = a1\n 57959: u64 [a4 + 0x28] = a2\n 57962: u64 [a4 + 0x20] = a3\n 57965: u64 [s1 + 600] = 0\n 57969: a0 = u64 [s1 + 0x30]\n 57972: u64 [s1 + 0x250] = a0\n 57976: a0 = u64 [s1 + 0x38]\n 57979: u64 [s1 + 0x248] = a0\n 57983: a1 = s1 + 0x240\n 57987: a0 = u64 [s1 + 0x40]\n 57990: u64 [s1 + 0x240] = a0\n 57994: a0 = 0\n 57996: ra = 2468, jump @19\n      : @2328 [@dyn 1234] (gas: 7)\n 58003: u64 [s1 + 568] = 0\n 58007: u64 [s1 + 560] = 0\n 58011: u64 [s1 + 544] = 0x1\n 58016: a0 = 0x20\n 58019: a1 = s1 + 0x220\n 58023: u64 [s1 + 552] = 0\n 58027: ra = 2470, jump @19\n      : @2329 [@dyn 1235] (gas: 3)\n 58034: a0 = u64 [s1 + 0x78]\n 58037: a0 = i32 [a0]\n 58039: jump @2331 if a0 >u 63\n      : @2330 (gas: 3)\n 58043: a0 = u64 [s1 + 0x78]\n 58046: u32 [a0 + 0] = 0x40\n 58049: fallthrough\n      : @2331 (gas: 4)\n 58050: a0 = sp + 0xffffffffffffffe0\n 58053: a0 = a0 & 0xffffffffffffffe0\n 58056: u64 [s1 + 0x10] = a0\n 58059: t0 = 2472, jump @2674\n      : @2332 [@dyn 1236] (gas: 5)\n 58065: ra = 0x9aa\n 58069: ecalli 10 // 'hash_keccak_256'\n 58071: a3 = u64 [s1 + 0x10]\n 58074: t0 = 0x9ac\n 58078: jump @2565\n      : @2333 [@dyn 1237] (gas: 2)\n 58081: a3 = u64 [s1 + 0x10]\n 58084: t0 = 2476, jump @2565\n      : @2334 [@dyn 1238] (gas: 7)\n 58090: u64 [a4 + 0x78] = a3\n 58093: u64 [a4 + 0x70] = a2\n 58096: u64 [a4 + 0x68] = a1\n 58099: u64 [a4 + 0x60] = a0\n 58102: a0 = s1 + 0x360\n 58106: a1 = s1 + 0x320\n 58110: ra = 2478, jump @23\n      : @2335 [@dyn 1239] (gas: 18)\n 58117: a0 = u64 [s1 + 0x20]\n 58120: a0 = a0 & 0xffffffffffffffff\n 58123: a1 = u64 [s1 + 0x28]\n 58126: a1 = a1 & 0xffffffffffffffff\n 58129: a2 = u64 [s1 + 0x48]\n 58132: a3 = u64 [s1 + 0x18]\n 58135: a2 = a2 & a3\n 58138: u64 [s1 + 536] = 0\n 58142: u64 [s1 + 0x18] = a2\n 58145: a3 = s1 + 0x200\n 58149: u64 [a3 + 0x10] = a2\n 58152: u64 [s1 + 0x20] = a1\n 58155: u64 [a3 + 0x8] = a1\n 58158: a1 = s1 + 0x200\n 58162: u64 [s1 + 0x28] = a0\n 58165: u64 [a3] = a0\n 58167: a0 = 0\n 58169: ra = 2480, jump @19\n      : @2336 [@dyn 1240] (gas: 7)\n 58176: u64 [s1 + 504] = 0\n 58180: u64 [s1 + 496] = 0\n 58184: u64 [s1 + 488] = 0\n 58188: a0 = 0x20\n 58191: a1 = s1 + 0x1e0\n 58195: u64 [s1 + 480] = 0x1\n 58200: ra = 2482, jump @19\n      : @2337 [@dyn 1241] (gas: 7)\n 58207: a0 = sp + 0xffffffffffffffe0\n 58210: a0 = a0 & 0xffffffffffffffe0\n 58213: u64 [s1 + 0x48] = a0\n 58216: sp = a0\n 58218: a0 = u64 [s1 + 0x78]\n 58221: a0 = i32 [a0]\n 58223: jump @2339 if a0 >u 63\n      : @2338 (gas: 3)\n 58227: a0 = u64 [s1 + 0x78]\n 58230: u32 [a0 + 0] = 0x40\n 58233: fallthrough\n      : @2339 (gas: 4)\n 58234: a0 = sp + 0xffffffffffffffe0\n 58237: a0 = a0 & 0xffffffffffffffe0\n 58240: u64 [s1 + 0x10] = a0\n 58243: t0 = 2484, jump @2674\n      : @2340 [@dyn 1242] (gas: 5)\n 58249: ra = 0x9b6\n 58253: ecalli 10 // 'hash_keccak_256'\n 58255: a3 = u64 [s1 + 0x10]\n 58258: t0 = 0x9b8\n 58262: jump @2565\n      : @2341 [@dyn 1243] (gas: 2)\n 58265: a3 = u64 [s1 + 0x10]\n 58268: t0 = 2488, jump @2565\n      : @2342 [@dyn 1244] (gas: 7)\n 58274: u64 [a4 + 0x98] = a3\n 58278: u64 [a4 + 0x90] = a2\n 58282: u64 [a4 + 0x88] = a1\n 58286: u64 [a4 + 0x80] = a0\n 58290: a0 = s1 + 0x1c0\n 58294: a1 = s1 + 0x380\n 58298: ra = 2490, jump @21\n      : @2343 [@dyn 1245] (gas: 20)\n 58305: a3 = u64 [s1 + 0x1c0]\n 58309: a0 = u64 [s1 + 0x1c8]\n 58313: a1 = u64 [s1 + 0x1d0]\n 58317: a2 = u64 [s1 + 0x1d8]\n 58321: a4 = u64 [s1 + 0x68]\n 58324: u64 [s1 + 0x178] = a4\n 58328: a4 = u64 [s1 + 0x60]\n 58331: u64 [s1 + 0x170] = a4\n 58335: a4 = u64 [s1 + 0x58]\n 58338: u64 [s1 + 0x168] = a4\n 58342: a4 = u64 [s1 + 0x50]\n 58345: u64 [s1 + 0x160] = a4\n 58349: u64 [s1 + 0x198] = a2\n 58353: u64 [s1 + 0x190] = a1\n 58357: u64 [s1 + 0x188] = a0\n 58361: a0 = s1 + 0x1a0\n 58365: a1 = s1 + 0x180\n 58369: a2 = s1 + 0x160\n 58373: u64 [s1 + 0x180] = a3\n 58377: ra = 2492, jump @2529\n      : @2344 [@dyn 1246] (gas: 19)\n 58383: a0 = u64 [s1 + 0x1b0]\n 58387: a1 = u64 [s1 + 0x1b8]\n 58391: a2 = u64 [s1 + 0x1a0]\n 58395: a3 = u64 [s1 + 0x1a8]\n 58399: a4 = u64 [s1 + 0x48]\n 58402: u64 [a4 + 0x10] = a0\n 58405: u64 [a4 + 0x18] = a1\n 58408: u64 [a4] = a2\n 58410: u64 [a4 + 0x8] = a3\n 58413: u64 [s1 + 344] = 0\n 58417: a0 = u64 [s1 + 0x18]\n 58420: u64 [s1 + 0x150] = a0\n 58424: a0 = u64 [s1 + 0x20]\n 58427: u64 [s1 + 0x148] = a0\n 58431: a1 = s1 + 0x140\n 58435: a0 = u64 [s1 + 0x28]\n 58438: u64 [s1 + 0x140] = a0\n 58442: a0 = 0\n 58444: ra = 2494, jump @19\n      : @2345 [@dyn 1247] (gas: 7)\n 58451: u64 [s1 + 312] = 0\n 58455: u64 [s1 + 304] = 0\n 58459: u64 [s1 + 288] = 0x1\n 58464: a0 = 0x20\n 58467: a1 = s1 + 0x120\n 58471: u64 [s1 + 296] = 0\n 58475: ra = 2496, jump @19\n      : @2346 [@dyn 1248] (gas: 3)\n 58482: a0 = u64 [s1 + 0x78]\n 58485: a0 = i32 [a0]\n 58487: jump @2348 if a0 >u 63\n      : @2347 (gas: 3)\n 58491: a0 = u64 [s1 + 0x78]\n 58494: u32 [a0 + 0] = 0x40\n 58497: fallthrough\n      : @2348 (gas: 4)\n 58498: a0 = sp + 0xffffffffffffffe0\n 58501: a0 = a0 & 0xffffffffffffffe0\n 58504: u64 [s1 + 0x78] = a0\n 58507: t0 = 2498, jump @2674\n      : @2349 [@dyn 1249] (gas: 5)\n 58513: ra = 0x9c4\n 58517: ecalli 10 // 'hash_keccak_256'\n 58519: a3 = u64 [s1 + 0x78]\n 58522: t0 = 0x9c6\n 58526: jump @2565\n      : @2350 [@dyn 1250] (gas: 2)\n 58529: a3 = u64 [s1 + 0x78]\n 58532: t0 = 2502, jump @2565\n      : @2351 [@dyn 1251] (gas: 7)\n 58538: u64 [a4 + 0xb8] = a3\n 58542: u64 [a4 + 0xb0] = a2\n 58546: u64 [a4 + 0xa8] = a1\n 58550: u64 [a4 + 0xa0] = a0\n 58554: a0 = s1 + 0x3a0\n 58558: a1 = u64 [s1 + 0x48]\n 58561: ra = 2504, jump @23\n      : @2352 [@dyn 1252] (gas: 3)\n 58568: a0 = s1 + 0x100\n 58572: a1 = 0x40\n 58575: ra = 2506, jump @17\n      : @2353 [@dyn 1253] (gas: 6)\n 58582: a4 = s1 + 0x100\n 58586: a0 = u64 [a4 + 0x18]\n 58589: a1 = u64 [a4 + 0x10]\n 58592: a2 = u64 [a4 + 0x8]\n 58595: a3 = u64 [a4]\n 58597: t0 = 2508, jump @2597\n      : @2354 [@dyn 1254] (gas: 1)\n 58603: jump @2358 if a0 != 0\n      : @2355 (gas: 12)\n 58607: a0 = u64 [s1 + 0x50]\n 58610: u64 [s1 + 0xe0] = a0\n 58614: a0 = u64 [s1 + 0x58]\n 58617: u64 [s1 + 0xe8] = a0\n 58621: a0 = u64 [s1 + 0x60]\n 58624: u64 [s1 + 0xf0] = a0\n 58628: a1 = s1 + 0xe0\n 58632: a0 = u64 [s1 + 0x68]\n 58635: u64 [s1 + 0xf8] = a0\n 58639: a0 = a3\n 58641: u64 [s1 + 0x78] = a3\n 58644: ra = 2510, jump @19\n      : @2356 [@dyn 1255] (gas: 28)\n 58651: u64 [s1 + 152] = 0\n 58655: a0 = u64 [s1 + 0x18]\n 58658: u64 [s1 + 0x90] = a0\n 58662: a0 = u64 [s1 + 0x20]\n 58665: u64 [s1 + 0x88] = a0\n 58669: a0 = u64 [s1 + 0x28]\n 58672: u64 [s1 + 0x80] = a0\n 58676: u64 [s1 + 184] = 0\n 58680: a0 = u64 [s1 + 0x30]\n 58683: u64 [s1 + 0xb0] = a0\n 58687: a0 = u64 [s1 + 0x38]\n 58690: u64 [s1 + 0xa8] = a0\n 58694: a0 = u64 [0x20218]\n 58699: a1 = u64 [0x20220]\n 58704: a2 = u64 [0x20228]\n 58709: a3 = u64 [s1 + 0x40]\n 58712: u64 [s1 + 0xa0] = a3\n 58716: u64 [s1 + 0xd8] = a0\n 58720: u64 [s1 + 0xd0] = a1\n 58724: u64 [s1 + 0xc8] = a2\n 58728: a0 = u64 [0x20230]\n 58733: a1 = 0x20\n 58736: a2 = s1 + 0xc0\n 58740: a3 = s1 + 0xa0\n 58744: a4 = s1 + 0x80\n 58748: u64 [s1 + 0xc0] = a0\n 58752: a0 = u64 [s1 + 0x78]\n 58755: ra = 2512, jump @29\n      : @2357 [@dyn 1256] (gas: 7)\n 58762: sp = s0 + 0xfffffffffffffc20\n 58766: a0 = sp + 0x300\n 58770: ra = u64 [a0 + 0xd8]\n 58774: s0 = u64 [a0 + 0xd0]\n 58778: s1 = u64 [a0 + 0xc8]\n 58782: sp = sp + 0x3e0\n 58786: ret\n      : @2358 (gas: 1)\n 58788: trap\n      : @2359 (gas: 24)\n 58789: sp = sp + 0xfffffffffffff8e0\n 58793: a3 = sp + 0x700\n 58797: u64 [a3 + 0x18] = ra\n 58800: u64 [a3 + 0x10] = s0\n 58803: u64 [a3 + 0x8] = s1\n 58806: s0 = sp + 0x720\n 58810: sp = sp & 0xffffffffffffffe0\n 58813: u64 [sp + 0xc8] = a0\n 58817: a0 = u64 [a2 + 0x8]\n 58820: u64 [sp + 0xf8] = a0\n 58824: a0 = u64 [a2]\n 58826: u64 [sp + 0x100] = a0\n 58830: a0 = u64 [a1 + 0x8]\n 58833: u64 [sp + 0xf0] = a0\n 58837: a0 = u64 [a1]\n 58839: u64 [sp + 0x108] = a0\n 58843: a1 = sp + 0x500\n 58847: u64 [a1 + 248] = 0\n 58851: u64 [a1 + 240] = 0\n 58855: u64 [a1 + 232] = 0\n 58859: u64 [a1 + 224] = 0x5\n 58864: a0 = sp + 0x5c0\n 58868: a1 = sp + 0x5e0\n 58872: ra = 2514, jump @21\n      : @2360 [@dyn 1257] (gas: 9)\n 58879: a1 = sp + 0x500\n 58883: a0 = u64 [a1 + 0xd0]\n 58887: u64 [sp + 0x128] = a0\n 58891: s1 = u64 [a1 + 0xc8]\n 58895: a0 = u64 [a1 + 0xc0]\n 58899: u64 [sp + 0x130] = a0\n 58903: a0 = sp + 0x5a0\n 58907: a1 = 0x40\n 58910: ra = 2516, jump @17\n      : @2361 [@dyn 1258] (gas: 16)\n 58917: a4 = sp + 0x500\n 58921: a1 = u64 [a4 + 0xb8]\n 58925: a3 = u64 [a4 + 0xb0]\n 58929: a2 = u64 [a4 + 0xa8]\n 58933: a0 = u64 [a4 + 0xa0]\n 58937: u64 [sp + 0x120] = a1\n 58941: u64 [sp + 0x110] = a2\n 58945: a2 = a2 | a1\n 58948: a1 = a0 | a3\n 58951: a1 = a1 | a2\n 58954: a1 = a1 >> 0x20\n 58957: u64 [sp + 0x118] = a3\n 58961: a2 = a2 | a3\n 58964: a2 = a2 << 0x20\n 58967: a1 = a1 | a2\n 58970: jump @2432 if a1 != 0\n      : @2362 (gas: 9)\n 58974: a3 = sp + 0x500\n 58978: u64 [a3 + 144] = 0\n 58982: u64 [a3 + 136] = 0\n 58986: u64 [a3 + 128] = 0\n 58990: a2 = 0x17e7e5800000000\n 59000: a1 = sp + 0x580\n 59004: u64 [a3 + 0x98] = a2\n 59008: u64 [sp + 0x138] = a0\n 59012: ra = 2518, jump @19\n      : @2363 [@dyn 1259] (gas: 25)\n 59019: ecalli 12 // 'ref_time_left'\n 59021: a0 = reverse s1\n 59023: a1 = a0 << 0x20\n 59026: a2 = u64 [sp + 0x128]\n 59030: a2 = reverse a2\n 59032: a2 = a2 >> 0x20\n 59035: a1 = a1 | a2\n 59038: a2 = u64 [sp + 0x130]\n 59042: a2 = reverse a2\n 59044: a3 = a2 << 0x20\n 59047: s1 = 0x30290\n 59052: a0 = a0 >> 0x20\n 59055: a0 = a0 | a3\n 59058: a2 = a2 >> 0x20\n 59061: u64 [0x30298] = a0\n 59066: u64 [0x30290] = a1\n 59071: u32 [0x302a0] = a2\n 59076: a0 = sp + 0x600\n 59080: u64 [a0 + 24] = 0\n 59083: u64 [a0 + 16] = 0\n 59086: u64 [a0 + 8] = 0\n 59089: u64 [a0 + 0] = 0\n 59091: a1 = 0x4\n 59094: a0 = u64 [sp + 0x138]\n 59098: ra = 2520, jump @32\n      : @2364 [@dyn 1260] (gas: 4)\n 59105: u64 [sp + 0x130] = a0\n 59109: a1 = 0x20\n 59112: a0 = u64 [sp + 0x138]\n 59116: ra = 2522, jump @32\n      : @2365 [@dyn 1261] (gas: 31)\n 59123: a2 = sp + 0x600\n 59127: u32 [a2 + 32] = 0x20\n 59131: u64 [a2 + 88] = 0\n 59134: u64 [a2 + 80] = 0\n 59137: u64 [a2 + 72] = 0\n 59140: u64 [a2 + 64] = 0\n 59143: s1 = s1 << 0x20\n 59146: s1 = s1 >> 0x20\n 59149: a1 = 0x1800000000\n 59159: t0 = s1 | a1\n 59162: a1 = sp + 0x600\n 59166: a1 = a1 << 0x20\n 59169: a1 = a1 >> 0x20\n 59172: a2 = sp + 0x640\n 59176: a2 = a2 << 0x20\n 59179: a3 = a2 | a1\n 59182: a1 = u64 [sp + 0x130]\n 59186: a1 = a1 << 0x20\n 59189: a1 = a1 >> 0x20\n 59192: a2 = 0x400000000\n 59202: a4 = a1 | a2\n 59205: a0 = a0 << 0x20\n 59208: a0 = a0 >> 0x20\n 59211: a1 = sp + 0x620\n 59215: a1 = a1 << 0x20\n 59218: a5 = a1 | a0\n 59221: a1 = 0xffffffffffffffff\n 59224: a2 = 0xffffffffffffffff\n 59227: a0 = t0\n 59229: ecalli 1 // 'call'\n 59231: fallthrough\n      : @2366 (gas: 1)\n 59232: jump @2411 if a0 != 0\n      : @2367 (gas: 2)\n 59236: ecalli 14 // 'return_data_size'\n 59238: fallthrough\n      : @2368 (gas: 2)\n 59239: a4 = 0x20\n 59242: jump @2370 if a0 >=u a4\n      : @2369 (gas: 3)\n 59245: ecalli 14 // 'return_data_size'\n 59247: a4 = a0\n 59249: fallthrough\n      : @2370 (gas: 18)\n 59250: s1 = 0\n 59252: a2 = u64 [sp + 0x138]\n 59256: a3 = u64 [sp + 0x120]\n 59260: a0 = u64 [sp + 0x118]\n 59264: a1 = u64 [sp + 0x110]\n 59268: u64 [sp + 0x130] = a4\n 59272: a5 = sp + 0x500\n 59276: u64 [a5 + 0x20] = a4\n 59279: u64 [a5 + 0x40] = a2\n 59282: u64 [a5 + 40] = 0\n 59285: u64 [a5 + 0x48] = a1\n 59288: u64 [a5 + 48] = 0\n 59291: u64 [a5 + 0x50] = a0\n 59294: u64 [a5 + 56] = 0\n 59297: a0 = sp + 0x540\n 59301: a1 = sp + 0x520\n 59305: u64 [a5 + 0x58] = a3\n 59308: ra = 2524, jump @1919\n      : @2371 [@dyn 1262] (gas: 8)\n 59314: a1 = u64 [sp + 0x130]\n 59318: a1 = a1 <u 0x20\n 59321: a1 = a1 ^ 0x1\n 59324: a0 = 0\n 59326: a2 = a0\n 59328: s1 = 0\n 59330: a2 = a1 if s1 == 0\n 59333: jump @2433 if a2 == 0\n      : @2372 (gas: 3)\n 59337: a0 = sp + 0x500\n 59341: a1 = u64 [sp + 0x138]\n 59345: ra = 2526, jump @17\n      : @2373 [@dyn 1263] (gas: 10)\n 59352: a3 = u64 [sp + 0x510]\n 59356: a2 = u64 [sp + 0x518]\n 59360: a0 = 0x100000000\n 59370: a0 = a0 ^ a3\n 59373: a0 = a0 | a2\n 59376: a1 = a3 >> 0x20\n 59379: a1 = a1 <u 0x1\n 59382: a1 = 0 if a2 != 0\n 59384: a1 = 0 if a0 == 0\n 59386: jump @2434 if a1 == 0\n      : @2374 (gas: 17)\n 59390: a0 = u64 [sp + 0x500]\n 59394: a1 = u64 [sp + 0x508]\n 59398: u64 [sp + 0x98] = a3\n 59402: u64 [sp + 0x88] = a0\n 59406: a0 = a0 | a3\n 59409: u64 [sp + 0xa0] = a2\n 59413: u64 [sp + 0x90] = a1\n 59417: a1 = a1 | a2\n 59420: s1 = a0 | a1\n 59423: a1 = sp + 0x600\n 59427: u64 [a1 + 152] = 0\n 59431: u64 [a1 + 144] = 0\n 59435: u64 [a1 + 136] = 0\n 59439: u64 [a1 + 128] = 0xb\n 59444: a0 = sp + 0x4e0\n 59448: a1 = sp + 0x680\n 59452: ra = 2528, jump @21\n      : @2375 [@dyn 1264] (gas: 7)\n 59459: a0 = sp + 0x400\n 59463: a4 = u64 [a0 + 0xf8]\n 59467: a5 = u64 [a0 + 0xf0]\n 59471: a3 = u64 [a0 + 0xe8]\n 59475: a2 = u64 [a0 + 0xe0]\n 59479: u64 [sp + 0xc0] = s1\n 59483: jump @2399 if s1 == 0\n      : @2376 (gas: 4)\n 59487: a0 = a2 | a5\n 59490: a1 = a3 | a4\n 59493: a0 = a0 | a1\n 59496: jump @2410 if a0 == 0\n      : @2377 (gas: 24)\n 59500: a0 = 0xffffffffffff\n 59510: a1 = u64 [sp + 0xf8]\n 59514: a1 = a1 & a0\n 59517: u64 [sp + 0x138] = a3\n 59521: a3 = u64 [sp + 0xf0]\n 59525: a3 = a3 & a0\n 59528: s1 = sp + 0x400\n 59532: u64 [s1 + 152] = 0\n 59536: u64 [s1 + 144] = 0\n 59540: a0 = u64 [sp + 0x100]\n 59544: u64 [s1 + 0x80] = a0\n 59548: u64 [s1 + 184] = 0\n 59552: u64 [s1 + 176] = 0\n 59556: a0 = u64 [sp + 0x108]\n 59560: u64 [s1 + 0xa0] = a0\n 59564: u64 [s1 + 0x88] = a1\n 59568: a0 = sp + 0x4c0\n 59572: a1 = sp + 0x4a0\n 59576: u64 [sp + 0x130] = a2\n 59580: a2 = sp + 0x480\n 59584: u64 [s1 + 0xa8] = a3\n 59588: u64 [sp + 0x120] = a4\n 59592: u64 [sp + 0x128] = a5\n 59596: ra = 2530, jump @2197\n      : @2378 [@dyn 1265] (gas: 12)\n 59602: a4 = sp + 0x400\n 59606: a2 = u64 [a4 + 0xc0]\n 59610: a0 = u64 [a4 + 0xc8]\n 59614: a1 = u64 [a4 + 0xd0]\n 59618: a3 = u64 [a4 + 0xd8]\n 59622: u64 [a4 + 0x58] = a3\n 59625: u64 [a4 + 0x50] = a1\n 59628: u64 [a4 + 0x48] = a0\n 59631: a0 = sp + 0x460\n 59635: a1 = sp + 0x440\n 59639: u64 [a4 + 0x40] = a2\n 59642: ra = 2532, jump @2444\n      : @2379 [@dyn 1266] (gas: 19)\n 59648: a3 = sp + 0x400\n 59652: s1 = u64 [a3 + 0x78]\n 59655: a0 = u64 [a3 + 0x70]\n 59658: u64 [sp + 0xb8] = a0\n 59662: a0 = u64 [a3 + 0x68]\n 59665: u64 [sp + 0xb0] = a0\n 59669: a0 = u64 [a3 + 0x60]\n 59672: u64 [sp + 0xa8] = a0\n 59676: a0 = u64 [sp + 0x120]\n 59680: u64 [a3 + 0x18] = a0\n 59683: a0 = u64 [sp + 0x128]\n 59687: u64 [a3 + 0x10] = a0\n 59690: a0 = u64 [sp + 0x138]\n 59694: u64 [a3 + 0x8] = a0\n 59697: a0 = sp + 0x420\n 59701: a1 = sp + 0x400\n 59705: a2 = u64 [sp + 0x130]\n 59709: u64 [a3] = a2\n 59711: ra = 2534, jump @2444\n      : @2380 [@dyn 1267] (gas: 21)\n 59717: a2 = u64 [sp + 0xb0]\n 59721: t0 = u64 [sp + 0xb8]\n 59725: a0 = sp + 0x400\n 59729: t2 = u64 [a0 + 0x38]\n 59732: a5 = u64 [a0 + 0x28]\n 59735: a4 = u64 [a0 + 0x30]\n 59738: t1 = u64 [a0 + 0x20]\n 59741: a0 = s1 ^ t2\n 59744: a1 = a2 ^ a5\n 59747: a2 = a5 <u a2\n 59750: a3 = u64 [sp + 0xa8]\n 59754: a3 = t1 <u a3\n 59757: a3 = a2 if a1 != 0\n 59760: u64 [sp + 0x80] = s1\n 59764: a1 = t2 <u s1\n 59767: a2 = a4 <u t0\n 59770: a2 = a1 if a0 != 0\n 59773: a1 = t0 ^ a4\n 59776: a0 = a0 | a1\n 59779: a3 = a2 if a0 != 0\n 59782: jump @2410 if a3 == 0\n      : @2381 (gas: 12)\n 59786: a0 = sp + 0x600\n 59790: u64 [a0 + 248] = 0\n 59794: u64 [a0 + 240] = 0\n 59798: u64 [a0 + 232] = 0\n 59802: u64 [a0 + 224] = 0\n 59806: a0 = sp + 0x3e0\n 59810: a1 = sp + 0x6e0\n 59814: u64 [sp + 0x60] = t2\n 59817: s1 = a4\n 59819: u64 [sp + 0x58] = a5\n 59822: u64 [sp + 0x50] = t1\n 59825: ra = 2536, jump @21\n      : @2382 [@dyn 1268] (gas: 29)\n 59832: a3 = sp + 0x300\n 59836: a0 = u64 [a3 + 0xe0]\n 59840: u64 [sp + 0x138] = a0\n 59844: a0 = u64 [a3 + 0xe8]\n 59848: u64 [sp + 0x130] = a0\n 59852: a0 = u64 [a3 + 0xf0]\n 59856: u64 [sp + 0x128] = a0\n 59860: a0 = u64 [a3 + 0xf8]\n 59864: u64 [sp + 0x120] = a0\n 59868: a0 = u64 [sp + 0x60]\n 59871: u64 [a3 + 0x98] = a0\n 59875: u64 [sp + 0x40] = s1\n 59878: u64 [a3 + 0x90] = s1\n 59882: a0 = u64 [sp + 0x58]\n 59885: u64 [a3 + 0x88] = a0\n 59889: a0 = u64 [sp + 0x50]\n 59892: u64 [a3 + 0x80] = a0\n 59896: a0 = u64 [sp + 0x80]\n 59900: u64 [a3 + 0xb8] = a0\n 59904: a0 = u64 [sp + 0xb8]\n 59908: u64 [a3 + 0xb0] = a0\n 59912: a0 = u64 [sp + 0xb0]\n 59916: u64 [a3 + 0xa8] = a0\n 59920: a0 = sp + 0x3c0\n 59924: a1 = sp + 0x3a0\n 59928: a2 = sp + 0x380\n 59932: s1 = u64 [sp + 0xa8]\n 59936: u64 [a3 + 0xa0] = s1\n 59940: ra = 2538, jump @2218\n      : @2383 [@dyn 1269] (gas: 21)\n 59946: a4 = sp + 0x300\n 59950: a0 = u64 [a4 + 0xc0]\n 59954: a1 = u64 [a4 + 0xc8]\n 59958: a2 = u64 [a4 + 0xd0]\n 59962: a3 = u64 [a4 + 0xd8]\n 59966: u64 [a4 + 0x38] = a3\n 59969: u64 [a4 + 0x30] = a2\n 59972: u64 [a4 + 0x28] = a1\n 59975: u64 [a4 + 0x20] = a0\n 59978: a0 = u64 [sp + 0x120]\n 59982: u64 [a4 + 0x58] = a0\n 59985: a0 = u64 [sp + 0x128]\n 59989: u64 [a4 + 0x50] = a0\n 59992: a0 = u64 [sp + 0x130]\n 59996: u64 [a4 + 0x48] = a0\n 59999: a0 = sp + 0x360\n 60003: a1 = sp + 0x340\n 60007: a2 = sp + 0x320\n 60011: a3 = u64 [sp + 0x138]\n 60015: u64 [a4 + 0x40] = a3\n 60018: ra = 2540, jump @2197\n      : @2384 [@dyn 1270] (gas: 27)\n 60024: a2 = u64 [sp + 0xb8]\n 60028: a3 = 0x5\n 60031: a0 = s1 mulhu a3\n 60034: a4 = u64 [sp + 0xb0]\n 60038: a1 = a4 << 0x2\n 60041: a1 = a1 + a4\n 60044: ra = a1 + a0\n 60047: a0 = ra <u a1\n 60050: a1 = a4 mulhu a3\n 60053: a0 = a0 + a1\n 60056: a1 = a2 << 0x2\n 60059: a1 = a1 + a2\n 60062: t1 = a0 + a1\n 60065: a0 = t1 <u a0\n 60068: a1 = a2 mulhu a3\n 60071: a4 = u64 [sp + 0x80]\n 60075: a2 = a4 << 0x2\n 60078: a2 = a2 + a4\n 60081: a2 = a2 + a1\n 60084: t2 = a2 + a0\n 60087: a0 = 0 if t2 != 0\n 60089: a1 = a2 <u a1\n 60092: a2 = a4 mulhu a3\n 60095: a2 = a2 >u 0\n 60097: a1 = a1 | a2\n 60100: a0 = a0 | a1\n 60103: jump @2435 if a0 != 0\n      : @2385 (gas: 62)\n 60107: a0 = u64 [sp + 0x378]\n 60111: u64 [sp + 0x30] = a0\n 60114: a0 = u64 [sp + 0x370]\n 60118: u64 [sp + 0x38] = a0\n 60121: a0 = s1 << 0x2\n 60124: a1 = a0 + s1\n 60127: u64 [sp + 0x78] = a1\n 60130: a0 = clz t1\n 60132: a0 = a0 + 0x40\n 60135: a3 = clz t2\n 60137: a3 = a0 if t2 == 0\n 60140: a0 = clz a1\n 60142: a0 = a0 + 0x40\n 60145: a1 = clz ra\n 60147: a1 = a0 if ra == 0\n 60150: a0 = a1 + 0x80\n 60154: a2 = t1 | t2\n 60157: a3 = a0 if a2 == 0\n 60160: a5 = a0 <u a1\n 60163: a5 = 0 if a2 != 0\n 60165: a4 = a5 >u 0\n 60167: a0 = a3 <u 0xfe\n 60171: a2 = a0 ^ 0x1\n 60174: a4 = a2 if a5 == 0\n 60177: a0 = a4 <u 0x1\n 60180: a0 = a0 + 0xffffffffffffffff\n 60183: a1 = -a4\n 60185: a5 = -a5\n 60187: a2 = a5 - a2\n 60190: s1 = 0xfd - a3\n 60194: u64 [sp + 0x128] = a1\n 60198: a3 = a1 >u 0\n 60200: a5 = a0 >u 0\n 60202: u64 [sp + 0x120] = a0\n 60206: a5 = a3 if a0 == 0\n 60209: a3 = a2 >u 0\n 60211: u64 [sp + 0x130] = s1\n 60215: s1 = s1 <u 0x100\n 60219: s1 = s1 ^ 0x1\n 60222: s1 = a3 if a2 != 0\n 60225: a0 = u64 [sp + 0x368]\n 60229: u64 [sp + 0x20] = a0\n 60232: s1 = a5 if a4 != 0\n 60235: t0 = u64 [sp + 0x78]\n 60238: a3 = t0 | t1\n 60241: a4 = ra | t2\n 60244: a3 = a3 | a4\n 60247: a0 = u64 [sp + 0x360]\n 60251: u64 [sp + 0x28] = a0\n 60254: a3 = a3 <u 0x1\n 60257: a3 = a3 | s1\n 60260: u64 [sp + 0x68] = t2\n 60263: a1 = t2\n 60265: a1 = 0 if a3 != 0\n 60267: u64 [sp + 0x70] = t1\n 60270: a5 = t1\n 60272: a5 = 0 if a3 != 0\n 60274: a4 = ra\n 60276: a4 = 0 if a3 != 0\n 60278: s1 = t0\n 60280: s1 = 0 if a3 != 0\n 60282: jump @2402 if a3 != 0\n      : @2386 (gas: 9)\n 60286: a0 = u64 [sp + 0x130]\n 60290: a3 = a0 ^ 0xff\n 60294: t2 = u64 [sp + 0x128]\n 60298: a3 = a3 | t2\n 60301: t1 = u64 [sp + 0x120]\n 60305: a0 = a2 | t1\n 60308: a0 = a0 | a3\n 60311: a3 = u64 [sp + 0xb8]\n 60315: jump @2405 if a0 == 0\n      : @2387 (gas: 20)\n 60319: a3 = u64 [sp + 0x130]\n 60323: a1 = a3 + 0x1\n 60326: u64 [sp + 0x138] = a1\n 60330: a0 = a1 <u 0x1\n 60333: a0 = a0 + a2\n 60336: u64 [sp + 0x110] = a0\n 60340: a0 = a0 | a1\n 60343: a0 = a0 <u 0x1\n 60346: a0 = a0 + t2\n 60349: u64 [sp + 0x100] = a0\n 60353: a0 = a0 <u t2\n 60356: a0 = a0 + t1\n 60359: u64 [sp + 0x108] = a0\n 60363: a1 = 0xff - a3\n 60367: u64 [sp + 0x118] = a1\n 60371: a2 = 0x80 - a1\n 60375: a0 = t0\n 60377: a1 = ra\n 60379: u64 [sp + 0x48] = ra\n 60382: ra = 2542, jump @2677\n      : @2388 [@dyn 1271] (gas: 7)\n 60388: u64 [sp + 0x128] = a0\n 60392: u64 [sp + 0x120] = a1\n 60396: a0 = u64 [sp + 0x70]\n 60399: s1 = u64 [sp + 0x68]\n 60402: a1 = s1\n 60404: a2 = u64 [sp + 0x118]\n 60408: ra = 2544, jump @2682\n      : @2389 [@dyn 1272] (gas: 9)\n 60414: u64 [sp + 0xf8] = a0\n 60418: a0 = u64 [sp + 0x120]\n 60422: a0 = a0 | a1\n 60425: u64 [sp + 0x120] = a0\n 60429: a1 = u64 [sp + 0x130]\n 60433: a2 = 0x7f - a1\n 60436: a0 = u64 [sp + 0x78]\n 60439: a1 = u64 [sp + 0x48]\n 60442: ra = 2546, jump @2682\n      : @2390 [@dyn 1273] (gas: 17)\n 60448: a2 = u64 [sp + 0x118]\n 60452: a3 = a2 <u 0x80\n 60456: a4 = u64 [sp + 0x120]\n 60460: a1 = a4 if a3 != 0\n 60463: a1 = s1 if a2 == 0\n 60466: u64 [sp + 0x120] = a1\n 60470: a1 = u64 [sp + 0x128]\n 60474: a4 = u64 [sp + 0xf8]\n 60478: a1 = a1 | a4\n 60481: a1 = a0 if a3 == 0\n 60484: s1 = a3\n 60486: a0 = u64 [sp + 0x70]\n 60489: a1 = a0 if a2 == 0\n 60492: u64 [sp + 0x128] = a1\n 60496: a0 = u64 [sp + 0x78]\n 60499: a1 = u64 [sp + 0x48]\n 60502: ra = 2548, jump @2682\n      : @2391 [@dyn 1274] (gas: 12)\n 60508: a2 = u64 [sp + 0x100]\n 60512: a3 = u64 [sp + 0x108]\n 60516: a5 = u64 [sp + 0x110]\n 60520: a5 = a5 | a3\n 60523: a4 = u64 [sp + 0x138]\n 60527: a4 = a4 | a2\n 60530: a4 = a4 | a5\n 60533: a1 = 0 if s1 == 0\n 60535: u64 [sp + 0x118] = a1\n 60539: a0 = 0 if s1 == 0\n 60541: u64 [sp + 0x130] = a0\n 60545: jump @2403 if a4 == 0\n      : @2392 (gas: 5)\n 60549: s1 = u64 [sp + 0x138]\n 60553: a2 = s1 + 0xffffffffffffff80\n 60556: a0 = u64 [sp + 0x70]\n 60559: a1 = u64 [sp + 0x68]\n 60562: ra = 2550, jump @2677\n      : @2393 [@dyn 1275] (gas: 6)\n 60568: u64 [sp + 0xf0] = a0\n 60572: u64 [sp + 0xf8] = a1\n 60576: a0 = u64 [sp + 0x78]\n 60579: a1 = u64 [sp + 0x48]\n 60582: a2 = s1\n 60584: ra = 2552, jump @2677\n      : @2394 [@dyn 1276] (gas: 6)\n 60590: u64 [sp + 0xe0] = a0\n 60594: u64 [sp + 0xe8] = a1\n 60598: a2 = 0x80 - s1\n 60602: a0 = u64 [sp + 0x70]\n 60605: a1 = u64 [sp + 0x68]\n 60608: ra = 2554, jump @2682\n      : @2395 [@dyn 1277] (gas: 19)\n 60614: a4 = u64 [sp + 0xe8]\n 60618: a4 = a4 | a1\n 60621: a2 = s1\n 60623: a3 = s1 <u 0x80\n 60627: u64 [sp + 0xe8] = a3\n 60631: a1 = u64 [sp + 0xf8]\n 60635: a4 = a1 if a3 == 0\n 60638: a1 = u64 [sp + 0x48]\n 60641: a4 = a1 if s1 == 0\n 60644: u64 [sp + 0xf8] = a4\n 60648: s1 = u64 [sp + 0xe0]\n 60652: s1 = s1 | a0\n 60655: a0 = u64 [sp + 0xf0]\n 60659: s1 = a0 if a3 == 0\n 60662: a0 = u64 [sp + 0x78]\n 60665: s1 = a0 if a2 == 0\n 60668: a0 = u64 [sp + 0x70]\n 60671: a1 = u64 [sp + 0x68]\n 60674: ra = 2556, jump @2677\n      : @2396 [@dyn 1278] (gas: 9)\n 60680: t1 = s1\n 60682: t0 = u64 [sp + 0xf8]\n 60686: a5 = 0\n 60688: a2 = u64 [sp + 0xe8]\n 60692: a1 = 0 if a2 == 0\n 60694: a0 = 0 if a2 == 0\n 60696: u64 [sp + 216] = 0x4\n 60701: u64 [sp + 208] = 0\n 60705: fallthrough\n      : @2397 (gas: 84)\n 60706: u64 [sp + 0xf8] = t0\n 60710: u64 [sp + 0xe8] = a5\n 60714: u64 [sp + 224] = 0\n 60718: a2 = t1 >> 0x3f\n 60721: a3 = t0 << 0x1\n 60724: a3 = a3 | a2\n 60727: s1 = t1 << 0x1\n 60730: t1 = u64 [sp + 0x120]\n 60734: a4 = t1 >> 0x3f\n 60737: a4 = a4 | s1\n 60740: u64 [sp + 0xf0] = a4\n 60744: ra = u64 [sp + 0xd0]\n 60748: t2 = ra ^ a3\n 60751: s1 = a1\n 60753: a1 = ra <u a3\n 60756: a5 = u64 [sp + 0xd8]\n 60760: t0 = a5 <u a4\n 60763: t0 = a1 if t2 != 0\n 60766: a1 = s1 << 0x1\n 60769: a4 = a0 >> 0x3f\n 60772: t2 = a1 | a4\n 60775: a4 = u64 [sp + 0xf8]\n 60779: a4 = a4 >> 0x3f\n 60782: a0 = a0 << 0x1\n 60785: a4 = a4 | a0\n 60788: a0 = t1 << 0x1\n 60791: a1 = u64 [sp + 0x128]\n 60795: s1 = a1 >> 0x3f\n 60798: t1 = a0 | s1\n 60801: s1 = a1 << 0x1\n 60804: a1 = u64 [sp + 0x118]\n 60808: a5 = a1 >> 0x3f\n 60811: a5 = a5 | s1\n 60814: a0 = a1 << 0x1\n 60817: s1 = u64 [sp + 0x130]\n 60821: a1 = s1 >> 0x3f\n 60824: a1 = a1 | a0\n 60827: s1 = s1 << 0x1\n 60830: a0 = u64 [sp + 0xe8]\n 60834: s1 = s1 | a0\n 60837: u64 [sp + 0x130] = s1\n 60841: a1 = a1 | 0\n 60843: u64 [sp + 0x118] = a1\n 60847: a0 = a5 | 0\n 60849: u64 [sp + 0x128] = a0\n 60853: a0 = t1 | 0\n 60855: u64 [sp + 0x120] = a0\n 60859: a0 = ra - a4\n 60862: a0 = a0 <u t0\n 60865: a1 = ra <u a4\n 60868: a5 = ra - t2\n 60871: a5 = a5 - a1\n 60874: a5 = a5 - a0\n 60877: a5 = a5 >>a 0x3f\n 60880: a0 = a5 & 0x5\n 60883: ra = u64 [sp + 0x138]\n 60887: a1 = u64 [sp + 0xf0]\n 60891: t1 = a1 - a0\n 60894: a1 = a1 <u a0\n 60897: t0 = a3 - a1\n 60900: a1 = 0 if a3 != 0\n 60902: a0 = a4 - a1\n 60905: a1 = a4 <u a1\n 60908: a1 = t2 - a1\n 60911: s1 = u64 [sp + 0x110]\n 60915: a2 = ra | s1\n 60918: a2 = a2 <u 0x1\n 60921: a4 = u64 [sp + 0x100]\n 60925: a3 = a4 <u a2\n 60928: a2 = a4 - a2\n 60931: a4 = ra <u 0x1\n 60934: s1 = s1 - a4\n 60937: a4 = u64 [sp + 0x108]\n 60941: a4 = a4 - a3\n 60944: ra = ra + 0xffffffffffffffff\n 60947: u64 [sp + 0x110] = s1\n 60951: u64 [sp + 0x108] = a4\n 60955: a3 = s1 | a4\n 60958: u64 [sp + 0x138] = ra\n 60962: a4 = ra | a2\n 60965: a3 = a3 | a4\n 60968: a5 = a5 & 0x1\n 60971: u64 [sp + 0x100] = a2\n 60975: jump @2397 if a3 != 0\n      : @2398 (gas: 1)\n 60979: jump @2404\n      : @2399 (gas: 4)\n 60981: a0 = a2 | a5\n 60984: a1 = a3 | a4\n 60987: a0 = a0 | a1\n 60990: jump @2410 if a0 == 0\n      : @2400 (gas: 12)\n 60994: a1 = sp + 0x600\n 60998: u64 [a1 + 184] = 0\n 61002: u64 [a1 + 176] = 0\n 61006: u64 [a1 + 168] = 0\n 61010: u64 [a1 + 160] = 0xb\n 61015: u64 [a1 + 216] = 0\n 61019: u64 [a1 + 208] = 0\n 61023: u64 [a1 + 200] = 0\n 61027: u64 [a1 + 192] = 0\n 61031: a0 = sp + 0x6a0\n 61035: a1 = sp + 0x6c0\n 61039: ra = 2558, jump @23\n      : @2401 [@dyn 1279] (gas: 1)\n 61046: jump @2410\n      : @2402 (gas: 2)\n 61049: a3 = u64 [sp + 0xb8]\n 61053: jump @2405\n      : @2403 (gas: 3)\n 61055: a5 = 0\n 61057: u64 [sp + 224] = 0\n 61061: fallthrough\n      : @2404 (gas: 23)\n 61062: a2 = u64 [sp + 0x128]\n 61066: a0 = a2 >> 0x3f\n 61069: a1 = u64 [sp + 0x120]\n 61073: a1 = a1 << 0x1\n 61076: t0 = a1 | a0\n 61079: a3 = u64 [sp + 0x118]\n 61083: a1 = a3 >> 0x3f\n 61086: a2 = a2 << 0x1\n 61089: a0 = a2 | a1\n 61092: a4 = u64 [sp + 0x130]\n 61096: a2 = a4 >> 0x3f\n 61099: a3 = a3 << 0x1\n 61102: a4 = a4 << 0x1\n 61105: s1 = a5 | a4\n 61108: a1 = u64 [sp + 0xe0]\n 61112: a4 = a1 | a2\n 61115: a4 = a4 | a3\n 61118: a5 = a1 | a0\n 61121: a1 = a1 | t0\n 61124: a3 = u64 [sp + 0xb8]\n 61128: ra = u64 [sp + 0x48]\n 61131: t0 = u64 [sp + 0x78]\n 61134: fallthrough\n      : @2405 (gas: 11)\n 61135: a0 = u64 [sp + 0xa8]\n 61139: a0 = a0 ^ s1\n 61142: a2 = a5 ^ a3\n 61145: a3 = u64 [sp + 0xb0]\n 61149: a3 = a3 ^ a4\n 61152: a4 = u64 [sp + 0x80]\n 61156: a1 = a1 ^ a4\n 61159: a1 = a1 | a3\n 61162: a1 = a1 | a2\n 61165: a0 = a0 | a1\n 61168: jump @2422 if a0 != 0\n      : @2406 (gas: 19)\n 61172: a0 = u64 [sp + 0x50]\n 61175: a4 = sp + 0x200\n 61179: u64 [a4 + 0x20] = a0\n 61182: u64 [a4 + 0x40] = t0\n 61185: a0 = u64 [sp + 0x58]\n 61188: u64 [a4 + 0x28] = a0\n 61191: u64 [a4 + 0x48] = ra\n 61194: a0 = u64 [sp + 0x40]\n 61197: u64 [a4 + 0x30] = a0\n 61200: a0 = u64 [sp + 0x70]\n 61203: u64 [a4 + 0x50] = a0\n 61206: a0 = u64 [sp + 0x60]\n 61209: u64 [a4 + 0x38] = a0\n 61212: a0 = sp + 0x260\n 61216: a1 = sp + 0x240\n 61220: a2 = sp + 0x220\n 61224: a3 = u64 [sp + 0x68]\n 61227: u64 [a4 + 0x58] = a3\n 61230: ra = 2560, jump @2529\n      : @2407 [@dyn 1280] (gas: 21)\n 61236: a4 = sp + 0x200\n 61240: a0 = u64 [a4 + 0x60]\n 61243: a1 = u64 [a4 + 0x68]\n 61246: a2 = u64 [a4 + 0x70]\n 61249: a3 = u64 [a4 + 0x78]\n 61252: u64 [sp + 0x1d8] = a3\n 61256: u64 [sp + 0x1d0] = a2\n 61260: u64 [sp + 0x1c8] = a1\n 61264: u64 [sp + 0x1c0] = a0\n 61268: a0 = u64 [sp + 0x30]\n 61271: u64 [sp + 0x1f8] = a0\n 61275: a0 = u64 [sp + 0x38]\n 61278: u64 [sp + 0x1f0] = a0\n 61282: a0 = u64 [sp + 0x20]\n 61285: u64 [sp + 0x1e8] = a0\n 61289: a0 = sp + 0x200\n 61293: a1 = sp + 0x1e0\n 61297: a2 = sp + 0x1c0\n 61301: a3 = u64 [sp + 0x28]\n 61304: u64 [sp + 0x1e0] = a3\n 61308: ra = 2562, jump @1990\n      : @2408 [@dyn 1281] (gas: 9)\n 61314: a4 = sp + 0x200\n 61318: a0 = u64 [a4 + 0x18]\n 61321: a1 = u64 [a4 + 0x10]\n 61324: a2 = u64 [a4 + 0x8]\n 61327: a3 = u64 [a4]\n 61329: a4 = a2 | a0\n 61332: a5 = a3 | a1\n 61335: a4 = a4 | a5\n 61338: jump @2410 if a4 == 0\n      : @2409 (gas: 15)\n 61341: u64 [sp + 0x180] = a3\n 61345: a3 = u64 [sp + 0x88]\n 61349: u64 [sp + 0x1a0] = a3\n 61353: u64 [sp + 0x188] = a2\n 61357: a2 = u64 [sp + 0x90]\n 61361: u64 [sp + 0x1a8] = a2\n 61365: u64 [sp + 0x190] = a1\n 61369: a1 = u64 [sp + 0x98]\n 61373: u64 [sp + 0x1b0] = a1\n 61377: u64 [sp + 0x198] = a0\n 61381: a0 = sp + 0x1a0\n 61385: a1 = sp + 0x180\n 61389: a2 = u64 [sp + 0xa0]\n 61393: u64 [sp + 0x1b8] = a2\n 61397: ra = 2564, jump @2452\n      : @2410 [@dyn 1282] (gas: 15)\n 61403: a0 = u64 [sp + 0xc0]\n 61407: a0 = a0 >u 0\n 61409: a1 = u64 [sp + 0xc8]\n 61413: a2 = 0\n 61415: u64 [a1 + 24] = 0\n 61418: u64 [a1 + 16] = 0\n 61421: u64 [a1 + 8] = 0\n 61424: u64 [a1] = a0\n 61426: sp = s0 + 0xfffffffffffff8e0\n 61430: a0 = sp + 0x700\n 61434: ra = u64 [a0 + 0x18]\n 61437: s0 = u64 [a0 + 0x10]\n 61440: s1 = u64 [a0 + 0x8]\n 61443: sp = sp + 0x720\n 61447: ret\n      : @2411 (gas: 3)\n 61449: a0 = sp + 0x560\n 61453: a1 = 0x40\n 61456: ra = 2566, jump @17\n      : @2412 [@dyn 1283] (gas: 10)\n 61463: a1 = sp + 0x500\n 61467: a0 = u64 [a1 + 0x78]\n 61470: u64 [sp + 0x138] = a0\n 61474: a0 = u64 [a1 + 0x70]\n 61477: u64 [sp + 0x130] = a0\n 61481: a0 = u64 [a1 + 0x68]\n 61484: u64 [sp + 0x128] = a0\n 61488: s1 = u64 [a1 + 0x60]\n 61491: ecalli 14 // 'return_data_size'\n 61493: fallthrough\n      : @2413 (gas: 12)\n 61494: a1 = u64 [sp + 0x138]\n 61498: a2 = u64 [sp + 0x128]\n 61502: a1 = a1 | a2\n 61505: u64 [sp + 0x138] = s1\n 61509: a3 = u64 [sp + 0x130]\n 61513: a2 = s1 | a3\n 61516: a2 = a2 | a1\n 61519: a2 = a2 >> 0x20\n 61522: a1 = a1 | a3\n 61525: a1 = a1 << 0x20\n 61528: a1 = a1 | a2\n 61531: jump @2432 if a1 != 0\n      : @2414 (gas: 3)\n 61535: s1 = a0\n 61537: a0 = a0 >> 0x20\n 61540: jump @2432 if a0 != 0\n      : @2415 (gas: 5)\n 61544: i32 a0 = s1 + 0\n 61546: u64 [sp + 0x130] = a0\n 61550: a0 = u64 [sp + 0x138]\n 61554: a1 = s1\n 61556: ra = 2568, jump @32\n      : @2416 [@dyn 1284] (gas: 6)\n 61563: u32 [sp + 0x660] = s1\n 61567: i32 a0 = a0 + 0\n 61569: i32 a1 = sp + 0x660\n 61573: a2 = 0\n 61575: ecalli 13 // 'return_data_copy'\n 61577: fallthrough\n      : @2417 (gas: 3)\n 61578: a0 = i32 [sp + 0x660]\n 61582: a1 = u64 [sp + 0x130]\n 61586: jump @2432 if a0 <u a1\n      : @2418 (gas: 2)\n 61590: ecalli 14 // 'return_data_size'\n 61592: fallthrough\n      : @2419 (gas: 3)\n 61593: s1 = a0\n 61595: a0 = a0 >> 0x20\n 61598: jump @2432 if a0 != 0\n      : @2420 (gas: 3)\n 61602: a0 = u64 [sp + 0x138]\n 61606: a1 = s1\n 61608: ra = 2570, jump @32\n      : @2421 [@dyn 1285] (gas: 5)\n 61615: i32 a1 = a0 + 0\n 61617: i32 a2 = s1 + 0\n 61619: a0 = 0x1\n 61622: ecalli 15 // 'seal_return'\n 61624: jump @2434\n      : @2422 (gas: 3)\n 61627: a0 = sp + 0x300\n 61631: a1 = 0x40\n 61634: ra = 2572, jump @17\n      : @2423 [@dyn 1286] (gas: 10)\n 61641: a3 = sp + 0x300\n 61645: a2 = u64 [a3 + 0x18]\n 61648: s1 = u64 [a3 + 0x10]\n 61651: a0 = u64 [a3 + 0x8]\n 61654: a1 = u64 [a3]\n 61656: u64 [sp + 0x130] = a0\n 61660: u64 [sp + 0x128] = a2\n 61664: a0 = a0 | a2\n 61667: u64 [sp + 0x138] = a1\n 61671: t0 = 2574, jump @2612\n      : @2424 [@dyn 1287] (gas: 1)\n 61677: jump @2432 if a0 != 0\n      : @2425 (gas: 7)\n 61681: a2 = sp + 0x200\n 61685: u64 [a2 + 240] = 0\n 61689: u64 [a2 + 232] = 0\n 61693: u64 [a2 + 224] = 0\n 61697: t0 = 0xa10\n 61701: a0 = 0x8c379a000000000\n 61711: fallthrough\n      : @2426 [@dyn 1288] (gas: 4)\n 61712: a1 = sp + 0x2e0\n 61716: u64 [a2 + 0xf8] = a0\n 61720: a0 = u64 [sp + 0x138]\n 61724: ra = 2578, jump @19\n      : @2427 [@dyn 1289] (gas: 11)\n 61731: a2 = u64 [sp + 0x128]\n 61735: a2 = a2 | s1\n 61738: s1 = 0x100000000\n 61748: a0 = 0xfffffffc\n 61758: a1 = u64 [sp + 0x138]\n 61762: a0 = a1 <u a0\n 61765: a1 = u64 [sp + 0x130]\n 61769: a0 = 0 if a1 != 0\n 61771: u64 [sp + 0x128] = a2\n 61775: a0 = 0 if a2 != 0\n 61777: jump @2432 if a0 == 0\n      : @2428 (gas: 9)\n 61781: a0 = u64 [sp + 0x138]\n 61785: i32 a0 = a0 + 0x4\n 61788: a2 = sp + 0x200\n 61792: u64 [a2 + 216] = 0\n 61796: u64 [a2 + 208] = 0\n 61800: u64 [a2 + 192] = 0x20\n 61805: a1 = sp + 0x2c0\n 61809: u64 [a2 + 200] = 0\n 61813: ra = 2580, jump @19\n      : @2429 [@dyn 1290] (gas: 8)\n 61820: a0 = s1 + 0xffffffffffffffdc\n 61823: a1 = u64 [sp + 0x138]\n 61827: a0 = a1 <u a0\n 61830: a1 = u64 [sp + 0x130]\n 61834: a0 = 0 if a1 != 0\n 61836: a1 = u64 [sp + 0x128]\n 61840: a0 = 0 if a1 != 0\n 61842: jump @2432 if a0 == 0\n      : @2430 (gas: 9)\n 61845: s1 = u64 [sp + 0x138]\n 61849: i32 a0 = s1 + 0x24\n 61852: a2 = sp + 0x200\n 61856: u64 [a2 + 184] = 0\n 61860: u64 [a2 + 176] = 0\n 61864: u64 [a2 + 160] = 0x14\n 61869: a1 = sp + 0x2a0\n 61873: u64 [a2 + 168] = 0\n 61877: ra = 2582, jump @19\n      : @2431 [@dyn 1291] (gas: 7)\n 61884: a0 = 0xffffffbc\n 61894: a0 = s1 <u a0\n 61897: a1 = u64 [sp + 0x130]\n 61901: a0 = 0 if a1 != 0\n 61903: a1 = u64 [sp + 0x128]\n 61907: a0 = 0 if a1 != 0\n 61909: jump @2440 if a0 != 0\n      : @2432 (gas: 1)\n 61913: trap\n      : @2433 (gas: 5)\n 61914: a1 = 0x20290\n 61919: i32 a1 = a1 + 0\n 61921: a0 = 0x1\n 61924: ecalli 15 // 'seal_return'\n 61926: fallthrough\n      : @2434 (gas: 6)\n 61927: a1 = 0x20290\n 61932: i32 a1 = a1 + 0\n 61934: a0 = 0x1\n 61937: a2 = 0\n 61939: ecalli 15 // 'seal_return'\n 61941: fallthrough\n      : @2435 (gas: 8)\n 61942: u64 [sp + 368] = 0\n 61946: u64 [sp + 360] = 0\n 61950: u64 [sp + 352] = 0\n 61954: a0 = 0x4e487b7100000000\n 61964: a1 = sp + 0x160\n 61968: u64 [sp + 0x178] = a0\n 61972: a0 = 0\n 61974: ra = 2584, jump @19\n      : @2436 [@dyn 1292] (gas: 7)\n 61981: u64 [sp + 344] = 0\n 61985: u64 [sp + 336] = 0\n 61989: u64 [sp + 320] = 0x11\n 61994: a0 = 0x4\n 61997: a1 = sp + 0x140\n 62001: u64 [sp + 328] = 0\n 62005: ra = 2586, jump @19\n      : @2437 [@dyn 1293] (gas: 2)\n 62012: a1 = i32 [0x2027c]\n 62017: jump @2439 if a1 >u 63\n      : @2438 (gas: 2)\n 62021: u32 [0x2027c] = 0x40\n 62027: fallthrough\n      : @2439 (gas: 6)\n 62028: a1 = 0x20290\n 62033: i32 a1 = a1 + 0\n 62035: a0 = 0x1\n 62038: a2 = 0x24\n 62041: ecalli 15 // 'seal_return'\n 62043: fallthrough\n      : @2440 (gas: 12)\n 62044: s1 = u64 [sp + 0x138]\n 62048: i32 a0 = s1 + 0x44\n 62051: a1 = u64 [0x20238]\n 62056: a2 = u64 [0x20240]\n 62061: a3 = sp + 0x200\n 62065: u64 [a3 + 0x98] = a1\n 62069: u64 [a3 + 0x90] = a2\n 62073: a1 = 0x666c6f7700000000\n 62083: u64 [a3 + 0x88] = a1\n 62087: a1 = sp + 0x280\n 62091: u64 [a3 + 128] = 0\n 62095: ra = 2588, jump @19\n      : @2441 [@dyn 1294] (gas: 3)\n 62102: a1 = 0x64\n 62105: a0 = s1\n 62107: ra = 2590, jump @32\n      : @2442 [@dyn 1295] (gas: 1)\n 62114: t0 = 2592, jump @2626\n      : @2443 [@dyn 1296] (gas: 3)\n 62120: ra = 0xa22\n 62124: ecalli 15 // 'seal_return'\n 62126: fallthrough\n      : @2444 [@dyn 1297] (gas: 16)\n 62127: sp = sp + 0xfffffffffffffed0\n 62131: u64 [sp + 0x128] = ra\n 62135: u64 [sp + 0x120] = s0\n 62139: u64 [sp + 0x118] = s1\n 62143: s0 = sp + 0x130\n 62147: sp = sp & 0xfffffffffffffff0\n 62150: a3 = u64 [a1 + 0x18]\n 62153: a4 = u64 [a1 + 0x10]\n 62156: t2 = u64 [a1]\n 62158: a5 = u64 [a1 + 0x8]\n 62161: a1 = a4 | a3\n 62164: a2 = t2 <u 0x4\n 62167: a2 = 0 if a5 != 0\n 62169: a2 = 0 if a1 != 0\n 62171: u64 [sp + 0x8] = a0\n 62174: jump @2447 if a2 == 0\n      : @2445 (gas: 8)\n 62177: ra = 0\n 62179: a1 = 0\n 62181: s1 = 0\n 62183: a2 = t2 | a4\n 62186: a3 = a3 | a5\n 62189: a2 = a2 | a3\n 62192: t0 = a2 >u 0\n 62194: fallthrough\n      : @2446 (gas: 11)\n 62195: a0 = u64 [sp + 0x8]\n 62198: u64 [a0] = t0\n 62200: u64 [a0 + 0x8] = ra\n 62203: u64 [a0 + 0x10] = a1\n 62206: u64 [a0 + 0x18] = s1\n 62209: sp = s0 + 0xfffffffffffffed0\n 62213: ra = u64 [sp + 0x128]\n 62217: s0 = u64 [sp + 0x120]\n 62221: s1 = u64 [sp + 0x118]\n 62225: sp = sp + 0x130\n 62229: ret\n      : @2447 (gas: 31)\n 62231: a0 = a4 >> 0x1\n 62234: a1 = a3 << 0x3f\n 62237: ra = a0 | a1\n 62240: a1 = a5 >> 0x1\n 62243: a2 = a4 << 0x3f\n 62246: a1 = a1 | a2\n 62249: a2 = t2 >> 0x1\n 62252: s1 = a3\n 62254: a3 = a5 << 0x3f\n 62257: a2 = a2 | a3\n 62260: a0 = s1 >> 0x1\n 62263: u64 [sp + 0x48] = a0\n 62266: t1 = a2 + 0x1\n 62269: a3 = a5\n 62271: t0 = t1 <u 0x1\n 62274: a0 = a1 + t0\n 62277: a1 = t1 | a0\n 62280: a5 = a1 <u 0x1\n 62283: a5 = a5 + ra\n 62286: a2 = a5 <u ra\n 62289: a1 = u64 [sp + 0x48]\n 62292: a2 = a2 + a1\n 62295: u64 [sp + 0x18] = t2\n 62298: u64 [sp + 0x38] = t2\n 62301: u64 [sp + 0x10] = a3\n 62304: u64 [sp + 0x30] = a3\n 62307: u64 [sp + 0x20] = a4\n 62310: u64 [sp + 0x48] = a4\n 62313: u64 [sp + 0x28] = s1\n 62316: u64 [sp + 0x40] = s1\n 62319: fallthrough\n      : @2448 (gas: 22)\n 62320: s1 = u64 [sp + 0x40]\n 62323: a1 = u64 [sp + 0x48]\n 62326: ra = u64 [sp + 0x30]\n 62329: t0 = u64 [sp + 0x38]\n 62332: a3 = a5\n 62334: a4 = a0\n 62336: a0 = t1 <u t0\n 62339: a5 = a4 ^ ra\n 62342: t2 = a4 <u ra\n 62345: t2 = a0 if a5 == 0\n 62348: a0 = a3 <u a1\n 62351: u64 [sp + 0x48] = a0\n 62354: a0 = a2 ^ s1\n 62357: u64 [sp + 0x40] = a2\n 62360: a5 = a2 <u s1\n 62363: a2 = u64 [sp + 0x48]\n 62366: a5 = a2 if a0 == 0\n 62369: u64 [sp + 0x48] = a3\n 62372: a3 = a3 ^ a1\n 62375: a0 = a0 | a3\n 62378: a5 = t2 if a0 == 0\n 62381: jump @2446 if a5 == 0\n      : @2449 (gas: 20)\n 62385: u64 [sp + 0xb0] = t1\n 62389: a0 = u64 [sp + 0x18]\n 62392: u64 [sp + 0xd0] = a0\n 62396: u64 [sp + 0xb8] = a4\n 62400: a0 = u64 [sp + 0x10]\n 62403: u64 [sp + 0xd8] = a0\n 62407: a0 = u64 [sp + 0x48]\n 62410: u64 [sp + 0xc0] = a0\n 62414: a0 = u64 [sp + 0x20]\n 62417: u64 [sp + 0xe0] = a0\n 62421: a0 = u64 [sp + 0x40]\n 62424: u64 [sp + 0xc8] = a0\n 62428: a0 = sp + 0xf0\n 62432: a1 = sp + 0xd0\n 62436: a2 = sp + 0xb0\n 62440: a3 = u64 [sp + 0x28]\n 62443: u64 [sp + 0xe8] = a3\n 62447: u64 [sp + 0x38] = t1\n 62450: s1 = a4\n 62452: ra = 2596, jump @1990\n      : @2450 [@dyn 1298] (gas: 20)\n 62458: a3 = u64 [sp + 0xf0]\n 62462: a0 = u64 [sp + 0xf8]\n 62466: a1 = u64 [sp + 0x100]\n 62470: a2 = u64 [sp + 0x108]\n 62474: a4 = u64 [sp + 0x40]\n 62477: u64 [sp + 0x68] = a4\n 62480: a4 = u64 [sp + 0x48]\n 62483: u64 [sp + 0x60] = a4\n 62486: u64 [sp + 0x30] = s1\n 62489: u64 [sp + 0x58] = s1\n 62492: a4 = u64 [sp + 0x38]\n 62495: u64 [sp + 0x50] = a4\n 62498: u64 [sp + 0x88] = a2\n 62502: u64 [sp + 0x80] = a1\n 62506: u64 [sp + 0x78] = a0\n 62509: a0 = sp + 0x90\n 62513: a1 = sp + 0x70\n 62516: a2 = sp + 0x50\n 62519: u64 [sp + 0x70] = a3\n 62522: ra = 2598, jump @2240\n      : @2451 [@dyn 1299] (gas: 15)\n 62528: a2 = u64 [sp + 0xa8]\n 62532: a0 = u64 [sp + 0xa0]\n 62536: a1 = u64 [sp + 0x90]\n 62540: a3 = u64 [sp + 0x98]\n 62544: a4 = a2 << 0x3f\n 62547: a5 = a0 >> 0x1\n 62550: a5 = a5 | a4\n 62553: a0 = a0 << 0x3f\n 62556: a4 = a3 >> 0x1\n 62559: a0 = a0 | a4\n 62562: a3 = a3 << 0x3f\n 62565: a1 = a1 >> 0x1\n 62568: t1 = a1 | a3\n 62571: a2 = a2 >> 0x1\n 62574: jump @2448\n      : @2452 (gas: 29)\n 62577: sp = sp + 0xfffffffffffffca0\n 62581: a2 = sp + 0x300\n 62585: u64 [a2 + 0x58] = ra\n 62588: u64 [a2 + 0x50] = s0\n 62591: u64 [a2 + 0x48] = s1\n 62594: s0 = sp + 0x360\n 62598: sp = sp & 0xffffffffffffffe0\n 62601: s1 = sp\n 62603: a2 = u64 [a0]\n 62605: u64 [s1 + 0x58] = a2\n 62608: a2 = u64 [a0 + 0x8]\n 62611: u64 [s1 + 0x50] = a2\n 62614: a0 = u32 [a0 + 0x10]\n 62617: u64 [s1 + 0x48] = a0\n 62620: a0 = u64 [a1]\n 62622: u64 [s1 + 0x38] = a0\n 62625: a0 = u64 [a1 + 0x8]\n 62628: u64 [s1 + 0x30] = a0\n 62631: a0 = u64 [a1 + 0x10]\n 62634: u64 [s1 + 0x28] = a0\n 62637: a0 = u64 [a1 + 0x18]\n 62640: u64 [s1 + 0x40] = a0\n 62643: u64 [s1 + 696] = 0\n 62647: u64 [s1 + 688] = 0\n 62651: u64 [s1 + 680] = 0\n 62655: u64 [s1 + 672] = 0\n 62659: a0 = s1 + 0x260\n 62663: a1 = s1 + 0x2a0\n 62667: ra = 2600, jump @21\n      : @2453 [@dyn 1300] (gas: 12)\n 62674: a3 = u64 [s1 + 0x260]\n 62678: a0 = u64 [s1 + 0x268]\n 62682: a1 = u64 [s1 + 0x270]\n 62686: a2 = u64 [s1 + 0x278]\n 62690: a4 = u64 [s1 + 0x40]\n 62693: u64 [s1 + 0x218] = a4\n 62697: a4 = u64 [s1 + 0x28]\n 62700: u64 [s1 + 0x210] = a4\n 62704: a4 = u64 [s1 + 0x30]\n 62707: u64 [s1 + 0x208] = a4\n 62711: a4 = u64 [s1 + 0x38]\n 62714: t0 = 2602, jump @2610\n      : @2454 [@dyn 1301] (gas: 1)\n 62720: ra = 2604, jump @2240\n      : @2455 [@dyn 1302] (gas: 16)\n 62726: a4 = s1 + 0x200\n 62730: a0 = u64 [a4 + 0x40]\n 62733: a1 = u64 [a4 + 0x48]\n 62736: a2 = u64 [a4 + 0x50]\n 62739: a3 = u64 [a4 + 0x58]\n 62742: u64 [s1 + 728] = 0\n 62746: u64 [s1 + 720] = 0\n 62750: u64 [s1 + 712] = 0\n 62754: u64 [s1 + 704] = 0\n 62758: u64 [a4 + 0xf8] = a3\n 62762: u64 [a4 + 0xf0] = a2\n 62766: u64 [a4 + 0xe8] = a1\n 62770: u64 [a4 + 0xe0] = a0\n 62774: a0 = s1 + 0x2c0\n 62778: a1 = s1 + 0x2e0\n 62782: ra = 2606, jump @23\n      : @2456 [@dyn 1303] (gas: 10)\n 62789: u64 [s1 + 504] = 0\n 62793: a0 = u64 [s1 + 0x48]\n 62796: u64 [s1 + 0x1f0] = a0\n 62800: a0 = u64 [s1 + 0x50]\n 62803: u64 [s1 + 0x1e8] = a0\n 62807: a1 = s1 + 0x1e0\n 62811: a0 = u64 [s1 + 0x58]\n 62814: u64 [s1 + 0x1e0] = a0\n 62818: a0 = 0\n 62820: ra = 2608, jump @19\n      : @2457 [@dyn 1304] (gas: 7)\n 62827: u64 [s1 + 472] = 0\n 62831: u64 [s1 + 464] = 0\n 62835: u64 [s1 + 456] = 0\n 62839: a0 = 0x20\n 62842: a1 = s1 + 0x1c0\n 62846: u64 [s1 + 448] = 0x1\n 62851: ra = 2610, jump @19\n      : @2458 [@dyn 1305] (gas: 3)\n 62858: a1 = 0x2027c\n 62863: a0 = i32 [0x2027c]\n 62868: jump @2460 if a0 >u 63\n      : @2459 (gas: 2)\n 62872: u32 [0x2027c] = 0x40\n 62878: fallthrough\n      : @2460 (gas: 15)\n 62879: a0 = sp + 0xffffffffffffffe0\n 62882: a2 = a0 & 0xffffffffffffffe0\n 62885: u64 [s1 + 0x10] = a2\n 62888: sp = a2\n 62890: a0 = 0x20290\n 62895: i32 a0 = a0 + 0\n 62897: i32 a2 = a2 + 0\n 62899: u64 [s1 + 0x20] = a1\n 62902: a1 = 0x40\n 62905: u64 [s1 + 0x18] = a0\n 62908: ra = 0xa34\n 62912: ecalli 10 // 'hash_keccak_256'\n 62914: a3 = u64 [s1 + 0x10]\n 62917: t0 = 0xa36\n 62921: jump @2565\n      : @2461 [@dyn 1306] (gas: 2)\n 62924: a3 = u64 [s1 + 0x10]\n 62927: t0 = 2614, jump @2565\n      : @2462 [@dyn 1307] (gas: 7)\n 62933: u64 [a4 + 0x18] = a3\n 62936: u64 [a4 + 0x10] = a2\n 62939: u64 [a4 + 0x8] = a1\n 62942: u64 [a4] = a0\n 62944: a0 = s1 + 0x1a0\n 62948: a1 = s1 + 0x300\n 62952: ra = 2616, jump @21\n      : @2463 [@dyn 1308] (gas: 20)\n 62959: a3 = u64 [s1 + 0x1a0]\n 62963: a0 = u64 [s1 + 0x1a8]\n 62967: a1 = u64 [s1 + 0x1b0]\n 62971: a2 = u64 [s1 + 0x1b8]\n 62975: a4 = u64 [s1 + 0x40]\n 62978: u64 [s1 + 0x158] = a4\n 62982: a4 = u64 [s1 + 0x28]\n 62985: u64 [s1 + 0x150] = a4\n 62989: a4 = u64 [s1 + 0x30]\n 62992: u64 [s1 + 0x148] = a4\n 62996: a4 = u64 [s1 + 0x38]\n 62999: u64 [s1 + 0x140] = a4\n 63003: u64 [s1 + 0x178] = a2\n 63007: u64 [s1 + 0x170] = a1\n 63011: u64 [s1 + 0x168] = a0\n 63015: a0 = s1 + 0x180\n 63019: a1 = s1 + 0x160\n 63023: a2 = s1 + 0x140\n 63027: u64 [s1 + 0x160] = a3\n 63031: ra = 2618, jump @2240\n      : @2464 [@dyn 1309] (gas: 19)\n 63037: a0 = u64 [s1 + 0x198]\n 63041: a1 = u64 [s1 + 0x190]\n 63045: a2 = u64 [s1 + 0x188]\n 63049: a3 = u64 [s1 + 0x180]\n 63053: a4 = s1 + 0x200\n 63057: u64 [a4 + 0x98] = a0\n 63061: u64 [a4 + 0x90] = a1\n 63065: u64 [a4 + 0x88] = a2\n 63069: u64 [a4 + 0x80] = a3\n 63073: u64 [s1 + 312] = 0\n 63077: a0 = u64 [s1 + 0x48]\n 63080: u64 [s1 + 0x130] = a0\n 63084: a0 = u64 [s1 + 0x50]\n 63087: u64 [s1 + 0x128] = a0\n 63091: a1 = s1 + 0x120\n 63095: a0 = u64 [s1 + 0x58]\n 63098: u64 [s1 + 0x120] = a0\n 63102: a0 = 0\n 63104: ra = 2620, jump @19\n      : @2465 [@dyn 1310] (gas: 7)\n 63111: u64 [s1 + 280] = 0\n 63115: u64 [s1 + 272] = 0\n 63119: u64 [s1 + 256] = 0x1\n 63124: a0 = 0x20\n 63127: a1 = s1 + 0x100\n 63131: u64 [s1 + 264] = 0\n 63135: ra = 2622, jump @19\n      : @2466 [@dyn 1311] (gas: 3)\n 63142: a1 = u64 [s1 + 0x20]\n 63145: a0 = i32 [a1]\n 63147: jump @2468 if a0 >u 63\n      : @2467 (gas: 2)\n 63151: u32 [a1 + 0] = 0x40\n 63154: fallthrough\n      : @2468 (gas: 12)\n 63155: a0 = sp + 0xffffffffffffffe0\n 63158: a0 = a0 & 0xffffffffffffffe0\n 63161: u64 [s1 + 0x20] = a0\n 63164: sp = a0\n 63166: i32 a2 = a0 + 0\n 63168: a1 = 0x40\n 63171: a0 = u64 [s1 + 0x18]\n 63174: ra = 0xa40\n 63178: ecalli 10 // 'hash_keccak_256'\n 63180: a3 = u64 [s1 + 0x20]\n 63183: t0 = 0xa42\n 63187: jump @2565\n      : @2469 [@dyn 1312] (gas: 2)\n 63190: a3 = u64 [s1 + 0x20]\n 63193: t0 = 2626, jump @2565\n      : @2470 [@dyn 1313] (gas: 7)\n 63199: u64 [a4 + 0x38] = a3\n 63202: u64 [a4 + 0x30] = a2\n 63205: u64 [a4 + 0x28] = a1\n 63208: u64 [a4 + 0x20] = a0\n 63211: a0 = s1 + 0x320\n 63215: a1 = s1 + 0x280\n 63219: ra = 2628, jump @23\n      : @2471 [@dyn 1314] (gas: 3)\n 63226: a0 = s1 + 0xe0\n 63230: a1 = 0x40\n 63233: ra = 2630, jump @17\n      : @2472 [@dyn 1315] (gas: 5)\n 63240: a0 = u64 [s1 + 0xf8]\n 63244: a1 = u64 [s1 + 0xf0]\n 63248: a2 = u64 [s1 + 0xe8]\n 63252: a3 = u64 [s1 + 0xe0]\n 63256: t0 = 2632, jump @2597\n      : @2473 [@dyn 1316] (gas: 1)\n 63262: jump @2477 if a0 != 0\n      : @2474 (gas: 12)\n 63266: a0 = u64 [s1 + 0x38]\n 63269: u64 [s1 + 0xc0] = a0\n 63273: a0 = u64 [s1 + 0x30]\n 63276: u64 [s1 + 0xc8] = a0\n 63280: a0 = u64 [s1 + 0x28]\n 63283: u64 [s1 + 0xd0] = a0\n 63287: a1 = s1 + 0xc0\n 63291: a0 = u64 [s1 + 0x40]\n 63294: u64 [s1 + 0xd8] = a0\n 63298: a0 = a3\n 63300: u64 [s1 + 0x40] = a3\n 63303: ra = 2634, jump @19\n      : @2475 [@dyn 1317] (gas: 25)\n 63310: u64 [s1 + 120] = 0\n 63313: a0 = u64 [s1 + 0x48]\n 63316: u64 [s1 + 0x70] = a0\n 63319: a0 = u64 [s1 + 0x50]\n 63322: u64 [s1 + 0x68] = a0\n 63325: a0 = u64 [s1 + 0x58]\n 63328: u64 [s1 + 0x60] = a0\n 63331: u64 [s1 + 152] = 0\n 63335: u64 [s1 + 144] = 0\n 63339: u64 [s1 + 136] = 0\n 63343: a0 = u64 [0x20248]\n 63348: a1 = u64 [0x20250]\n 63353: a2 = u64 [0x20258]\n 63358: u64 [s1 + 128] = 0\n 63362: u64 [s1 + 0xb8] = a0\n 63366: u64 [s1 + 0xb0] = a1\n 63370: u64 [s1 + 0xa8] = a2\n 63374: a0 = u64 [0x20260]\n 63379: a1 = 0x20\n 63382: a2 = s1 + 0xa0\n 63386: a3 = s1 + 0x80\n 63390: a4 = s1 + 0x60\n 63393: u64 [s1 + 0xa0] = a0\n 63397: a0 = u64 [s1 + 0x40]\n 63400: ra = 2636, jump @29\n      : @2476 [@dyn 1318] (gas: 7)\n 63407: sp = s0 + 0xfffffffffffffca0\n 63411: a0 = sp + 0x300\n 63415: ra = u64 [a0 + 0x58]\n 63418: s0 = u64 [a0 + 0x50]\n 63421: s1 = u64 [a0 + 0x48]\n 63424: sp = sp + 0x360\n 63428: ret\n      : @2477 (gas: 1)\n 63430: trap\n      : @2478 (gas: 17)\n 63431: sp = sp + 0xffffffffffffff00\n 63435: u64 [sp + 0xf8] = ra\n 63439: u64 [sp + 0xf0] = s0\n 63443: u64 [sp + 0xe8] = s1\n 63447: s0 = sp + 0x100\n 63451: sp = sp & 0xfffffffffffffff0\n 63454: a2 = u64 [a1 + 0x8]\n 63457: a4 = u64 [a1]\n 63459: a3 = a2 << 0x10\n 63462: a5 = a3 >> 0x10\n 63465: a2 = a2 << 0x30\n 63468: a1 = a4 >> 0x10\n 63471: t1 = a1 | a2\n 63474: t0 = a4 << 0x30\n 63477: a1 = a4 | a5\n 63480: a3 = a3 >> 0x20\n 63483: jump @2497 if a1 == 0\n      : @2479 (gas: 62)\n 63487: u64 [sp] = a0\n 63489: u64 [sp + 152] = 0\n 63493: u64 [sp + 0x58] = a1\n 63496: a1 = a1 <u 0x1\n 63499: a2 = t0 | a3\n 63502: a2 = t1 | a2\n 63505: a0 = a3\n 63507: a3 = a2 <u 0x1\n 63510: u64 [sp + 0x18] = t1\n 63513: t1 = a1 | a3\n 63516: u64 [sp + 0x48] = a4\n 63519: a1 = clz a4\n 63521: a1 = a1 + 0x40\n 63524: a2 = clz a5\n 63526: u64 [sp + 0x40] = a5\n 63529: a2 = a1 if a5 == 0\n 63532: a4 = a2 + 0x80\n 63536: a5 = a4 <u a2\n 63539: a1 = u64 [sp + 0x18]\n 63542: a1 = clz a1\n 63544: a1 = a1 + 0x40\n 63547: s1 = clz a0\n 63549: s1 = a1 if a0 == 0\n 63552: a1 = clz t0\n 63554: a2 = 0x80\n 63558: a2 = a1 if t0 != 0\n 63561: a1 = a2 + 0x80\n 63565: a3 = u64 [sp + 0x18]\n 63568: t2 = a3 | a0\n 63571: s1 = a1 if t2 == 0\n 63574: a3 = a1 <u a2\n 63577: a3 = 0 if t2 != 0\n 63579: t2 = a5 ^ a3\n 63582: a2 = a5 <u a3\n 63585: a1 = a4 <u s1\n 63588: a2 = a1 if t2 == 0\n 63591: ra = a2 <u 0x1\n 63594: ra = ra + 0xffffffffffffffff\n 63597: t2 = -a2\n 63599: a5 = a5 - a3\n 63602: a5 = a5 - a1\n 63605: a4 = a4 - s1\n 63608: a1 = t2 >u 0\n 63610: a3 = ra >u 0\n 63612: a3 = a1 if ra == 0\n 63615: a1 = a5 >u 0\n 63617: u64 [sp + 0x90] = a4\n 63621: a4 = a4 <u 0x100\n 63625: a4 = a4 ^ 0x1\n 63628: a4 = a1 if a5 != 0\n 63631: a4 = a3 if a2 != 0\n 63634: a1 = t1 | a4\n 63637: t1 = u64 [sp + 0x18]\n 63640: u64 [sp + 0x8] = a0\n 63643: a3 = a0\n 63645: a3 = 0 if a1 != 0\n 63647: s1 = t1\n 63649: s1 = 0 if a1 != 0\n 63651: u64 [sp + 0x10] = t0\n 63654: a4 = t0\n 63656: a4 = 0 if a1 != 0\n 63658: jump @2493 if a1 != 0\n      : @2480 (gas: 7)\n 63662: a0 = u64 [sp + 0x90]\n 63666: a1 = a0 ^ 0xff\n 63670: a1 = a1 | t2\n 63673: a2 = a5 | ra\n 63676: a1 = a1 | a2\n 63679: a0 = u64 [sp + 0x98]\n 63683: jump @2496 if a1 == 0\n      : @2481 (gas: 21)\n 63687: a1 = u64 [sp + 0x90]\n 63691: a0 = a1 + 0x1\n 63694: a2 = a1\n 63696: u64 [sp + 0x98] = a0\n 63700: a1 = a0 <u 0x1\n 63703: a1 = a1 + a5\n 63706: u64 [sp + 0x78] = a1\n 63709: a1 = a1 | a0\n 63712: a1 = a1 <u 0x1\n 63715: a1 = a1 + t2\n 63718: u64 [sp + 0x68] = a1\n 63721: a1 = a1 <u t2\n 63724: a1 = a1 + ra\n 63727: u64 [sp + 0x70] = a1\n 63730: a1 = 0xff - a2\n 63734: u64 [sp + 0x38] = a1\n 63737: a2 = 0x80 - a1\n 63741: a0 = 0\n 63743: a1 = u64 [sp + 0x10]\n 63746: s1 = t1\n 63748: ra = 2638, jump @2677\n      : @2482 [@dyn 1319] (gas: 7)\n 63754: u64 [sp + 0x88] = a0\n 63758: u64 [sp + 0x60] = a1\n 63761: a0 = s1\n 63763: a1 = u64 [sp + 0x8]\n 63766: s1 = u64 [sp + 0x38]\n 63769: a2 = s1\n 63771: ra = 2640, jump @2682\n      : @2483 [@dyn 1320] (gas: 9)\n 63777: u64 [sp + 0x80] = a0\n 63781: a0 = u64 [sp + 0x60]\n 63784: a0 = a0 | a1\n 63787: u64 [sp + 0x60] = a0\n 63790: a1 = u64 [sp + 0x90]\n 63794: a2 = 0x7f - a1\n 63797: a0 = 0\n 63799: a1 = u64 [sp + 0x10]\n 63802: ra = 2642, jump @2682\n      : @2484 [@dyn 1321] (gas: 19)\n 63808: a2 = s1\n 63810: a3 = s1 <u 0x80\n 63814: u64 [sp + 0x90] = a3\n 63818: a4 = u64 [sp + 0x60]\n 63821: a1 = a4 if a3 != 0\n 63824: s1 = u64 [sp + 0x98]\n 63828: a4 = u64 [sp + 0x8]\n 63831: a1 = a4 if a2 == 0\n 63834: u64 [sp + 0x50] = a1\n 63837: a1 = u64 [sp + 0x88]\n 63841: a4 = u64 [sp + 0x80]\n 63845: a1 = a1 | a4\n 63848: a1 = a0 if a3 == 0\n 63851: a0 = u64 [sp + 0x18]\n 63854: a1 = a0 if a2 == 0\n 63857: u64 [sp + 0x88] = a1\n 63861: a0 = 0\n 63863: a1 = u64 [sp + 0x10]\n 63866: ra = 2644, jump @2682\n      : @2485 [@dyn 1322] (gas: 12)\n 63872: a4 = u64 [sp + 0x68]\n 63875: a2 = u64 [sp + 0x70]\n 63878: a5 = u64 [sp + 0x78]\n 63881: a5 = a5 | a2\n 63884: a4 = a4 | s1\n 63887: a4 = a4 | a5\n 63890: a2 = u64 [sp + 0x90]\n 63894: a1 = 0 if a2 == 0\n 63896: u64 [sp + 0x80] = a1\n 63900: a0 = 0 if a2 == 0\n 63902: u64 [sp + 0x90] = a0\n 63906: jump @2494 if a4 == 0\n      : @2486 (gas: 4)\n 63910: a2 = s1 + 0xffffffffffffff80\n 63913: a0 = u64 [sp + 0x18]\n 63916: a1 = u64 [sp + 0x8]\n 63919: ra = 2646, jump @2677\n      : @2487 [@dyn 1323] (gas: 6)\n 63925: u64 [sp + 0x38] = a0\n 63928: u64 [sp + 0x60] = a1\n 63931: a0 = 0\n 63933: a1 = u64 [sp + 0x10]\n 63936: a2 = s1\n 63938: ra = 2648, jump @2677\n      : @2488 [@dyn 1324] (gas: 6)\n 63944: u64 [sp + 0x28] = a0\n 63947: u64 [sp + 0x30] = a1\n 63950: a2 = 0x80 - s1\n 63954: a0 = u64 [sp + 0x18]\n 63957: a1 = u64 [sp + 0x8]\n 63960: ra = 2650, jump @2682\n      : @2489 [@dyn 1325] (gas: 19)\n 63966: a3 = u64 [sp + 0x30]\n 63969: a3 = a3 | a1\n 63972: a1 = s1 <u 0x80\n 63976: u64 [sp + 0x30] = a1\n 63979: a2 = u64 [sp + 0x60]\n 63982: a3 = a2 if a1 == 0\n 63985: a2 = u64 [sp + 0x10]\n 63988: a3 = a2 if s1 == 0\n 63991: u64 [sp + 0x60] = a3\n 63994: a2 = u64 [sp + 0x28]\n 63997: a2 = a2 | a0\n 64000: a0 = u64 [sp + 0x38]\n 64003: a2 = a0 if a1 == 0\n 64006: a2 = 0 if s1 == 0\n 64008: u64 [sp + 0x38] = a2\n 64011: a0 = u64 [sp + 0x18]\n 64014: a1 = u64 [sp + 0x8]\n 64017: a2 = s1\n 64019: ra = 2652, jump @2677\n      : @2490 [@dyn 1326] (gas: 18)\n 64025: t0 = u64 [sp + 0x38]\n 64028: t1 = 0\n 64030: a2 = u64 [sp + 0x30]\n 64033: a1 = 0 if a2 == 0\n 64035: a0 = 0 if a2 == 0\n 64037: a3 = u64 [sp + 0x48]\n 64040: a2 = a3 <u 0x1\n 64043: a4 = u64 [sp + 0x40]\n 64046: a4 = a4 - a2\n 64049: u64 [sp + 0x30] = a4\n 64052: a2 = u64 [sp + 0x58]\n 64055: a2 = a2 >u 0\n 64057: a2 = a2 + 0xffffffffffffffff\n 64060: u64 [sp + 0x28] = a2\n 64063: a3 = a3 + 0xffffffffffffffff\n 64066: u64 [sp + 0x20] = a3\n 64069: ra = u64 [sp + 0x50]\n 64072: fallthrough\n      : @2491 (gas: 92)\n 64073: u64 [sp + 0x50] = t1\n 64076: u64 [sp + 0x98] = s1\n 64080: u64 [sp + 56] = 0\n 64083: a2 = t0\n 64085: a3 = t0 >> 0x3f\n 64088: t0 = a1\n 64090: a1 = ra\n 64092: ra = u64 [sp + 0x60]\n 64095: a5 = ra << 0x1\n 64098: a3 = a3 | a5\n 64101: a2 = a2 << 0x1\n 64104: a5 = a1 >> 0x3f\n 64107: a5 = a5 | a2\n 64110: a4 = u64 [sp + 0x30]\n 64113: a2 = a4 ^ a3\n 64116: s1 = a4 <u a3\n 64119: a4 = u64 [sp + 0x20]\n 64122: t1 = a4 <u a5\n 64125: t1 = s1 if a2 != 0\n 64128: a4 = t0 << 0x1\n 64131: a2 = a0 >> 0x3f\n 64134: a2 = a2 | a4\n 64137: u64 [sp + 0x58] = a2\n 64140: a2 = ra >> 0x3f\n 64143: a0 = a0 << 0x1\n 64146: t0 = a0 | a2\n 64149: a0 = a1 << 0x1\n 64152: a4 = u64 [sp + 0x88]\n 64156: a2 = a4 >> 0x3f\n 64159: a0 = a0 | a2\n 64162: a2 = a4 << 0x1\n 64165: a4 = u64 [sp + 0x80]\n 64169: s1 = a4 >> 0x3f\n 64172: a2 = a2 | s1\n 64175: s1 = a4 << 0x1\n 64178: a4 = u64 [sp + 0x90]\n 64182: ra = a4 >> 0x3f\n 64185: s1 = s1 | ra\n 64188: a4 = a4 << 0x1\n 64191: a1 = u64 [sp + 0x50]\n 64194: a4 = a4 | a1\n 64197: u64 [sp + 0x90] = a4\n 64201: a4 = s1 | 0\n 64203: u64 [sp + 0x80] = a4\n 64207: a2 = a2 | 0\n 64209: u64 [sp + 0x88] = a2\n 64213: ra = a0 | 0\n 64215: a4 = u64 [sp + 0x28]\n 64218: a0 = a4 - t0\n 64221: a0 = a0 <u t1\n 64224: a2 = a4 <u t0\n 64227: a1 = u64 [sp + 0x58]\n 64230: a4 = a4 - a1\n 64233: a4 = a4 - a2\n 64236: a4 = a4 - a0\n 64239: t1 = a4 >>a 0x3f\n 64242: a0 = u64 [sp + 0x48]\n 64245: t2 = t1 & a0\n 64248: a0 = u64 [sp + 0x40]\n 64251: s1 = t1 & a0\n 64254: a0 = a3 ^ s1\n 64257: a4 = a3 <u s1\n 64260: a2 = a5 <u t2\n 64263: a4 = a2 if a0 == 0\n 64266: a0 = t0 - a4\n 64269: a4 = t0 <u a4\n 64272: a1 = a1 - a4\n 64275: a3 = a3 - s1\n 64278: s1 = u64 [sp + 0x98]\n 64282: a3 = a3 - a2\n 64285: u64 [sp + 0x60] = a3\n 64288: t0 = a5 - t2\n 64291: a5 = u64 [sp + 0x78]\n 64294: a2 = s1 | a5\n 64297: a2 = a2 <u 0x1\n 64300: a4 = u64 [sp + 0x68]\n 64303: a3 = a4 <u a2\n 64306: a2 = a4 - a2\n 64309: a4 = s1 <u 0x1\n 64312: a5 = a5 - a4\n 64315: a4 = u64 [sp + 0x70]\n 64318: a4 = a4 - a3\n 64321: s1 = s1 + 0xffffffffffffffff\n 64324: u64 [sp + 0x78] = a5\n 64327: u64 [sp + 0x70] = a4\n 64330: a3 = a5 | a4\n 64333: a4 = s1 | a2\n 64336: a3 = a3 | a4\n 64339: t1 = t1 & 0x1\n 64342: u64 [sp + 0x68] = a2\n 64345: t2 = 0\n 64347: jump @2491 if a3 != 0\n      : @2492 (gas: 1)\n 64351: jump @2495\n      : @2493 (gas: 2)\n 64353: a0 = u64 [sp + 0x98]\n 64357: jump @2496\n      : @2494 (gas: 4)\n 64359: t1 = 0\n 64361: u64 [sp + 56] = 0\n 64364: ra = u64 [sp + 0x50]\n 64367: fallthrough\n      : @2495 (gas: 20)\n 64368: a3 = u64 [sp + 0x88]\n 64372: a0 = a3 >> 0x3f\n 64375: a1 = ra << 0x1\n 64378: t0 = a1 | a0\n 64381: a4 = u64 [sp + 0x80]\n 64385: a1 = a4 >> 0x3f\n 64388: a3 = a3 << 0x1\n 64391: a1 = a1 | a3\n 64394: a5 = u64 [sp + 0x90]\n 64398: a3 = a5 >> 0x3f\n 64401: a4 = a4 << 0x1\n 64404: a5 = a5 << 0x1\n 64407: a0 = t1 | a5\n 64410: a2 = u64 [sp + 0x38]\n 64413: a3 = a3 | a2\n 64416: a4 = a4 | a3\n 64419: s1 = a2 | a1\n 64422: a3 = a2 | t0\n 64425: t1 = u64 [sp + 0x18]\n 64428: fallthrough\n      : @2496 (gas: 9)\n 64429: a2 = a0 | s1\n 64432: a1 = 0x1000000000000\n 64442: a1 = a1 ^ a4\n 64445: a1 = a1 | a3\n 64448: a1 = a1 | a2\n 64451: t0 = u64 [sp + 0x10]\n 64454: a3 = u64 [sp + 0x8]\n 64457: a0 = u64 [sp]\n 64459: jump @2498 if a1 != 0\n      : @2497 (gas: 10)\n 64462: u64 [a0 + 0] = 0\n 64464: u64 [a0 + 0x8] = t0\n 64467: u64 [a0 + 0x10] = t1\n 64470: u64 [a0 + 0x18] = a3\n 64473: sp = s0 + 0xffffffffffffff00\n 64477: ra = u64 [sp + 0xf8]\n 64481: s0 = u64 [sp + 0xf0]\n 64485: s1 = u64 [sp + 0xe8]\n 64489: sp = sp + 0x100\n 64493: ret\n      : @2498 (gas: 1)\n 64495: t0 = 2654, jump @2653\n      : @2499 [@dyn 1327] (gas: 1)\n 64501: ra = 2656, jump @19\n      : @2500 [@dyn 1328] (gas: 7)\n 64508: u64 [sp + 184] = 0\n 64512: u64 [sp + 176] = 0\n 64516: u64 [sp + 160] = 0x11\n 64521: a0 = 0x4\n 64524: a1 = sp + 0xa0\n 64528: u64 [sp + 168] = 0\n 64532: ra = 2658, jump @19\n      : @2501 [@dyn 1329] (gas: 2)\n 64539: a1 = i32 [0x2027c]\n 64544: jump @2503 if a1 >u 63\n      : @2502 (gas: 2)\n 64548: u32 [0x2027c] = 0x40\n 64554: fallthrough\n      : @2503 (gas: 7)\n 64555: a1 = 0x20290\n 64560: i32 a1 = a1 + 0\n 64562: a0 = 0x1\n 64565: a2 = 0x24\n 64568: ra = 0xa64\n 64572: ecalli 15 // 'seal_return'\n 64574: fallthrough\n      : @2504 [@dyn 1330] (gas: 14)\n 64575: sp = sp + 0xffffffffffffff00\n 64579: u64 [sp + 0xf8] = ra\n 64583: u64 [sp + 0xf0] = s0\n 64587: u64 [sp + 0xe8] = s1\n 64591: s0 = sp + 0x100\n 64595: sp = sp & 0xfffffffffffffff0\n 64598: a3 = u64 [a2 + 0x8]\n 64601: a2 = u64 [a2]\n 64603: a3 = a3 << 0x10\n 64606: a3 = a3 >> 0x10\n 64609: a4 = a2 | a3\n 64612: u64 [sp + 0x20] = a0\n 64615: u64 [sp + 0x30] = a4\n 64618: jump @2523 if a4 == 0\n      : @2505 (gas: 68)\n 64622: a0 = u64 [a1 + 0x18]\n 64625: t0 = u64 [a1 + 0x10]\n 64628: ra = u64 [a1 + 0x8]\n 64631: a5 = u64 [a1]\n 64633: u64 [sp + 0x38] = a5\n 64636: a0 = a0 << 0x20\n 64639: t1 = a0 >> 0x20\n 64642: u64 [sp + 0x50] = a2\n 64645: a0 = clz a2\n 64647: a0 = a0 + 0x40\n 64650: a1 = clz a3\n 64652: u64 [sp + 0x48] = a3\n 64655: a1 = a0 if a3 == 0\n 64658: a3 = a1 + 0x80\n 64662: a1 = a3 <u a1\n 64665: a0 = clz t0\n 64667: a0 = a0 + 0x40\n 64670: a4 = clz t1\n 64672: a4 = a0 if t1 == 0\n 64675: a0 = clz a5\n 64677: a0 = a0 + 0x40\n 64680: a2 = clz ra\n 64682: a2 = a0 if ra == 0\n 64685: a0 = a2 + 0x80\n 64689: a5 = t0 | t1\n 64692: a4 = a0 if a5 == 0\n 64695: a2 = a0 <u a2\n 64698: a2 = 0 if a5 != 0\n 64700: a0 = a1 ^ a2\n 64703: a5 = a1 <u a2\n 64706: s1 = a3 <u a4\n 64709: a5 = s1 if a0 == 0\n 64712: a0 = a5 <u 0x1\n 64715: t2 = a0 + 0xffffffffffffffff\n 64718: a2 = a1 - a2\n 64721: a1 = -a5\n 64723: a2 = a2 - s1\n 64726: a0 = a3 - a4\n 64729: u64 [sp + 0x88] = a1\n 64733: a3 = a1 >u 0\n 64735: a4 = t2 >u 0\n 64737: a4 = a3 if t2 == 0\n 64740: u64 [sp + 0x90] = a0\n 64744: a3 = a0 <u 0x100\n 64748: a3 = a3 ^ 0x1\n 64751: s1 = a2 >u 0\n 64753: a3 = s1 if a2 != 0\n 64756: a3 = a4 if a5 != 0\n 64759: s1 = u64 [sp + 0x38]\n 64762: a4 = s1 | t0\n 64765: a5 = ra | t1\n 64768: a4 = a4 | a5\n 64771: a0 = u64 [sp + 0x30]\n 64774: a5 = a0 <u 0x1\n 64777: a4 = a4 <u 0x1\n 64780: a4 = a4 | a5\n 64783: a3 = a3 | a4\n 64786: u64 [sp + 0x40] = t1\n 64789: t1 = 0 if a3 != 0\n 64791: u64 [sp + 0x60] = t0\n 64794: a4 = t0\n 64796: a4 = 0 if a3 != 0\n 64798: u64 [sp + 0x58] = ra\n 64801: a5 = ra\n 64803: a5 = 0 if a3 != 0\n 64805: ra = s1\n 64807: s1 = 0 if a3 != 0\n 64809: jump @2521 if a3 != 0\n      : @2506 (gas: 8)\n 64813: a0 = u64 [sp + 0x90]\n 64817: a3 = a0 ^ 0xff\n 64821: t0 = u64 [sp + 0x88]\n 64825: a3 = a3 | t0\n 64828: a0 = a2 | t2\n 64831: a0 = a0 | a3\n 64834: a3 = u64 [sp + 0x20]\n 64837: jump @2522 if a0 == 0\n      : @2507 (gas: 20)\n 64841: a0 = u64 [sp + 0x90]\n 64845: a1 = a0 + 0x1\n 64848: a3 = a0\n 64850: u64 [sp + 0x98] = a1\n 64854: a0 = a1 <u 0x1\n 64857: a0 = a0 + a2\n 64860: u64 [sp + 0x78] = a0\n 64863: a0 = a0 | a1\n 64866: a0 = a0 <u 0x1\n 64869: a0 = a0 + t0\n 64872: u64 [sp + 0x68] = a0\n 64875: a0 = a0 <u t0\n 64878: a0 = a0 + t2\n 64881: u64 [sp + 0x70] = a0\n 64884: s1 = 0xff - a3\n 64888: a2 = 0x80 - s1\n 64892: u64 [sp + 0x28] = s1\n 64895: a0 = ra\n 64897: a1 = u64 [sp + 0x58]\n 64900: ra = 2662, jump @2677\n      : @2508 [@dyn 1331] (gas: 6)\n 64906: u64 [sp + 0x88] = a0\n 64910: u64 [sp + 0x18] = a1\n 64913: a0 = u64 [sp + 0x60]\n 64916: a1 = u64 [sp + 0x40]\n 64919: a2 = s1\n 64921: ra = 2664, jump @2682\n      : @2509 [@dyn 1332] (gas: 10)\n 64927: u64 [sp + 0x80] = a0\n 64931: a0 = u64 [sp + 0x18]\n 64934: a0 = a0 | a1\n 64937: u64 [sp + 0x18] = a0\n 64940: a1 = u64 [sp + 0x90]\n 64944: a2 = 0x7f - a1\n 64947: s1 = u64 [sp + 0x38]\n 64950: a0 = s1\n 64952: a1 = u64 [sp + 0x58]\n 64955: ra = 2666, jump @2682\n      : @2510 [@dyn 1333] (gas: 18)\n 64961: a2 = u64 [sp + 0x28]\n 64964: a3 = a2 <u 0x80\n 64968: u64 [sp + 0x90] = a3\n 64972: a4 = u64 [sp + 0x18]\n 64975: a1 = a4 if a3 != 0\n 64978: a4 = u64 [sp + 0x40]\n 64981: a1 = a4 if a2 == 0\n 64984: u64 [sp + 0x18] = a1\n 64987: a1 = u64 [sp + 0x88]\n 64991: a4 = u64 [sp + 0x80]\n 64995: a1 = a1 | a4\n 64998: a1 = a0 if a3 == 0\n 65001: a0 = u64 [sp + 0x60]\n 65004: a1 = a0 if a2 == 0\n 65007: u64 [sp + 0x88] = a1\n 65011: a0 = s1\n 65013: a1 = u64 [sp + 0x58]\n 65016: ra = 2668, jump @2682\n      : @2511 [@dyn 1334] (gas: 13)\n 65022: a4 = u64 [sp + 0x68]\n 65025: a5 = u64 [sp + 0x70]\n 65028: a2 = u64 [sp + 0x78]\n 65031: a5 = a5 | a2\n 65034: a3 = u64 [sp + 0x98]\n 65038: a3 = a3 | a4\n 65041: a3 = a3 | a5\n 65044: a2 = u64 [sp + 0x90]\n 65048: a1 = 0 if a2 == 0\n 65050: u64 [sp + 0x80] = a1\n 65054: a0 = 0 if a2 == 0\n 65056: u64 [sp + 0x90] = a0\n 65060: jump @2519 if a3 == 0\n      : @2512 (gas: 5)\n 65064: a0 = u64 [sp + 0x98]\n 65068: a2 = a0 + 0xffffffffffffff80\n 65071: a0 = u64 [sp + 0x60]\n 65074: a1 = u64 [sp + 0x40]\n 65077: ra = 2670, jump @2677\n      : @2513 [@dyn 1335] (gas: 6)\n 65083: u64 [sp + 0x28] = a0\n 65086: u64 [sp + 0x8] = a1\n 65089: a0 = s1\n 65091: a1 = u64 [sp + 0x58]\n 65094: a2 = u64 [sp + 0x98]\n 65098: ra = 2672, jump @2677\n      : @2514 [@dyn 1336] (gas: 7)\n 65104: u64 [sp] = a0\n 65106: u64 [sp + 0x10] = a1\n 65109: a1 = u64 [sp + 0x98]\n 65113: a2 = 0x80 - a1\n 65117: a0 = u64 [sp + 0x60]\n 65120: a1 = u64 [sp + 0x40]\n 65123: ra = 2674, jump @2682\n      : @2515 [@dyn 1337] (gas: 19)\n 65129: a2 = u64 [sp + 0x10]\n 65132: a1 = a1 | a2\n 65135: a3 = u64 [sp + 0x98]\n 65139: a4 = a3 <u 0x80\n 65143: u64 [sp + 0x10] = a4\n 65146: a2 = u64 [sp + 0x8]\n 65149: a1 = a2 if a4 == 0\n 65152: a2 = u64 [sp + 0x58]\n 65155: a2 = a1 if a3 != 0\n 65158: u64 [sp + 0x58] = a2\n 65161: a1 = u64 [sp]\n 65163: a0 = a0 | a1\n 65166: a1 = u64 [sp + 0x28]\n 65169: a0 = a1 if a4 == 0\n 65172: s1 = a0 if a3 != 0\n 65175: a2 = a3\n 65177: a0 = u64 [sp + 0x60]\n 65180: a1 = u64 [sp + 0x40]\n 65183: ra = 2676, jump @2677\n      : @2516 [@dyn 1338] (gas: 20)\n 65189: t0 = a1\n 65191: t2 = 0\n 65193: a2 = u64 [sp + 0x10]\n 65196: t0 = 0 if a2 == 0\n 65198: a0 = 0 if a2 == 0\n 65200: u64 [sp + 0x60] = a0\n 65203: a3 = u64 [sp + 0x50]\n 65206: a2 = a3 <u 0x1\n 65209: a4 = u64 [sp + 0x48]\n 65212: a4 = a4 - a2\n 65215: u64 [sp + 0x38] = a4\n 65218: a2 = u64 [sp + 0x30]\n 65221: a2 = a2 >u 0\n 65223: a2 = a2 + 0xffffffffffffffff\n 65226: u64 [sp + 0x30] = a2\n 65229: a3 = a3 + 0xffffffffffffffff\n 65232: u64 [sp + 0x28] = a3\n 65235: a0 = u64 [sp + 0x58]\n 65238: ra = u64 [sp + 0x18]\n 65241: fallthrough\n      : @2517 (gas: 88)\n 65242: u64 [sp + 64] = 0\n 65245: a3 = s1 >> 0x3f\n 65248: a5 = a0 << 0x1\n 65251: a3 = a3 | a5\n 65254: a2 = s1 << 0x1\n 65257: a5 = ra >> 0x3f\n 65260: a5 = a5 | a2\n 65263: a4 = u64 [sp + 0x38]\n 65266: a2 = a4 ^ a3\n 65269: s1 = a4 <u a3\n 65272: a4 = u64 [sp + 0x28]\n 65275: t1 = a4 <u a5\n 65278: t1 = s1 if a2 != 0\n 65281: a4 = t0 << 0x1\n 65284: s1 = a0\n 65286: a0 = u64 [sp + 0x60]\n 65289: a2 = a0 >> 0x3f\n 65292: a2 = a2 | a4\n 65295: u64 [sp + 0x58] = a2\n 65298: a2 = s1 >> 0x3f\n 65301: a0 = a0 << 0x1\n 65304: t0 = a0 | a2\n 65307: a0 = ra << 0x1\n 65310: a4 = u64 [sp + 0x88]\n 65314: a2 = a4 >> 0x3f\n 65317: a0 = a0 | a2\n 65320: a2 = a4 << 0x1\n 65323: a4 = u64 [sp + 0x80]\n 65327: s1 = a4 >> 0x3f\n 65330: a2 = a2 | s1\n 65333: s1 = a4 << 0x1\n 65336: a4 = u64 [sp + 0x90]\n 65340: ra = a4 >> 0x3f\n 65343: s1 = s1 | ra\n 65346: a4 = a4 << 0x1\n 65349: a4 = t2 | a4\n 65352: u64 [sp + 0x90] = a4\n 65356: a4 = s1 | 0\n 65358: u64 [sp + 0x80] = a4\n 65362: a2 = a2 | 0\n 65364: u64 [sp + 0x88] = a2\n 65368: ra = a0 | 0\n 65370: a4 = u64 [sp + 0x30]\n 65373: a0 = a4 - t0\n 65376: a0 = a0 <u t1\n 65379: a2 = a4 <u t0\n 65382: a1 = u64 [sp + 0x58]\n 65385: a4 = a4 - a1\n 65388: a4 = a4 - a2\n 65391: a4 = a4 - a0\n 65394: t1 = a4 >>a 0x3f\n 65397: a0 = u64 [sp + 0x50]\n 65400: t2 = t1 & a0\n 65403: a0 = u64 [sp + 0x48]\n 65406: s1 = t1 & a0\n 65409: a0 = a3 ^ s1\n 65412: a4 = a3 <u s1\n 65415: a2 = a5 <u t2\n 65418: a4 = a2 if a0 == 0\n 65421: a0 = t0 - a4\n 65424: u64 [sp + 0x60] = a0\n 65427: a4 = t0 <u a4\n 65430: t0 = a1 - a4\n 65433: a3 = a3 - s1\n 65436: a0 = a3 - a2\n 65439: t2 = a5 - t2\n 65442: a5 = u64 [sp + 0x98]\n 65446: s1 = u64 [sp + 0x78]\n 65449: a2 = a5 | s1\n 65452: a2 = a2 <u 0x1\n 65455: a4 = u64 [sp + 0x68]\n 65458: a3 = a4 <u a2\n 65461: a2 = a4 - a2\n 65464: a4 = a5 <u 0x1\n 65467: s1 = s1 - a4\n 65470: a4 = u64 [sp + 0x70]\n 65473: a4 = a4 - a3\n 65476: a5 = a5 + 0xffffffffffffffff\n 65479: u64 [sp + 0x78] = s1\n 65482: u64 [sp + 0x70] = a4\n 65485: a3 = s1 | a4\n 65488: s1 = t2\n 65490: u64 [sp + 0x98] = a5\n 65494: a4 = a5 | a2\n 65497: a3 = a3 | a4\n 65500: t2 = t1 & 0x1\n 65503: u64 [sp + 0x68] = a2\n 65506: jump @2517 if a3 != 0\n      : @2518 (gas: 1)\n 65510: jump @2520\n      : @2519 (gas: 4)\n 65512: t2 = 0\n 65514: u64 [sp + 64] = 0\n 65517: ra = u64 [sp + 0x18]\n 65520: fallthrough\n      : @2520 (gas: 20)\n 65521: a3 = u64 [sp + 0x88]\n 65525: a0 = a3 >> 0x3f\n 65528: a1 = ra << 0x1\n 65531: a0 = a0 | a1\n 65534: a4 = u64 [sp + 0x80]\n 65538: a1 = a4 >> 0x3f\n 65541: a3 = a3 << 0x1\n 65544: a1 = a1 | a3\n 65547: a5 = u64 [sp + 0x90]\n 65551: a3 = a5 >> 0x3f\n 65554: a4 = a4 << 0x1\n 65557: a5 = a5 << 0x1\n 65560: s1 = t2 | a5\n 65563: a2 = u64 [sp + 0x40]\n 65566: a3 = a3 | a2\n 65569: a5 = a3 | a4\n 65572: a4 = a2 | a1\n 65575: t1 = a2 | a0\n 65578: a3 = u64 [sp + 0x20]\n 65581: jump @2522\n      : @2521 (gas: 2)\n 65583: a3 = u64 [sp + 0x20]\n 65586: fallthrough\n      : @2522 (gas: 10)\n 65587: u64 [a3] = s1\n 65589: u64 [a3 + 0x8] = a5\n 65592: u64 [a3 + 0x10] = a4\n 65595: u64 [a3 + 0x18] = t1\n 65598: sp = s0 + 0xffffffffffffff00\n 65602: ra = u64 [sp + 0xf8]\n 65606: s0 = u64 [sp + 0xf0]\n 65610: s1 = u64 [sp + 0xe8]\n 65614: sp = sp + 0x100\n 65618: ret\n      : @2523 (gas: 1)\n 65620: t0 = 2678, jump @2653\n      : @2524 [@dyn 1339] (gas: 1)\n 65626: ra = 2680, jump @19\n      : @2525 [@dyn 1340] (gas: 7)\n 65633: u64 [sp + 184] = 0\n 65637: u64 [sp + 176] = 0\n 65641: u64 [sp + 160] = 0x12\n 65646: a0 = 0x4\n 65649: a1 = sp + 0xa0\n 65653: u64 [sp + 168] = 0\n 65657: ra = 2682, jump @19\n      : @2526 [@dyn 1341] (gas: 2)\n 65664: a1 = i32 [0x2027c]\n 65669: jump @2528 if a1 >u 63\n      : @2527 (gas: 2)\n 65673: u32 [0x2027c] = 0x40\n 65679: fallthrough\n      : @2528 (gas: 7)\n 65680: a1 = 0x20290\n 65685: i32 a1 = a1 + 0\n 65687: a0 = 0x1\n 65690: a2 = 0x24\n 65693: ra = 0xa7c\n 65697: ecalli 15 // 'seal_return'\n 65699: fallthrough\n      : @2529 [@dyn 1342] (gas: 30)\n 65700: sp = sp + 0xfffffffffffffec0\n 65704: u64 [sp + 0x138] = ra\n 65708: u64 [sp + 0x130] = s0\n 65712: u64 [sp + 0x128] = s1\n 65716: s0 = sp + 0x140\n 65720: sp = sp & 0xfffffffffffffff0\n 65723: t0 = u64 [a1]\n 65725: u64 [sp + 0x8] = t0\n 65728: a5 = u64 [a1 + 0x8]\n 65731: u64 [sp + 0x18] = a5\n 65734: a3 = u64 [a1 + 0x10]\n 65737: u64 [sp + 0x10] = a3\n 65740: s1 = u64 [a1 + 0x18]\n 65743: t1 = u64 [a2]\n 65745: a1 = u64 [a2 + 0x8]\n 65748: a4 = u64 [a2 + 0x10]\n 65751: a2 = u64 [a2 + 0x18]\n 65754: u64 [sp] = a0\n 65756: u64 [sp + 0xd8] = a2\n 65760: u64 [sp + 0xd0] = a4\n 65764: u64 [sp + 0xc8] = a1\n 65768: u64 [sp + 0xc0] = t1\n 65772: u64 [sp + 0xf8] = s1\n 65776: u64 [sp + 0xf0] = a3\n 65780: u64 [sp + 0xe8] = a5\n 65784: a0 = sp + 0x100\n 65788: a1 = sp + 0xe0\n 65792: a2 = sp + 0xc0\n 65796: u64 [sp + 0xe0] = t0\n 65800: ra = 2686, jump @2240\n      : @2530 [@dyn 1343] (gas: 19)\n 65806: a0 = u64 [sp + 0x118]\n 65810: a1 = u64 [sp + 0x110]\n 65814: a2 = u64 [sp + 0x108]\n 65818: t0 = u64 [sp + 0x100]\n 65822: a4 = a0 ^ s1\n 65825: a5 = a0 <u s1\n 65828: a3 = u64 [sp + 0x10]\n 65831: s1 = a1 <u a3\n 65834: s1 = a5 if a4 != 0\n 65837: a5 = u64 [sp + 0x18]\n 65840: t1 = a2 ^ a5\n 65843: t2 = a2 <u a5\n 65846: a5 = u64 [sp + 0x8]\n 65849: a5 = t0 <u a5\n 65852: a5 = t2 if t1 != 0\n 65855: a3 = a3 ^ a1\n 65858: a3 = a3 | a4\n 65861: a5 = s1 if a3 != 0\n 65864: jump @2532 if a5 != 0\n      : @2531 (gas: 11)\n 65867: a3 = u64 [sp]\n 65869: u64 [a3] = t0\n 65871: u64 [a3 + 0x8] = a2\n 65874: u64 [a3 + 0x10] = a1\n 65877: u64 [a3 + 0x18] = a0\n 65880: sp = s0 + 0xfffffffffffffec0\n 65884: ra = u64 [sp + 0x138]\n 65888: s0 = u64 [sp + 0x130]\n 65892: s1 = u64 [sp + 0x128]\n 65896: sp = sp + 0x140\n 65900: ret\n      : @2532 (gas: 3)\n 65902: a0 = sp + 0xa0\n 65906: a1 = 0x40\n 65909: ra = 2688, jump @17\n      : @2533 [@dyn 1344] (gas: 1)\n 65916: t0 = 2690, jump @2590\n      : @2534 [@dyn 1345] (gas: 1)\n 65922: jump @2546 if a0 != 0\n      : @2535 (gas: 1)\n 65925: t0 = 2692, jump @2604\n      : @2536 [@dyn 1346] (gas: 1)\n 65931: ra = 2694, jump @19\n      : @2537 [@dyn 1347] (gas: 1)\n 65938: t0 = 2696, jump @2584\n      : @2538 [@dyn 1348] (gas: 1)\n 65944: jump @2546 if a0 == 0\n      : @2539 (gas: 1)\n 65947: t0 = 2698, jump @2625\n      : @2540 [@dyn 1349] (gas: 1)\n 65953: ra = 2700, jump @19\n      : @2541 [@dyn 1350] (gas: 1)\n 65960: t0 = 2702, jump @2603\n      : @2542 [@dyn 1351] (gas: 1)\n 65966: jump @2546 if a0 == 0\n      : @2543 (gas: 8)\n 65969: s1 = u64 [sp + 0x18]\n 65972: i32 a0 = s1 + 0x24\n 65975: u64 [sp + 88] = 0\n 65978: u64 [sp + 80] = 0\n 65981: u64 [sp + 64] = 0x14\n 65985: a1 = sp + 0x40\n 65988: u64 [sp + 72] = 0\n 65991: ra = 2704, jump @19\n      : @2544 [@dyn 1352] (gas: 1)\n 65998: t0 = 2706, jump @2596\n      : @2545 [@dyn 1353] (gas: 1)\n 66004: jump @2547 if a0 != 0\n      : @2546 (gas: 1)\n 66007: trap\n      : @2547 (gas: 11)\n 66008: s1 = u64 [sp + 0x18]\n 66011: i32 a0 = s1 + 0x44\n 66014: a1 = u64 [0x20268]\n 66019: a2 = u64 [0x20270]\n 66024: u64 [sp + 0x38] = a1\n 66027: u64 [sp + 0x30] = a2\n 66030: a1 = 0x666c6f7700000000\n 66040: u64 [sp + 0x28] = a1\n 66043: a1 = sp + 0x20\n 66046: u64 [sp + 32] = 0\n 66049: ra = 2708, jump @19\n      : @2548 [@dyn 1354] (gas: 3)\n 66056: a1 = 0x64\n 66059: a0 = s1\n 66061: ra = 2710, jump @32\n      : @2549 [@dyn 1355] (gas: 1)\n 66068: t0 = 2712, jump @2626\n      : @2550 [@dyn 1356] (gas: 4)\n 66074: ecalli 15 // 'seal_return'\n 66076: a0 = 0\n 66078: ra = 0xa9a\n 66082: jump @38\n      : @2551 [export #0: 'call'] (gas: 2)\n 66086: a0 = 0\n 66088: ra = 2714, jump @38\n      : @2552 [@dyn 1357] [export #1: 'deploy'] (gas: 2)\n 66095: a0 = 0x1\n 66098: ra = 2716, jump @38\n      : @2553 [@dyn 1358] (gas: 24)\n 66105: sp = sp + 0xffffffffffffffb0\n 66108: u64 [sp + 0x48] = ra\n 66111: u64 [sp + 0x40] = s0\n 66114: s0 = sp + 0x50\n 66117: sp = sp & 0xfffffffffffffff0\n 66120: t0 = u64 [a0]\n 66122: t1 = u64 [a0 + 0x8]\n 66125: a4 = u64 [a0 + 0x10]\n 66128: a0 = u64 [a0 + 0x18]\n 66131: a5 = u64 [a1]\n 66133: a2 = u64 [a1 + 0x8]\n 66136: a3 = u64 [a1 + 0x10]\n 66139: a1 = u64 [a1 + 0x18]\n 66142: u64 [sp + 0x18] = a1\n 66145: u64 [sp + 0x10] = a3\n 66148: u64 [sp + 0x8] = a2\n 66151: u64 [sp] = a5\n 66153: u64 [sp + 0x38] = a0\n 66156: u64 [sp + 0x30] = a4\n 66159: u64 [sp + 0x28] = t1\n 66162: a0 = sp + 0x20\n 66165: a1 = sp\n 66167: u64 [sp + 0x20] = t0\n 66170: ra = 2718, jump @1919\n      : @2554 [@dyn 1359] (gas: 5)\n 66176: sp = s0 + 0xffffffffffffffb0\n 66179: ra = u64 [sp + 0x48]\n 66182: s0 = u64 [sp + 0x40]\n 66185: sp = sp + 0x50\n 66188: ret\n      : @2555 (gas: 13)\n 66190: a0 = u64 [s1 + 0x218]\n 66194: a1 = u64 [a0 + 0x10]\n 66197: a2 = u64 [a0 + 0x18]\n 66200: a3 = u64 [a0 + 0x8]\n 66203: a0 = u64 [a0]\n 66205: a2 = a2 | a3\n 66208: a3 = a0 | a1\n 66211: a3 = a3 | a2\n 66214: a3 = a3 >> 0x20\n 66217: a1 = a1 | a2\n 66220: a1 = a1 << 0x20\n 66223: a1 = a1 | a3\n 66226: jump [t0]\n      : @2556 (gas: 9)\n 66228: a1 = a1 <u 0x20\n 66231: a1 = a1 ^ 0x1\n 66234: a1 = a0 if a3 != 0\n 66237: a0 = a3 >u 0\n 66239: a2 = a3 >u 0\n 66241: a2 = a0 if a3 == 0\n 66244: a0 = a3 | a3\n 66247: a2 = a1 if a0 == 0\n 66250: jump [t0]\n      : @2557 (gas: 13)\n 66252: a1 = u64 [s1 + 0x218]\n 66256: a2 = u64 [a1 + 0x10]\n 66259: a3 = u64 [a1 + 0x18]\n 66262: a4 = u64 [a1 + 0x8]\n 66265: a1 = u64 [a1]\n 66267: a3 = a3 | a4\n 66270: a4 = a1 | a2\n 66273: a4 = a4 | a3\n 66276: a4 = a4 >> 0x20\n 66279: a2 = a2 | a3\n 66282: a2 = a2 << 0x20\n 66285: a2 = a2 | a4\n 66288: jump [t0]\n      : @2558 (gas: 8)\n 66290: a2 = a2 | a3\n 66293: a3 = a0 | a1\n 66296: a3 = a3 | a2\n 66299: a3 = a3 >> 0x20\n 66302: a1 = a1 | a2\n 66305: a1 = a1 << 0x20\n 66308: a1 = a1 | a3\n 66311: jump [t0]\n      : @2559 (gas: 7)\n 66313: a1 = u64 [a2 + 0x18]\n 66316: a0 = a1 <u a0\n 66319: a1 = u64 [a2 + 0x10]\n 66322: a0 = 0 if a1 != 0\n 66324: a1 = u64 [a2 + 0x8]\n 66327: a0 = 0 if a1 != 0\n 66329: jump [t0]\n      : @2560 (gas: 18)\n 66331: a1 = a0 <u a1\n 66334: a3 = u64 [a5 + 0x30]\n 66337: a2 = a3 + a1\n 66340: a3 = a2 <u a3\n 66343: a3 = a1 if a1 == 0\n 66346: a1 = u64 [a5 + 0x20]\n 66349: a3 = a3 + a1\n 66352: a1 = a3 <u a1\n 66355: a4 = u64 [a5 + 0x28]\n 66358: a1 = a1 + a4\n 66361: a4 = a0 | a3\n 66364: a1 = a1 | a2\n 66367: a4 = a4 | a1\n 66370: a4 = a4 >> 0x20\n 66373: a1 = a1 | a3\n 66376: a1 = a1 << 0x20\n 66379: a1 = a1 | a4\n 66382: jump [t0]\n      : @2561 (gas: 14)\n 66384: a3 = s1 + 0x200\n 66388: a0 = u64 [a3 + 0x8]\n 66391: a2 = u64 [a3]\n 66393: a2 = a2 | a0\n 66396: a0 = 0x100000000\n 66406: u64 [a3] = a0\n 66408: a0 = 0xfffffffc\n 66418: a1 = u64 [a3 + 0x18]\n 66421: a0 = a1 <u a0\n 66424: a1 = u64 [a3 + 0x10]\n 66427: a0 = 0 if a1 != 0\n 66429: u64 [a3 + 0x8] = a2\n 66432: a0 = 0 if a2 != 0\n 66434: jump [t0]\n      : @2562 (gas: 9)\n 66436: a1 = a1 + a4\n 66439: a4 = a0 | a3\n 66442: a1 = a1 | a2\n 66445: a4 = a4 | a1\n 66448: a4 = a4 >> 0x20\n 66451: a1 = a1 | a3\n 66454: a1 = a1 << 0x20\n 66457: a1 = a1 | a4\n 66460: jump [t0]\n      : @2563 (gas: 15)\n 66462: a0 = u64 [a2 + 0x8]\n 66465: a1 = i32 [a2 + 0x10]\n 66468: a2 = u64 [a2]\n 66470: a0 = reverse a0\n 66472: a3 = a0 << 0x20\n 66475: a1 = reverse a1\n 66477: a1 = a1 >> 0x20\n 66480: a3 = a3 | a1\n 66483: a0 = a0 >> 0x20\n 66486: a1 = reverse a2\n 66488: a2 = a1 << 0x20\n 66491: a2 = a2 | a0\n 66494: a1 = a1 >> 0x20\n 66497: i32 a0 = a4 + 0x4\n 66500: jump [t0]\n      : @2564 (gas: 8)\n 66502: a0 = a0 | a2\n 66505: a2 = a4 | a1\n 66508: a2 = a2 | a0\n 66511: a2 = a2 >> 0x20\n 66514: a0 = a0 | a1\n 66517: a0 = a0 << 0x20\n 66520: a0 = a0 | a2\n 66523: jump [t0]\n      : @2565 (gas: 10)\n 66525: a0 = u64 [a3 + 0x18]\n 66528: a1 = u64 [a3 + 0x10]\n 66531: a2 = u64 [a3 + 0x8]\n 66534: a3 = u64 [a3]\n 66536: a0 = reverse a0\n 66538: a1 = reverse a1\n 66540: a2 = reverse a2\n 66542: a3 = reverse a3\n 66544: a4 = s1 + 0x300\n 66548: jump [t0]\n      : @2566 (gas: 16)\n 66550: a2 = u64 [s1 + 0x1a8]\n 66554: a0 = u64 [a2 + 0x8]\n 66557: a1 = i32 [a2 + 0x10]\n 66560: a2 = u64 [a2]\n 66562: a0 = reverse a0\n 66564: a3 = a0 << 0x20\n 66567: a1 = reverse a1\n 66569: a1 = a1 >> 0x20\n 66572: a3 = a3 | a1\n 66575: a0 = a0 >> 0x20\n 66578: a1 = reverse a2\n 66580: a2 = a1 << 0x20\n 66583: a0 = a0 | a2\n 66586: a1 = a1 >> 0x20\n 66589: a2 = s1 + 0x1198\n 66593: jump [t0]\n      : @2567 (gas: 11)\n 66595: a4 = u64 [s1 + 0x210]\n 66599: a3 = s1 + 0x100\n 66603: a0 = u64 [a3 + 0xc8]\n 66607: a1 = u64 [a3 + 0xc0]\n 66611: a0 = a0 | a1\n 66614: a1 = 0xfffffffc\n 66624: a1 = a4 <u a1\n 66627: a2 = u64 [a3 + 0xb8]\n 66631: a1 = 0 if a2 != 0\n 66633: a1 = 0 if a0 != 0\n 66635: jump [t0]\n      : @2568 (gas: 10)\n 66637: a0 = a0 | a4\n 66640: a2 = u64 [a5]\n 66642: a5 = u64 [s1 + 0x1f8]\n 66646: a2 = a2 | a5\n 66649: a0 = a0 | a2\n 66652: a0 = a0 >> 0x20\n 66655: a2 = a2 | a4\n 66658: a2 = a2 << 0x20\n 66661: a0 = a0 | a2\n 66664: jump [t0]\n      : @2569 (gas: 9)\n 66666: a1 = u64 [a2 + 0x60]\n 66669: u64 [s1 + 0x200] = a1\n 66673: a1 = u64 [a2 + 0x58]\n 66676: u64 [s1 + 0x208] = a1\n 66680: a1 = u64 [a2 + 0x50]\n 66683: u64 [s1 + 0x1f8] = a1\n 66687: a0 = u64 [a2 + 0x48]\n 66690: u64 [s1 + 0x210] = a0\n 66694: jump [t0]\n      : @2570 (gas: 7)\n 66696: a4 = 0x100000000\n 66706: a0 = 0xfffffffc\n 66716: a0 = a1 <u a0\n 66719: a2 = u64 [a5 + 0x10]\n 66722: a0 = 0 if a2 != 0\n 66724: a0 = 0 if a3 != 0\n 66726: jump [t0]\n      : @2571 (gas: 14)\n 66728: a0 = i32 [a2 + 0x10]\n 66731: a2 = u64 [a2]\n 66733: a1 = reverse a1\n 66735: a3 = a1 << 0x20\n 66738: a0 = reverse a0\n 66740: a0 = a0 >> 0x20\n 66743: a3 = a3 | a0\n 66746: a1 = a1 >> 0x20\n 66749: a0 = reverse a2\n 66751: a2 = a0 << 0x20\n 66754: a1 = a1 | a2\n 66757: a2 = a0 >> 0x20\n 66760: i32 a0 = a4 + 0x4\n 66763: jump [t0]\n      : @2572 (gas: 11)\n 66765: a0 = u64 [a3 + 0x18]\n 66768: a1 = u64 [a3 + 0x10]\n 66771: a2 = u64 [a3 + 0x8]\n 66774: a3 = u64 [a3]\n 66776: a0 = reverse a0\n 66778: a1 = reverse a1\n 66780: a2 = reverse a2\n 66782: a3 = reverse a3\n 66784: a4 = s1 + 0x4998\n 66788: a5 = a4 + 0x700\n 66792: jump [t0]\n      : @2573 (gas: 8)\n 66794: a4 = a4 | a2\n 66797: a2 = a0 | a1\n 66800: a2 = a2 | a4\n 66803: a2 = a2 >> 0x20\n 66806: a1 = a1 | a4\n 66809: a1 = a1 << 0x20\n 66812: a1 = a1 | a2\n 66815: jump [t0]\n      : @2574 (gas: 4)\n 66817: a5 = a1 | a0\n 66820: a1 = u64 [s1 + 0x218]\n 66824: t1 = u64 [a1 + 0x18]\n 66827: jump [t0]\n      : @2575 (gas: 13)\n 66829: a4 = s1 + 0x200\n 66833: u64 [a4 + 0x10] = a0\n 66836: u64 [a4 + 0x8] = a2\n 66839: a0 = a0 | a2\n 66842: u64 [a4 + 0x18] = a1\n 66845: a1 = a1 | a3\n 66848: a1 = a1 | a0\n 66851: a1 = a1 >> 0x20\n 66854: u64 [a4] = a3\n 66856: a0 = a0 | a3\n 66859: a0 = a0 << 0x20\n 66862: a0 = a0 | a1\n 66865: jump [t0]\n      : @2576 (gas: 11)\n 66867: a3 = s1 + 0x200\n 66871: a0 = u64 [a3]\n 66873: a1 = u64 [s1 + 0x1f8]\n 66877: a0 = a0 | a1\n 66880: a1 = 0xffffffe0\n 66890: a2 = u64 [a3 + 0x18]\n 66893: a1 = a2 <u a1\n 66896: a2 = u64 [a3 + 0x8]\n 66899: a1 = 0 if a2 != 0\n 66901: a1 = 0 if a0 != 0\n 66903: jump [t0]\n      : @2577 (gas: 11)\n 66905: a2 = s1 + 0x200\n 66909: a4 = u64 [a2 + 0x10]\n 66912: a0 = u64 [a2 + 0x8]\n 66915: a1 = u64 [a2]\n 66917: a0 = a0 | a1\n 66920: a1 = 0xfffffffc\n 66930: a1 = a4 <u a1\n 66933: a2 = u64 [s1 + 0x1f8]\n 66937: a1 = 0 if a2 != 0\n 66939: a1 = 0 if a0 != 0\n 66941: jump [t0]\n      : @2578 (gas: 9)\n 66943: a0 = u64 [a3 + 0x18]\n 66946: a1 = u64 [a3 + 0x10]\n 66949: a2 = u64 [a3 + 0x8]\n 66952: a3 = u64 [a3]\n 66954: a0 = reverse a0\n 66956: a4 = reverse a1\n 66958: a2 = reverse a2\n 66960: a3 = reverse a3\n 66962: jump [t0]\n      : @2579 (gas: 8)\n 66964: i32 a1 = a1 + 0\n 66966: u64 [s1 + 0x208] = a1\n 66970: u64 [s1 + 0x1f0] = a3\n 66974: i32 a0 = a3 + 0\n 66976: u64 [s1 + 0x218] = a0\n 66980: a0 = u64 [s1 + 0x210]\n 66984: a1 = a3\n 66986: jump [t0]\n      : @2580 (gas: 18)\n 66988: a2 = u64 [s1 + 0x1e8]\n 66992: a0 = u64 [a2 + 0x8]\n 66995: a1 = i32 [a2 + 0x10]\n 66998: a2 = u64 [a2]\n 67000: a0 = reverse a0\n 67002: a3 = a0 << 0x20\n 67005: a1 = reverse a1\n 67007: a1 = a1 >> 0x20\n 67010: a3 = a3 | a1\n 67013: a0 = a0 >> 0x20\n 67016: a1 = reverse a2\n 67018: a2 = a1 << 0x20\n 67021: a2 = a2 | a0\n 67024: a1 = a1 >> 0x20\n 67027: a0 = u64 [s1 + 0x208]\n 67031: i32 a0 = a0 + 0x4\n 67034: a4 = s1 + 0x2998\n 67038: jump [t0]\n      : @2581 (gas: 18)\n 67040: a4 = u64 [sp + 0xb0]\n 67044: a3 = a4 + 0x1\n 67047: u64 [sp + 0xb8] = a3\n 67051: a0 = a3 <u 0x1\n 67054: a0 = a0 + a2\n 67057: u64 [sp + 0x90] = a0\n 67061: a0 = a0 | a3\n 67064: a0 = a0 <u 0x1\n 67067: a0 = a0 + t1\n 67070: u64 [sp + 0x80] = a0\n 67074: a0 = a0 <u t1\n 67077: a0 = a0 + t2\n 67080: u64 [sp + 0x88] = a0\n 67084: a2 = 0xff - a4\n 67088: u64 [sp + 0x98] = a2\n 67092: a2 = 0x80 - a2\n 67096: a0 = ra\n 67098: jump [t0]\n      : @2582 (gas: 13)\n 67100: a5 = s1 + 0x200\n 67104: u64 [a5 + 0x8] = a2\n 67107: u64 [a5] = a3\n 67109: a0 = a2 | a3\n 67112: u64 [a5 + 0x18] = a1\n 67115: a1 = a1 | a4\n 67118: a1 = a1 | a0\n 67121: a1 = a1 >> 0x20\n 67124: u64 [s1 + 0x1f8] = a4\n 67128: a0 = a0 | a4\n 67131: a0 = a0 << 0x20\n 67134: a0 = a0 | a1\n 67137: jump [t0]\n      : @2583 (gas: 5)\n 67139: sp = a1\n 67141: i32 a0 = a0 + 0\n 67143: i32 a2 = a1 + 0\n 67145: a1 = 0x40\n 67148: jump [t0]\n      : @2584 (gas: 11)\n 67150: a2 = u64 [sp + 0x8]\n 67153: a2 = a2 | s1\n 67156: s1 = 0x100000000\n 67166: a0 = 0xfffffffc\n 67176: a1 = u64 [sp + 0x18]\n 67179: a0 = a1 <u a0\n 67182: a1 = u64 [sp + 0x10]\n 67185: a0 = 0 if a1 != 0\n 67187: u64 [sp + 0x8] = a2\n 67190: a0 = 0 if a2 != 0\n 67192: jump [t0]\n      : @2585 (gas: 17)\n 67194: a0 = u64 [a2 + 0x8]\n 67197: a1 = i32 [a2 + 0x10]\n 67200: a2 = u64 [a2]\n 67202: a0 = reverse a0\n 67204: a3 = a0 << 0x20\n 67207: a1 = reverse a1\n 67209: a1 = a1 >> 0x20\n 67212: a3 = a3 | a1\n 67215: a0 = a0 >> 0x20\n 67218: a1 = reverse a2\n 67220: a2 = a1 << 0x20\n 67223: a2 = a2 | a0\n 67226: a1 = a1 >> 0x20\n 67229: i32 a0 = a4 + 0x4\n 67232: a4 = 0x3198\n 67236: a5 = s1 + a4\n 67239: jump [t0]\n      : @2586 (gas: 13)\n 67241: a5 = s1 + 0x200\n 67245: u64 [a5 + 0x10] = a2\n 67248: u64 [a5 + 0x8] = a3\n 67251: a0 = a2 | a3\n 67254: u64 [a5 + 0x18] = a1\n 67257: a1 = a1 | a4\n 67260: a1 = a1 | a0\n 67263: a1 = a1 >> 0x20\n 67266: u64 [a5] = a4\n 67268: a0 = a0 | a4\n 67271: a0 = a0 << 0x20\n 67274: a0 = a0 | a1\n 67277: jump [t0]\n      : @2587 (gas: 10)\n 67279: a4 = s1 + 0x200\n 67283: a3 = u64 [a4 + 0x8]\n 67286: a2 = u64 [a4 + 0x10]\n 67289: a1 = u64 [a4 + 0x18]\n 67292: a0 = u64 [a4]\n 67294: a0 = a0 + 0xffffffffffffffdc\n 67297: a0 = a1 <u a0\n 67300: a0 = 0 if a2 != 0\n 67302: a0 = 0 if a3 != 0\n 67304: jump [t0]\n      : @2588 (gas: 16)\n 67306: a3 = u64 [s1 + 0x1e8]\n 67310: a1 = u64 [a3 + 0x8]\n 67313: a2 = i32 [a3 + 0x10]\n 67316: a3 = u64 [a3]\n 67318: a1 = reverse a1\n 67320: a4 = a1 << 0x20\n 67323: a2 = reverse a2\n 67325: a2 = a2 >> 0x20\n 67328: a2 = a2 | a4\n 67331: a1 = a1 >> 0x20\n 67334: a3 = reverse a3\n 67336: a4 = a3 << 0x20\n 67339: a1 = a1 | a4\n 67342: a3 = a3 >> 0x20\n 67345: a4 = s1 + 0x2998\n 67349: jump [t0]\n      : @2589 (gas: 10)\n 67351: a0 = u64 [s1 + 0x68]\n 67354: a1 = u64 [s1 + 0x60]\n 67357: a0 = a0 | a1\n 67360: a1 = 0xffffffe0\n 67370: a2 = u64 [s1 + 0x78]\n 67373: a1 = a2 <u a1\n 67376: a2 = u64 [s1 + 0x70]\n 67379: a1 = 0 if a2 != 0\n 67381: a1 = 0 if a0 != 0\n 67383: jump [t0]\n      : @2590 (gas: 15)\n 67385: a2 = u64 [sp + 0xb8]\n 67389: s1 = u64 [sp + 0xb0]\n 67393: a0 = u64 [sp + 0xa8]\n 67397: a1 = u64 [sp + 0xa0]\n 67401: u64 [sp + 0x10] = a0\n 67404: u64 [sp + 0x8] = a2\n 67407: a0 = a0 | a2\n 67410: u64 [sp + 0x18] = a1\n 67413: a1 = a1 | s1\n 67416: a1 = a1 | a0\n 67419: a1 = a1 >> 0x20\n 67422: a0 = a0 | s1\n 67425: a0 = a0 << 0x20\n 67428: a0 = a0 | a1\n 67431: jump [t0]\n      : @2591 (gas: 19)\n 67433: a4 = u64 [sp + 0x70]\n 67436: a4 = a4 | a1\n 67439: a2 = s1\n 67441: a3 = s1 <u 0x80\n 67445: u64 [sp + 0x70] = a3\n 67448: a1 = u64 [sp + 0x68]\n 67451: a4 = a1 if a3 == 0\n 67454: a1 = u64 [sp + 0x48]\n 67457: a4 = a1 if s1 == 0\n 67460: u64 [sp + 0x68] = a4\n 67463: s1 = u64 [sp + 0x60]\n 67466: s1 = s1 | a0\n 67469: a0 = u64 [sp + 0x78]\n 67472: s1 = a0 if a3 == 0\n 67475: a0 = u64 [sp + 0x40]\n 67478: s1 = a0 if a2 == 0\n 67481: a0 = u64 [sp + 0x38]\n 67484: a1 = u64 [sp + 0x30]\n 67487: jump [t0]\n      : @2592 (gas: 8)\n 67489: a0 = u64 [a2 + 0x8]\n 67492: a1 = i32 [a2 + 0x10]\n 67495: a2 = u64 [a2]\n 67497: a3 = reverse a0\n 67499: a0 = a3 << 0x20\n 67502: a1 = reverse a1\n 67504: a1 = a1 >> 0x20\n 67507: jump [t0]\n      : @2593 (gas: 16)\n 67509: a5 = s1 + 0x100\n 67513: a2 = u64 [a5 + 0xd8]\n 67517: a0 = u64 [a2 + 0x8]\n 67520: a1 = i32 [a2 + 0x10]\n 67523: a2 = u64 [a2]\n 67525: a0 = reverse a0\n 67527: a3 = a0 << 0x20\n 67530: a1 = reverse a1\n 67532: a1 = a1 >> 0x20\n 67535: a1 = a1 | a3\n 67538: a0 = a0 >> 0x20\n 67541: a2 = reverse a2\n 67543: a3 = a2 << 0x20\n 67546: a0 = a0 | a3\n 67549: a2 = a2 >> 0x20\n 67552: jump [t0]\n      : @2594 (gas: 17)\n 67554: a2 = u64 [sp + 0x98]\n 67558: a3 = a2 <u 0x80\n 67562: a4 = u64 [sp + 0xa0]\n 67566: a1 = a4 if a3 != 0\n 67569: a1 = s1 if a2 == 0\n 67572: u64 [sp + 0xa0] = a1\n 67576: a1 = u64 [sp + 0xa8]\n 67580: a4 = u64 [sp + 0x78]\n 67583: a1 = a1 | a4\n 67586: a1 = a0 if a3 == 0\n 67589: s1 = a3\n 67591: a0 = u64 [sp + 0x38]\n 67594: a1 = a0 if a2 == 0\n 67597: u64 [sp + 0xa8] = a1\n 67601: a0 = u64 [sp + 0x40]\n 67604: a1 = u64 [sp + 0x48]\n 67607: jump [t0]\n      : @2595 (gas: 15)\n 67609: a0 = i32 [a2 + 0x10]\n 67612: a2 = u64 [a2]\n 67614: a1 = reverse a1\n 67616: a3 = a1 << 0x20\n 67619: a0 = reverse a0\n 67621: a0 = a0 >> 0x20\n 67624: a3 = a3 | a0\n 67627: a1 = a1 >> 0x20\n 67630: a0 = reverse a2\n 67632: a2 = a0 << 0x20\n 67635: a1 = a1 | a2\n 67638: a2 = a0 >> 0x20\n 67641: i32 a0 = a4 + 0x4\n 67644: a4 = 0x4000\n 67648: jump [t0]\n      : @2596 (gas: 7)\n 67650: a0 = 0xffffffbc\n 67660: a0 = s1 <u a0\n 67663: a1 = u64 [sp + 0x10]\n 67666: a0 = 0 if a1 != 0\n 67668: a1 = u64 [sp + 0x8]\n 67671: a0 = 0 if a1 != 0\n 67673: jump [t0]\n      : @2597 (gas: 8)\n 67675: a0 = a0 | a2\n 67678: a2 = a3 | a1\n 67681: a2 = a2 | a0\n 67684: a2 = a2 >> 0x20\n 67687: a0 = a0 | a1\n 67690: a0 = a0 << 0x20\n 67693: a0 = a0 | a2\n 67696: jump [t0]\n      : @2598 (gas: 12)\n 67698: a3 = u64 [s1 + 0x218]\n 67702: a0 = u64 [a3 + 0x18]\n 67705: a1 = u64 [a3 + 0x10]\n 67708: a2 = u64 [a3 + 0x8]\n 67711: a3 = u64 [a3]\n 67713: a0 = reverse a0\n 67715: a1 = reverse a1\n 67717: a2 = reverse a2\n 67719: a3 = reverse a3\n 67721: a4 = s1 + 0x4998\n 67725: a5 = a4 + 0x500\n 67729: jump [t0]\n      : @2599 (gas: 8)\n 67731: i32 a1 = a1 + 0\n 67733: u64 [s1 + 0x208] = a1\n 67737: a1 = a3\n 67739: u64 [s1 + 0x1f0] = a3\n 67743: i32 a0 = a3 + 0\n 67745: u64 [s1 + 0x218] = a0\n 67749: a0 = u64 [s1 + 0x210]\n 67753: jump [t0]\n      : @2600 (gas: 11)\n 67755: a0 = u64 [a3 + 0x18]\n 67758: a1 = u64 [a3 + 0x10]\n 67761: a2 = u64 [a3 + 0x8]\n 67764: a3 = u64 [a3]\n 67766: a0 = reverse a0\n 67768: a1 = reverse a1\n 67770: a2 = reverse a2\n 67772: a3 = reverse a3\n 67774: a4 = s1 + 0x4998\n 67778: a5 = a4 + 0x400\n 67782: jump [t0]\n      : @2601 (gas: 10)\n 67784: a0 = u64 [s1 + 0x200]\n 67788: a1 = u64 [s1 + 0x1f8]\n 67792: a0 = a0 | a1\n 67795: a1 = 0xfffffffc\n 67805: a2 = u64 [s1 + 0x208]\n 67809: a1 = a2 <u a1\n 67812: a2 = u64 [s1 + 0x1f0]\n 67816: a1 = 0 if a2 != 0\n 67818: a1 = 0 if a0 != 0\n 67820: jump [t0]\n      : @2602 (gas: 12)\n 67822: a0 = u64 [s1 + 0x68]\n 67825: a1 = u64 [s1 + 0x70]\n 67828: a0 = a0 | a1\n 67831: a2 = u64 [s1 + 0x60]\n 67834: a1 = u64 [s1 + 0x78]\n 67837: a1 = a1 | a2\n 67840: a1 = a1 | a0\n 67843: a1 = a1 >> 0x20\n 67846: a0 = a0 | a2\n 67849: a0 = a0 << 0x20\n 67852: a0 = a0 | a1\n 67855: jump [t0]\n      : @2603 (gas: 8)\n 67857: a0 = s1 + 0xffffffffffffffdc\n 67860: a1 = u64 [sp + 0x18]\n 67863: a0 = a1 <u a0\n 67866: a1 = u64 [sp + 0x10]\n 67869: a0 = 0 if a1 != 0\n 67871: a1 = u64 [sp + 0x8]\n 67874: a0 = 0 if a1 != 0\n 67876: jump [t0]\n      : @2604 (gas: 8)\n 67878: u64 [sp + 144] = 0\n 67882: u64 [sp + 136] = 0\n 67886: u64 [sp + 128] = 0\n 67890: a0 = 0x8c379a000000000\n 67900: a1 = sp + 0x80\n 67904: u64 [sp + 0x98] = a0\n 67908: a0 = u64 [sp + 0x18]\n 67911: jump [t0]\n      : @2605 (gas: 11)\n 67913: a2 = reverse a2\n 67915: a3 = a2 << 0x20\n 67918: a0 = a0 >> 0x20\n 67921: a0 = a0 | a3\n 67924: a2 = a2 >> 0x20\n 67927: a3 = u64 [s1 + 0x208]\n 67931: u64 [a3 + 0x8] = a0\n 67934: u64 [a3] = a1\n 67936: u32 [a3 + 0x10] = a2\n 67939: a0 = s1 + 0x5198\n 67943: jump [t0]\n      : @2606 (gas: 11)\n 67945: a2 = reverse a2\n 67947: a3 = a2 << 0x20\n 67950: a0 = a0 >> 0x20\n 67953: a0 = a0 | a3\n 67956: a2 = a2 >> 0x20\n 67959: a3 = u64 [s1 + 0x1f0]\n 67963: u64 [a3 + 0x8] = a0\n 67966: u64 [a3] = a1\n 67968: u32 [a3 + 0x10] = a2\n 67971: a0 = s1 + 0x5198\n 67975: jump [t0]\n      : @2607 (gas: 11)\n 67977: a2 = reverse a2\n 67979: a3 = a2 << 0x20\n 67982: a0 = a0 >> 0x20\n 67985: a0 = a0 | a3\n 67988: a2 = a2 >> 0x20\n 67991: a3 = u64 [s1 + 0x1e8]\n 67995: u64 [a3 + 0x8] = a0\n 67998: u64 [a3] = a1\n 68000: u32 [a3 + 0x10] = a2\n 68003: a0 = s1 + 0x4998\n 68007: jump [t0]\n      : @2608 (gas: 9)\n 68009: u64 [s1 + 0x260] = a4\n 68013: u64 [s1 + 0x298] = a2\n 68017: u64 [s1 + 0x290] = a1\n 68021: u64 [s1 + 0x288] = a0\n 68025: a0 = s1 + 0x2a0\n 68029: a1 = s1 + 0x280\n 68033: a2 = s1 + 0x260\n 68037: u64 [s1 + 0x280] = a3\n 68041: jump [t0]\n      : @2609 (gas: 11)\n 68043: a3 = s1 + 0x200\n 68047: a0 = u64 [a3 + 0x8]\n 68050: a1 = u64 [a3]\n 68052: a0 = a0 | a1\n 68055: a1 = 0xffffffe0\n 68065: a2 = u64 [a3 + 0x18]\n 68068: a1 = a2 <u a1\n 68071: a2 = u64 [a3 + 0x10]\n 68074: a1 = 0 if a2 != 0\n 68076: a1 = 0 if a0 != 0\n 68078: jump [t0]\n      : @2610 (gas: 9)\n 68080: u64 [s1 + 0x200] = a4\n 68084: u64 [s1 + 0x238] = a2\n 68088: u64 [s1 + 0x230] = a1\n 68092: u64 [s1 + 0x228] = a0\n 68096: a0 = s1 + 0x240\n 68100: a1 = s1 + 0x220\n 68104: a2 = s1 + 0x200\n 68108: u64 [s1 + 0x220] = a3\n 68112: jump [t0]\n      : @2611 (gas: 6)\n 68114: a0 = a0 | a1\n 68117: a1 = a2 ^ 0x1\n 68120: a1 = a1 | a3\n 68123: a0 = a0 | a1\n 68126: a0 = a0 <u 0x1\n 68129: jump [t0]\n      : @2612 (gas: 7)\n 68131: a1 = a1 | s1\n 68134: a1 = a1 | a0\n 68137: a1 = a1 >> 0x20\n 68140: a0 = a0 | s1\n 68143: a0 = a0 << 0x20\n 68146: a0 = a0 | a1\n 68149: jump [t0]\n      : @2613 (gas: 5)\n 68151: a1 = u64 [s1 + 0x1e8]\n 68155: a0 = 0 if a1 != 0\n 68157: a1 = u64 [s1 + 0x200]\n 68161: a0 = 0 if a1 != 0\n 68163: jump [t0]\n      : @2614 (gas: 11)\n 68165: a2 = u64 [sp + 0xa8]\n 68169: a2 = a2 | s1\n 68172: s1 = 0x100000000\n 68182: a0 = 0xfffffffc\n 68192: a1 = u64 [sp + 0xb8]\n 68196: a0 = a1 <u a0\n 68199: a1 = u64 [sp + 0xb0]\n 68203: a0 = 0 if a1 != 0\n 68205: u64 [sp + 0xa8] = a2\n 68209: a0 = 0 if a2 != 0\n 68211: jump [t0]\n      : @2615 (gas: 13)\n 68213: a0 = u64 [s1 + 0x218]\n 68217: a1 = u64 [a0 + 0x10]\n 68220: a2 = u64 [a0 + 0x18]\n 68223: a3 = u64 [a0 + 0x8]\n 68226: a0 = u64 [a0]\n 68228: a4 = a3 | a2\n 68231: a5 = a0 | a1\n 68234: a5 = a5 | a4\n 68237: a5 = a5 >> 0x20\n 68240: a4 = a4 | a1\n 68243: a4 = a4 << 0x20\n 68246: a4 = a4 | a5\n 68249: jump [t0]\n      : @2616 (gas: 12)\n 68251: u64 [s1 + 0x200] = a0\n 68255: u64 [s1 + 0x1f0] = a3\n 68259: a0 = a0 | a3\n 68262: u64 [s1 + 0x208] = a1\n 68266: a1 = a1 | a2\n 68269: a1 = a1 | a0\n 68272: a1 = a1 >> 0x20\n 68275: u64 [s1 + 0x1f8] = a2\n 68279: a0 = a0 | a2\n 68282: a0 = a0 << 0x20\n 68285: a0 = a0 | a1\n 68288: jump [t0]\n      : @2617 (gas: 11)\n 68290: a2 = reverse a2\n 68292: a3 = a2 << 0x20\n 68295: a0 = a0 >> 0x20\n 68298: a0 = a0 | a3\n 68301: a2 = a2 >> 0x20\n 68304: a3 = u64 [s1 + 0xf8]\n 68308: u64 [a3 + 0x8] = a0\n 68311: u64 [a3] = a1\n 68313: u32 [a3 + 0x10] = a2\n 68316: a0 = s1 + 0x4198\n 68320: jump [t0]\n      : @2618 (gas: 9)\n 68322: a2 = s1 + 0x200\n 68326: a3 = u64 [a2 + 0x18]\n 68329: a0 = 0xffffffbc\n 68339: a0 = a3 <u a0\n 68342: a1 = u64 [a2 + 0x10]\n 68345: a0 = 0 if a1 != 0\n 68347: a1 = u64 [a2 + 0x8]\n 68350: a0 = 0 if a1 != 0\n 68352: jump [t0]\n      : @2619 (gas: 13)\n 68354: a1 = s1 + 0x100\n 68358: a4 = u64 [a1 + 0xe8]\n 68362: a2 = u64 [a1 + 0xe0]\n 68366: a0 = u64 [a1 + 0xf8]\n 68370: a0 = a0 | a4\n 68373: a3 = u64 [a1 + 0xf0]\n 68377: a1 = a2 | a3\n 68380: a1 = a1 | a0\n 68383: a1 = a1 >> 0x20\n 68386: a0 = a0 | a3\n 68389: a0 = a0 << 0x20\n 68392: a0 = a0 | a1\n 68395: jump [t0]\n      : @2620 (gas: 10)\n 68397: a3 = s1 + 0x200\n 68401: a2 = u64 [a3 + 0x18]\n 68404: a0 = u64 [a3]\n 68406: a0 = a0 + 0xffffffffffffff9c\n 68409: a0 = a2 <u a0\n 68412: a1 = u64 [a3 + 0x10]\n 68415: a0 = 0 if a1 != 0\n 68417: a1 = u64 [a3 + 0x8]\n 68420: a0 = 0 if a1 != 0\n 68422: jump [t0]\n      : @2621 (gas: 10)\n 68424: a3 = s1 + 0x200\n 68428: a1 = u64 [a3 + 0x18]\n 68431: a0 = u64 [a3]\n 68433: a0 = a0 + 0xffffffffffffffdc\n 68436: a0 = a1 <u a0\n 68439: a2 = u64 [a3 + 0x10]\n 68442: a0 = 0 if a2 != 0\n 68444: a2 = u64 [a3 + 0x8]\n 68447: a0 = 0 if a2 != 0\n 68449: jump [t0]\n      : @2622 (gas: 8)\n 68451: a1 = sp + 0xffffffffffffffe0\n 68454: a2 = a1 & 0xffffffffffffffe0\n 68457: u64 [s1 + 0x70] = a2\n 68460: sp = a2\n 68462: i32 a0 = a0 + 0\n 68464: a1 = i32 [s1 + 0x78]\n 68467: i32 a2 = a2 + 0\n 68469: jump [t0]\n      : @2623 (gas: 10)\n 68471: a0 = u64 [sp + 0x10]\n 68474: a1 = u64 [sp + 0x18]\n 68477: a2 = 0x100000000\n 68487: a2 = a2 ^ a0\n 68490: a2 = a2 | a1\n 68493: a3 = a0 >> 0x20\n 68496: a3 = a3 <u 0x1\n 68499: a3 = 0 if a1 != 0\n 68501: a3 = 0 if a2 == 0\n 68503: jump [t0]\n      : @2624 (gas: 9)\n 68505: a0 = a0 + 0x40\n 68508: a1 = u64 [sp + 0x48]\n 68511: a1 = clz a1\n 68513: a2 = u64 [sp + 0x48]\n 68516: a1 = a0 if a2 == 0\n 68519: a0 = a1 + 0x80\n 68523: a2 = ra | a5\n 68526: a4 = a0 if a2 == 0\n 68529: jump [t0]\n      : @2625 (gas: 8)\n 68531: a0 = u64 [sp + 0x18]\n 68534: i32 a0 = a0 + 0x4\n 68537: u64 [sp + 120] = 0\n 68540: u64 [sp + 112] = 0\n 68543: u64 [sp + 96] = 0x20\n 68547: a1 = sp + 0x60\n 68550: u64 [sp + 104] = 0\n 68553: jump [t0]\n      : @2626 (gas: 4)\n 68555: i32 a1 = a0 + 0\n 68557: a0 = 0x1\n 68560: a2 = 0x64\n 68563: jump [t0]\n      : @2627 (gas: 13)\n 68565: a3 = s1 + 0x200\n 68569: a0 = u64 [a3]\n 68571: a1 = u64 [a3 + 0x10]\n 68574: a0 = a0 | a1\n 68577: a2 = u64 [a3 + 0x8]\n 68580: a1 = u64 [a3 + 0x18]\n 68583: a1 = a1 | a2\n 68586: a1 = a1 | a0\n 68589: a1 = a1 >> 0x20\n 68592: a0 = a0 | a2\n 68595: a0 = a0 << 0x20\n 68598: a0 = a0 | a1\n 68601: jump [t0]\n      : @2628 (gas: 12)\n 68603: a2 = u64 [sp + 0x80]\n 68607: a3 = u64 [sp + 0x88]\n 68611: a5 = u64 [sp + 0x90]\n 68615: a5 = a5 | a3\n 68618: a4 = u64 [sp + 0xb8]\n 68622: a4 = a4 | a2\n 68625: a4 = a4 | a5\n 68628: a1 = 0 if s1 == 0\n 68630: u64 [sp + 0x98] = a1\n 68634: a0 = 0 if s1 == 0\n 68636: u64 [sp + 0xb0] = a0\n 68640: jump [t0]\n      : @2629 (gas: 12)\n 68642: u64 [a3] = ra\n 68644: u64 [a3 + 0x8] = a1\n 68647: a0 = u64 [sp + 0x38]\n 68650: u64 [a3 + 0x10] = a0\n 68653: a0 = u64 [sp + 0x30]\n 68656: u64 [a3 + 0x18] = a0\n 68659: sp = s0 + 0xfffffffffffffe40\n 68663: ra = u64 [sp + 0x1b8]\n 68667: s0 = u64 [sp + 0x1b0]\n 68671: s1 = u64 [sp + 0x1a8]\n 68675: sp = sp + 0x1c0\n 68679: jump [t0]\n      : @2630 (gas: 6)\n 68681: a0 = u64 [a3 + 0x18]\n 68684: a1 = u64 [a3 + 0x10]\n 68687: a2 = u64 [a3 + 0x8]\n 68690: a3 = u64 [a3]\n 68692: a0 = reverse a0\n 68694: jump [t0]\n      : @2631 (gas: 9)\n 68696: a0 = u64 [a3 + 0x18]\n 68699: a1 = u64 [a3 + 0x10]\n 68702: a2 = u64 [a3 + 0x8]\n 68705: a3 = u64 [a3]\n 68707: a0 = reverse a0\n 68709: a1 = reverse a1\n 68711: a2 = reverse a2\n 68713: a3 = reverse a3\n 68715: jump [t0]\n      : @2632 (gas: 9)\n 68717: a0 = u64 [a3 + 0x18]\n 68720: a1 = u64 [a3 + 0x10]\n 68723: a2 = u64 [a3 + 0x8]\n 68726: a3 = u64 [a3]\n 68728: a4 = reverse a0\n 68730: a1 = reverse a1\n 68732: a2 = reverse a2\n 68734: a3 = reverse a3\n 68736: jump [t0]\n      : @2633 (gas: 12)\n 68738: sp = sp + 0xfffffffffffffe40\n 68742: u64 [sp + 0x1b8] = ra\n 68746: u64 [sp + 0x1b0] = s0\n 68750: u64 [sp + 0x1a8] = s1\n 68754: s0 = sp + 0x1c0\n 68758: sp = sp & 0xfffffffffffffff0\n 68761: u64 [sp + 0x28] = a0\n 68764: a4 = u64 [a1 + 0x18]\n 68767: s1 = u64 [a1]\n 68769: a2 = u64 [a1 + 0x8]\n 68772: a5 = u64 [a1 + 0x10]\n 68775: jump [t0]\n      : @2634 (gas: 9)\n 68777: a1 = u64 [a2 + 0x40]\n 68780: u64 [s1 + 0x200] = a1\n 68784: a1 = u64 [a2 + 0x38]\n 68787: u64 [s1 + 0x208] = a1\n 68791: a1 = u64 [a2 + 0x30]\n 68794: u64 [s1 + 0x1f8] = a1\n 68798: a0 = u64 [a2 + 0x28]\n 68801: u64 [s1 + 0x210] = a0\n 68805: jump [t0]\n      : @2635 (gas: 9)\n 68807: a1 = u64 [a2 + 0xc0]\n 68811: u64 [s1 + 0x200] = a1\n 68815: a1 = u64 [a2 + 0xb8]\n 68819: u64 [s1 + 0x208] = a1\n 68823: a1 = u64 [a2 + 0xb0]\n 68827: u64 [s1 + 0x1f8] = a1\n 68831: a0 = u64 [a2 + 0xa8]\n 68835: u64 [s1 + 0x210] = a0\n 68839: jump [t0]\n      : @2636 (gas: 7)\n 68841: a1 = a1 + s1\n 68844: a1 = a1 << 0x20\n 68847: a5 = a1 | a0\n 68850: a1 = 0xffffffffffffffff\n 68853: a2 = 0xffffffffffffffff\n 68856: a0 = u64 [s1 + 0x128]\n 68860: jump [t0]\n      : @2637 (gas: 7)\n 68862: a2 = a2 + s1\n 68865: a2 = a2 << 0x20\n 68868: a3 = a2 | a1\n 68871: a1 = u64 [s1 + 0x1d8]\n 68875: a1 = a1 << 0x20\n 68878: a1 = a1 >> 0x20\n 68881: jump [t0]\n      : @2638 (gas: 7)\n 68883: a0 = 0xffffffbc\n 68893: a0 = s1 <u a0\n 68896: a1 = u64 [sp + 0xb0]\n 68900: a0 = 0 if a1 != 0\n 68902: a1 = u64 [sp + 0xa8]\n 68906: a0 = 0 if a1 != 0\n 68908: jump [t0]\n      : @2639 (gas: 7)\n 68910: u64 [a0 + 1824] = 0\n 68914: u64 [a0 + 1816] = 0\n 68918: u64 [a0 + 1808] = 0\n 68922: u64 [a0 + 1800] = 0\n 68926: a1 = 0x24\n 68929: a0 = u64 [s1 + 0x210]\n 68933: jump [t0]\n      : @2640 (gas: 10)\n 68935: a1 = u64 [sp + 0xa0]\n 68939: a3 = a4\n 68941: a4 = a1 >> 0x3f\n 68944: a4 = a4 | a2\n 68947: u64 [sp + 0x78] = a4\n 68950: a2 = u64 [sp + 0x50]\n 68953: ra = a2 ^ t1\n 68956: t2 = a2 <u t1\n 68959: a5 = u64 [sp + 0x58]\n 68962: jump [t0]\n      : @2641 (gas: 7)\n 68964: a1 = u64 [s1 + 0x210]\n 68968: a0 = a1 <u a0\n 68971: a1 = u64 [s1 + 0x208]\n 68975: a0 = 0 if a1 != 0\n 68977: a1 = u64 [s1 + 0x1f8]\n 68981: a0 = 0 if a1 != 0\n 68983: jump [t0]\n      : @2642 (gas: 12)\n 68985: a2 = u64 [sp]\n 68987: a3 = u64 [sp + 0x8]\n 68990: u64 [s1] = a2\n 68992: u64 [s1 + 0x8] = a3\n 68995: u64 [s1 + 0x10] = a0\n 68998: u64 [s1 + 0x18] = a1\n 69001: sp = s0 + 0xffffffffffffffc0\n 69004: ra = u64 [sp + 0x38]\n 69007: s0 = u64 [sp + 0x30]\n 69010: s1 = u64 [sp + 0x28]\n 69013: sp = sp + 0x40\n 69016: jump [t0]\n      : @2643 (gas: 8)\n 69018: a0 = a0 | a2\n 69021: a2 = a1 | a3\n 69024: a2 = a2 | a0\n 69027: a2 = a2 >> 0x20\n 69030: a0 = a0 | a3\n 69033: a0 = a0 << 0x20\n 69036: a0 = a0 | a2\n 69039: jump [t0]\n      : @2644 (gas: 8)\n 69041: i32 a0 = a0 + 0x198\n 69045: a3 = s1 + a0\n 69048: a4 = a3 + 0x200\n 69052: u64 [a4 + 0x8] = a1\n 69055: a0 = u64 [s1 + 0x210]\n 69059: u64 [a4 + 0x28] = a0\n 69062: u64 [a3 + 528] = 0\n 69066: jump [t0]\n      : @2645 (gas: 12)\n 69068: a4 = u64 [a3 + 0x10]\n 69071: a1 = u64 [a3 + 0x18]\n 69074: a2 = u64 [a3 + 0x8]\n 69077: a0 = u64 [a3]\n 69079: a1 = a1 | a2\n 69082: a2 = a0 | a4\n 69085: a2 = a2 | a1\n 69088: a2 = a2 >> 0x20\n 69091: a1 = a1 | a4\n 69094: a1 = a1 << 0x20\n 69097: a1 = a1 | a2\n 69100: jump [t0]\n      : @2646 (gas: 9)\n 69102: a1 = u64 [sp]\n 69104: a1 = reverse a1\n 69106: a2 = u64 [sp + 0x8]\n 69109: a2 = reverse a2\n 69111: a3 = u64 [sp + 0x10]\n 69114: a3 = reverse a3\n 69116: a4 = u64 [sp + 0x18]\n 69119: a4 = reverse a4\n 69121: jump [t0]\n      : @2647 (gas: 9)\n 69123: u64 [sp + 0x78] = a0\n 69126: a0 = u64 [sp + 0xa0]\n 69130: a0 = a0 | a1\n 69133: u64 [sp + 0xa0] = a0\n 69137: a1 = u64 [sp + 0xb0]\n 69141: a2 = 0x7f - a1\n 69144: a0 = u64 [sp + 0x40]\n 69147: a1 = u64 [sp + 0x48]\n 69150: jump [t0]\n      : @2648 (gas: 7)\n 69152: a0 = u64 [s1 + 0x1a8]\n 69156: a0 = reverse a0\n 69158: a1 = a0 << 0x20\n 69161: a2 = u64 [s1 + 0x1a0]\n 69165: a2 = reverse a2\n 69167: a2 = a2 >> 0x20\n 69170: jump [t0]\n      : @2649 (gas: 11)\n 69172: a0 = u64 [a2 + 0x80]\n 69176: a1 = s1 + 0x200\n 69180: u64 [a1 + 0x18] = a0\n 69183: a0 = u64 [a2 + 0x78]\n 69186: u64 [a1 + 0x10] = a0\n 69189: a0 = u64 [a2 + 0x70]\n 69192: u64 [a1 + 0x8] = a0\n 69195: a0 = u64 [a2 + 0x68]\n 69198: u64 [a1] = a0\n 69200: a0 = 0x2000\n 69204: jump [t0]\n      : @2650 (gas: 8)\n 69206: a1 = sp + 0xffffffffffffffe0\n 69209: a2 = a1 & 0xffffffffffffffe0\n 69212: u64 [s1 + 0x208] = a2\n 69216: sp = a2\n 69218: i32 a0 = a0 + 0\n 69220: a1 = i32 [s1 + 0x210]\n 69224: i32 a2 = a2 + 0\n 69226: jump [t0]\n      : @2651 (gas: 11)\n 69228: a0 = u64 [a2 + 0x20]\n 69231: a1 = s1 + 0x200\n 69235: u64 [a1 + 0x18] = a0\n 69238: a0 = u64 [a2 + 0x18]\n 69241: u64 [a1 + 0x10] = a0\n 69244: a0 = u64 [a2 + 0x10]\n 69247: u64 [a1 + 0x8] = a0\n 69250: a0 = u64 [a2 + 0x8]\n 69253: u64 [a1] = a0\n 69255: a0 = 0x2000\n 69259: jump [t0]\n      : @2652 (gas: 6)\n 69261: a2 = 0x100000000\n 69271: a0 = 0xffffffbc\n 69281: a0 = a1 <u a0\n 69284: a0 = 0 if a3 != 0\n 69286: a0 = 0 if a4 != 0\n 69288: jump [t0]\n      : @2653 (gas: 8)\n 69290: u64 [sp + 208] = 0\n 69294: u64 [sp + 200] = 0\n 69298: u64 [sp + 192] = 0\n 69302: a0 = 0x4e487b7100000000\n 69312: a1 = sp + 0xc0\n 69316: u64 [sp + 0xd8] = a0\n 69320: a0 = 0\n 69322: jump [t0]\n      : @2654 (gas: 7)\n 69324: a0 = a0 <u 0x1\n 69327: u64 [sp + 0xb8] = a0\n 69331: a0 = clz ra\n 69333: a0 = a0 + 0x40\n 69336: a4 = clz a5\n 69338: a4 = a0 if a5 == 0\n 69341: jump [t0]\n      : @2655 (gas: 8)\n 69343: a0 = s1 + 0xffffffffffffffdc\n 69346: a1 = u64 [sp + 0xb8]\n 69350: a0 = a1 <u a0\n 69353: a1 = u64 [sp + 0xb0]\n 69357: a0 = 0 if a1 != 0\n 69359: a1 = u64 [sp + 0xa8]\n 69363: a0 = 0 if a1 != 0\n 69365: jump [t0]\n      : @2656 (gas: 8)\n 69367: u64 [sp + 400] = 0\n 69371: u64 [sp + 392] = 0\n 69375: u64 [sp + 384] = 0\n 69379: a0 = 0x4e487b7100000000\n 69389: a1 = sp + 0x180\n 69393: u64 [sp + 0x198] = a0\n 69397: a0 = 0\n 69399: jump [t0]\n      : @2657 (gas: 8)\n 69401: u64 [sp + 304] = 0\n 69405: u64 [sp + 296] = 0\n 69409: u64 [sp + 288] = 0\n 69413: a0 = 0x8c379a000000000\n 69423: a1 = sp + 0x120\n 69427: u64 [sp + 0x138] = a0\n 69431: a0 = u64 [sp + 0xb8]\n 69435: jump [t0]\n      : @2658 (gas: 8)\n 69437: u64 [sp + 64] = 0\n 69440: u64 [sp + 56] = 0\n 69443: u64 [sp + 48] = 0\n 69446: a0 = 0x4e487b7100000000\n 69456: a1 = sp + 0x30\n 69459: u64 [sp + 0x48] = a0\n 69462: a0 = 0\n 69464: jump [t0]\n      : @2659 (gas: 6)\n 69466: sp = s0 + 0xffffffffffffffa0\n 69469: ra = u64 [sp + 0x58]\n 69472: s0 = u64 [sp + 0x50]\n 69475: s1 = u64 [sp + 0x48]\n 69478: sp = sp + 0x60\n 69481: jump [t0]\n      : @2660 (gas: 4)\n 69483: a0 = 0x3198\n 69487: a1 = s1 + a0\n 69490: a2 = a1 + 0x200\n 69494: jump [t0]\n      : @2661 (gas: 6)\n 69496: u64 [a1 + 1504] = 0\n 69500: u64 [a1 + 1496] = 0\n 69504: u64 [a1 + 1480] = 0x1\n 69509: a2 = a1\n 69511: a0 = 0x20\n 69514: jump [t0]\n      : @2662 (gas: 6)\n 69516: a1 = a1 + s1\n 69519: a1 = a1 << 0x20\n 69522: a5 = a1 | a0\n 69525: a1 = 0xffffffffffffffff\n 69528: a2 = 0xffffffffffffffff\n 69531: jump [t0]\n      : @2663 (gas: 7)\n 69533: a0 = reverse a0\n 69535: a1 = a0 << 0x20\n 69538: a2 = u64 [s1 + 0x1f8]\n 69542: a2 = reverse a2\n 69544: a2 = a2 >> 0x20\n 69547: a1 = a1 | a2\n 69550: jump [t0]\n      : @2664 (gas: 4)\n 69552: a0 = 0x1198\n 69556: a3 = s1 + a0\n 69559: a5 = a3 + 0x300\n 69563: jump [t0]\n      : @2665 (gas: 8)\n 69565: a0 = u64 [a4 + 0xd8]\n 69569: a1 = u64 [a4 + 0xe0]\n 69573: a2 = u64 [a4 + 0xd0]\n 69577: a3 = u64 [a4 + 0xc8]\n 69581: a1 = a1 | a2\n 69584: a0 = a0 | a3\n 69587: a0 = a0 | a1\n 69590: jump [t0]\n      : @2666 (gas: 7)\n 69592: i32 a4 = a4 + 0x198\n 69596: a5 = s1 + a4\n 69599: u64 [a5 + 896] = 0\n 69603: a4 = a5 + 0x300\n 69607: u64 [a4 + 0x78] = a2\n 69610: u64 [a4 + 0x70] = a1\n 69613: jump [t0]\n      : @2667 (gas: 7)\n 69615: i32 a4 = a4 + 0x198\n 69619: a5 = s1 + a4\n 69622: u64 [a5 + 640] = 0\n 69626: a4 = a5 + 0x200\n 69630: u64 [a4 + 0x78] = a1\n 69633: u64 [a4 + 0x70] = a2\n 69636: jump [t0]\n      : @2668 (gas: 6)\n 69638: u32 [a1 + 1832] = 0x20\n 69643: u64 [a1 + 1888] = 0\n 69647: u64 [a1 + 1880] = 0\n 69651: u64 [a1 + 1872] = 0\n 69655: u64 [a1 + 1864] = 0\n 69659: jump [t0]\n      : @2669 (gas: 4)\n 69661: i32 a0 = a0 + 0xfffffffffffff998\n 69665: a3 = s1 + a0\n 69668: a4 = a3 + 0x500\n 69672: jump [t0]\n      : @2670 (gas: 4)\n 69674: i32 a0 = a0 + 0xfffffffffffff998\n 69678: a1 = s1 + a0\n 69681: a2 = a1 + 0x100\n 69685: jump [t0]\n      : @2671 (gas: 6)\n 69687: u64 [a1 + 1312] = 0\n 69691: u64 [a1 + 1304] = 0\n 69695: u64 [a1 + 1288] = 0x1\n 69700: a2 = a1\n 69702: a0 = 0x20\n 69705: jump [t0]\n      : @2672 (gas: 8)\n 69707: a0 = u64 [a4 + 0x38]\n 69710: a1 = u64 [a4 + 0x40]\n 69713: a2 = u64 [a4 + 0x30]\n 69716: a3 = u64 [a4 + 0x28]\n 69719: a1 = a1 | a2\n 69722: a0 = a0 | a3\n 69725: a0 = a0 | a1\n 69728: jump [t0]\n      : @2673 (gas: 7)\n 69730: u64 [sp + 0xd8] = a1\n 69734: u64 [sp + 0xd0] = a2\n 69738: a1 = 0x666c6f7700000000\n 69748: u64 [sp + 0xc8] = a1\n 69752: a1 = sp + 0xc0\n 69756: u64 [sp + 192] = 0\n 69760: jump [t0]\n      : @2674 (gas: 5)\n 69762: sp = a0\n 69764: i32 a2 = a0 + 0\n 69766: a1 = 0x40\n 69769: a0 = u64 [s1 + 0x70]\n 69772: jump [t0]\n      : @2675 (gas: 9)\n 69774: sp = sp + 0xffffffffffffffc0\n 69777: u64 [sp + 0x38] = ra\n 69780: u64 [sp + 0x30] = s0\n 69783: u64 [sp + 0x28] = s1\n 69786: s0 = sp + 0x40\n 69789: sp = sp & 0xffffffffffffffe0\n 69792: s1 = a0\n 69794: i32 a0 = sp + 0\n 69796: jump [t0]\n      : @2676 (gas: 6)\n 69798: u64 [a2 + 576] = 0\n 69802: u64 [a2 + 568] = 0\n 69806: u64 [a2 + 560] = 0\n 69810: u64 [a2 + 552] = 0\n 69814: a0 = s1 + 0x5000\n 69818: jump [t0]\n      : @2677 (gas: 2)\n 69820: a3 = a2 & 0x40\n 69823: jump @2681 if a3 != 0\n      : @2678 (gas: 1)\n 69826: jump @2680 if a2 == 0\n      : @2679 (gas: 6)\n 69829: i32 a3 = 0x40 - a2\n 69832: a3 = a1 << a3\n 69835: a1 = a1 >> a2\n 69838: a0 = a0 >> a2\n 69841: a0 = a0 | a3\n 69844: ret\n      : @2680 (gas: 1)\n 69846: ret\n      : @2681 (gas: 4)\n 69848: a0 = a2 + 0xffffffffffffffc0\n 69851: a0 = a1 >> a0\n 69854: a1 = 0\n 69856: ret\n      : @2682 (gas: 2)\n 69858: a3 = a2 & 0x40\n 69861: jump @2686 if a3 != 0\n      : @2683 (gas: 1)\n 69864: jump @2685 if a2 == 0\n      : @2684 (gas: 6)\n 69867: i32 a3 = 0x40 - a2\n 69870: a3 = a0 >> a3\n 69873: a0 = a0 << a2\n 69876: a1 = a1 << a2\n 69879: a1 = a1 | a3\n 69882: ret\n      : @2685 (gas: 1)\n 69884: ret\n      : @2686 (gas: 4)\n 69886: a1 = a2 + 0xffffffffffffffc0\n 69889: a1 = a0 << a1\n 69892: a0 = 0\n 69894: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "skim(address)": "bc25cf77",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": "/// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 2:\"contracts/UniswapV2Pair.sol\", 5:\"contracts/interfaces/IUniswapV2ERC20.sol\"\nobject \"UniswapV2Pair_1652\" {\n    code {\n        {\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            let memPtr_1 := mload(64)\n            finalize_allocation(memPtr_1, 64)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 10)\n            let _1 := add(memPtr_1, 32)\n            mstore(_1, \"Uniswap V2\")\n            /// @src 0:1327:1349  \"keccak256(bytes(name))\"\n            let expr := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _1, mload(/** @src 0:1327:1349  \"keccak256(bytes(name))\" */ memPtr_1))\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            let memPtr_2 := /** @src -1:-1:-1 */ 0\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            let memPtr_3 := mload(64)\n            finalize_allocation(memPtr_3, 64)\n            memPtr_2 := memPtr_3\n            mstore(memPtr_3, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 1)\n            let _2 := add(memPtr_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_2, \"1\")\n            /// @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\"\n            let expr_1 := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _2, mload(/** @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\" */ memPtr_3))\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            let expr_mpos := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            let _3 := add(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_3, /** @src 0:1176:1309  \"keccak256(...\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64), /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ expr)\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 96), expr_1)\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 128), /** @src 0:1044:1097  \"assembly {...\" */ chainid())\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160), /** @src 0:1439:1443  \"this\" */ address())\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            mstore(expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160)\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            finalize_allocation(expr_mpos, 192)\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            sstore(/** @src 0:1106:1468  \"DOMAIN_SEPARATOR = keccak256(...\" */ 0x03, /** @src 0:1125:1468  \"keccak256(...\" */ keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _3, mload(/** @src 0:1125:1468  \"keccak256(...\" */ expr_mpos)))\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            sstore(/** @src 2:1262:1263  \"1\" */ 0x0c, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 1)\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            sstore(/** @src 2:2482:2502  \"factory = msg.sender\" */ 0x05, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ or(and(sload(/** @src 2:2482:2502  \"factory = msg.sender\" */ 0x05), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ not(sub(shl(160, 1), 1))), /** @src 2:2492:2502  \"msg.sender\" */ caller()))\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"UniswapV2Pair_1652_deployed\")\n            codecopy(_4, dataoffset(\"UniswapV2Pair_1652_deployed\"), _5)\n            return(_4, _5)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 2:\"contracts/UniswapV2Pair.sol\", 8:\"contracts/libraries/Math.sol\", 9:\"contracts/libraries/SafeMath.sol\", 10:\"contracts/libraries/UQ112x112.sol\"\n    object \"UniswapV2Pair_1652_deployed\" {\n        code {\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x022c0d9f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let value_1 := calldataload(36)\n                        let value_2 := 0\n                        value_2 := calldataload(68)\n                        let _2 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _2)) { revert(0, 0) }\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                        /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                        require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 1))\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0)\n                        /// @src 2:7969:7983  \"amount0Out > 0\"\n                        let _3 := iszero(value)\n                        /// @src 2:7969:8001  \"amount0Out > 0 || amount1Out > 0\"\n                        let expr := /** @src 2:7969:7983  \"amount0Out > 0\" */ iszero(_3)\n                        let expr_1 := /** @src 2:7969:8001  \"amount0Out > 0 || amount1Out > 0\" */ expr\n                        if _3\n                        {\n                            expr := /** @src 2:7987:8001  \"amount1Out > 0\" */ iszero(iszero(value_1))\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 37)\n                            mstore(add(memPtr, 68), \"UniswapV2: INSUFFICIENT_OUTPUT_A\")\n                            mstore(add(memPtr, 100), \"MOUNT\")\n                            revert(memPtr, 132)\n                        }\n                        /// @src 2:8116:8129  \"getReserves()\"\n                        let expr_component, expr_component_1, expr_component_2 := fun_getReserves()\n                        /// @src 2:8175:8197  \"amount0Out < _reserve0\"\n                        let _4 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:8175:8197  \"amount0Out < _reserve0\" */ expr_component, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 2:8175:8223  \"amount0Out < _reserve0 && amount1Out < _reserve1\"\n                        let expr_2 := /** @src 2:8175:8197  \"amount0Out < _reserve0\" */ lt(value, _4)\n                        /// @src 2:8175:8223  \"amount0Out < _reserve0 && amount1Out < _reserve1\"\n                        if expr_2\n                        {\n                            expr_2 := /** @src 2:8201:8223  \"amount1Out < _reserve1\" */ lt(value_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:8201:8223  \"amount1Out < _reserve1\" */ expr_component_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff))\n                        }\n                        if iszero(expr_2)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"UniswapV2: INSUFFICIENT_LIQUIDIT\")\n                            mstore(add(memPtr_1, 100), \"Y\")\n                            revert(memPtr_1, 132)\n                        }\n                        let cleaned := and(sload(/** @src 2:8438:8444  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let cleaned_1 := and(sload(/** @src 2:8476:8482  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:8504:8534  \"to != _token0 && to != _token1\"\n                        let expr_3 := /** @src 2:8504:8517  \"to != _token0\" */ iszero(eq(_2, cleaned))\n                        /// @src 2:8504:8534  \"to != _token0 && to != _token1\"\n                        if expr_3\n                        {\n                            expr_3 := /** @src 2:8521:8534  \"to != _token1\" */ iszero(eq(_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ cleaned_1))\n                        }\n                        if iszero(expr_3)\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 21)\n                            mstore(add(memPtr_2, 68), \"UniswapV2: INVALID_TO\")\n                            revert(memPtr_2, 100)\n                        }\n                        /// @src 2:8574:8632  \"if (amount0Out > 0) _safeTransfer(_token0, to, amount0Out)\"\n                        if expr_1\n                        {\n                            /// @src 2:8621:8631  \"amount0Out\"\n                            fun_safeTransfer(cleaned, value_2, value)\n                        }\n                        /// @src 2:8680:8738  \"if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out)\"\n                        if /** @src 2:8684:8698  \"amount1Out > 0\" */ iszero(iszero(value_1))\n                        /// @src 2:8680:8738  \"if (amount1Out > 0) _safeTransfer(_token1, to, amount1Out)\"\n                        {\n                            /// @src 2:8727:8737  \"amount1Out\"\n                            fun_safeTransfer(cleaned_1, value_2, value_1)\n                        }\n                        /// @src 2:8786:8997  \"if (data.length > 0)...\"\n                        if /** @src 2:8790:8805  \"data.length > 0\" */ iszero(iszero(/** @src 2:8790:8801  \"data.length\" */ length))\n                        /// @src 2:8786:8997  \"if (data.length > 0)...\"\n                        {\n                            /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                            if iszero(extcodesize(_2))\n                            {\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                            let _5 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                            /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                            mstore(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(226, 0x04347a17))\n                            mstore(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ add(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:8879:8889  \"msg.sender\" */ caller())\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 36), value)\n                            mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 68), value_1)\n                            mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 100), 128)\n                            mstore(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 132), length)\n                            calldatacopy(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 164), add(offset, 36), length)\n                            mstore(add(add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ length), 164), 0)\n                            /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                            let _6 := call(gas(), _2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0, /** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, add(sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ add(/** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(add(length, 0x1f), not(31))), /** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 164), /** @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\" */ _5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0)\n                            /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                            if iszero(_6)\n                            {\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 2:8823:8997  \"IUniswapV2Callee(to).uniswapV2Call(...\"\n                            if _6\n                            {\n                                finalize_allocation(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0)\n                                _1 := 0\n                            }\n                        }\n                        /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _7 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ add(_7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:9056:9060  \"this\" */ address())\n                        /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _8 := staticcall(gas(), cleaned, _7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 36, /** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ _7, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_8)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, _1, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_4 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                        if _8\n                        {\n                            let _9 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _9 := returndatasize() }\n                            finalize_allocation(_7, _9)\n                            let value0 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ add(_7, _9), _7), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0 := mload(/** @src 2:9022:9062  \"IERC20(_token0).balanceOf(address(this))\" */ _7)\n                            expr_4 := value0\n                        }\n                        /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _10 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ add(_10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:9056:9060  \"this\" */ address())\n                        /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _11 := staticcall(gas(), cleaned_1, _10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 36, /** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ _10, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_11)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, _1, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_5 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                        if _11\n                        {\n                            let _12 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _12 := returndatasize() }\n                            finalize_allocation(_10, _12)\n                            let value0_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ add(_10, _12), _10), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_1 := mload(/** @src 2:9087:9127  \"IERC20(_token1).balanceOf(address(this))\" */ _10)\n                            expr_5 := value0_1\n                        }\n                        /// @src 2:9164:9197  \"balance0 > _reserve0 - amount0Out\"\n                        let expr_6 := gt(expr_4, /** @src 2:9175:9197  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_4, value))\n                        /// @src 2:9164:9263  \"balance0 > _reserve0 - amount0Out...\"\n                        let expr_7 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:9164:9263  \"balance0 > _reserve0 - amount0Out...\"\n                        switch expr_6\n                        case 0 {\n                            expr_7 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        }\n                        default /// @src 2:9164:9263  \"balance0 > _reserve0 - amount0Out...\"\n                        {\n                            expr_7 := /** @src 2:9212:9247  \"balance0 - (_reserve0 - amount0Out)\" */ checked_sub_uint256(expr_4, /** @src 2:9224:9246  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_4, value))\n                        }\n                        /// @src 2:9301:9323  \"_reserve1 - amount1Out\"\n                        let _13 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:9301:9323  \"_reserve1 - amount1Out\" */ expr_component_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 2:9290:9323  \"balance1 > _reserve1 - amount1Out\"\n                        let expr_8 := gt(expr_5, /** @src 2:9301:9323  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_13, value_1))\n                        /// @src 2:9290:9389  \"balance1 > _reserve1 - amount1Out...\"\n                        let expr_9 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:9290:9389  \"balance1 > _reserve1 - amount1Out...\"\n                        switch expr_8\n                        case 0 {\n                            expr_9 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        }\n                        default /// @src 2:9290:9389  \"balance1 > _reserve1 - amount1Out...\"\n                        {\n                            expr_9 := /** @src 2:9338:9373  \"balance1 - (_reserve1 - amount1Out)\" */ checked_sub_uint256(expr_5, /** @src 2:9350:9372  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_13, value_1))\n                        }\n                        /// @src 2:9420:9433  \"amount0In > 0\"\n                        let _14 := iszero(expr_7)\n                        /// @src 2:9420:9450  \"amount0In > 0 || amount1In > 0\"\n                        let expr_10 := /** @src 2:9420:9433  \"amount0In > 0\" */ iszero(_14)\n                        /// @src 2:9420:9450  \"amount0In > 0 || amount1In > 0\"\n                        if _14\n                        {\n                            expr_10 := /** @src 2:9437:9450  \"amount1In > 0\" */ iszero(iszero(expr_9))\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr_10)\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 36)\n                            mstore(add(memPtr_3, 68), \"UniswapV2: INSUFFICIENT_INPUT_AM\")\n                            mstore(add(memPtr_3, 100), \"OUNT\")\n                            revert(memPtr_3, 132)\n                        }\n                        /// @src 2:9636:9654  \"balance0.mul(1000)\"\n                        let expr_11 := fun_mul_19946(expr_4)\n                        /// @src 2:9636:9676  \"balance0.mul(1000).sub(amount0In.mul(3))\"\n                        let expr_12 := fun_sub(expr_11, /** @src 2:9659:9675  \"amount0In.mul(3)\" */ fun_mul_19947(expr_7))\n                        /// @src 2:9714:9732  \"balance1.mul(1000)\"\n                        let expr_13 := fun_mul_19946(expr_5)\n                        /// @src 2:9793:9831  \"balance0Adjusted.mul(balance1Adjusted)\"\n                        let expr_14 := fun_mul(expr_12, /** @src 2:9714:9754  \"balance1.mul(1000).sub(amount1In.mul(3))\" */ fun_sub(expr_13, /** @src 2:9737:9753  \"amount1In.mul(3)\" */ fun_mul_19947(expr_9)))\n                        /// @src 2:9851:9881  \"uint(_reserve0).mul(_reserve1)\"\n                        let expr_15 := fun_mul(_4, _13)\n                        /// @src 2:9851:9896  \"uint(_reserve0).mul(_reserve1).mul(1000 ** 2)\"\n                        let var_z := /** @src -1:-1:-1 */ _1\n                        /// @src 9:503:509  \"uint z\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        let expr_16 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 9:544:549  \"x * y\"\n                        let y := /** @src 2:9886:9895  \"1000 ** 2\" */ 0x0f4240\n                        /// @src 9:544:549  \"x * y\"\n                        let product := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        product := mul(/** @src 9:544:549  \"x * y\" */ expr_15, /** @src 2:9886:9895  \"1000 ** 2\" */ y)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ expr_15), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:9886:9895  \"1000 ** 2\" */ y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ expr_15))))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 9:540:549  \"z = x * y\"\n                        var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                        /// @src 9:539:554  \"(z = x * y) / y\"\n                        let r := /** @src -1:-1:-1 */ _1\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if _1\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(_1, 36)\n                        }\n                        r := div(product, /** @src 2:9886:9895  \"1000 ** 2\" */ y)\n                        /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                        expr_16 := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, expr_15)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr_16)\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 20)\n                            mstore(add(memPtr_4, 68), \"ds-math-mul-overflow\")\n                            revert(memPtr_4, 100)\n                        }\n                        if /** @src 2:9793:9896  \"balance0Adjusted.mul(balance1Adjusted) >=...\" */ lt(expr_14, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product)\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), /** @src 2:1303:1311  \"unlocked\" */ 0x0c)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(add(memPtr_5, 68), \"UniswapV2: K\")\n                            revert(memPtr_5, 100)\n                        }\n                        /// @src 2:10002:10011  \"_reserve1\"\n                        fun_update(expr_4, expr_5, expr_component, expr_component_1)\n                        /// @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\"\n                        let _15 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_15, expr_7)\n                        mstore(add(_15, 32), expr_9)\n                        mstore(add(_15, 64), value)\n                        mstore(add(_15, 96), value_1)\n                        /// @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\"\n                        log3(_15, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 128, /** @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\" */ 0xd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822, /** @src 2:10032:10042  \"msg.sender\" */ caller(), /** @src 2:10027:10093  \"Swap(msg.sender, amount0In, amount1In, amount0Out, amount1Out, to)\" */ _2)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 1)\n                        return(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    case /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x06fdde03 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let size := /** @src -1:-1:-1 */ _1\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _16 := _1\n                        _16 := /** @src -1:-1:-1 */ _1\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        size := 64\n                        let memPtr_6 := mload(64)\n                        finalize_allocation(memPtr_6, 64)\n                        mstore(memPtr_6, 10)\n                        mstore(add(memPtr_6, 32), \"Uniswap V2\")\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, memPtr_6), memPos))\n                    }\n                    case 0x0902f1ac {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret, ret_1, ret_2 := fun_getReserves()\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, and(ret, 0xffffffffffffffffffffffffffff))\n                        mstore(add(memPos_1, 32), and(ret_1, 0xffffffffffffffffffffffffffff))\n                        mstore(add(memPos_1, 64), and(ret_2, 0xffffffff))\n                        return(memPos_1, 96)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_2 := abi_decode_address()\n                        /// @src 0:2393:2398  \"value\"\n                        fun_approve(/** @src 0:2372:2382  \"msg.sender\" */ caller(), /** @src 0:2393:2398  \"value\" */ value0_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ calldataload(36))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x0dfe1681 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_3 := and(sload(/** @src 2:735:756  \"address public token0\" */ 6), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_3)\n                        return(memPos_3, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _17 := sload(_1)\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _17)\n                        return(memPos_4, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                        let value0_3 := abi_decode_address()\n                        let value1 := abi_decode_address_19954()\n                        let value_4 := calldataload(68)\n                        let _18 := and(value0_3, sub(shl(160, 1), 1))\n                        mstore(_1, _18)\n                        mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let dataSlot := keccak256(_1, 64)\n                        /// @src 0:2703:2730  \"allowance[from][msg.sender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                        /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                        if /** @src 0:2703:2751  \"allowance[from][msg.sender] != type(uint256).max\" */ iszero(eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot_1), /** @src 0:2734:2751  \"type(uint256).max\" */ not(0)))\n                        /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(_1, _18)\n                            mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let dataSlot_2 := keccak256(_1, 64)\n                            /// @src 0:2797:2824  \"allowance[from][msg.sender]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2797:2812  \"allowance[from]\" */ dataSlot_2)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                            /// @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\"\n                            let expr_17 := fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 0:2797:2824  \"allowance[from][msg.sender]\" */ dataSlot_3), /** @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\" */ value_4)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(_1, _18)\n                            mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let dataSlot_4 := keccak256(_1, 64)\n                            /// @src 0:2767:2794  \"allowance[from][msg.sender]\"\n                            let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2767:2782  \"allowance[from]\" */ dataSlot_4)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                            sstore(/** @src 0:2767:2794  \"allowance[from][msg.sender]\" */ dataSlot_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ expr_17)\n                        }\n                        /// @src 0:2905:2910  \"value\"\n                        fun_transfer(value0_3, value1, value_4)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, 1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x30adf81f {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        return(memPos_6, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, /** @src 0:381:383  \"18\" */ 0x12)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        return(memPos_7, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _19 := sload(/** @src 0:533:564  \"bytes32 public DOMAIN_SEPARATOR\" */ 3)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _19)\n                        return(memPos_8, 32)\n                    }\n                    case 0x485cc955 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_4 := abi_decode_address()\n                        let value1_1 := abi_decode_address_19954()\n                        if iszero(/** @src 2:2652:2673  \"msg.sender == factory\" */ eq(/** @src 2:2652:2662  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(sload(/** @src 2:2666:2673  \"factory\" */ 0x05), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 20)\n                            mstore(add(memPtr_7, 68), \"UniswapV2: FORBIDDEN\")\n                            revert(memPtr_7, 100)\n                        }\n                        sstore(/** @src 2:2728:2744  \"token0 = _token0\" */ 0x06, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ or(and(sload(/** @src 2:2728:2744  \"token0 = _token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value0_4, sub(shl(160, 1), 1))))\n                        sstore(/** @src 2:2754:2770  \"token1 = _token1\" */ 0x07, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ or(and(sload(/** @src 2:2754:2770  \"token1 = _token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value1_1, sub(shl(160, 1), 1))))\n                        return(_1, _1)\n                    }\n                    case 0x5909c0d5 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _20 := sload(/** @src 2:1058:1090  \"uint public price0CumulativeLast\" */ 9)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, _20)\n                        return(memPos_9, 32)\n                    }\n                    case 0x5a3d5493 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _21 := sload(/** @src 2:1096:1128  \"uint public price1CumulativeLast\" */ 10)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, _21)\n                        return(memPos_10, 32)\n                    }\n                    case 0x6a627842 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value0_5 := abi_decode_address()\n                        /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                        require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        /// @src 2:4893:6157  \"function mint(address to) external lock returns (uint liquidity) {...\"\n                        let var_liquidity := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:5010:5023  \"getReserves()\"\n                        let expr_component_3, expr_component_4, expr_component_5 := fun_getReserves()\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let cleaned_2 := and(sload(/** @src 2:5071:5077  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                        let _22 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                        mstore(_22, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ add(_22, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:5097:5101  \"this\" */ address())\n                        /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                        let _23 := staticcall(gas(), cleaned_2, _22, 36, _22, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                        if iszero(_23)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, _1, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                        let expr_18 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                        if _23\n                        {\n                            let _24 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_22, _24)\n                            let value0_6 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ add(_22, _24), _22), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_6 := mload(/** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ _22)\n                            expr_18 := value0_6\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let cleaned_3 := and(sload(/** @src 2:5136:5142  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                        let _25 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                        mstore(_25, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ add(_25, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:5097:5101  \"this\" */ address())\n                        /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                        let _26 := staticcall(gas(), cleaned_3, _25, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36, /** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ _25, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                        if iszero(_26)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, _1, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                        let expr_19 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                        if _26\n                        {\n                            let _27 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _27 := returndatasize() }\n                            finalize_allocation(_25, _27)\n                            let value0_7 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ add(_25, _27), _25), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_7 := mload(/** @src 2:5129:5168  \"IERC20(token1).balanceOf(address(this))\" */ _25)\n                            expr_19 := value0_7\n                        }\n                        /// @src 2:5193:5216  \"balance0.sub(_reserve0)\"\n                        let _28 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:5193:5216  \"balance0.sub(_reserve0)\" */ expr_component_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 2:5193:5216  \"balance0.sub(_reserve0)\"\n                        let expr_20 := fun_sub(expr_18, _28)\n                        /// @src 2:5241:5264  \"balance1.sub(_reserve1)\"\n                        let _29 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:5241:5264  \"balance1.sub(_reserve1)\" */ expr_component_4, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                        /// @src 2:5241:5264  \"balance1.sub(_reserve1)\"\n                        let expr_21 := fun_sub(expr_19, _29)\n                        /// @src 2:5287:5317  \"_mintFee(_reserve0, _reserve1)\"\n                        let expr_22 := fun_mintFee(expr_component_3, expr_component_4)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _30 := sload(_1)\n                        /// @src 2:5446:5840  \"if (_totalSupply == 0) {...\"\n                        switch /** @src 2:5450:5467  \"_totalSupply == 0\" */ iszero(_30)\n                        case /** @src 2:5446:5840  \"if (_totalSupply == 0) {...\" */ 0 {\n                            /// @src 2:5723:5760  \"amount0.mul(_totalSupply) / _reserve0\"\n                            let expr_23 := checked_div_uint256(/** @src 2:5723:5748  \"amount0.mul(_totalSupply)\" */ fun_mul(expr_20, _30), /** @src 2:5723:5760  \"amount0.mul(_totalSupply) / _reserve0\" */ _28)\n                            /// @src 2:5778:5815  \"amount1.mul(_totalSupply) / _reserve1\"\n                            let _31 := checked_div_uint256(/** @src 2:5778:5803  \"amount1.mul(_totalSupply)\" */ fun_mul(expr_21, _30), /** @src 2:5778:5815  \"amount1.mul(_totalSupply) / _reserve1\" */ _29)\n                            /// @src 8:203:216  \"x < y ? x : y\"\n                            let expr_24 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                            /// @src 8:203:216  \"x < y ? x : y\"\n                            switch /** @src 8:203:208  \"x < y\" */ lt(expr_23, _31)\n                            case /** @src 8:203:216  \"x < y ? x : y\" */ 0 { expr_24 := _31 }\n                            default { expr_24 := expr_23 }\n                            /// @src 2:5685:5829  \"liquidity = Math.min(...\"\n                            var_liquidity := expr_24\n                        }\n                        default /// @src 2:5446:5840  \"if (_totalSupply == 0) {...\"\n                        {\n                            /// @src 2:5495:5526  \"Math.sqrt(amount0.mul(amount1))\"\n                            let expr_25 := fun_sqrt(/** @src 2:5505:5525  \"amount0.mul(amount1)\" */ fun_mul(expr_20, expr_21))\n                            /// @src 2:5495:5549  \"Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY)\"\n                            let var_z_1 := /** @src -1:-1:-1 */ _1\n                            /// @src 9:401:406  \"x - y\"\n                            let diff := /** @src -1:-1:-1 */ _1\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            diff := add(expr_25, not(999))\n                            let _32 := gt(diff, expr_25)\n                            if _32\n                            {\n                                mstore(_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(_1, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                            }\n                            /// @src 9:397:406  \"z = x - y\"\n                            var_z_1 := diff\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            _32 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:5483:5549  \"liquidity = Math.sqrt(amount0.mul(amount1)).sub(MINIMUM_LIQUIDITY)\"\n                            var_liquidity := diff\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let _33 := sload(_1)\n                            /// @src 0:1553:1572  \"totalSupply + value\"\n                            let sum := /** @src -1:-1:-1 */ _1\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sum := add(_33, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if gt(_33, sum)\n                            {\n                                mstore(_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(_1, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sstore(_1, sum)\n                            mstore(_1, _1)\n                            mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let _34 := sload(keccak256(_1, 64))\n                            /// @src 0:1598:1619  \"balanceOf[to] + value\"\n                            let sum_1 := /** @src -1:-1:-1 */ _1\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sum_1 := add(_34, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if gt(_34, sum_1)\n                            {\n                                mstore(_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(_1, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            mstore(_1, _1)\n                            mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sstore(keccak256(_1, 64), sum_1)\n                            /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                            let _35 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                            mstore(_35, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                            /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                            log3(_35, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1, _1)\n                        }\n                        if /** @src 2:5857:5870  \"liquidity > 0\" */ iszero(var_liquidity)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, /** @src 2:5064:5103  \"IERC20(token0).balanceOf(address(this))\" */ 36), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 40)\n                            mstore(add(memPtr_8, 68), \"UniswapV2: INSUFFICIENT_LIQUIDIT\")\n                            mstore(add(memPtr_8, 100), \"Y_MINTED\")\n                            revert(memPtr_8, 132)\n                        }\n                        /// @src 2:5935:5944  \"liquidity\"\n                        fun_mint(value0_5, var_liquidity)\n                        /// @src 2:5994:6003  \"_reserve1\"\n                        fun_update(expr_18, expr_19, expr_component_3, expr_component_4)\n                        /// @src 2:6014:6061  \"if (feeOn) kLast = uint(reserve0).mul(reserve1)\"\n                        if expr_22\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let _36 := sload(/** @src 2:6038:6046  \"reserve0\" */ 0x08)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sstore(/** @src 2:6025:6061  \"kLast = uint(reserve0).mul(reserve1)\" */ 0x0b, /** @src 2:6033:6061  \"uint(reserve0).mul(reserve1)\" */ fun_mul(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_36, 0xffffffffffffffffffffffffffff), and(shr(112, _36), 0xffffffffffffffffffffffffffff)))\n                        }\n                        /// @src 2:6116:6150  \"Mint(msg.sender, amount0, amount1)\"\n                        let _37 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_37, expr_20)\n                        mstore(add(_37, 32), expr_21)\n                        /// @src 2:6116:6150  \"Mint(msg.sender, amount0, amount1)\"\n                        log2(_37, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64, /** @src 2:6116:6150  \"Mint(msg.sender, amount0, amount1)\" */ 0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f, /** @src 2:6121:6131  \"msg.sender\" */ caller())\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, var_liquidity)\n                        return(memPos_11, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:418:459  \"mapping(address => uint) public balanceOf\" */ 1)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _38 := sload(keccak256(_1, 64))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _38)\n                        return(memPos_12, 32)\n                    }\n                    case 0x7464fc3d {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _39 := sload(/** @src 2:1134:1151  \"uint public kLast\" */ 11)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, _39)\n                        return(memPos_13, 32)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let _40 := sload(keccak256(_1, 64))\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, _40)\n                        return(memPos_14, 32)\n                    }\n                    case 0x89afcb44 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value0_8 := abi_decode_address()\n                        /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                        require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        /// @src 2:6409:6422  \"getReserves()\"\n                        let expr_component_6, expr_component_7, expr_component_8 := fun_getReserves()\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let cleaned_4 := and(sload(/** @src 2:6465:6471  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let cleaned_5 := and(sload(/** @src 2:6514:6520  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _41 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_41, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ add(_41, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _42 := staticcall(gas(), cleaned_4, _41, 36, _41, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_42)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_5 := mload(64)\n                            returndatacopy(pos_5, _1, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_26 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                        if _42\n                        {\n                            let _43 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _43 := returndatasize() }\n                            finalize_allocation(_41, _43)\n                            let value0_9 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ add(_41, _43), _41), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_9 := mload(/** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ _41)\n                            expr_26 := value0_9\n                        }\n                        /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _44 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_44, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ add(_44, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _45 := staticcall(gas(), cleaned_5, _44, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ _44, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_45)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_6 := mload(64)\n                            returndatacopy(pos_6, _1, returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_27 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                        if _45\n                        {\n                            let _46 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _46 := returndatasize() }\n                            finalize_allocation(_44, _46)\n                            let value0_10 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ add(_44, _46), _44), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_10 := mload(/** @src 2:6627:6667  \"IERC20(_token1).balanceOf(address(this))\" */ _44)\n                            expr_27 := value0_10\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(_1, /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _47 := sload(keccak256(_1, 64))\n                        /// @src 2:6742:6772  \"_mintFee(_reserve0, _reserve1)\"\n                        let expr_28 := fun_mintFee(expr_component_6, expr_component_7)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _48 := sload(_1)\n                        /// @src 2:6911:6949  \"liquidity.mul(balance0) / _totalSupply\"\n                        let expr_29 := checked_div_uint256(/** @src 2:6911:6934  \"liquidity.mul(balance0)\" */ fun_mul(_47, expr_26), /** @src 2:6911:6949  \"liquidity.mul(balance0) / _totalSupply\" */ _48)\n                        /// @src 2:7017:7055  \"liquidity.mul(balance1) / _totalSupply\"\n                        let expr_30 := checked_div_uint256(/** @src 2:7017:7040  \"liquidity.mul(balance1)\" */ fun_mul(_47, expr_27), /** @src 2:7017:7055  \"liquidity.mul(balance1) / _totalSupply\" */ _48)\n                        /// @src 2:7134:7160  \"amount0 > 0 && amount1 > 0\"\n                        let expr_31 := /** @src 2:7134:7145  \"amount0 > 0\" */ iszero(iszero(expr_29))\n                        /// @src 2:7134:7160  \"amount0 > 0 && amount1 > 0\"\n                        if expr_31\n                        {\n                            expr_31 := /** @src 2:7149:7160  \"amount1 > 0\" */ iszero(iszero(expr_30))\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if iszero(expr_31)\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 40)\n                            mstore(add(memPtr_9, 68), \"UniswapV2: INSUFFICIENT_LIQUIDIT\")\n                            mstore(add(memPtr_9, 100), \"Y_BURNED\")\n                            revert(memPtr_9, 132)\n                        }\n                        mstore(_1, /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 0:1756:1782  \"balanceOf[from].sub(value)\"\n                        let _49 := fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(_1, 64)), /** @src 0:1756:1782  \"balanceOf[from].sub(value)\" */ _47)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(_1, /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(32, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(keccak256(_1, 64), _49)\n                        sstore(_1, /** @src 0:1806:1828  \"totalSupply.sub(value)\" */ fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(_1), /** @src 0:1806:1828  \"totalSupply.sub(value)\" */ _47))\n                        /// @src 0:1843:1876  \"Transfer(from, address(0), value)\"\n                        let _50 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_50, _47)\n                        /// @src 0:1843:1876  \"Transfer(from, address(0), value)\"\n                        log3(_50, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 0:1843:1876  \"Transfer(from, address(0), value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 2:6595:6599  \"this\" */ address(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        /// @src 2:7304:7311  \"amount0\"\n                        fun_safeTransfer(cleaned_4, value0_8, expr_29)\n                        /// @src 2:7349:7356  \"amount1\"\n                        fun_safeTransfer(cleaned_5, value0_8, expr_30)\n                        /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _51 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_51, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ add(_51, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _52 := staticcall(gas(), cleaned_4, _51, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ _51, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_52)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_7 := mload(64)\n                            returndatacopy(pos_7, _1, returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_32 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                        if _52\n                        {\n                            let _53 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _53 := returndatasize() }\n                            finalize_allocation(_51, _53)\n                            let value0_11 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ add(_51, _53), _51), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_11 := mload(/** @src 2:7378:7418  \"IERC20(_token0).balanceOf(address(this))\" */ _51)\n                            expr_32 := value0_11\n                        }\n                        /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _54 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_54, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ add(_54, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:6595:6599  \"this\" */ address())\n                        /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _55 := staticcall(gas(), cleaned_5, _54, /** @src 2:6561:6601  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ _54, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_55)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_8 := mload(64)\n                            returndatacopy(pos_8, _1, returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_33 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                        if _55\n                        {\n                            let _56 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _56 := returndatasize() }\n                            finalize_allocation(_54, _56)\n                            let value0_12 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ add(_54, _56), _54), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_12 := mload(/** @src 2:7439:7479  \"IERC20(_token1).balanceOf(address(this))\" */ _54)\n                            expr_33 := value0_12\n                        }\n                        /// @src 2:7529:7538  \"_reserve1\"\n                        fun_update(expr_32, expr_33, expr_component_6, expr_component_7)\n                        /// @src 2:7549:7596  \"if (feeOn) kLast = uint(reserve0).mul(reserve1)\"\n                        if expr_28\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let _57 := sload(/** @src 2:7573:7581  \"reserve0\" */ 0x08)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            sstore(/** @src 2:7560:7596  \"kLast = uint(reserve0).mul(reserve1)\" */ 0x0b, /** @src 2:7568:7596  \"uint(reserve0).mul(reserve1)\" */ fun_mul(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_57, 0xffffffffffffffffffffffffffff), and(shr(112, _57), 0xffffffffffffffffffffffffffff)))\n                        }\n                        /// @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\"\n                        let _58 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_58, expr_29)\n                        mstore(add(_58, 32), expr_30)\n                        /// @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\"\n                        log3(_58, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64, /** @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\" */ 0xdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496, /** @src 2:7656:7666  \"msg.sender\" */ caller(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:7651:7689  \"Burn(msg.sender, amount0, amount1, to)\" */ value0_8, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, expr_29)\n                        mstore(add(memPos_15, 32), expr_30)\n                        return(memPos_15, 64)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let size_1 := /** @src -1:-1:-1 */ _1\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _59 := _1\n                        _59 := /** @src -1:-1:-1 */ _1\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        size_1 := 64\n                        let memPtr_10 := mload(64)\n                        finalize_allocation(memPtr_10, 64)\n                        mstore(memPtr_10, 6)\n                        mstore(add(memPtr_10, 32), \"UNI-V2\")\n                        let memPos_16 := mload(64)\n                        return(memPos_16, sub(abi_encode_string(memPos_16, memPtr_10), memPos_16))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_13 := abi_decode_address()\n                        /// @src 0:2535:2540  \"value\"\n                        fun_transfer(/** @src 0:2519:2529  \"msg.sender\" */ caller(), /** @src 0:2535:2540  \"value\" */ value0_13, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ calldataload(36))\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, 1)\n                        return(memPos_17, 32)\n                    }\n                    case 0xba9a7a56 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, /** @src 2:595:602  \"10 ** 3\" */ 0x03e8)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        return(memPos_18, 32)\n                    }\n                    case 0xbc25cf77 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value0_14 := abi_decode_address()\n                        /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                        require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        let cleaned_6 := and(sload(/** @src 2:10214:10220  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let cleaned_7 := and(sload(/** @src 2:10263:10269  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _60 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_60, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ add(_60, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10392:10396  \"this\" */ address())\n                        /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _61 := staticcall(gas(), cleaned_6, _60, 36, _60, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_61)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_9 := mload(64)\n                            returndatacopy(pos_9, _1, returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_34 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                        if _61\n                        {\n                            let _62 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _62 := returndatasize() }\n                            finalize_allocation(_60, _62)\n                            let value0_15 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ add(_60, _62), _60), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_15 := mload(/** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ _60)\n                            expr_34 := value0_15\n                        }\n                        /// @src 2:10358:10412  \"IERC20(_token0).balanceOf(address(this)).sub(reserve0)\"\n                        fun_safeTransfer(cleaned_6, value0_14, fun_sub(expr_34, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(sload(/** @src 2:10403:10411  \"reserve0\" */ 0x08), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                        /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _63 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_63, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ add(_63, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10392:10396  \"this\" */ address())\n                        /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _64 := staticcall(gas(), cleaned_7, _63, /** @src 2:10358:10398  \"IERC20(_token0).balanceOf(address(this))\" */ 36, /** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ _63, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_64)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_10 := mload(64)\n                            returndatacopy(pos_10, _1, returndatasize())\n                            revert(pos_10, returndatasize())\n                        }\n                        /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_35 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                        if _64\n                        {\n                            let _65 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _65 := returndatasize() }\n                            finalize_allocation(_63, _65)\n                            let value0_16 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ add(_63, _65), _63), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_16 := mload(/** @src 2:10496:10536  \"IERC20(_token1).balanceOf(address(this))\" */ _63)\n                            expr_35 := value0_16\n                        }\n                        /// @src 2:10496:10550  \"IERC20(_token1).balanceOf(address(this)).sub(reserve1)\"\n                        fun_safeTransfer(cleaned_7, value0_14, fun_sub(expr_35, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(shr(112, sload(/** @src 2:10403:10411  \"reserve0\" */ 0x08)), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        return(_1, _1)\n                    }\n                    case 0xc45a0155 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_5 := and(sload(/** @src 2:707:729  \"address public factory\" */ 5), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, value_5)\n                        return(memPos_19, 32)\n                    }\n                    case 0xd21220a7 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_6 := and(sload(/** @src 2:762:783  \"address public token1\" */ 7), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let memPos_20 := mload(64)\n                        mstore(memPos_20, value_6)\n                        return(memPos_20, 32)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(_1, _1) }\n                        let value0_17 := abi_decode_address()\n                        let value1_2 := abi_decode_address_19954()\n                        let value_7 := calldataload(68)\n                        let value_8 := calldataload(100)\n                        let value_9 := calldataload(132)\n                        let _66 := and(value_9, 0xff)\n                        if iszero(eq(value_9, _66)) { revert(_1, _1) }\n                        if /** @src 0:3140:3167  \"deadline >= block.timestamp\" */ lt(value_8, /** @src 0:3152:3167  \"block.timestamp\" */ timestamp())\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 18)\n                            mstore(add(memPtr_11, 68), \"UniswapV2: EXPIRED\")\n                            revert(memPtr_11, 100)\n                        }\n                        let _67 := sload(/** @src 0:3302:3318  \"DOMAIN_SEPARATOR\" */ 0x03)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _68 := and(value0_17, sub(shl(160, 1), 1))\n                        mstore(_1, _68)\n                        mstore(32, 4)\n                        let dataSlot_6 := keccak256(_1, 64)\n                        let _69 := sload(/** @src 0:3539:3554  \"nonces[owner]++\" */ dataSlot_6)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        if eq(_69, /** @src 0:2734:2751  \"type(uint256).max\" */ not(0))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        {\n                            mstore(_1, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(_1, 36)\n                        }\n                        sstore(dataSlot_6, add(_69, 1))\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        let expr_mpos := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        let _70 := add(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        mstore(_70, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64), _68)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 96), and(value1_2, sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 128), value_7)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 160), _69)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 192), value_8)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        mstore(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 192)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 224)\n                        /// @src 0:3336:3628  \"keccak256(...\"\n                        let expr_36 := keccak256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _70, mload(/** @src 0:3336:3628  \"keccak256(...\" */ expr_mpos))\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        let expr_mpos_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        let _71 := add(expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        mstore(_71, shl(240, 6401))\n                        mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 34), _67)\n                        mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 66), expr_36)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        mstore(expr_mpos_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 66)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        finalize_allocation(expr_mpos_1, 98)\n                        /// @src 0:3217:3652  \"keccak256(...\"\n                        let expr_37 := keccak256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _71, mload(/** @src 0:3217:3652  \"keccak256(...\" */ expr_mpos_1))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        let _72 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_72, expr_37)\n                        mstore(add(_72, 32), _66)\n                        mstore(add(_72, 64), calldataload(164))\n                        mstore(add(_72, 96), calldataload(196))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        mstore(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1, _1)\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        if iszero(staticcall(gas(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 1, /** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ _72, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 128, _1, 32))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_11 := mload(64)\n                            returndatacopy(pos_11, _1, returndatasize())\n                            revert(pos_11, returndatasize())\n                        }\n                        /// @src 0:3746:3776  \"recoveredAddress != address(0)\"\n                        let _73 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ mload(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1), sub(shl(160, 1), 1))\n                        /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        let expr_38 := /** @src 0:3746:3776  \"recoveredAddress != address(0)\" */ iszero(iszero(_73))\n                        /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        if expr_38\n                        {\n                            expr_38 := /** @src 0:3780:3805  \"recoveredAddress == owner\" */ eq(_73, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _68)\n                        }\n                        if iszero(expr_38)\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, 36), 28)\n                            mstore(add(memPtr_12, 68), \"UniswapV2: INVALID_SIGNATURE\")\n                            revert(memPtr_12, 100)\n                        }\n                        /// @src 0:3894:3899  \"value\"\n                        fun_approve(value0_17, value1_2, value_7)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        return(_1, _1)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_18 := abi_decode_address()\n                        let value1_3 := abi_decode_address_19954()\n                        mstore(_1, and(value0_18, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ 2)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let dataSlot_7 := keccak256(_1, 64)\n                        /// @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ value1_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_7)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                        let _74 := sload(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_8)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, _74)\n                        return(memPos_21, 32)\n                    }\n                    case 0xfff6cae9 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 2:1295:1338  \"require(unlocked == 1, \\\"UniswapV2: LOCKED\\\")\"\n                        require_helper_stringliteral_4cc8(/** @src 2:1303:1316  \"unlocked == 1\" */ eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:1303:1311  \"unlocked\" */ 0x0c), /** @src 2:1315:1316  \"1\" */ 0x01))\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                        let cleaned_8 := and(sload(/** @src 2:10681:10687  \"token0\" */ 0x06), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                        let _75 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                        mstore(_75, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ add(_75, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10707:10711  \"this\" */ address())\n                        /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                        let _76 := staticcall(gas(), cleaned_8, _75, 36, _75, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                        if iszero(_76)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_12 := mload(64)\n                            returndatacopy(pos_12, _1, returndatasize())\n                            revert(pos_12, returndatasize())\n                        }\n                        /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                        let expr_39 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                        if _76\n                        {\n                            let _77 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _77 := returndatasize() }\n                            finalize_allocation(_75, _77)\n                            let value0_19 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ add(_75, _77), _75), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_19 := mload(/** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ _75)\n                            expr_39 := value0_19\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let cleaned_9 := and(sload(/** @src 2:10734:10740  \"token1\" */ 0x07), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                        let _78 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                        mstore(_78, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ add(_78, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 4), /** @src 2:10707:10711  \"this\" */ address())\n                        /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                        let _79 := staticcall(gas(), cleaned_9, _78, /** @src 2:10674:10713  \"IERC20(token0).balanceOf(address(this))\" */ 36, /** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ _78, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                        if iszero(_79)\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let pos_13 := mload(64)\n                            returndatacopy(pos_13, _1, returndatasize())\n                            revert(pos_13, returndatasize())\n                        }\n                        /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                        let expr_40 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1\n                        /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                        if _79\n                        {\n                            let _80 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32\n                            /// @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\"\n                            if gt(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32, /** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _80 := returndatasize() }\n                            finalize_allocation(_78, _80)\n                            let value0_20 := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if slt(sub(/** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ add(_78, _80), _78), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            value0_20 := mload(/** @src 2:10727:10766  \"IERC20(token1).balanceOf(address(this))\" */ _78)\n                            expr_40 := value0_20\n                        }\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        let _81 := sload(/** @src 2:10780:10788  \"reserve0\" */ 0x08)\n                        /// @src 2:10802:10810  \"reserve1\"\n                        fun_update(expr_39, expr_40, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_81, 0xffffffffffffffffffffffffffff), and(shr(112, _81), 0xffffffffffffffffffffffffffff))\n                        sstore(/** @src 2:1303:1311  \"unlocked\" */ 0x0c, /** @src 2:1315:1316  \"1\" */ 0x01)\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        return(_1, _1)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_19954() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function require_helper_stringliteral_4cc8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"UniswapV2: LOCKED\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 678 @src 2:1406:1679  \"function getReserves()...\"\n            function fun_getReserves() -> var_reserve0, var_reserve1, var_blockTimestampLast\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := sload(/** @src 2:1584:1592  \"reserve0\" */ 0x08)\n                /// @src 2:1572:1592  \"_reserve0 = reserve0\"\n                var_reserve0 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_1, 0xffffffffffffffffffffffffffff)\n                /// @src 2:1602:1622  \"_reserve1 = reserve1\"\n                var_reserve1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(shr(112, _1), 0xffffffffffffffffffffffffffff)\n                /// @src 2:1632:1672  \"_blockTimestampLast = blockTimestampLast\"\n                var_blockTimestampLast := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shr(224, _1)\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            /// @ast-id 721 @src 2:1685:2025  \"function _safeTransfer(address token, address to, uint value) private {...\"\n            function fun_safeTransfer(var_token, var_to, var_value)\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := /** @src -1:-1:-1 */ 0\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                size := 64\n                let memPtr := mload(size)\n                finalize_allocation(memPtr, size)\n                mstore(memPtr, 25)\n                let _2 := add(memPtr, 32)\n                mstore(_2, \"transfer(address,uint256)\")\n                let converted := and(/** @src 2:654:699  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ keccak256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _2, 25), shl(224, 0xffffffff))\n                /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                let expr_698_mpos := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(size)\n                /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                let _3 := add(expr_698_mpos, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                mstore(_3, converted)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                mstore(/** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ add(expr_698_mpos, 36), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(var_to, sub(shl(160, 1), 1)))\n                mstore(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ add(/** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ expr_698_mpos, /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ 68), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ var_value)\n                /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                mstore(expr_698_mpos, /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ 68)\n                /// @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\"\n                finalize_allocation(expr_698_mpos, 100)\n                /// @src 2:1801:1878  \"token.call(...\"\n                let expr_component := call(gas(), var_token, /** @src -1:-1:-1 */ 0, /** @src 2:1801:1878  \"token.call(...\" */ _3, mload(expr_698_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 2:1801:1878  \"token.call(...\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _4 := returndatasize()\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    if gt(_4, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ 36)\n                    }\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    size_1 := add(and(add(_4, 31), not(31)), 32)\n                    let memPtr_1 := mload(size)\n                    finalize_allocation(memPtr_1, size_1)\n                    mstore(memPtr_1, _4)\n                    /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                    data := memPtr_1\n                    returndatacopy(add(memPtr_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32), /** @src -1:-1:-1 */ 0, /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ returndatasize())\n                }\n                /// @src 2:1909:1966  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                let expr := expr_component\n                if expr_component\n                {\n                    /// @src 2:1921:1932  \"data.length\"\n                    let expr_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(/** @src 2:1921:1932  \"data.length\" */ data)\n                    /// @src 2:1921:1965  \"data.length == 0 || abi.decode(data, (bool))\"\n                    let expr_2 := /** @src 2:1921:1937  \"data.length == 0\" */ iszero(expr_1)\n                    /// @src 2:1921:1965  \"data.length == 0 || abi.decode(data, (bool))\"\n                    if iszero(expr_2)\n                    {\n                        /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                        if slt(sub(/** @src 2:1941:1965  \"abi.decode(data, (bool))\" */ add(data, expr_1), data), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                        /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                        let value := mload(/** @src 2:1941:1965  \"abi.decode(data, (bool))\" */ add(data, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32))\n                        /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                        if iszero(eq(value, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ iszero(iszero(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 2:1921:1965  \"data.length == 0 || abi.decode(data, (bool))\"\n                        expr_2 := value\n                    }\n                    /// @src 2:1909:1966  \"success && (data.length == 0 || abi.decode(data, (bool)))\"\n                    expr := expr_2\n                }\n                /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                if iszero(expr)\n                {\n                    let memPtr_2 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(size)\n                    /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                    mstore(memPtr_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(229, 4594637))\n                    /// @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\"\n                    mstore(add(memPtr_2, 4), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 32)\n                    mstore(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ add(memPtr_2, /** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ 36), /** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ 26)\n                    mstore(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ add(/** @src 2:647:700  \"bytes4(keccak256(bytes(\\\"transfer(address,uint256)\\\")))\" */ memPtr_2, 68), \"UniswapV2: TRANSFER_FAILED\")\n                    revert(memPtr_2, /** @src 2:1825:1868  \"abi.encodeWithSelector(SELECTOR, to, value)\" */ 100)\n                }\n            }\n            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 2297 @src 9:451:591  \"function mul(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_mul_19946(var_x) -> var_z\n            {\n                /// @src 9:503:509  \"uint z\"\n                let var_z_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:503:509  \"uint z\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                let expr := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:544:549  \"x * y\"\n                let y := /** @src 2:9649:9653  \"1000\" */ 0x03e8\n                /// @src 9:544:549  \"x * y\"\n                let product := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                product := mul(/** @src 9:544:549  \"x * y\" */ var_x, /** @src 2:9649:9653  \"1000\" */ y)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ var_x), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:9649:9653  \"1000\" */ y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ var_x))))\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                /// @src 9:540:549  \"z = x * y\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                /// @src 9:539:554  \"(z = x * y) / y\"\n                let r := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                var_z_1 := 0\n                r := div(product, /** @src 2:9649:9653  \"1000\" */ y)\n                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                expr := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, var_x)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if iszero(expr)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2297 @src 9:451:591  \"function mul(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_mul_19947(var_x) -> var_z\n            {\n                /// @src 9:503:509  \"uint z\"\n                let var_z_1 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:503:509  \"uint z\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                let expr := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:544:549  \"x * y\"\n                let product := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                product := mul(/** @src 9:544:549  \"x * y\" */ var_x, /** @src 2:9673:9674  \"3\" */ 0x03)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ var_x), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:9673:9674  \"3\" */ 0x03, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ var_x))))\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                /// @src 9:540:549  \"z = x * y\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                /// @src 9:539:554  \"(z = x * y) / y\"\n                let r := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                var_z_1 := 0\n                r := div(product, /** @src 2:9673:9674  \"3\" */ 0x03)\n                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                expr := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, var_x)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if iszero(expr)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2297 @src 9:451:591  \"function mul(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_mul(var_x, var_y) -> var_z\n            {\n                /// @src 9:503:509  \"uint z\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                let expr := /** @src 9:529:535  \"y == 0\" */ iszero(var_y)\n                /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                if iszero(expr)\n                {\n                    /// @src 9:540:549  \"z = x * y\"\n                    var_z := /** @src 9:544:549  \"x * y\" */ checked_mul_uint256(var_x, var_y)\n                    /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                    expr := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(/** @src 9:539:554  \"(z = x * y) / y\" */ checked_div_uint256(var_z, var_y), /** @src 9:539:559  \"(z = x * y) / y == x\" */ var_x)\n                }\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if iszero(expr)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2269 @src 9:318:445  \"function sub(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_sub(var_x, var_y) -> var_z\n            {\n                /// @src 9:397:406  \"z = x - y\"\n                var_z := /** @src 9:401:406  \"x - y\" */ checked_sub_uint256(var_x, var_y)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if /** @src 9:396:412  \"(z = x - y) <= x\" */ gt(var_z, var_x)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"ds-math-sub-underflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 907 @src 2:2859:3856  \"function _update(...\"\n            function fun_update(var_balance0, var_balance1, var_reserve0, var_reserve1)\n            {\n                /// @src 2:3021:3083  \"balance0 <= type(uint112).max && balance1 <= type(uint112).max\"\n                let expr := /** @src 2:3021:3050  \"balance0 <= type(uint112).max\" */ iszero(gt(var_balance0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff))\n                /// @src 2:3021:3083  \"balance0 <= type(uint112).max && balance1 <= type(uint112).max\"\n                if expr\n                {\n                    expr := /** @src 2:3054:3083  \"balance1 <= type(uint112).max\" */ iszero(gt(var_balance1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff))\n                }\n                if iszero(expr)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"UniswapV2: OVERFLOW\")\n                    revert(memPtr, 100)\n                }\n                let diff := sub(and(/** @src 2:3169:3184  \"block.timestamp\" */ timestamp(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffff), shr(224, sload(/** @src 2:3243:3261  \"blockTimestampLast\" */ 0x08)))\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if gt(diff, 0xffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                let _1 := and(/** @src 2:3298:3313  \"timeElapsed > 0\" */ diff, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffff)\n                /// @src 2:3298:3331  \"timeElapsed > 0 && _reserve0 != 0\"\n                let expr_1 := /** @src 2:3298:3313  \"timeElapsed > 0\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1))\n                /// @src 2:3298:3331  \"timeElapsed > 0 && _reserve0 != 0\"\n                if expr_1\n                {\n                    expr_1 := /** @src 2:3317:3331  \"_reserve0 != 0\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3317:3331  \"_reserve0 != 0\" */ var_reserve0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                }\n                /// @src 2:3298:3349  \"timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 2:3335:3349  \"_reserve1 != 0\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3335:3349  \"_reserve1 != 0\" */ var_reserve1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                }\n                /// @src 2:3294:3690  \"if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {...\"\n                if expr_2\n                {\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    sstore(/** @src 2:3425:3545  \"price0CumulativeLast +=...\" */ 0x09, checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:3425:3545  \"price0CumulativeLast +=...\" */ 0x09), /** @src 2:3465:3545  \"uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *...\" */ checked_mul_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3470:3514  \"UQ112x112.encode(_reserve1).uqdiv(_reserve0)\" */ fun_uqdiv(/** @src 2:3470:3497  \"UQ112x112.encode(_reserve1)\" */ fun_encode(var_reserve1), /** @src 2:3470:3514  \"UQ112x112.encode(_reserve1).uqdiv(_reserve0)\" */ var_reserve0), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(224, 1), 1)), /** @src 2:3465:3545  \"uint(UQ112x112.encode(_reserve1).uqdiv(_reserve0)) *...\" */ _1)))\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    sstore(/** @src 2:3559:3679  \"price1CumulativeLast +=...\" */ 0x0a, checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 2:3559:3679  \"price1CumulativeLast +=...\" */ 0x0a), /** @src 2:3599:3679  \"uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *...\" */ checked_mul_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:3604:3648  \"UQ112x112.encode(_reserve0).uqdiv(_reserve1)\" */ fun_uqdiv(/** @src 2:3604:3631  \"UQ112x112.encode(_reserve0)\" */ fun_encode(var_reserve0), /** @src 2:3604:3648  \"UQ112x112.encode(_reserve0).uqdiv(_reserve1)\" */ var_reserve1), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(224, 1), 1)), /** @src 2:3599:3679  \"uint(UQ112x112.encode(_reserve0).uqdiv(_reserve1)) *...\" */ _1)))\n                }\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _2 := and(/** @src 2:3710:3727  \"uint112(balance0)\" */ var_balance0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                let result := or(or(and(shl(112, /** @src 2:3748:3765  \"uint112(balance1)\" */ var_balance1), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(112, 0xffffffffffffffffffffffffffff)), _2), and(shl(224, /** @src 2:3169:3184  \"block.timestamp\" */ timestamp()), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0xffffffff)))\n                sstore(/** @src 2:3243:3261  \"blockTimestampLast\" */ 0x08, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ result)\n                /// @src 2:3825:3849  \"Sync(reserve0, reserve1)\"\n                let _3 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                mstore(_3, _2)\n                mstore(add(_3, 32), and(shr(112, result), 0xffffffffffffffffffffffffffff))\n                /// @src 2:3825:3849  \"Sync(reserve0, reserve1)\"\n                log1(_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 64, /** @src 2:3825:3849  \"Sync(reserve0, reserve1)\" */ 0x1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1)\n            }\n            /// @ast-id 168 @src 0:1889:2055  \"function _approve(address owner, address spender, uint value) private {...\"\n            function fun_approve(var_owner, var_spender, var_value)\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:1969:1978  \"allowance\" */ 0x02)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                /// @src 0:1969:1994  \"allowance[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ var_spender, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:1969:1985  \"allowance[owner]\" */ dataSlot)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)\n                sstore(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ dataSlot_1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ var_value)\n                /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                let _2 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_2, var_value)\n                /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                log3(_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ var_spender, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 206 @src 0:2061:2277  \"function _transfer(address from, address to, uint value) private {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := and(var_from, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:2154:2180  \"balanceOf[from].sub(value)\"\n                let _2 := fun_sub(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:2154:2180  \"balanceOf[from].sub(value)\" */ var_value)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40), _2)\n                let _3 := and(var_to, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:2206:2230  \"balanceOf[to].add(value)\"\n                let _4 := fun_add(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:2206:2230  \"balanceOf[to].add(value)\" */ var_value)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40), _4)\n                /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                let _5 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_5, var_value)\n                /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                log3(_5, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:2245:2270  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 1015 @src 2:3943:4784  \"function _mintFee(...\"\n            function fun_mintFee(var_reserve0, var__reserve1) -> var_feeOn\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := sload(/** @src 2:4094:4101  \"factory\" */ 0x05)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                let _2 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(64)\n                /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                mstore(_2, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(227, 3133387))\n                /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                let _3 := staticcall(gas(), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(_1, sub(shl(160, 1), 1)), /** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ _2, 4, _2, 32)\n                if iszero(_3)\n                {\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                if _3\n                {\n                    let _4 := 32\n                    if gt(32, returndatasize()) { _4 := returndatasize() }\n                    finalize_allocation(_2, _4)\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    if slt(sub(/** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ add(_2, _4), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _2), /** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ 32)\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let value := mload(_2)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\"\n                    expr := value\n                }\n                /// @src 2:4120:4147  \"feeOn = feeTo != address(0)\"\n                var_feeOn := /** @src 2:4128:4147  \"feeTo != address(0)\" */ iszero(iszero(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:4128:4147  \"feeTo != address(0)\" */ expr, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1))))\n                let _5 := sload(/** @src 2:4171:4176  \"kLast\" */ 0x0b)\n                /// @src 2:4201:4778  \"if (feeOn) {...\"\n                switch var_feeOn\n                case 0 {\n                    /// @src 2:4727:4778  \"if (_kLast != 0) {...\"\n                    if /** @src 2:4731:4742  \"_kLast != 0\" */ iszero(iszero(_5))\n                    /// @src 2:4727:4778  \"if (_kLast != 0) {...\"\n                    {\n                        /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                        sstore(/** @src 2:4171:4176  \"kLast\" */ 0x0b, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                default /// @src 2:4201:4778  \"if (feeOn) {...\"\n                {\n                    /// @src 2:4226:4711  \"if (_kLast != 0) {...\"\n                    if /** @src 2:4230:4241  \"_kLast != 0\" */ iszero(iszero(_5))\n                    /// @src 2:4226:4711  \"if (_kLast != 0) {...\"\n                    {\n                        /// @src 2:4274:4315  \"Math.sqrt(uint(_reserve0).mul(_reserve1))\"\n                        let expr_1 := fun_sqrt(/** @src 2:4284:4314  \"uint(_reserve0).mul(_reserve1)\" */ fun_mul(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ and(/** @src 2:4284:4299  \"uint(_reserve0)\" */ var_reserve0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff), and(/** @src 2:4284:4314  \"uint(_reserve0).mul(_reserve1)\" */ var__reserve1, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)))\n                        /// @src 2:4350:4367  \"Math.sqrt(_kLast)\"\n                        let expr_2 := fun_sqrt(_5)\n                        /// @src 2:4385:4697  \"if (rootK > rootKLast) {...\"\n                        if /** @src 2:4389:4406  \"rootK > rootKLast\" */ gt(expr_1, expr_2)\n                        /// @src 2:4385:4697  \"if (rootK > rootKLast) {...\"\n                        {\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            let _6 := sload(/** @src -1:-1:-1 */ 0)\n                            /// @src 2:4447:4484  \"totalSupply.mul(rootK.sub(rootKLast))\"\n                            let expr_3 := fun_mul(_6, /** @src 2:4463:4483  \"rootK.sub(rootKLast)\" */ fun_sub(expr_1, expr_2))\n                            /// @src 2:4525:4537  \"rootK.mul(5)\"\n                            let var_z := /** @src -1:-1:-1 */ 0\n                            /// @src 9:503:509  \"uint z\"\n                            var_z := /** @src -1:-1:-1 */ 0\n                            /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                            let expr_4 := /** @src -1:-1:-1 */ 0\n                            /// @src 9:544:549  \"x * y\"\n                            let product := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            product := mul(/** @src 9:544:549  \"x * y\" */ expr_1, /** @src 2:4094:4101  \"factory\" */ 0x05)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if iszero(or(iszero(/** @src 9:544:549  \"x * y\" */ expr_1), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ eq(/** @src 2:4094:4101  \"factory\" */ 0x05, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(product, /** @src 9:544:549  \"x * y\" */ expr_1))))\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                            }\n                            /// @src 9:540:549  \"z = x * y\"\n                            var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product\n                            /// @src 9:539:554  \"(z = x * y) / y\"\n                            let r := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            cleaned := /** @src -1:-1:-1 */ 0\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            r := div(product, /** @src 2:4094:4101  \"factory\" */ 0x05)\n                            /// @src 9:529:559  \"y == 0 || (z = x * y) / y == x\"\n                            expr_4 := /** @src 9:539:559  \"(z = x * y) / y == x\" */ eq(r, expr_1)\n                            /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                            if iszero(expr_4)\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, /** @src 2:4076:4110  \"IUniswapV2Factory(factory).feeTo()\" */ 4), 32)\n                                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                                mstore(add(memPtr, 36), 20)\n                                mstore(add(memPtr, 68), \"ds-math-mul-overflow\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 2:4591:4614  \"numerator / denominator\"\n                            let expr_5 := checked_div_uint256(expr_3, /** @src 2:4525:4552  \"rootK.mul(5).add(rootKLast)\" */ fun_add(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ product, /** @src 2:4525:4552  \"rootK.mul(5).add(rootKLast)\" */ expr_2))\n                            /// @src 2:4636:4678  \"if (liquidity > 0) _mint(feeTo, liquidity)\"\n                            if /** @src 2:4640:4653  \"liquidity > 0\" */ iszero(iszero(expr_5))\n                            /// @src 2:4636:4678  \"if (liquidity > 0) _mint(feeTo, liquidity)\"\n                            {\n                                /// @src 2:4668:4677  \"liquidity\"\n                                fun_mint(expr, expr_5)\n                            }\n                        }\n                    }\n                }\n            }\n            /// @ast-id 2222 @src 8:338:630  \"function sqrt(uint y) internal pure returns (uint z) {...\"\n            function fun_sqrt(var_y) -> var_z\n            {\n                /// @src 8:383:389  \"uint z\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0\n                /// @src 8:401:624  \"if (y > 3) {...\"\n                switch /** @src 8:405:410  \"y > 3\" */ gt(var_y, /** @src 8:409:410  \"3\" */ 0x03)\n                case /** @src 8:401:624  \"if (y > 3) {...\" */ 0 {\n                    /// @src 8:582:624  \"if (y != 0) {...\"\n                    if /** @src 8:586:592  \"y != 0\" */ iszero(iszero(var_y))\n                    /// @src 8:582:624  \"if (y != 0) {...\"\n                    {\n                        /// @src 8:608:613  \"z = 1\"\n                        var_z := /** @src 8:612:613  \"1\" */ 0x01\n                    }\n                }\n                default /// @src 8:401:624  \"if (y > 3) {...\"\n                {\n                    /// @src 8:426:431  \"z = y\"\n                    var_z := var_y\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    let r := shr(1, var_y)\n                    let sum := add(r, 1)\n                    if gt(r, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                    /// @src 8:445:463  \"uint x = y / 2 + 1\"\n                    let var_x := sum\n                    /// @src 8:477:566  \"while (x < z) {...\"\n                    for { }\n                    /** @src 8:484:489  \"x < z\" */ lt(var_x, var_z)\n                    /// @src 8:477:566  \"while (x < z) {...\"\n                    { }\n                    {\n                        /// @src 8:509:514  \"z = x\"\n                        var_z := var_x\n                        /// @src 8:532:551  \"x = (y / x + x) / 2\"\n                        var_x := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shr(1, /** @src 8:537:546  \"y / x + x\" */ checked_add_uint256(/** @src 8:537:542  \"y / x\" */ checked_div_uint256(var_y, var_x), /** @src 8:537:546  \"y / x + x\" */ var_x))\n                    }\n                }\n            }\n            /// @ast-id 109 @src 0:1481:1672  \"function _mint(address to, uint value) internal {...\"\n            function fun_mint(var_to, var_value)\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                sstore(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 0:1553:1572  \"totalSupply + value\" */ checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(/** @src 0:1553:1564  \"totalSupply\" */ 0x00), /** @src 0:1553:1572  \"totalSupply + value\" */ var_value))\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := and(var_to, sub(shl(160, 1), 1))\n                mstore(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:1598:1607  \"balanceOf\" */ 0x01)\n                /// @src 0:1598:1619  \"balanceOf[to] + value\"\n                let _2 := checked_add_uint256(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:1598:1619  \"balanceOf[to] + value\" */ var_value)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                mstore(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:1598:1607  \"balanceOf\" */ 0x01)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x40), _2)\n                /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                let _3 := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_3, var_value)\n                /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n                log3(_3, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:1553:1564  \"totalSupply\" */ 0x00, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ _1)\n            }\n            /// @ast-id 2322 @src 10:315:433  \"function encode(uint112 y) internal pure returns (uint224 z) {...\"\n            function fun_encode(var_y) -> var_z\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := and(/** @src 10:390:400  \"uint224(y)\" */ var_y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                /// @src 10:261:269  \"2 ** 112\"\n                let _2 := and(shl(112, /** @src 10:390:400  \"uint224(y)\" */ var_y), /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(112, 0xffffffffffffffffffffffffffff))\n                /// @src 10:261:269  \"2 ** 112\"\n                if iszero(or(iszero(_1), eq(/** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(112, 1), /** @src 10:261:269  \"2 ** 112\" */ div(_2, _1))))\n                {\n                    /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                /// @src 10:386:407  \"z = uint224(y) * Q112\"\n                var_z := _2\n            }\n            /// @ast-id 2341 @src 10:501:607  \"function uqdiv(uint224 x, uint112 y) internal pure returns (uint224 z) {...\"\n            function fun_uqdiv(var_x, var_y) -> var_z\n            {\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                let _1 := and(/** @src 10:590:600  \"uint224(y)\" */ var_y, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0xffffffffffffffffffffffffffff)\n                if iszero(_1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                /// @src 10:582:600  \"z = x / uint224(y)\"\n                var_z := /** @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\" */ div(and(var_x, sub(shl(224, 1), 1)), _1)\n            }\n            /// @ast-id 2247 @src 9:186:312  \"function add(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_add(var_x, var_y) -> var_z\n            {\n                /// @src 9:265:274  \"z = x + y\"\n                var_z := /** @src 9:269:274  \"x + y\" */ checked_add_uint256(var_x, var_y)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                if /** @src 9:264:280  \"(z = x + y) >= x\" */ lt(var_z, var_x)\n                /// @src 2:444:10829  \"contract UniswapV2Pair is UniswapV2ERC20 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"ds-math-add-overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220dd8adec7652b51138ac8426831f6bf999b34cc8e74bdca12b53cdb69e3b6615764736f6c634300081a0033\"\n    }\n}\n",
          "hash": "b1f4f4091416ef3fb9e7ddd71cc0f68e3b8a3c7d262a942a0fda04538e058503",
          "factoryDependencies": {}
        }
      },
      "contracts/interfaces/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xa35a5e8d25ccd83006ed1896228b451a6b36980e6f95c7e21d0d78a5e7302ef2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3138bf93c9b139decb6a078438675dbfe45aff2520992f76431bfaee8a57a54\",\"dweb:/ipfs/QmPZ1RGQzXVh51sGLkQYZn8pS62yizaCuLVBgX8eAnCfxA\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/interfaces/IUniswapV2Callee.sol": {
        "IUniswapV2Callee": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "uniswapV2Call",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV2Call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Callee.sol\":\"IUniswapV2Callee\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xfcb4599d13ff6a6f490f0b46c511bcc669d9ff7352b34d2620649248ae33a71c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a63c7c3f8a9769cdf2e2d253638467743bbc4c4e978469bdb43ae0a3829e45f4\",\"dweb:/ipfs/QmaWaLH2mqgL35diCYwbRcHEF29odWf1DBqtpx1Ru92MZQ\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "uniswapV2Call(address,uint256,uint256,bytes)": "10d1e85c"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/interfaces/IUniswapV2ERC20.sol": {
        "IUniswapV2ERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2ERC20.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x1ee410a23a1970896fdbc82047d8a830a0075caaee4ea0899cd6f8a62ab60f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6dba7e23e97d9a2d98410b2107d82d459340826a582e9861f8f9179c2c5d534\",\"dweb:/ipfs/QmNdwjhQetZEXytKnjRiRBwMqgwvcTAyLCiyqScoZvzdLd\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/interfaces/IUniswapV2Factory.sol": {
        "IUniswapV2Factory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x880188619595a26a6910ed51c0fac0071e7e1d767b8cd6ec851d7647a613c9b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee9e53895d85e430896f417a23718c68d46c25441fcdb7e1d10f22dff3e2fd6a\",\"dweb:/ipfs/QmPHCKG86BetisJNubJc8JVwHjKGmsMkPQMZhmJeWDotMs\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/interfaces/IUniswapV2Pair.sol": {
        "IUniswapV2Pair": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x39344e3d1744107bdaa90160521d12b608ccdf3eb4e155d1e3a75643706fe75b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d464068de18dc02a920039e29854d70bdd9380eb1424e31483d68c54ea5b36\",\"dweb:/ipfs/QmdzateJhB55gPuN4Bmjwcn86XU6Xqq3B5JJ7EewKxEpDm\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "skim(address)": "bc25cf77",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "contracts/libraries/Math.sol": {
        "Math": {
          "abi": [],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Math.sol\":{\"keccak256\":\"0xf6d1c239f6ef53a73589a8fc9a3489886d48164c4e817fc4432d9f2d6fa8d9c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efdb6ee1811b97fd5a96f1020f757fce95415cc47da33b8136ed39e4b103742\",\"dweb:/ipfs/QmWBcC4w3Hb4HoRuqEUse9T3deV5TKbwqPoAAkqXJnNXCT\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n",
            "bytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "deployedBytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "methodIdentifiers": {}
          },
          "irOptimized": "/// @use-src 8:\"contracts/libraries/Math.sol\"\nobject \"Math_2223\" {\n    code {\n        {\n            /// @src 8:110:632  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_2223_deployed\")\n            codecopy(_1, dataoffset(\"Math_2223_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"contracts/libraries/Math.sol\"\n    object \"Math_2223_deployed\" {\n        code {\n            {\n                /// @src 8:110:632  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202878b59c81ce426bf63d8babeb1c443e8b3767cd266b91eac719f9df0b9788a964736f6c634300081a0033\"\n    }\n}\n",
          "hash": "173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee",
          "factoryDependencies": {}
        }
      },
      "contracts/libraries/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b980727960c67aeff9b83b7b760bd2b1e817f5464ddefd00b23fc926ab6cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4edd6ef81d4c39f34f10e8867fe396b44680c9f6025a0c5d0e265d7f6d5b126a\",\"dweb:/ipfs/Qmaod5Jufw7AXq85ZzNdmxRmLFkJGE5TSxtN6PqFon3pL8\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n",
            "bytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "deployedBytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "methodIdentifiers": {}
          },
          "irOptimized": "/// @use-src 9:\"contracts/libraries/SafeMath.sol\"\nobject \"SafeMath_2298\" {\n    code {\n        {\n            /// @src 9:163:593  \"library SafeMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeMath_2298_deployed\")\n            codecopy(_1, dataoffset(\"SafeMath_2298_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"contracts/libraries/SafeMath.sol\"\n    object \"SafeMath_2298_deployed\" {\n        code {\n            {\n                /// @src 9:163:593  \"library SafeMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209209b2e00dcb66027a0a226f0366cdfb27e6a530b20e342af467052de4ed485364736f6c634300081a0033\"\n    }\n}\n",
          "hash": "173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee",
          "factoryDependencies": {}
        }
      },
      "contracts/libraries/UQ112x112.sol": {
        "UQ112x112": {
          "abi": [],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UQ112x112.sol\":\"UQ112x112\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0xd4f32736df121a249b50aac630ed4f8d7a413da0a018fa1acf5942eabb62e4ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8ba8f2ab1b30bcfc863c57a1ffbf3379ca1400e0412ed026d5cdbf8b9a0264\",\"dweb:/ipfs/QmTiuEzjGevdWCue8wpwMwyxAfN3YjfujqN3D6M4SD6BAq\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n",
            "bytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "deployedBytecode": {
              "object": "50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"
            },
            "methodIdentifiers": {}
          },
          "irOptimized": "/// @use-src 10:\"contracts/libraries/UQ112x112.sol\"\nobject \"UQ112x112_2342\" {\n    code {\n        {\n            /// @src 10:213:609  \"library UQ112x112 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"UQ112x112_2342_deployed\")\n            codecopy(_1, dataoffset(\"UQ112x112_2342_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"contracts/libraries/UQ112x112.sol\"\n    object \"UQ112x112_2342_deployed\" {\n        code {\n            {\n                /// @src 10:213:609  \"library UQ112x112 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209ab2e9c4df2d52025975c4ab43f8bfb27f682ff1ca8561e706309b42f13b32fa64736f6c634300081a0033\"\n    }\n}\n",
          "hash": "173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee",
          "factoryDependencies": {}
        }
      },
      "contracts/test/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_totalSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x650e75119c6096dd47324f28bf1b68934f16d04449f5683d182d45b37d9e8349\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f92f159daf0829baede379a21e5c6266e53f1b19b34984e0f37cd0c0079ffb2\",\"dweb:/ipfs/QmcM5nuCCgiEBELimmeRuwywb7thLSnUWeQmN9JxnoWxPA\"]},\"contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x1ee410a23a1970896fdbc82047d8a830a0075caaee4ea0899cd6f8a62ab60f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6dba7e23e97d9a2d98410b2107d82d459340826a582e9861f8f9179c2c5d534\",\"dweb:/ipfs/QmNdwjhQetZEXytKnjRiRBwMqgwvcTAyLCiyqScoZvzdLd\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6b980727960c67aeff9b83b7b760bd2b1e817f5464ddefd00b23fc926ab6cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4edd6ef81d4c39f34f10e8867fe396b44680c9f6025a0c5d0e265d7f6d5b126a\",\"dweb:/ipfs/Qmaod5Jufw7AXq85ZzNdmxRmLFkJGE5TSxtN6PqFon3pL8\"]},\"contracts/test/ERC20.sol\":{\"keccak256\":\"0xe2ade18bba5295d919ee5d6a361a739b7a3989974393f38532814c887aa1c0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb133bef8af9265e1a142be85a10b6838f52ec39dcc88e55a858b3f87568a649\",\"dweb:/ipfs/QmQgi327toyTAftAnoUx67RTgPhprw2kExEL5RNat6wWnJ\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 216/65808 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 5388\n// Code size = 19015 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x200e0]\n   117: jump @134 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30110\n   126: i32 a0 = a0 + 0\n   128: ecalli 15 // 'set_immutable_data'\n   130: jump @134\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 8 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 16 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 (gas: 33)\n   923: sp = sp + 0xffffffffffffff20\n   927: u64 [sp + 0xd8] = ra\n   931: u64 [sp + 0xd0] = s0\n   935: u64 [sp + 0xc8] = s1\n   939: s0 = sp + 0xe0\n   943: sp = sp & 0xffffffffffffffe0\n   946: a5 = u64 [a4]\n   948: u64 [sp + 0x40] = a5\n   951: a5 = u64 [a4 + 0x8]\n   954: u64 [sp + 0x48] = a5\n   957: a5 = u64 [a4 + 0x10]\n   960: u64 [sp + 0x50] = a5\n   963: a4 = u64 [a4 + 0x18]\n   966: u64 [sp + 0x58] = a4\n   969: t0 = 0x6\n   972: a4 = u64 [a3]\n   974: u64 [sp + 0x18] = a4\n   977: a4 = u64 [a3 + 0x8]\n   980: u64 [sp + 0x20] = a4\n   983: a4 = u64 [a3 + 0x10]\n   986: u64 [sp + 0x28] = a4\n   989: a3 = u64 [a3 + 0x18]\n   992: u64 [sp + 0x30] = a3\n   995: s1 = u64 [a2]\n   997: a3 = u64 [a2 + 0x8]\n  1000: u64 [sp] = a3\n  1002: a3 = u64 [a2 + 0x10]\n  1005: u64 [sp + 0x8] = a3\n  1008: a2 = u64 [a2 + 0x18]\n  1011: u64 [sp + 0x10] = a2\n  1014: u64 [sp + 56] = 0x20\n  1018: ra = 0x8\n  1021: jump @26\n      : @24 [@dyn 3] (gas: 2)\n  1024: u64 [sp + 0x38] = a1\n  1027: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 46)\n  1032: a1 = reverse s1\n  1034: u64 [sp + 0x78] = a1\n  1037: a1 = u64 [sp]\n  1039: a1 = reverse a1\n  1041: u64 [sp + 0x70] = a1\n  1044: a1 = u64 [sp + 0x8]\n  1047: a1 = reverse a1\n  1049: u64 [sp + 0x68] = a1\n  1052: a1 = u64 [sp + 0x10]\n  1055: a1 = reverse a1\n  1057: u64 [sp + 0x60] = a1\n  1060: a1 = u64 [sp + 0x18]\n  1063: a1 = reverse a1\n  1065: u64 [sp + 0x98] = a1\n  1069: a1 = u64 [sp + 0x20]\n  1072: a1 = reverse a1\n  1074: u64 [sp + 0x90] = a1\n  1078: a1 = u64 [sp + 0x28]\n  1081: a1 = reverse a1\n  1083: u64 [sp + 0x88] = a1\n  1087: a1 = u64 [sp + 0x30]\n  1090: a1 = reverse a1\n  1092: u64 [sp + 0x80] = a1\n  1096: a1 = u64 [sp + 0x40]\n  1099: a1 = reverse a1\n  1101: u64 [sp + 0xb8] = a1\n  1105: a1 = u64 [sp + 0x48]\n  1108: a1 = reverse a1\n  1110: u64 [sp + 0xb0] = a1\n  1114: a1 = u64 [sp + 0x50]\n  1117: a1 = reverse a1\n  1119: u64 [sp + 0xa8] = a1\n  1123: a1 = u64 [sp + 0x58]\n  1126: a1 = reverse a1\n  1128: u64 [sp + 0xa0] = a1\n  1132: i32 a2 = a0 + 0\n  1134: a3 = i32 [sp + 0x38]\n  1137: i32 a0 = sp + 0x60\n  1140: a1 = 0x3\n  1143: ecalli 7 // 'deposit_event'\n  1145: sp = s0 + 0xffffffffffffff20\n  1149: ra = u64 [sp + 0xd8]\n  1153: s0 = u64 [sp + 0xd0]\n  1157: s1 = u64 [sp + 0xc8]\n  1161: sp = sp + 0xe0\n  1165: ret\n      : @26 (gas: 2)\n  1167: i32 a2 = a0 >> 0x10\n  1170: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1173: a1 = a1 + a0\n  1176: i32 a1 = a1 + 0x1f\n  1179: a1 = a1 & 0xffffffffffffffe0\n  1182: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1188: a2 = 0x200dc\n  1193: a3 = i32 [0x200dc]\n  1198: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1201: u32 [0x200dc] = a1\n  1206: fallthrough\n      : @30 (gas: 4)\n  1207: a1 = 0x200f0\n  1212: i32 a0 = a0 + 0\n  1214: a0 = a0 + a1\n  1217: ret\n      : @31 (gas: 1)\n  1219: trap\n      : @32 (gas: 6)\n  1220: sp = sp + 0xfffffffffffffff0\n  1223: u64 [sp + 0x8] = ra\n  1226: u64 [sp] = s0\n  1228: s0 = a0 & 0x1\n  1231: ecalli 4 // 'call_data_size'\n  1233: fallthrough\n      : @33 (gas: 2)\n  1234: u32 [0x200d8] = a0\n  1239: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1242: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 20)\n  1246: ra = 0xc\n  1249: sp = sp + 0xfffffffffffff808\n  1253: a0 = sp + 0x700\n  1257: u64 [a0 + 0xf0] = ra\n  1261: u64 [a0 + 0xe8] = s0\n  1265: u64 [a0 + 0xe0] = s1\n  1269: s0 = sp + 0x7f8\n  1273: sp = sp + 0xfffffffffffff800\n  1277: sp = sp + 0xfffffffffffff9b8\n  1281: sp = sp & 0xffffffffffffffe0\n  1284: s1 = sp\n  1286: a2 = s1 + 0x10b8\n  1290: u64 [a2 + 320] = 0\n  1294: u64 [a2 + 312] = 0\n  1298: u64 [a2 + 296] = 0x80\n  1304: a0 = 0x40\n  1307: a1 = s1 + 0x11e0\n  1311: u64 [a2 + 304] = 0\n  1315: ra = 0x9e\n  1319: jump @19\n      : @36 [@dyn 6] (gas: 15)\n  1322: sp = sp + 0xfffffffffffff8a0\n  1326: a0 = sp + 0x700\n  1330: u64 [a0 + 0x58] = ra\n  1333: u64 [a0 + 0x50] = s0\n  1336: u64 [a0 + 0x48] = s1\n  1339: s0 = sp + 0x760\n  1343: sp = sp & 0xffffffffffffffe0\n  1346: s1 = sp\n  1348: u64 [s1 + 1560] = 0\n  1352: u64 [s1 + 1552] = 0\n  1356: u64 [s1 + 1544] = 0\n  1360: a0 = 0x40\n  1363: a1 = s1 + 0x600\n  1367: u64 [s1 + 1536] = 0x80\n  1373: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1378: u64 [s1 + 1592] = 0\n  1382: u64 [s1 + 1584] = 0\n  1386: u64 [s1 + 1576] = 0\n  1390: u64 [s1 + 1568] = 0\n  1394: i32 a0 = s1 + 0x620\n  1398: ecalli 17 // 'value_transferred'\n  1400: fallthrough\n      : @38 (gas: 9)\n  1401: a4 = s1 + 0x600\n  1405: a0 = u64 [a4 + 0x30]\n  1408: a1 = u64 [a4 + 0x38]\n  1411: a2 = u64 [a4 + 0x28]\n  1414: a3 = u64 [a4 + 0x20]\n  1417: a1 = a1 | a2\n  1420: a0 = a0 | a3\n  1423: a0 = a0 | a1\n  1426: jump @130 if a0 != 0\n      : @39 (gas: 15)\n  1430: a0 = i32 [0x200d8]\n  1435: u64 [s1 + 0x98] = a0\n  1439: a0 = a0 << 0x20\n  1442: a2 = a0 >> 0x20\n  1445: u64 [s1 + 1496] = 0\n  1449: u64 [s1 + 1488] = 0\n  1453: u64 [s1 + 1480] = 0\n  1457: u64 [s1 + 1528] = 0\n  1461: u64 [s1 + 1520] = 0\n  1465: u64 [s1 + 1512] = 0\n  1469: u64 [s1 + 1504] = 0x80\n  1475: a0 = s1 + 0x5e0\n  1479: a1 = s1 + 0x5c0\n  1483: u64 [s1 + 0x5c0] = a2\n  1487: ra = 16, jump @573\n      : @40 [@dyn 8] (gas: 3)\n  1492: a0 = 0x80\n  1496: a1 = u64 [s1 + 0x98]\n  1500: ra = 18, jump @26\n      : @41 [@dyn 9] (gas: 5)\n  1505: i32 a0 = a0 + 0\n  1507: a1 = u64 [s1 + 0x98]\n  1511: a2 = 0\n  1513: ecalli 2 // 'call_data_copy'\n  1515: fallthrough\n      : @42 (gas: 2)\n  1516: a1 = u64 [s1 + 0x98]\n  1520: jump @131 if a1 <=u 31\n      : @43 (gas: 3)\n  1525: a0 = s1 + 0x5a0\n  1529: a1 = 0x80\n  1533: ra = 20, jump @17\n      : @44 [@dyn 10] (gas: 11)\n  1538: a0 = u64 [s1 + 0x5b8]\n  1542: u64 [s1 + 0x78] = a0\n  1545: a0 = u64 [s1 + 0x5b0]\n  1549: u64 [s1 + 0x70] = a0\n  1552: a0 = u64 [s1 + 0x5a8]\n  1556: u64 [s1 + 0x68] = a0\n  1559: a0 = u64 [s1 + 0x5a0]\n  1563: u64 [s1 + 0x60] = a0\n  1566: a0 = s1 + 0x580\n  1570: a1 = 0x40\n  1573: ra = 22, jump @17\n      : @45 [@dyn 11] (gas: 20)\n  1578: a5 = s1 + 0x500\n  1582: a0 = u64 [a5 + 0x98]\n  1586: u64 [s1 + 0x88] = a0\n  1590: a1 = u64 [a5 + 0x90]\n  1594: u64 [s1 + 0x80] = a1\n  1598: a3 = u64 [a5 + 0x88]\n  1602: u64 [s1 + 0x90] = a3\n  1606: a2 = u64 [a5 + 0x80]\n  1610: u64 [s1 + 0x98] = a2\n  1614: u64 [s1 + 1368] = 0\n  1618: u64 [s1 + 1360] = 0\n  1622: u64 [s1 + 1352] = 0\n  1626: u64 [a5 + 64] = 0x40\n  1630: u64 [a5 + 0x78] = a0\n  1633: u64 [a5 + 0x70] = a1\n  1636: u64 [a5 + 0x68] = a3\n  1639: a0 = s1 + 0x560\n  1643: a1 = s1 + 0x540\n  1647: u64 [a5 + 0x60] = a2\n  1650: ra = 24, jump @573\n      : @46 [@dyn 12] (gas: 1)\n  1655: t0 = 26, jump @721\n      : @47 [@dyn 13] (gas: 1)\n  1660: jump @129 if a0 != 0\n      : @48 (gas: 7)\n  1664: u64 [s1 + 1336] = 0\n  1668: u64 [s1 + 1328] = 0\n  1672: u64 [s1 + 1320] = 0\n  1676: a1 = s1 + 0x520\n  1680: u64 [s1 + 1312] = 0xa\n  1685: a0 = u64 [s1 + 0x98]\n  1689: ra = 28, jump @19\n      : @49 [@dyn 14] (gas: 1)\n  1694: t0 = 30, jump @709\n      : @50 [@dyn 15] (gas: 1)\n  1699: jump @129 if a1 == 0\n      : @51 (gas: 11)\n  1703: a0 = u64 [s1 + 0x98]\n  1707: i32 a0 = a0 + 0x20\n  1710: a1 = u64 [0x20000]\n  1715: u64 [s1 + 1288] = 0\n  1719: u64 [s1 + 1280] = 0\n  1723: u64 [s1 + 0x518] = a1\n  1727: a2 = 0x5632000000000000\n  1737: a1 = s1 + 0x500\n  1741: u64 [s1 + 0x510] = a2\n  1745: u64 [s1 + 0x90] = a0\n  1749: ra = 32, jump @19\n      : @52 [@dyn 16] (gas: 3)\n  1754: a0 = s1 + 0x4e0\n  1758: a1 = u64 [s1 + 0x98]\n  1762: ra = 34, jump @17\n      : @53 [@dyn 17] (gas: 6)\n  1767: a4 = s1 + 0x400\n  1771: a0 = u64 [a4 + 0xf8]\n  1775: a3 = u64 [a4 + 0xf0]\n  1779: a2 = u64 [a4 + 0xe8]\n  1783: a1 = u64 [a4 + 0xe0]\n  1787: t0 = 36, jump @703\n      : @54 [@dyn 18] (gas: 1)\n  1792: jump @129 if a0 != 0\n      : @55 (gas: 3)\n  1796: a0 = u64 [s1 + 0x90]\n  1800: u64 [s1 + 0x98] = a1\n  1804: ra = 38, jump @26\n      : @56 [@dyn 19] (gas: 1)\n  1809: t0 = 40, jump @705\n      : @57 [@dyn 20] (gas: 13)\n  1814: ecalli 9 // 'hash_keccak_256'\n  1816: a1 = u64 [s1 + 0x90]\n  1820: a0 = u64 [a1 + 0x18]\n  1823: u64 [s1 + 0x58] = a0\n  1826: a0 = u64 [a1 + 0x10]\n  1829: u64 [s1 + 0x50] = a0\n  1832: a0 = u64 [a1 + 0x8]\n  1835: u64 [s1 + 0x48] = a0\n  1838: a0 = u64 [a1]\n  1840: u64 [s1 + 0x40] = a0\n  1843: a0 = s1 + 0x4c0\n  1847: a1 = 0x40\n  1850: ra = 42, jump @17\n      : @58 [@dyn 21] (gas: 20)\n  1855: a5 = s1 + 0x400\n  1859: a0 = u64 [a5 + 0xd8]\n  1863: u64 [s1 + 0x88] = a0\n  1867: a1 = u64 [a5 + 0xd0]\n  1871: u64 [s1 + 0x80] = a1\n  1875: a3 = u64 [a5 + 0xc8]\n  1879: u64 [s1 + 0x90] = a3\n  1883: a2 = u64 [a5 + 0xc0]\n  1887: u64 [s1 + 0x98] = a2\n  1891: u64 [s1 + 1176] = 0\n  1895: u64 [s1 + 1168] = 0\n  1899: u64 [s1 + 1160] = 0\n  1903: u64 [a5 + 128] = 0x40\n  1908: u64 [a5 + 0xb8] = a0\n  1912: u64 [a5 + 0xb0] = a1\n  1916: u64 [a5 + 0xa8] = a3\n  1920: a0 = s1 + 0x4a0\n  1924: a1 = s1 + 0x480\n  1928: u64 [a5 + 0xa0] = a2\n  1932: ra = 44, jump @573\n      : @59 [@dyn 22] (gas: 1)\n  1937: t0 = 46, jump @721\n      : @60 [@dyn 23] (gas: 1)\n  1942: jump @129 if a0 != 0\n      : @61 (gas: 7)\n  1946: u64 [s1 + 1144] = 0\n  1950: u64 [s1 + 1136] = 0\n  1954: u64 [s1 + 1128] = 0\n  1958: a1 = s1 + 0x460\n  1962: u64 [s1 + 1120] = 0x1\n  1967: a0 = u64 [s1 + 0x98]\n  1971: ra = 48, jump @19\n      : @62 [@dyn 24] (gas: 1)\n  1976: t0 = 50, jump @709\n      : @63 [@dyn 25] (gas: 1)\n  1981: jump @129 if a1 == 0\n      : @64 (gas: 10)\n  1985: a0 = u64 [s1 + 0x98]\n  1989: i32 a0 = a0 + 0x20\n  1992: u64 [s1 + 1104] = 0\n  1996: u64 [s1 + 1096] = 0\n  2000: u64 [s1 + 1088] = 0\n  2004: a2 = 0x3100000000000000\n  2014: a1 = s1 + 0x440\n  2018: u64 [s1 + 0x458] = a2\n  2022: u64 [s1 + 0x90] = a0\n  2026: ra = 52, jump @19\n      : @65 [@dyn 26] (gas: 3)\n  2031: a0 = s1 + 0x420\n  2035: a1 = u64 [s1 + 0x98]\n  2039: ra = 54, jump @17\n      : @66 [@dyn 27] (gas: 6)\n  2044: a4 = s1 + 0x400\n  2048: a0 = u64 [a4 + 0x38]\n  2051: a3 = u64 [a4 + 0x30]\n  2054: a2 = u64 [a4 + 0x28]\n  2057: a1 = u64 [a4 + 0x20]\n  2060: t0 = 56, jump @703\n      : @67 [@dyn 28] (gas: 1)\n  2065: jump @129 if a0 != 0\n      : @68 (gas: 3)\n  2069: a0 = u64 [s1 + 0x90]\n  2073: u64 [s1 + 0x98] = a1\n  2077: ra = 58, jump @26\n      : @69 [@dyn 29] (gas: 1)\n  2082: t0 = 60, jump @705\n      : @70 [@dyn 30] (gas: 13)\n  2087: ecalli 9 // 'hash_keccak_256'\n  2089: a1 = u64 [s1 + 0x90]\n  2093: a0 = u64 [a1 + 0x18]\n  2096: u64 [s1 + 0x38] = a0\n  2099: a0 = u64 [a1 + 0x10]\n  2102: u64 [s1 + 0x30] = a0\n  2105: a0 = u64 [a1 + 0x8]\n  2108: u64 [s1 + 0x28] = a0\n  2111: a0 = u64 [a1]\n  2113: u64 [s1 + 0x20] = a0\n  2116: a0 = s1 + 0x400\n  2120: a1 = 0x40\n  2123: ra = 62, jump @17\n      : @71 [@dyn 31] (gas: 20)\n  2128: t0 = u64 [s1 + 0x400]\n  2132: t1 = u64 [s1 + 0x418]\n  2136: t2 = u64 [s1 + 0x408]\n  2140: a5 = u64 [s1 + 0x410]\n  2144: a4 = t0 + 0x20\n  2147: a0 = a4 <u t0\n  2150: a1 = t2 + a0\n  2153: a2 = a1 <u t2\n  2156: a2 = a0 if a0 == 0\n  2159: a2 = a2 + a5\n  2162: a0 = a2 <u a5\n  2165: a0 = a0 + t1\n  2168: a3 = a4 | a2\n  2171: a0 = a0 | a1\n  2174: a3 = a3 | a0\n  2177: a3 = a3 >> 0x20\n  2180: a0 = a0 | a2\n  2183: a0 = a0 << 0x20\n  2186: a0 = a0 | a3\n  2189: jump @129 if a0 != 0\n      : @72 (gas: 17)\n  2193: a0 = u64 [0x20008]\n  2198: a3 = s1 + 0x300\n  2202: u64 [a3 + 0xf8] = a0\n  2206: a0 = u64 [0x20010]\n  2211: a1 = u64 [0x20018]\n  2216: a2 = u64 [0x20020]\n  2221: u64 [a3 + 0xf0] = a0\n  2225: u64 [a3 + 0xe8] = a1\n  2229: a1 = s1 + 0x3e0\n  2233: u64 [a3 + 0xe0] = a2\n  2237: u64 [s1 + 0x18] = a4\n  2240: a0 = a4\n  2242: u64 [s1 + 0x98] = t0\n  2246: u64 [s1 + 0x90] = t2\n  2250: u64 [s1 + 0x88] = t1\n  2254: u64 [s1 + 0x80] = a5\n  2258: ra = 64, jump @19\n      : @73 [@dyn 32] (gas: 5)\n  2263: a4 = u64 [s1 + 0x80]\n  2267: a3 = u64 [s1 + 0x90]\n  2271: a1 = u64 [s1 + 0x98]\n  2275: a0 = a1 + 0x40\n  2278: t0 = 66, jump @694\n      : @74 [@dyn 33] (gas: 1)\n  2283: jump @129 if a1 != 0\n      : @75 (gas: 15)\n  2287: a1 = u64 [s1 + 0x40]\n  2290: a2 = reverse a1\n  2292: a1 = u64 [s1 + 0x48]\n  2295: a1 = reverse a1\n  2297: a3 = u64 [s1 + 0x50]\n  2300: a3 = reverse a3\n  2302: a4 = u64 [s1 + 0x58]\n  2305: a4 = reverse a4\n  2307: a5 = s1 + 0x300\n  2311: u64 [a5 + 0xc0] = a4\n  2315: u64 [a5 + 0xc8] = a3\n  2319: u64 [a5 + 0xd0] = a1\n  2323: a1 = s1 + 0x3c0\n  2327: u64 [a5 + 0xd8] = a2\n  2331: ra = 68, jump @19\n      : @76 [@dyn 34] (gas: 5)\n  2336: a4 = u64 [s1 + 0x80]\n  2340: a3 = u64 [s1 + 0x90]\n  2344: a1 = u64 [s1 + 0x98]\n  2348: a0 = a1 + 0x60\n  2351: t0 = 70, jump @694\n      : @77 [@dyn 35] (gas: 1)\n  2356: jump @129 if a1 != 0\n      : @78 (gas: 15)\n  2360: a1 = u64 [s1 + 0x20]\n  2363: a2 = reverse a1\n  2365: a1 = u64 [s1 + 0x28]\n  2368: a1 = reverse a1\n  2370: a3 = u64 [s1 + 0x30]\n  2373: a3 = reverse a3\n  2375: a4 = u64 [s1 + 0x38]\n  2378: a4 = reverse a4\n  2380: a5 = s1 + 0x300\n  2384: u64 [a5 + 0xa0] = a4\n  2388: u64 [a5 + 0xa8] = a3\n  2392: u64 [a5 + 0xb0] = a1\n  2396: a1 = s1 + 0x3a0\n  2400: u64 [a5 + 0xb8] = a2\n  2404: ra = 72, jump @19\n      : @79 [@dyn 36] (gas: 4)\n  2409: i32 a0 = s1 + 0x640\n  2413: ra = 0x4a\n  2416: ecalli 6 // 'chain_id'\n  2418: fallthrough\n      : @80 [@dyn 37] (gas: 5)\n  2419: a4 = u64 [s1 + 0x80]\n  2423: a3 = u64 [s1 + 0x90]\n  2427: a1 = u64 [s1 + 0x98]\n  2431: a0 = a1 + 0x80\n  2435: t0 = 76, jump @694\n      : @81 [@dyn 38] (gas: 1)\n  2440: jump @129 if a1 != 0\n      : @82 (gas: 12)\n  2444: a5 = s1 + 0x600\n  2448: a2 = u64 [a5 + 0x40]\n  2451: a1 = u64 [a5 + 0x48]\n  2454: a3 = u64 [a5 + 0x50]\n  2457: a4 = u64 [a5 + 0x58]\n  2460: a5 = s1 + 0x300\n  2464: u64 [a5 + 0x98] = a4\n  2468: u64 [a5 + 0x90] = a3\n  2472: u64 [a5 + 0x88] = a1\n  2476: a1 = s1 + 0x380\n  2480: u64 [a5 + 0x80] = a2\n  2484: ra = 78, jump @19\n      : @83 [@dyn 39] (gas: 7)\n  2489: a0 = 0x300f0\n  2494: u64 [s1 + 0x58] = a0\n  2497: i32 a0 = a0 + 0\n  2499: u64 [s1 + 0x50] = a0\n  2502: ra = 0x50\n  2505: ecalli 0 // 'address'\n  2506: fallthrough\n      : @84 [@dyn 40] (gas: 5)\n  2507: a4 = u64 [s1 + 0x80]\n  2511: a3 = u64 [s1 + 0x90]\n  2515: a1 = u64 [s1 + 0x98]\n  2519: a0 = a1 + 0xa0\n  2523: t0 = 82, jump @694\n      : @85 [@dyn 41] (gas: 1)\n  2528: jump @129 if a1 != 0\n      : @86 (gas: 21)\n  2532: a3 = u64 [s1 + 0x58]\n  2535: a1 = u64 [a3 + 0x8]\n  2538: a2 = i32 [a3 + 0x10]\n  2541: a3 = u64 [a3]\n  2543: a1 = reverse a1\n  2545: a4 = a1 << 0x20\n  2548: a2 = reverse a2\n  2550: a2 = a2 >> 0x20\n  2553: a2 = a2 | a4\n  2556: a1 = a1 >> 0x20\n  2559: a3 = reverse a3\n  2561: a4 = a3 << 0x20\n  2564: a1 = a1 | a4\n  2567: a3 = a3 >> 0x20\n  2570: u64 [s1 + 888] = 0\n  2574: a4 = s1 + 0x300\n  2578: u64 [a4 + 0x70] = a3\n  2581: u64 [a4 + 0x68] = a1\n  2584: a1 = s1 + 0x360\n  2588: u64 [a4 + 0x60] = a2\n  2591: ra = 84, jump @19\n      : @87 [@dyn 42] (gas: 12)\n  2596: a5 = u64 [s1 + 0x80]\n  2600: a4 = u64 [s1 + 0x88]\n  2604: a3 = u64 [s1 + 0x90]\n  2608: a0 = u64 [s1 + 0x98]\n  2612: a2 = a0 | a5\n  2615: a1 = a3 | a4\n  2618: a2 = a2 | a1\n  2621: a2 = a2 >> 0x20\n  2624: a1 = a1 | a5\n  2627: a1 = a1 << 0x20\n  2630: a1 = a1 | a2\n  2633: jump @129 if a1 != 0\n      : @88 (gas: 6)\n  2637: u64 [s1 + 856] = 0\n  2641: u64 [s1 + 848] = 0\n  2645: u64 [s1 + 840] = 0\n  2649: a1 = s1 + 0x340\n  2653: u64 [s1 + 832] = 0xa0\n  2659: ra = 86, jump @19\n      : @89 [@dyn 43] (gas: 16)\n  2664: u64 [s1 + 792] = 0\n  2668: u64 [s1 + 784] = 0\n  2672: u64 [s1 + 776] = 0\n  2676: a3 = s1 + 0x300\n  2680: u64 [a3 + 0] = 0xc0\n  2684: a0 = u64 [s1 + 0x88]\n  2688: u64 [a3 + 0x38] = a0\n  2691: a0 = u64 [s1 + 0x80]\n  2695: u64 [a3 + 0x30] = a0\n  2698: a0 = u64 [s1 + 0x90]\n  2702: u64 [a3 + 0x28] = a0\n  2705: a0 = s1 + 0x320\n  2709: a1 = s1 + 0x300\n  2713: a2 = u64 [s1 + 0x98]\n  2717: u64 [a3 + 0x20] = a2\n  2720: ra = 88, jump @573\n      : @90 [@dyn 44] (gas: 3)\n  2725: a0 = s1 + 0x2e0\n  2729: a1 = u64 [s1 + 0x98]\n  2733: ra = 90, jump @17\n      : @91 [@dyn 45] (gas: 6)\n  2738: a4 = s1 + 0x200\n  2742: a0 = u64 [a4 + 0xf8]\n  2746: a3 = u64 [a4 + 0xf0]\n  2750: a2 = u64 [a4 + 0xe8]\n  2754: a1 = u64 [a4 + 0xe0]\n  2758: t0 = 92, jump @703\n      : @92 [@dyn 46] (gas: 1)\n  2763: jump @129 if a0 != 0\n      : @93 (gas: 3)\n  2767: a0 = u64 [s1 + 0x18]\n  2770: u64 [s1 + 0x98] = a1\n  2774: ra = 94, jump @26\n      : @94 [@dyn 47] (gas: 1)\n  2779: t0 = 96, jump @705\n      : @95 [@dyn 48] (gas: 5)\n  2784: ra = 0x62\n  2787: ecalli 9 // 'hash_keccak_256'\n  2789: a3 = u64 [s1 + 0x90]\n  2793: t0 = 0x64\n  2796: jump @714\n      : @96 [@dyn 49] (gas: 2)\n  2799: a3 = u64 [s1 + 0x90]\n  2803: t0 = 100, jump @714\n      : @97 [@dyn 50] (gas: 11)\n  2808: u64 [s1 + 1656] = 0\n  2812: u64 [s1 + 1648] = 0\n  2816: u64 [s1 + 1640] = 0\n  2820: u64 [s1 + 1632] = 0x3\n  2825: u64 [s1 + 0x698] = a3\n  2829: u64 [s1 + 0x690] = a2\n  2833: u64 [s1 + 0x688] = a1\n  2837: u64 [s1 + 0x680] = a0\n  2841: a0 = s1 + 0x660\n  2845: a1 = s1 + 0x680\n  2849: ra = 102, jump @22\n      : @98 [@dyn 51] (gas: 7)\n  2854: u64 [s1 + 1720] = 0\n  2858: u64 [s1 + 1712] = 0\n  2862: u64 [s1 + 1704] = 0\n  2866: u64 [s1 + 1696] = 0\n  2870: a0 = s1 + 0x2c0\n  2874: a1 = s1 + 0x6a0\n  2878: ra = 104, jump @21\n      : @99 [@dyn 52] (gas: 20)\n  2883: a3 = u64 [s1 + 0x2c0]\n  2887: a0 = u64 [s1 + 0x2c8]\n  2891: a1 = u64 [s1 + 0x2d0]\n  2895: a2 = u64 [s1 + 0x2d8]\n  2899: a4 = u64 [s1 + 0x78]\n  2902: u64 [s1 + 0x278] = a4\n  2906: a4 = u64 [s1 + 0x70]\n  2909: u64 [s1 + 0x270] = a4\n  2913: a4 = u64 [s1 + 0x68]\n  2916: u64 [s1 + 0x268] = a4\n  2920: a4 = u64 [s1 + 0x60]\n  2923: u64 [s1 + 0x260] = a4\n  2927: u64 [s1 + 0x298] = a2\n  2931: u64 [s1 + 0x290] = a1\n  2935: u64 [s1 + 0x288] = a0\n  2939: a0 = s1 + 0x2a0\n  2943: a1 = s1 + 0x280\n  2947: a2 = s1 + 0x260\n  2951: u64 [s1 + 0x280] = a3\n  2955: ra = 106, jump @583\n      : @100 [@dyn 53] (gas: 16)\n  2960: a0 = u64 [s1 + 0x2a0]\n  2964: a1 = u64 [s1 + 0x2a8]\n  2968: a2 = u64 [s1 + 0x2b0]\n  2972: a3 = u64 [s1 + 0x2b8]\n  2976: u64 [s1 + 1752] = 0\n  2980: u64 [s1 + 1744] = 0\n  2984: u64 [s1 + 1736] = 0\n  2988: u64 [s1 + 1728] = 0\n  2992: a4 = s1 + 0x600\n  2996: u64 [a4 + 0xf8] = a3\n  3000: u64 [a4 + 0xf0] = a2\n  3004: u64 [a4 + 0xe8] = a1\n  3008: u64 [a4 + 0xe0] = a0\n  3012: a0 = s1 + 0x6c0\n  3016: a1 = s1 + 0x6e0\n  3020: ra = 108, jump @22\n      : @101 [@dyn 54] (gas: 6)\n  3025: a0 = u64 [s1 + 0x50]\n  3028: ra = 0x6e\n  3031: ecalli 5 // 'caller'\n  3033: a2 = u64 [s1 + 0x58]\n  3036: t0 = 0x70\n  3039: jump @693\n      : @102 [@dyn 55] (gas: 2)\n  3042: a2 = u64 [s1 + 0x58]\n  3045: t0 = 112, jump @693\n      : @103 [@dyn 56] (gas: 7)\n  3050: u64 [s1 + 600] = 0\n  3054: u64 [s1 + 0x250] = a1\n  3058: u64 [s1 + 0x248] = a0\n  3062: a1 = s1 + 0x240\n  3066: u64 [s1 + 0x240] = a3\n  3070: a0 = 0\n  3072: ra = 114, jump @19\n      : @104 [@dyn 57] (gas: 7)\n  3077: u64 [s1 + 568] = 0\n  3081: u64 [s1 + 560] = 0\n  3085: u64 [s1 + 552] = 0\n  3089: a0 = 0x20\n  3092: a1 = s1 + 0x220\n  3096: u64 [s1 + 544] = 0x1\n  3101: ra = 116, jump @19\n      : @105 [@dyn 58] (gas: 8)\n  3106: a0 = sp + 0xffffffffffffffe0\n  3109: a0 = a0 & 0xffffffffffffffe0\n  3112: u64 [s1 + 0x98] = a0\n  3116: sp = a0\n  3118: a0 = 0x200dc\n  3123: u64 [s1 + 0x90] = a0\n  3127: a0 = i32 [0x200dc]\n  3132: jump @107 if a0 >u 63\n      : @106 (gas: 3)\n  3136: a1 = u64 [s1 + 0x90]\n  3140: u32 [a1 + 0] = 0x40\n  3143: fallthrough\n      : @107 (gas: 14)\n  3144: a0 = sp + 0xffffffffffffffe0\n  3147: a2 = a0 & 0xffffffffffffffe0\n  3150: u64 [s1 + 0x80] = a2\n  3154: sp = a2\n  3156: a0 = 0x200f0\n  3161: i32 a0 = a0 + 0\n  3163: i32 a2 = a2 + 0\n  3165: a1 = 0x40\n  3168: u64 [s1 + 0x88] = a0\n  3172: ra = 0x76\n  3175: ecalli 9 // 'hash_keccak_256'\n  3177: a3 = u64 [s1 + 0x80]\n  3181: t0 = 0x78\n  3184: jump @707\n      : @108 [@dyn 59] (gas: 2)\n  3187: a3 = u64 [s1 + 0x80]\n  3191: t0 = 120, jump @707\n      : @109 [@dyn 60] (gas: 7)\n  3196: u64 [a4 + 0x18] = a3\n  3199: u64 [a4 + 0x10] = a2\n  3202: u64 [a4 + 0x8] = a1\n  3205: u64 [a4] = a0\n  3207: a0 = s1 + 0x200\n  3211: a1 = s1 + 0x700\n  3215: ra = 122, jump @21\n      : @110 [@dyn 61] (gas: 21)\n  3220: a4 = s1 + 0x200\n  3224: a3 = u64 [a4]\n  3226: a0 = u64 [a4 + 0x8]\n  3229: a1 = u64 [a4 + 0x10]\n  3232: a2 = u64 [a4 + 0x18]\n  3235: a4 = u64 [s1 + 0x78]\n  3238: u64 [s1 + 0x1b8] = a4\n  3242: a4 = u64 [s1 + 0x70]\n  3245: u64 [s1 + 0x1b0] = a4\n  3249: a4 = u64 [s1 + 0x68]\n  3252: u64 [s1 + 0x1a8] = a4\n  3256: a4 = u64 [s1 + 0x60]\n  3259: u64 [s1 + 0x1a0] = a4\n  3263: u64 [s1 + 0x1d8] = a2\n  3267: u64 [s1 + 0x1d0] = a1\n  3271: u64 [s1 + 0x1c8] = a0\n  3275: a0 = s1 + 0x1e0\n  3279: a1 = s1 + 0x1c0\n  3283: a2 = s1 + 0x1a0\n  3287: u64 [s1 + 0x1c0] = a3\n  3291: ra = 124, jump @583\n      : @111 [@dyn 62] (gas: 15)\n  3296: a0 = u64 [s1 + 0x1f0]\n  3300: a1 = u64 [s1 + 0x1f8]\n  3304: a2 = u64 [s1 + 0x1e0]\n  3308: a3 = u64 [s1 + 0x1e8]\n  3312: a4 = u64 [s1 + 0x98]\n  3316: u64 [a4 + 0x10] = a0\n  3319: u64 [a4 + 0x18] = a1\n  3322: u64 [a4] = a2\n  3324: u64 [a4 + 0x8] = a3\n  3327: a0 = u64 [s1 + 0x50]\n  3330: ra = 0x7e\n  3333: ecalli 5 // 'caller'\n  3335: a2 = u64 [s1 + 0x58]\n  3338: t0 = 0x80\n  3342: jump @693\n      : @112 [@dyn 63] (gas: 2)\n  3345: a2 = u64 [s1 + 0x58]\n  3348: t0 = 128, jump @693\n      : @113 [@dyn 64] (gas: 7)\n  3354: u64 [s1 + 408] = 0\n  3358: u64 [s1 + 0x190] = a1\n  3362: u64 [s1 + 0x188] = a0\n  3366: a1 = s1 + 0x180\n  3370: u64 [s1 + 0x180] = a3\n  3374: a0 = 0\n  3376: ra = 130, jump @19\n      : @114 [@dyn 65] (gas: 1)\n  3382: t0 = 132, jump @713\n      : @115 [@dyn 66] (gas: 1)\n  3388: ra = 134, jump @19\n      : @116 [@dyn 67] (gas: 3)\n  3394: a0 = u64 [s1 + 0x90]\n  3398: a0 = i32 [a0]\n  3400: jump @118 if a0 >u 63\n      : @117 (gas: 3)\n  3404: a0 = u64 [s1 + 0x90]\n  3408: u32 [a0 + 0] = 0x40\n  3411: fallthrough\n      : @118 (gas: 12)\n  3412: a0 = sp + 0xffffffffffffffe0\n  3415: a0 = a0 & 0xffffffffffffffe0\n  3418: u64 [s1 + 0x90] = a0\n  3422: sp = a0\n  3424: i32 a2 = a0 + 0\n  3426: a1 = 0x40\n  3429: a0 = u64 [s1 + 0x88]\n  3433: ra = 0x88\n  3437: ecalli 9 // 'hash_keccak_256'\n  3439: a3 = u64 [s1 + 0x90]\n  3443: t0 = 0x8a\n  3447: jump @707\n      : @119 [@dyn 68] (gas: 2)\n  3450: a3 = u64 [s1 + 0x90]\n  3454: t0 = 138, jump @707\n      : @120 [@dyn 69] (gas: 7)\n  3460: u64 [a4 + 0x38] = a3\n  3463: u64 [a4 + 0x30] = a2\n  3466: u64 [a4 + 0x28] = a1\n  3469: u64 [a4 + 0x20] = a0\n  3472: a0 = s1 + 0x720\n  3476: a1 = u64 [s1 + 0x98]\n  3480: ra = 140, jump @22\n      : @121 [@dyn 70] (gas: 3)\n  3486: a0 = s1 + 0x140\n  3490: a1 = 0x40\n  3493: ra = 142, jump @17\n      : @122 [@dyn 71] (gas: 6)\n  3499: a4 = s1 + 0x100\n  3503: a0 = u64 [a4 + 0x58]\n  3506: a1 = u64 [a4 + 0x50]\n  3509: a2 = u64 [a4 + 0x48]\n  3512: a3 = u64 [a4 + 0x40]\n  3515: t0 = 144, jump @695\n      : @123 [@dyn 72] (gas: 1)\n  3521: jump @129 if a0 != 0\n      : @124 (gas: 12)\n  3525: a0 = u64 [s1 + 0x60]\n  3528: u64 [s1 + 0x120] = a0\n  3532: a0 = u64 [s1 + 0x68]\n  3535: u64 [s1 + 0x128] = a0\n  3539: a0 = u64 [s1 + 0x70]\n  3542: u64 [s1 + 0x130] = a0\n  3546: a1 = s1 + 0x120\n  3550: a0 = u64 [s1 + 0x78]\n  3553: u64 [s1 + 0x138] = a0\n  3557: a0 = a3\n  3559: u64 [s1 + 0x98] = a3\n  3563: ra = 146, jump @19\n      : @125 [@dyn 73] (gas: 39)\n  3569: a0 = u64 [s1 + 0x50]\n  3572: ecalli 5 // 'caller'\n  3574: a2 = u64 [s1 + 0x58]\n  3577: a0 = u64 [a2 + 0x8]\n  3580: a1 = i32 [a2 + 0x10]\n  3583: a2 = u64 [a2]\n  3585: a3 = reverse a0\n  3587: a0 = a3 << 0x20\n  3590: a1 = reverse a1\n  3592: a1 = a1 >> 0x20\n  3595: t0 = a1 | a0\n  3598: a3 = a3 >> 0x20\n  3601: a2 = reverse a2\n  3603: a1 = a2 << 0x20\n  3606: a1 = a1 | a3\n  3609: a2 = a2 >> 0x20\n  3612: u64 [s1 + 216] = 0\n  3616: u64 [s1 + 248] = 0\n  3620: u64 [s1 + 240] = 0\n  3624: u64 [s1 + 232] = 0\n  3628: u64 [s1 + 224] = 0\n  3632: a3 = u64 [0x20028]\n  3637: a4 = u64 [0x20030]\n  3642: a5 = u64 [0x20038]\n  3647: a0 = u64 [0x20040]\n  3652: u64 [s1 + 0x118] = a3\n  3656: a3 = s1 + 0x100\n  3660: u64 [a3 + 0x10] = a4\n  3663: u64 [a3 + 0x8] = a5\n  3666: u64 [a3] = a0\n  3668: u64 [s1 + 0xd0] = a2\n  3672: u64 [s1 + 0xc8] = a1\n  3676: a1 = 0x20\n  3679: a2 = s1 + 0x100\n  3683: a3 = s1 + 0xe0\n  3687: a4 = s1 + 0xc0\n  3691: u64 [s1 + 0xc0] = t0\n  3695: a0 = u64 [s1 + 0x98]\n  3699: ra = 148, jump @23\n      : @126 [@dyn 74] (gas: 3)\n  3705: a0 = s1 + 0xa0\n  3709: a1 = 0x40\n  3712: ra = 150, jump @17\n      : @127 [@dyn 75] (gas: 5)\n  3718: a0 = u64 [s1 + 0xb8]\n  3722: a1 = u64 [s1 + 0xb0]\n  3726: a2 = u64 [s1 + 0xa8]\n  3730: a4 = u64 [s1 + 0xa0]\n  3734: t0 = 152, jump @717\n      : @128 [@dyn 76] (gas: 1)\n  3740: jump @132 if a0 == 0\n      : @129 (gas: 1)\n  3743: trap\n      : @130 (gas: 6)\n  3744: a1 = 0x200f0\n  3749: i32 a1 = a1 + 0\n  3751: a0 = 0x1\n  3754: a2 = 0\n  3756: ecalli 14 // 'seal_return'\n  3758: jump @132\n      : @131 (gas: 6)\n  3760: a1 = 0x200f0\n  3765: i32 a1 = a1 + 0\n  3767: a0 = 0x1\n  3770: a2 = 0\n  3772: ecalli 14 // 'seal_return'\n  3774: fallthrough\n      : @132 (gas: 5)\n  3775: a3 = a4\n  3777: a0 = a4\n  3779: u64 [s1 + 0x98] = a3\n  3783: a1 = 0\n  3785: ra = 154, jump @26\n      : @133 [@dyn 77] (gas: 5)\n  3791: i32 a0 = a0 + 0\n  3793: a1 = 0\n  3795: a2 = 0\n  3797: ecalli 2 // 'call_data_copy'\n  3799: jump @15\n      : @134 (gas: 3)\n  3802: a0 = u64 [s1 + 0x98]\n  3806: a1 = 0\n  3808: ra = 156, jump @26\n      : @135 [@dyn 78] (gas: 5)\n  3814: i32 a1 = a0 + 0\n  3816: a0 = 0\n  3818: a2 = 0\n  3820: ecalli 14 // 'seal_return'\n  3822: jump @132\n      : @136 [@dyn 79] (gas: 4)\n  3824: a0 = 0x200d8\n  3829: u64 [s1 + 0x138] = a0\n  3833: a0 = i32 [0x200d8]\n  3838: jump @138 if a0 >=u 4\n      : @137 (gas: 1)\n  3842: jump @534\n      : @138 (gas: 6)\n  3845: a0 = s1 + 0x1000\n  3849: i32 a0 = a0 + 0x200\n  3853: a1 = 0\n  3855: ra = 0xa0\n  3859: ecalli 3 // 'call_data_load'\n  3861: fallthrough\n      : @139 [@dyn 80] (gas: 3)\n  3862: t0 = s1 + 0x10b8\n  3866: a0 = i32 [t0 + 0x164]\n  3870: jump @257 if a0 == 2514000705\n      : @140 (gas: 1)\n  3878: jump @208 if a0 == 2835717307\n      : @141 (gas: 1)\n  3886: jump @143 if a0 != 3573918927\n      : @142 (gas: 1)\n  3893: jump @391\n      : @143 (gas: 1)\n  3896: jump @145 if a0 != 3714247998\n      : @144 (gas: 1)\n  3903: jump @350\n      : @145 (gas: 1)\n  3906: jump @174 if a0 == 117300739\n      : @146 (gas: 1)\n  3914: jump @148 if a0 != 157198259\n      : @147 (gas: 1)\n  3921: jump @377\n      : @148 (gas: 1)\n  3924: jump @223 if a0 == 404098525\n      : @149 (gas: 1)\n  3932: jump @284 if a0 == 599290589\n      : @150 (gas: 1)\n  3940: jump @196 if a0 == 816707615\n      : @151 (gas: 1)\n  3948: jump @234 if a0 == 826074471\n      : @152 (gas: 1)\n  3956: jump @246 if a0 == 910484757\n      : @153 (gas: 1)\n  3964: jump @155 if a0 == 1889567281\n      : @154 (gas: 1)\n  3971: jump @419\n      : @155 (gas: 10)\n  3974: u64 [t0 + 736] = 0\n  3978: u64 [t0 + 728] = 0\n  3982: u64 [t0 + 720] = 0\n  3986: u64 [t0 + 712] = 0\n  3990: a0 = s1 + 0x1000\n  3994: i32 a0 = a0 + 0x380\n  3998: ra = 0xa2\n  4002: ecalli 17 // 'value_transferred'\n  4004: t0 = 0xa4\n  4008: jump @711\n      : @156 [@dyn 81] (gas: 1)\n  4011: t0 = 164, jump @711\n      : @157 [@dyn 82] (gas: 8)\n  4017: a0 = u64 [a4 + 0xd8]\n  4021: a1 = u64 [a4 + 0xe0]\n  4025: a2 = u64 [a4 + 0xd0]\n  4029: a3 = u64 [a4 + 0xc8]\n  4033: a1 = a1 | a2\n  4036: a0 = a0 | a3\n  4039: a0 = a0 | a1\n  4042: jump @159 if a0 == 0\n      : @158 (gas: 1)\n  4045: jump @537\n      : @159 (gas: 4)\n  4048: a0 = u64 [s1 + 0x138]\n  4052: a0 = i32 [a0]\n  4054: a1 = 0x23\n  4057: jump @161 if a1 <u a0\n      : @160 (gas: 1)\n  4060: jump @538\n      : @161 (gas: 5)\n  4063: a0 = s1 + 0x7ff\n  4067: a0 = a0 + 0x1\n  4070: ra = 0xa6\n  4074: t0 = 0x25a\n  4078: jump @722\n      : @162 [@dyn 83] (gas: 13)\n  4081: a0 = s1 + 0x1000\n  4085: a0 = u64 [a0 + 0xfffffffffffff800]\n  4089: a1 = s1 + 0x1000\n  4093: a1 = u64 [a1 + 0xfffffffffffff808]\n  4097: a2 = s1 + 0x1000\n  4101: a2 = u32 [a2 + 0xfffffffffffff810]\n  4105: u64 [s1 + 2040] = 0\n  4109: u64 [s1 + 0x7f0] = a2\n  4113: u64 [s1 + 0x7e8] = a1\n  4117: a1 = s1 + 0x7e0\n  4121: u64 [s1 + 0x7e0] = a0\n  4125: a0 = 0\n  4127: ra = 168, jump @19\n      : @163 [@dyn 84] (gas: 7)\n  4133: u64 [s1 + 2008] = 0\n  4137: u64 [s1 + 2000] = 0\n  4141: u64 [s1 + 1984] = 0x1\n  4146: a0 = 0x20\n  4149: a1 = s1 + 0x7c0\n  4153: u64 [s1 + 1992] = 0\n  4157: ra = 170, jump @19\n      : @164 [@dyn 85] (gas: 2)\n  4163: a1 = i32 [0x200dc]\n  4168: jump @166 if a1 >u 63\n      : @165 (gas: 2)\n  4172: u32 [0x200dc] = 0x40\n  4178: fallthrough\n      : @166 (gas: 12)\n  4179: a0 = sp + 0xffffffffffffffe0\n  4182: a2 = a0 & 0xffffffffffffffe0\n  4185: u64 [s1 + 0x138] = a2\n  4189: sp = a2\n  4191: a0 = 0x200f0\n  4196: i32 a0 = a0 + 0\n  4198: i32 a2 = a2 + 0\n  4200: a1 = 0x40\n  4203: ra = 0xac\n  4207: ecalli 9 // 'hash_keccak_256'\n  4209: t0 = 0xae\n  4213: jump @701\n      : @167 [@dyn 86] (gas: 1)\n  4216: t0 = 174, jump @701\n      : @168 [@dyn 87] (gas: 8)\n  4222: u64 [a4 + 0x300] = a3\n  4226: a3 = a4 + 0x200\n  4230: u64 [a3 + 0xf8] = a2\n  4234: u64 [a3 + 0xf0] = a1\n  4238: u64 [a3 + 0xe8] = a0\n  4242: a0 = s1 + 0x7a0\n  4246: a1 = s1 + 0x13a0\n  4250: ra = 176, jump @21\n      : @169 [@dyn 88] (gas: 12)\n  4256: a0 = u64 [s1 + 0x7b8]\n  4260: a1 = s1 + 0x100\n  4264: u64 [a1 + 0x38] = a0\n  4267: a0 = u64 [s1 + 0x7b0]\n  4271: u64 [a1 + 0x30] = a0\n  4274: a0 = u64 [s1 + 0x7a8]\n  4278: u64 [a1 + 0x28] = a0\n  4281: a0 = u64 [s1 + 0x7a0]\n  4285: u64 [a1 + 0x20] = a0\n  4288: a0 = s1 + 0x780\n  4292: a1 = 0x40\n  4295: ra = 178, jump @17\n      : @170 [@dyn 89] (gas: 6)\n  4301: a4 = s1 + 0x700\n  4305: a0 = u64 [a4 + 0x98]\n  4309: a1 = u64 [a4 + 0x90]\n  4313: a2 = u64 [a4 + 0x88]\n  4317: a3 = u64 [a4 + 0x80]\n  4321: t0 = 180, jump @695\n      : @171 [@dyn 90] (gas: 1)\n  4327: jump @173 if a0 == 0\n      : @172 (gas: 1)\n  4330: jump @533\n      : @173 (gas: 15)\n  4333: a2 = s1 + 0x100\n  4337: a0 = u64 [a2 + 0x20]\n  4340: a4 = s1 + 0x700\n  4344: u64 [a4 + 0x60] = a0\n  4347: a0 = u64 [a2 + 0x28]\n  4350: u64 [a4 + 0x68] = a0\n  4353: a0 = u64 [a2 + 0x30]\n  4356: u64 [a4 + 0x70] = a0\n  4359: a1 = s1 + 0x760\n  4363: a0 = u64 [a2 + 0x38]\n  4366: u64 [a4 + 0x78] = a0\n  4369: a0 = a3\n  4371: u64 [s1 + 0x138] = a3\n  4375: ra = 0x1c6\n  4379: jump @19\n      : @174 (gas: 9)\n  4382: u64 [t0 + 384] = 0\n  4386: u64 [t0 + 376] = 0\n  4390: u64 [t0 + 368] = 0\n  4394: u64 [t0 + 360] = 0\n  4398: a0 = s1 + 0x1000\n  4402: i32 a0 = a0 + 0x220\n  4406: ra = 0xb6\n  4410: ecalli 17 // 'value_transferred'\n  4412: fallthrough\n      : @175 [@dyn 91] (gas: 3)\n  4413: a3 = s1 + 0x10b8\n  4417: a4 = a3 + 0x100\n  4421: t0 = 184, jump @724\n      : @176 [@dyn 92] (gas: 1)\n  4427: jump @178 if a0 == 0\n      : @177 (gas: 1)\n  4430: jump @539\n      : @178 (gas: 3)\n  4433: a0 = u64 [s1 + 0x138]\n  4437: a0 = i32 [a0]\n  4439: jump @180 if a0 >u 3\n      : @179 (gas: 1)\n  4443: jump @540\n      : @180 (gas: 3)\n  4446: a0 = s1 + 0x240\n  4450: a1 = 0x40\n  4453: ra = 186, jump @17\n      : @181 [@dyn 93] (gas: 20)\n  4459: a5 = s1 + 0x200\n  4463: a0 = u64 [a5 + 0x58]\n  4466: u64 [s1 + 0x120] = a0\n  4470: a1 = u64 [a5 + 0x50]\n  4473: u64 [s1 + 0x128] = a1\n  4477: a3 = u64 [a5 + 0x48]\n  4480: u64 [s1 + 0x130] = a3\n  4484: a2 = u64 [a5 + 0x40]\n  4487: u64 [s1 + 0x138] = a2\n  4491: u64 [s1 + 536] = 0\n  4495: u64 [s1 + 528] = 0\n  4499: u64 [s1 + 520] = 0\n  4503: u64 [a5 + 0] = 0x40\n  4506: u64 [a5 + 0x38] = a0\n  4509: u64 [a5 + 0x30] = a1\n  4512: u64 [a5 + 0x28] = a3\n  4515: a0 = s1 + 0x220\n  4519: a1 = s1 + 0x200\n  4523: u64 [a5 + 0x20] = a2\n  4526: ra = 188, jump @573\n      : @182 [@dyn 94] (gas: 1)\n  4532: t0 = 190, jump @712\n      : @183 [@dyn 95] (gas: 1)\n  4538: jump @185 if a0 == 0\n      : @184 (gas: 1)\n  4541: jump @533\n      : @185 (gas: 7)\n  4544: u64 [s1 + 504] = 0\n  4548: u64 [s1 + 496] = 0\n  4552: u64 [s1 + 488] = 0\n  4556: a1 = s1 + 0x1e0\n  4560: u64 [s1 + 480] = 0xa\n  4565: a0 = u64 [s1 + 0x138]\n  4569: ra = 192, jump @19\n      : @186 [@dyn 96] (gas: 1)\n  4575: t0 = 194, jump @702\n      : @187 [@dyn 97] (gas: 1)\n  4581: jump @189 if a1 != 0\n      : @188 (gas: 1)\n  4584: jump @533\n      : @189 (gas: 10)\n  4587: a0 = u64 [s1 + 0x138]\n  4591: i32 a0 = a0 + 0x20\n  4594: a1 = u64 [0x20090]\n  4599: u64 [s1 + 456] = 0\n  4603: u64 [s1 + 0x1d8] = a1\n  4607: a1 = 0x5632000000000000\n  4617: u64 [s1 + 0x1d0] = a1\n  4621: a1 = s1 + 0x1c0\n  4625: u64 [s1 + 448] = 0\n  4629: ra = 196, jump @19\n      : @190 [@dyn 98] (gas: 3)\n  4635: a0 = s1 + 0x1a0\n  4639: a1 = 0x40\n  4642: ra = 198, jump @17\n      : @191 [@dyn 99] (gas: 24)\n  4648: a2 = u64 [s1 + 0x1b8]\n  4652: u64 [s1 + 0x118] = a2\n  4656: a1 = u64 [s1 + 0x1b0]\n  4660: u64 [s1 + 0x110] = a1\n  4664: a3 = u64 [s1 + 0x1a8]\n  4668: u64 [s1 + 0x108] = a3\n  4672: a4 = u64 [s1 + 0x1a0]\n  4676: u64 [s1 + 0x100] = a4\n  4680: a0 = u64 [s1 + 0x120]\n  4684: u64 [s1 + 0x158] = a0\n  4688: a0 = u64 [s1 + 0x128]\n  4692: u64 [s1 + 0x150] = a0\n  4696: a0 = u64 [s1 + 0x130]\n  4700: u64 [s1 + 0x148] = a0\n  4704: a0 = u64 [s1 + 0x138]\n  4708: u64 [s1 + 0x140] = a0\n  4712: u64 [s1 + 0x178] = a2\n  4716: u64 [s1 + 0x170] = a1\n  4720: u64 [s1 + 0x168] = a3\n  4724: a0 = s1 + 0x180\n  4728: a1 = s1 + 0x160\n  4732: a2 = s1 + 0x140\n  4736: u64 [s1 + 0x160] = a4\n  4740: ra = 200, jump @591\n      : @192 [@dyn 100] (gas: 1)\n  4746: t0 = 202, jump @708\n      : @193 [@dyn 101] (gas: 1)\n  4752: jump @195 if a0 == 0\n      : @194 (gas: 1)\n  4755: jump @533\n      : @195 (gas: 8)\n  4758: t0 = a3\n  4760: a5 = s1 + 0x100\n  4764: a0 = u64 [a5 + 0x88]\n  4768: a1 = u64 [a5 + 0x98]\n  4772: u64 [a5 + 0x38] = a1\n  4775: t1 = u64 [s1 + 0x180]\n  4779: a3 = u64 [a5 + 0x90]\n  4783: jump @280\n      : @196 (gas: 15)\n  4786: a0 = s1 + 0x100\n  4790: u64 [a0 + 0x18] = a2\n  4793: u64 [a0 + 0x20] = a5\n  4796: u64 [a0 + 0x28] = a4\n  4799: u64 [a0 + 0x30] = a3\n  4802: u64 [t0 + 608] = 0\n  4806: u64 [t0 + 600] = 0\n  4810: u64 [t0 + 592] = 0\n  4814: u64 [t0 + 584] = 0\n  4818: a0 = s1 + 0x1000\n  4822: i32 a0 = a0 + 0x300\n  4826: ra = 0xcc\n  4830: ecalli 17 // 'value_transferred'\n  4832: t0 = 0xce\n  4836: jump @711\n      : @197 [@dyn 102] (gas: 1)\n  4839: t0 = 206, jump @711\n      : @198 [@dyn 103] (gas: 1)\n  4845: t0 = 208, jump @723\n      : @199 [@dyn 104] (gas: 1)\n  4851: jump @201 if a0 == 0\n      : @200 (gas: 1)\n  4854: jump @541\n      : @201 (gas: 3)\n  4857: a0 = u64 [s1 + 0x138]\n  4861: a0 = i32 [a0]\n  4863: jump @203 if a0 >u 3\n      : @202 (gas: 1)\n  4867: jump @542\n      : @203 (gas: 3)\n  4870: a0 = s1 + 0x6a0\n  4874: a1 = 0x40\n  4877: ra = 210, jump @17\n      : @204 [@dyn 105] (gas: 6)\n  4883: a4 = s1 + 0x600\n  4887: a0 = u64 [a4 + 0xb8]\n  4891: a1 = u64 [a4 + 0xb0]\n  4895: a2 = u64 [a4 + 0xa8]\n  4899: a3 = u64 [a4 + 0xa0]\n  4903: t0 = 212, jump @695\n      : @205 [@dyn 106] (gas: 1)\n  4909: jump @207 if a0 == 0\n      : @206 (gas: 1)\n  4912: jump @533\n      : @207 (gas: 15)\n  4915: a4 = s1 + 0x100\n  4919: a0 = u64 [0x20048]\n  4924: a1 = u64 [0x20050]\n  4929: a2 = u64 [0x20058]\n  4934: a5 = s1 + 0x600\n  4938: u64 [a5 + 0x98] = a0\n  4942: a0 = u64 [0x20060]\n  4947: u64 [a5 + 0x90] = a1\n  4951: u64 [a5 + 0x88] = a2\n  4955: a1 = s1 + 0x680\n  4959: u64 [a5 + 0x80] = a0\n  4963: a0 = a3\n  4965: u64 [s1 + 0x138] = a3\n  4969: ra = 0x1c6\n  4973: jump @19\n      : @208 (gas: 10)\n  4976: u64 [t0 + 896] = 0\n  4980: u64 [t0 + 888] = 0\n  4984: u64 [t0 + 880] = 0\n  4988: u64 [t0 + 872] = 0\n  4992: a0 = s1 + 0x1000\n  4996: i32 a0 = a0 + 0x420\n  5000: ra = 0xd6\n  5004: ecalli 17 // 'value_transferred'\n  5006: t0 = 0xd8\n  5010: jump @710\n      : @209 [@dyn 107] (gas: 1)\n  5013: t0 = 216, jump @710\n      : @210 [@dyn 108] (gas: 1)\n  5019: t0 = 218, jump @724\n      : @211 [@dyn 109] (gas: 1)\n  5025: jump @213 if a0 == 0\n      : @212 (gas: 1)\n  5028: jump @543\n      : @213 (gas: 4)\n  5031: a0 = u64 [s1 + 0x138]\n  5035: a0 = i32 [a0]\n  5037: a1 = 0x43\n  5040: jump @215 if a1 <u a0\n      : @214 (gas: 1)\n  5043: jump @544\n      : @215 (gas: 5)\n  5046: a0 = s1 + 0x7ff\n  5050: a0 = a0 + 0x2a1\n  5054: ra = 0xdc\n  5058: t0 = 0x25a\n  5062: jump @722\n      : @216 [@dyn 110] (gas: 32)\n  5065: a1 = s1 + 0x7ff\n  5069: a1 = a1 + 0xb9\n  5073: a2 = a1 + 0x100\n  5077: a0 = u64 [a2 + 0xe8]\n  5081: u64 [s1 + 0x138] = a0\n  5085: a0 = u64 [a2 + 0xf0]\n  5089: u64 [s1 + 0x130] = a0\n  5093: a0 = u64 [a2 + 0xf8]\n  5097: u64 [s1 + 0x128] = a0\n  5101: a0 = u64 [a1 + 0x200]\n  5105: u64 [s1 + 0x120] = a0\n  5109: a0 = s1 + 0x1000\n  5113: i32 a0 = a0 + 0x440\n  5117: a1 = 0x24\n  5120: ecalli 3 // 'call_data_load'\n  5122: a0 = s1 + 0x10b8\n  5126: a2 = a0 + 0x300\n  5130: a1 = u64 [a2 + 0x88]\n  5134: u64 [s1 + 0x118] = a1\n  5138: a1 = u64 [a2 + 0x90]\n  5142: u64 [s1 + 0x110] = a1\n  5146: a1 = u64 [a2 + 0x98]\n  5150: u64 [s1 + 0x108] = a1\n  5154: a0 = u64 [a2 + 0xa0]\n  5158: u64 [s1 + 0x100] = a0\n  5162: a0 = 0x300f0\n  5167: u64 [s1 + 0xf8] = a0\n  5171: i32 a0 = a0 + 0\n  5173: ra = 0xde\n  5177: ecalli 5 // 'caller'\n  5179: t0 = 0xe0\n  5183: jump @700\n      : @217 [@dyn 111] (gas: 1)\n  5186: t0 = 224, jump @700\n      : @218 [@dyn 112] (gas: 31)\n  5192: a3 = s1 + 0x7ff\n  5196: a3 = a3 + 0xb9\n  5200: a5 = s1 + 0x100\n  5204: a4 = u64 [a5]\n  5206: u64 [a3 + 0x1a0] = a4\n  5210: a4 = u64 [a5 + 0x8]\n  5213: u64 [a3 + 0x198] = a4\n  5217: a4 = u64 [a5 + 0x10]\n  5220: u64 [a3 + 0x190] = a4\n  5224: a4 = u64 [a5 + 0x18]\n  5227: u64 [a3 + 0x188] = a4\n  5231: a4 = u64 [a5 + 0x20]\n  5234: u64 [a3 + 0x1c0] = a4\n  5238: a4 = u64 [a5 + 0x28]\n  5241: u64 [a3 + 0x1b8] = a4\n  5245: a4 = u64 [a5 + 0x30]\n  5248: u64 [a3 + 0x1b0] = a4\n  5252: a4 = u64 [a5 + 0x38]\n  5255: a5 = a3 + 0x100\n  5259: u64 [a5 + 0xa8] = a4\n  5263: u64 [a5 + 0xd8] = a2\n  5267: u64 [a5 + 0xd0] = a0\n  5271: u64 [a5 + 0xc8] = a1\n  5275: a0 = s1 + 0x7ff\n  5279: a0 = a0 + 0x281\n  5283: a1 = s1 + 0x7ff\n  5287: a1 = a1 + 0x261\n  5291: a2 = s1 + 0x7ff\n  5295: a2 = a2 + 0x241\n  5299: u64 [a3 + 480] = 0\n  5303: ra = 226, jump @645\n      : @219 [@dyn 113] (gas: 4)\n  5309: a0 = s1 + 0x7ff\n  5313: a0 = a0 + 0x221\n  5317: a1 = 0x40\n  5320: ra = 228, jump @17\n      : @220 [@dyn 114] (gas: 15)\n  5326: a3 = s1 + 0x7ff\n  5330: a3 = a3 + 0xb9\n  5334: a5 = a3 + 0x100\n  5338: a4 = u64 [a5 + 0x80]\n  5342: a1 = u64 [a5 + 0x78]\n  5345: a2 = u64 [a5 + 0x70]\n  5348: a0 = u64 [a5 + 0x68]\n  5351: a4 = a4 | a2\n  5354: a2 = a0 | a1\n  5357: a2 = a2 | a4\n  5360: a2 = a2 >> 0x20\n  5363: a1 = a1 | a4\n  5366: a1 = a1 << 0x20\n  5369: a1 = a1 | a2\n  5372: jump @222 if a1 == 0\n      : @221 (gas: 1)\n  5375: jump @533\n      : @222 (gas: 9)\n  5378: u64 [a3 + 352] = 0\n  5382: u64 [a3 + 344] = 0\n  5386: u64 [a3 + 328] = 0x1\n  5391: a1 = s1 + 0x7ff\n  5395: a1 = a1 + 0x201\n  5399: u64 [a3 + 336] = 0\n  5403: u64 [s1 + 0x138] = a0\n  5407: ra = 0x1c6\n  5411: jump @19\n      : @223 (gas: 8)\n  5414: u64 [t0 + 480] = 0\n  5418: u64 [t0 + 472] = 0\n  5422: u64 [t0 + 464] = 0\n  5426: u64 [t0 + 456] = 0\n  5430: a0 = s1 + 0x1000\n  5434: i32 a0 = a0 + 0x280\n  5438: ecalli 17 // 'value_transferred'\n  5440: fallthrough\n      : @224 (gas: 11)\n  5441: a3 = s1 + 0x10b8\n  5445: a5 = a3 + 0x100\n  5449: a0 = u64 [a5 + 0xd8]\n  5453: a1 = u64 [a5 + 0xe0]\n  5457: a2 = u64 [a5 + 0xd0]\n  5461: a4 = a3\n  5463: a3 = u64 [a5 + 0xc8]\n  5467: a1 = a1 | a2\n  5470: a0 = a0 | a3\n  5473: a0 = a0 | a1\n  5476: jump @226 if a0 == 0\n      : @225 (gas: 1)\n  5479: jump @545\n      : @226 (gas: 3)\n  5482: a0 = u64 [s1 + 0x138]\n  5486: a0 = i32 [a0]\n  5488: jump @228 if a0 >u 3\n      : @227 (gas: 1)\n  5492: jump @546\n      : @228 (gas: 7)\n  5495: u64 [a4 + 512] = 0\n  5499: u64 [a4 + 504] = 0\n  5503: u64 [a4 + 496] = 0\n  5507: u64 [a4 + 488] = 0\n  5511: a0 = s1 + 0x360\n  5515: a1 = s1 + 0x12a0\n  5519: ra = 230, jump @21\n      : @229 [@dyn 115] (gas: 12)\n  5525: a0 = u64 [s1 + 0x378]\n  5529: a1 = s1 + 0x100\n  5533: u64 [a1 + 0x38] = a0\n  5536: a0 = u64 [s1 + 0x370]\n  5540: u64 [a1 + 0x30] = a0\n  5543: a0 = u64 [s1 + 0x368]\n  5547: u64 [a1 + 0x28] = a0\n  5550: a0 = u64 [s1 + 0x360]\n  5554: u64 [a1 + 0x20] = a0\n  5557: a0 = s1 + 0x340\n  5561: a1 = 0x40\n  5564: ra = 232, jump @17\n      : @230 [@dyn 116] (gas: 6)\n  5570: a4 = s1 + 0x300\n  5574: a0 = u64 [a4 + 0x58]\n  5577: a1 = u64 [a4 + 0x50]\n  5580: a2 = u64 [a4 + 0x48]\n  5583: a3 = u64 [a4 + 0x40]\n  5586: t0 = 234, jump @695\n      : @231 [@dyn 117] (gas: 1)\n  5592: jump @233 if a0 == 0\n      : @232 (gas: 1)\n  5595: jump @533\n      : @233 (gas: 15)\n  5598: a2 = s1 + 0x100\n  5602: a0 = u64 [a2 + 0x20]\n  5605: a4 = s1 + 0x300\n  5609: u64 [a4 + 0x20] = a0\n  5612: a0 = u64 [a2 + 0x28]\n  5615: u64 [a4 + 0x28] = a0\n  5618: a0 = u64 [a2 + 0x30]\n  5621: u64 [a4 + 0x30] = a0\n  5624: a1 = s1 + 0x320\n  5628: a0 = u64 [a2 + 0x38]\n  5631: u64 [a4 + 0x38] = a0\n  5634: a0 = a3\n  5636: u64 [s1 + 0x138] = a3\n  5640: ra = 0x1c6\n  5644: jump @19\n      : @234 (gas: 10)\n  5647: u64 [t0 + 640] = 0\n  5651: u64 [t0 + 632] = 0\n  5655: u64 [t0 + 624] = 0\n  5659: u64 [t0 + 616] = 0\n  5663: a0 = s1 + 0x1000\n  5667: i32 a0 = a0 + 0x320\n  5671: ra = 0xec\n  5675: ecalli 17 // 'value_transferred'\n  5677: t0 = 0xee\n  5681: jump @711\n      : @235 [@dyn 118] (gas: 1)\n  5684: t0 = 238, jump @711\n      : @236 [@dyn 119] (gas: 1)\n  5690: t0 = 240, jump @724\n      : @237 [@dyn 120] (gas: 1)\n  5696: jump @239 if a0 == 0\n      : @238 (gas: 1)\n  5699: jump @547\n      : @239 (gas: 3)\n  5702: a0 = u64 [s1 + 0x138]\n  5706: a0 = i32 [a0]\n  5708: jump @241 if a0 >u 3\n      : @240 (gas: 1)\n  5712: jump @548\n      : @241 (gas: 3)\n  5715: a0 = s1 + 0x6e0\n  5719: a1 = 0x40\n  5722: ra = 242, jump @17\n      : @242 [@dyn 121] (gas: 6)\n  5728: a4 = s1 + 0x600\n  5732: a3 = u64 [a4 + 0xf8]\n  5736: a1 = u64 [a4 + 0xf0]\n  5740: a2 = u64 [a4 + 0xe8]\n  5744: a0 = u64 [a4 + 0xe0]\n  5748: t0 = 244, jump @718\n      : @243 [@dyn 122] (gas: 1)\n  5754: jump @245 if a1 == 0\n      : @244 (gas: 1)\n  5757: jump @533\n      : @245 (gas: 8)\n  5760: u64 [s1 + 1752] = 0\n  5764: u64 [s1 + 1744] = 0\n  5768: u64 [s1 + 1736] = 0\n  5772: a1 = s1 + 0x6c0\n  5776: u64 [s1 + 1728] = 0x12\n  5781: u64 [s1 + 0x138] = a0\n  5785: ra = 0x1c6\n  5789: jump @19\n      : @246 (gas: 8)\n  5792: u64 [t0 + 672] = 0\n  5796: u64 [t0 + 664] = 0\n  5800: u64 [t0 + 656] = 0\n  5804: u64 [t0 + 648] = 0\n  5808: a0 = s1 + 0x1000\n  5812: i32 a0 = a0 + 0x340\n  5816: ecalli 17 // 'value_transferred'\n  5818: fallthrough\n      : @247 (gas: 11)\n  5819: a3 = s1 + 0x10b8\n  5823: a5 = a3 + 0x200\n  5827: a0 = u64 [a5 + 0x98]\n  5831: a1 = u64 [a5 + 0xa0]\n  5835: a2 = u64 [a5 + 0x90]\n  5839: a4 = a3\n  5841: a3 = u64 [a5 + 0x88]\n  5845: a1 = a1 | a2\n  5848: a0 = a0 | a3\n  5851: a0 = a0 | a1\n  5854: jump @249 if a0 == 0\n      : @248 (gas: 1)\n  5857: jump @549\n      : @249 (gas: 3)\n  5860: a0 = u64 [s1 + 0x138]\n  5864: a1 = i32 [a0]\n  5866: jump @251 if a1 >u 3\n      : @250 (gas: 1)\n  5870: jump @550\n      : @251 (gas: 7)\n  5873: u64 [a4 + 704] = 0\n  5877: u64 [a4 + 696] = 0\n  5881: u64 [a4 + 688] = 0\n  5885: u64 [a4 + 680] = 0x3\n  5890: a0 = s1 + 0x740\n  5894: a1 = s1 + 0x1360\n  5898: ra = 246, jump @21\n      : @252 [@dyn 123] (gas: 12)\n  5904: a0 = u64 [s1 + 0x758]\n  5908: a1 = s1 + 0x100\n  5912: u64 [a1 + 0x38] = a0\n  5915: a0 = u64 [s1 + 0x750]\n  5919: u64 [a1 + 0x30] = a0\n  5922: a0 = u64 [s1 + 0x748]\n  5926: u64 [a1 + 0x28] = a0\n  5929: a0 = u64 [s1 + 0x740]\n  5933: u64 [a1 + 0x20] = a0\n  5936: a0 = s1 + 0x720\n  5940: a1 = 0x40\n  5943: ra = 248, jump @17\n      : @253 [@dyn 124] (gas: 6)\n  5949: a4 = s1 + 0x700\n  5953: a0 = u64 [a4 + 0x38]\n  5956: a1 = u64 [a4 + 0x30]\n  5959: a2 = u64 [a4 + 0x28]\n  5962: a3 = u64 [a4 + 0x20]\n  5965: t0 = 250, jump @695\n      : @254 [@dyn 125] (gas: 1)\n  5971: jump @256 if a0 == 0\n      : @255 (gas: 1)\n  5974: jump @533\n      : @256 (gas: 15)\n  5977: a2 = s1 + 0x100\n  5981: a0 = u64 [a2 + 0x20]\n  5984: a4 = s1 + 0x700\n  5988: u64 [a4] = a0\n  5990: a0 = u64 [a2 + 0x28]\n  5993: u64 [a4 + 0x8] = a0\n  5996: a0 = u64 [a2 + 0x30]\n  5999: u64 [a4 + 0x10] = a0\n  6002: a1 = s1 + 0x700\n  6006: a0 = u64 [a2 + 0x38]\n  6009: u64 [a4 + 0x18] = a0\n  6012: a0 = a3\n  6014: u64 [s1 + 0x138] = a3\n  6018: ra = 0x1c6\n  6022: jump @19\n      : @257 (gas: 10)\n  6025: u64 [t0 + 864] = 0\n  6029: u64 [t0 + 856] = 0\n  6033: u64 [t0 + 848] = 0\n  6037: u64 [t0 + 840] = 0\n  6041: a0 = s1 + 0x1000\n  6045: i32 a0 = a0 + 0x400\n  6049: ra = 0xfc\n  6053: ecalli 17 // 'value_transferred'\n  6055: t0 = 0xfe\n  6059: jump @710\n      : @258 [@dyn 126] (gas: 1)\n  6062: t0 = 254, jump @710\n      : @259 [@dyn 127] (gas: 1)\n  6068: t0 = 256, jump @723\n      : @260 [@dyn 128] (gas: 1)\n  6074: jump @262 if a0 == 0\n      : @261 (gas: 1)\n  6077: jump @551\n      : @262 (gas: 3)\n  6080: a0 = u64 [s1 + 0x138]\n  6084: a0 = i32 [a0]\n  6086: jump @264 if a0 >u 3\n      : @263 (gas: 1)\n  6090: jump @552\n      : @264 (gas: 4)\n  6093: a0 = s1 + 0x7ff\n  6097: a0 = a0 + 0x1e1\n  6101: a1 = 0x40\n  6104: ra = 258, jump @17\n      : @265 [@dyn 129] (gas: 24)\n  6110: a2 = s1 + 0x7ff\n  6114: a2 = a2 + 0xb9\n  6118: a0 = u64 [a2 + 0x140]\n  6122: u64 [s1 + 0x120] = a0\n  6126: a1 = u64 [a2 + 0x138]\n  6130: u64 [s1 + 0x128] = a1\n  6134: a4 = u64 [a2 + 0x130]\n  6138: u64 [s1 + 0x130] = a4\n  6142: a3 = u64 [a2 + 0x128]\n  6146: u64 [s1 + 0x138] = a3\n  6150: u64 [a2 + 256] = 0\n  6154: u64 [a2 + 248] = 0\n  6158: u64 [a2 + 240] = 0\n  6162: u64 [a2 + 232] = 0x40\n  6167: a5 = a2 + 0x100\n  6171: u64 [a5 + 0x20] = a0\n  6174: u64 [a5 + 0x18] = a1\n  6177: u64 [a5 + 0x10] = a4\n  6180: a0 = s1 + 0x7ff\n  6184: a0 = a0 + 0x1c1\n  6188: a1 = s1 + 0x7ff\n  6192: a1 = a1 + 0x1a1\n  6196: u64 [a5 + 0x8] = a3\n  6199: ra = 260, jump @573\n      : @266 [@dyn 130] (gas: 1)\n  6205: t0 = 262, jump @712\n      : @267 [@dyn 131] (gas: 1)\n  6211: jump @269 if a0 == 0\n      : @268 (gas: 1)\n  6214: jump @533\n      : @269 (gas: 10)\n  6217: a2 = s1 + 0x7ff\n  6221: a2 = a2 + 0xb9\n  6225: u64 [a2 + 224] = 0\n  6229: u64 [a2 + 216] = 0\n  6233: u64 [a2 + 208] = 0\n  6237: a1 = s1 + 0x7ff\n  6241: a1 = a1 + 0x181\n  6245: u64 [a2 + 200] = 0x6\n  6250: a0 = u64 [s1 + 0x138]\n  6254: ra = 264, jump @19\n      : @270 [@dyn 132] (gas: 1)\n  6260: t0 = 266, jump @702\n      : @271 [@dyn 133] (gas: 1)\n  6266: jump @273 if a1 != 0\n      : @272 (gas: 1)\n  6269: jump @533\n      : @273 (gas: 12)\n  6272: a0 = u64 [s1 + 0x138]\n  6276: i32 a0 = a0 + 0x20\n  6279: a1 = u64 [0x20088]\n  6284: a2 = s1 + 0x7ff\n  6288: a2 = a2 + 0xb9\n  6292: u64 [a2 + 184] = 0\n  6296: u64 [a2 + 176] = 0\n  6300: u64 [a2 + 0xc0] = a1\n  6304: a1 = s1 + 0x7ff\n  6308: a1 = a1 + 0x161\n  6312: u64 [a2 + 168] = 0\n  6316: ra = 268, jump @19\n      : @274 [@dyn 134] (gas: 4)\n  6322: a0 = s1 + 0x7ff\n  6326: a0 = a0 + 0x141\n  6330: a1 = 0x40\n  6333: ra = 270, jump @17\n      : @275 [@dyn 135] (gas: 30)\n  6339: a1 = s1 + 0x7ff\n  6343: a1 = a1 + 0xb9\n  6347: a3 = u64 [a1 + 0xa0]\n  6351: u64 [s1 + 0x118] = a3\n  6355: a2 = u64 [a1 + 0x98]\n  6359: u64 [s1 + 0x110] = a2\n  6363: a4 = u64 [a1 + 0x90]\n  6367: u64 [s1 + 0x108] = a4\n  6371: a5 = u64 [a1 + 0x88]\n  6375: u64 [s1 + 0x100] = a5\n  6379: a0 = u64 [s1 + 0x120]\n  6383: u64 [a1 + 0x40] = a0\n  6386: a0 = u64 [s1 + 0x128]\n  6390: u64 [a1 + 0x38] = a0\n  6393: a0 = u64 [s1 + 0x130]\n  6397: u64 [a1 + 0x30] = a0\n  6400: a0 = u64 [s1 + 0x138]\n  6404: u64 [a1 + 0x28] = a0\n  6407: u64 [a1 + 0x60] = a3\n  6410: u64 [a1 + 0x58] = a2\n  6413: u64 [a1 + 0x50] = a4\n  6416: a3 = a1\n  6418: a0 = s1 + 0x7ff\n  6422: a0 = a0 + 0x121\n  6426: a1 = s1 + 0x7ff\n  6430: a1 = a1 + 0x101\n  6434: a2 = s1 + 0x7ff\n  6438: a2 = a2 + 0xe1\n  6442: u64 [a3 + 0x48] = a5\n  6445: ra = 272, jump @591\n      : @276 [@dyn 136] (gas: 1)\n  6451: t0 = 274, jump @708\n      : @277 [@dyn 137] (gas: 1)\n  6457: jump @279 if a0 == 0\n      : @278 (gas: 1)\n  6460: jump @533\n      : @279 (gas: 9)\n  6463: t0 = a3\n  6465: a1 = s1 + 0x7ff\n  6469: a1 = a1 + 0xb9\n  6473: a0 = u64 [a1 + 0x70]\n  6476: a3 = u64 [a1 + 0x80]\n  6480: u64 [s1 + 0x138] = a3\n  6484: t1 = u64 [a1 + 0x68]\n  6487: a3 = u64 [a1 + 0x78]\n  6490: fallthrough\n      : @280 (gas: 26)\n  6491: t2 = a0 ^ a4\n  6494: a5 = a0 <u a4\n  6497: ra = t1 <u a2\n  6500: a5 = ra if t2 == 0\n  6503: a1 = a3 - t0\n  6506: t2 = a1 - a5\n  6509: a1 = a1 <u a5\n  6512: u64 [s1 + 0x130] = a1\n  6516: a3 = a3 <u t0\n  6519: a5 = u64 [s1 + 0x118]\n  6523: a1 = u64 [s1 + 0x138]\n  6527: a5 = a1 - a5\n  6530: a5 = a5 - a3\n  6533: a1 = u64 [s1 + 0x130]\n  6537: a5 = a5 - a1\n  6540: a0 = a0 - a4\n  6543: a0 = a0 - ra\n  6546: a1 = t1 - a2\n  6549: a0 = a0 | a5\n  6552: a3 = a1 | t2\n  6555: a3 = a3 | a0\n  6558: a0 = a0 | t2\n  6561: a3 = a3 >> 0x20\n  6564: a0 = a0 << 0x20\n  6567: a0 = a0 | a3\n  6570: jump @282 if a0 == 0\n      : @281 (gas: 1)\n  6573: jump @533\n      : @282 (gas: 3)\n  6576: a0 = a2\n  6578: u64 [s1 + 0x138] = a1\n  6582: ra = 276, jump @26\n      : @283 [@dyn 138] (gas: 6)\n  6588: i32 a1 = a0 + 0\n  6590: a2 = i32 [s1 + 0x138]\n  6594: a0 = 0\n  6596: ecalli 14 // 'seal_return'\n  6598: a1 = s1 + 0x10b8\n  6602: jump @442\n      : @284 (gas: 10)\n  6605: u64 [t0 + 544] = 0\n  6609: u64 [t0 + 536] = 0\n  6613: u64 [t0 + 528] = 0\n  6617: u64 [t0 + 520] = 0\n  6621: a0 = s1 + 0x1000\n  6625: i32 a0 = a0 + 0x2c0\n  6629: ra = 0x116\n  6633: ecalli 17 // 'value_transferred'\n  6635: t0 = 0x118\n  6639: jump @711\n      : @285 [@dyn 139] (gas: 1)\n  6642: t0 = 280, jump @711\n      : @286 [@dyn 140] (gas: 8)\n  6648: a0 = u64 [a4 + 0x18]\n  6651: a1 = u64 [a4 + 0x20]\n  6654: a2 = u64 [a4 + 0x10]\n  6657: a3 = u64 [a4 + 0x8]\n  6660: a1 = a1 | a2\n  6663: a0 = a0 | a3\n  6666: a0 = a0 | a1\n  6669: jump @288 if a0 == 0\n      : @287 (gas: 1)\n  6672: jump @553\n      : @288 (gas: 4)\n  6675: a0 = u64 [s1 + 0x138]\n  6679: a0 = i32 [a0]\n  6681: a1 = 0x63\n  6684: jump @290 if a1 <u a0\n      : @289 (gas: 1)\n  6687: jump @554\n      : @290 (gas: 4)\n  6690: a0 = s1 + 0x660\n  6694: ra = 0x11a\n  6698: t0 = 0x25a\n  6702: jump @722\n      : @291 [@dyn 141] (gas: 12)\n  6705: a0 = u64 [s1 + 0x678]\n  6709: u64 [s1 + 0xe8] = a0\n  6713: a0 = u64 [s1 + 0x670]\n  6717: u64 [s1 + 0x118] = a0\n  6721: a0 = u64 [s1 + 0x668]\n  6725: u64 [s1 + 0x138] = a0\n  6729: a0 = u64 [s1 + 0x660]\n  6733: u64 [s1 + 0x130] = a0\n  6737: a0 = s1 + 0x640\n  6741: ra = 0x11c\n  6745: t0 = 0x264\n  6749: jump @722\n      : @292 [@dyn 142] (gas: 36)\n  6752: a0 = u64 [s1 + 0x658]\n  6756: u64 [s1 + 0xe0] = a0\n  6760: a0 = u64 [s1 + 0x650]\n  6764: u64 [s1 + 0xd8] = a0\n  6768: a0 = u64 [s1 + 0x648]\n  6772: u64 [s1 + 0xd0] = a0\n  6776: a0 = u64 [s1 + 0x640]\n  6780: u64 [s1 + 0xc8] = a0\n  6784: a0 = s1 + 0x1000\n  6788: i32 a0 = a0 + 0x2e0\n  6792: a1 = 0x44\n  6795: ecalli 3 // 'call_data_load'\n  6797: a0 = s1 + 0x10b8\n  6801: a2 = a0 + 0x200\n  6805: a1 = u64 [a2 + 0x40]\n  6808: a3 = s1 + 0x100\n  6812: u64 [a3 + 0x8] = a1\n  6815: a1 = u64 [a2 + 0x38]\n  6818: u64 [a3] = a1\n  6820: a1 = u64 [a2 + 0x30]\n  6823: u64 [s1 + 0xf8] = a1\n  6827: a0 = u64 [a2 + 0x28]\n  6830: u64 [s1 + 0xf0] = a0\n  6834: a0 = u64 [a3 + 0x18]\n  6837: a0 = a0 << 0x20\n  6840: a0 = a0 >> 0x20\n  6843: u64 [s1 + 1592] = 0\n  6847: u64 [s1 + 0xc0] = a0\n  6851: u64 [s1 + 0x630] = a0\n  6855: a0 = u64 [a3 + 0x38]\n  6858: u64 [s1 + 0x628] = a0\n  6862: a1 = s1 + 0x620\n  6866: a0 = u64 [a3 + 0x30]\n  6869: u64 [s1 + 0x620] = a0\n  6873: a0 = 0\n  6875: ra = 286, jump @19\n      : @293 [@dyn 143] (gas: 7)\n  6881: u64 [s1 + 1560] = 0\n  6885: u64 [s1 + 1552] = 0\n  6889: u64 [s1 + 1536] = 0x2\n  6894: a0 = 0x20\n  6897: a1 = s1 + 0x600\n  6901: u64 [s1 + 1544] = 0\n  6905: ra = 288, jump @19\n      : @294 [@dyn 144] (gas: 3)\n  6911: a1 = 0x200dc\n  6916: a0 = i32 [0x200dc]\n  6921: jump @296 if a0 >u 63\n      : @295 (gas: 2)\n  6925: u32 [0x200dc] = 0x40\n  6931: fallthrough\n      : @296 (gas: 13)\n  6932: a0 = sp + 0xffffffffffffffe0\n  6935: a2 = a0 & 0xffffffffffffffe0\n  6938: u64 [s1 + 0x110] = a2\n  6942: sp = a2\n  6944: a0 = 0x200f0\n  6949: i32 a0 = a0 + 0\n  6951: i32 a2 = a2 + 0\n  6953: u64 [s1 + 0x128] = a1\n  6957: a1 = 0x40\n  6960: u64 [s1 + 0x120] = a0\n  6964: ra = 0x122\n  6968: ecalli 9 // 'hash_keccak_256'\n  6970: fallthrough\n      : @297 [@dyn 145] (gas: 8)\n  6971: a3 = u64 [s1 + 0x110]\n  6975: a0 = u64 [a3 + 0x18]\n  6978: a1 = u64 [a3 + 0x10]\n  6981: a2 = u64 [a3 + 0x8]\n  6984: a3 = u64 [a3]\n  6986: a0 = reverse a0\n  6988: u64 [s1 + 0xa8] = a0\n  6992: t0 = 292, jump @699\n      : @298 [@dyn 146] (gas: 11)\n  6998: u64 [s1 + 0xb0] = a0\n  7002: sp = a0\n  7004: a0 = 0x300f0\n  7009: u64 [s1 + 0x110] = a0\n  7013: i32 a0 = a0 + 0\n  7015: u64 [s1 + 0xb8] = a0\n  7019: ra = 0x126\n  7023: ecalli 5 // 'caller'\n  7025: a2 = u64 [s1 + 0x110]\n  7029: t0 = 0x128\n  7033: jump @693\n      : @299 [@dyn 147] (gas: 2)\n  7036: a2 = u64 [s1 + 0x110]\n  7040: t0 = 296, jump @693\n      : @300 [@dyn 148] (gas: 7)\n  7046: u64 [s1 + 1528] = 0\n  7050: u64 [s1 + 0x5f0] = a1\n  7054: u64 [s1 + 0x5e8] = a0\n  7058: a1 = s1 + 0x5e0\n  7062: u64 [s1 + 0x5e0] = a3\n  7066: a0 = 0\n  7068: ra = 298, jump @19\n      : @301 [@dyn 149] (gas: 12)\n  7074: a0 = u64 [s1 + 0x90]\n  7078: a3 = s1 + 0x500\n  7082: u64 [a3 + 0xd8] = a0\n  7086: a0 = u64 [s1 + 0x98]\n  7090: u64 [a3 + 0xd0] = a0\n  7094: a0 = u64 [s1 + 0xa0]\n  7098: u64 [a3 + 0xc8] = a0\n  7102: a0 = 0x20\n  7105: a1 = s1 + 0x5c0\n  7109: a2 = u64 [s1 + 0xa8]\n  7113: u64 [a3 + 0xc0] = a2\n  7117: ra = 300, jump @19\n      : @302 [@dyn 150] (gas: 3)\n  7123: a1 = u64 [s1 + 0x128]\n  7127: a0 = i32 [a1]\n  7129: jump @304 if a0 >u 63\n      : @303 (gas: 2)\n  7133: u32 [a1 + 0] = 0x40\n  7136: fallthrough\n      : @304 (gas: 4)\n  7137: a0 = sp + 0xffffffffffffffe0\n  7140: a0 = a0 & 0xffffffffffffffe0\n  7143: u64 [s1 + 0xa8] = a0\n  7147: t0 = 302, jump @704\n      : @305 [@dyn 151] (gas: 5)\n  7153: ra = 0x130\n  7157: ecalli 9 // 'hash_keccak_256'\n  7159: a3 = u64 [s1 + 0xa8]\n  7163: t0 = 0x132\n  7167: jump @696\n      : @306 [@dyn 152] (gas: 2)\n  7170: a3 = u64 [s1 + 0xa8]\n  7174: t0 = 306, jump @696\n      : @307 [@dyn 153] (gas: 7)\n  7180: a1 = u64 [s1 + 0xb0]\n  7184: u64 [a1 + 0x18] = a3\n  7187: u64 [a1 + 0x10] = a2\n  7190: u64 [a1 + 0x8] = a4\n  7193: u64 [a1] = a0\n  7195: a0 = s1 + 0x5a0\n  7199: ra = 308, jump @21\n      : @308 [@dyn 154] (gas: 9)\n  7205: a4 = s1 + 0x500\n  7209: a0 = u64 [a4 + 0xb0]\n  7213: a1 = u64 [a4 + 0xb8]\n  7217: a2 = u64 [a4 + 0xa8]\n  7221: a3 = u64 [a4 + 0xa0]\n  7225: a1 = a1 & a2\n  7228: a0 = a0 & a3\n  7231: a0 = a0 & a1\n  7234: jump @344 if a0 == 4294967295\n      : @309 (gas: 10)\n  7239: u64 [s1 + 1432] = 0\n  7243: a0 = u64 [s1 + 0x130]\n  7247: u64 [s1 + 0x580] = a0\n  7251: a0 = u64 [s1 + 0x138]\n  7255: u64 [s1 + 0x588] = a0\n  7259: a1 = s1 + 0x580\n  7263: a0 = u64 [s1 + 0xc0]\n  7267: u64 [s1 + 0x590] = a0\n  7271: a0 = 0\n  7273: ra = 310, jump @19\n      : @310 [@dyn 155] (gas: 7)\n  7279: u64 [s1 + 1400] = 0\n  7283: u64 [s1 + 1392] = 0\n  7287: u64 [s1 + 1376] = 0x2\n  7292: a0 = 0x20\n  7295: a1 = s1 + 0x560\n  7299: u64 [s1 + 1384] = 0\n  7303: ra = 312, jump @19\n      : @311 [@dyn 156] (gas: 3)\n  7309: a1 = u64 [s1 + 0x128]\n  7313: a0 = i32 [a1]\n  7315: jump @313 if a0 >u 63\n      : @312 (gas: 2)\n  7319: u32 [a1 + 0] = 0x40\n  7322: fallthrough\n      : @313 (gas: 4)\n  7323: a0 = sp + 0xffffffffffffffe0\n  7326: a0 = a0 & 0xffffffffffffffe0\n  7329: u64 [s1 + 0xb0] = a0\n  7333: t0 = 314, jump @704\n      : @314 [@dyn 157] (gas: 3)\n  7339: ra = 0x13c\n  7343: ecalli 9 // 'hash_keccak_256'\n  7345: fallthrough\n      : @315 [@dyn 158] (gas: 8)\n  7346: a3 = u64 [s1 + 0xb0]\n  7350: a0 = u64 [a3 + 0x18]\n  7353: a1 = u64 [a3 + 0x10]\n  7356: a2 = u64 [a3 + 0x8]\n  7359: a3 = u64 [a3]\n  7361: a0 = reverse a0\n  7363: u64 [s1 + 0xb0] = a0\n  7367: t0 = 318, jump @699\n      : @316 [@dyn 159] (gas: 8)\n  7373: u64 [s1 + 0xa8] = a0\n  7377: sp = a0\n  7379: a0 = u64 [s1 + 0xb8]\n  7383: ra = 0x140\n  7387: ecalli 5 // 'caller'\n  7389: a2 = u64 [s1 + 0x110]\n  7393: t0 = 0x142\n  7397: jump @693\n      : @317 [@dyn 160] (gas: 2)\n  7400: a2 = u64 [s1 + 0x110]\n  7404: t0 = 322, jump @693\n      : @318 [@dyn 161] (gas: 7)\n  7410: u64 [s1 + 1368] = 0\n  7414: u64 [s1 + 0x550] = a1\n  7418: u64 [s1 + 0x548] = a0\n  7422: a1 = s1 + 0x540\n  7426: u64 [s1 + 0x540] = a3\n  7430: a0 = 0\n  7432: ra = 324, jump @19\n      : @319 [@dyn 162] (gas: 12)\n  7438: a0 = u64 [s1 + 0x90]\n  7442: a3 = s1 + 0x500\n  7446: u64 [a3 + 0x38] = a0\n  7449: a0 = u64 [s1 + 0x98]\n  7453: u64 [a3 + 0x30] = a0\n  7456: a0 = u64 [s1 + 0xa0]\n  7460: u64 [a3 + 0x28] = a0\n  7463: a0 = 0x20\n  7466: a1 = s1 + 0x520\n  7470: a2 = u64 [s1 + 0xb0]\n  7474: u64 [a3 + 0x20] = a2\n  7477: ra = 326, jump @19\n      : @320 [@dyn 163] (gas: 3)\n  7483: a1 = u64 [s1 + 0x128]\n  7487: a0 = i32 [a1]\n  7489: jump @322 if a0 >u 63\n      : @321 (gas: 2)\n  7493: u32 [a1 + 0] = 0x40\n  7496: fallthrough\n      : @322 (gas: 4)\n  7497: a0 = sp + 0xffffffffffffffe0\n  7500: a0 = a0 & 0xffffffffffffffe0\n  7503: u64 [s1 + 0xb0] = a0\n  7507: t0 = 328, jump @704\n      : @323 [@dyn 164] (gas: 5)\n  7513: ra = 0x14a\n  7517: ecalli 9 // 'hash_keccak_256'\n  7519: a3 = u64 [s1 + 0xb0]\n  7523: t0 = 0x14c\n  7527: jump @696\n      : @324 [@dyn 165] (gas: 2)\n  7530: a3 = u64 [s1 + 0xb0]\n  7534: t0 = 332, jump @696\n      : @325 [@dyn 166] (gas: 11)\n  7540: a1 = u64 [s1 + 0xa8]\n  7544: u64 [a1 + 0x18] = a3\n  7547: u64 [a1 + 0x10] = a2\n  7550: u64 [a1 + 0x8] = a4\n  7553: u64 [a1] = a0\n  7555: a0 = sp + 0xffffffffffffffe0\n  7558: a0 = a0 & 0xffffffffffffffe0\n  7561: u64 [s1 + 0xb0] = a0\n  7565: sp = a0\n  7567: a0 = s1 + 0x500\n  7571: ra = 334, jump @21\n      : @326 [@dyn 167] (gas: 21)\n  7577: a4 = s1 + 0x500\n  7581: a3 = u64 [a4]\n  7583: a0 = u64 [a4 + 0x8]\n  7586: a1 = u64 [a4 + 0x10]\n  7589: a2 = u64 [a4 + 0x18]\n  7592: a4 = u64 [s1 + 0x108]\n  7596: u64 [s1 + 0x4b8] = a4\n  7600: a4 = u64 [s1 + 0x100]\n  7604: u64 [s1 + 0x4b0] = a4\n  7608: a4 = u64 [s1 + 0xf8]\n  7612: u64 [s1 + 0x4a8] = a4\n  7616: a4 = u64 [s1 + 0xf0]\n  7620: u64 [s1 + 0x4a0] = a4\n  7624: u64 [s1 + 0x4d8] = a2\n  7628: u64 [s1 + 0x4d0] = a1\n  7632: u64 [s1 + 0x4c8] = a0\n  7636: a0 = s1 + 0x4e0\n  7640: a1 = s1 + 0x4c0\n  7644: a2 = s1 + 0x4a0\n  7648: u64 [s1 + 0x4c0] = a3\n  7652: ra = 336, jump @638\n      : @327 [@dyn 168] (gas: 19)\n  7658: a0 = u64 [s1 + 0x4f0]\n  7662: a1 = u64 [s1 + 0x4f8]\n  7666: a2 = u64 [s1 + 0x4e0]\n  7670: a3 = u64 [s1 + 0x4e8]\n  7674: a4 = u64 [s1 + 0xb0]\n  7678: u64 [a4 + 0x10] = a0\n  7681: u64 [a4 + 0x18] = a1\n  7684: u64 [a4] = a2\n  7686: u64 [a4 + 0x8] = a3\n  7689: u64 [s1 + 1176] = 0\n  7693: a0 = u64 [s1 + 0xc0]\n  7697: u64 [s1 + 0x490] = a0\n  7701: a0 = u64 [s1 + 0x138]\n  7705: u64 [s1 + 0x488] = a0\n  7709: a1 = s1 + 0x480\n  7713: a0 = u64 [s1 + 0x130]\n  7717: u64 [s1 + 0x480] = a0\n  7721: a0 = 0\n  7723: ra = 338, jump @19\n      : @328 [@dyn 169] (gas: 7)\n  7729: u64 [s1 + 1144] = 0\n  7733: u64 [s1 + 1136] = 0\n  7737: u64 [s1 + 1120] = 0x2\n  7742: a0 = 0x20\n  7745: a1 = s1 + 0x460\n  7749: u64 [s1 + 1128] = 0\n  7753: ra = 340, jump @19\n      : @329 [@dyn 170] (gas: 3)\n  7759: a1 = u64 [s1 + 0x128]\n  7763: a0 = i32 [a1]\n  7765: jump @331 if a0 >u 63\n      : @330 (gas: 2)\n  7769: u32 [a1 + 0] = 0x40\n  7772: fallthrough\n      : @331 (gas: 4)\n  7773: a0 = sp + 0xffffffffffffffe0\n  7776: a0 = a0 & 0xffffffffffffffe0\n  7779: u64 [s1 + 0xc0] = a0\n  7783: t0 = 342, jump @704\n      : @332 [@dyn 171] (gas: 3)\n  7789: ra = 0x158\n  7793: ecalli 9 // 'hash_keccak_256'\n  7795: fallthrough\n      : @333 [@dyn 172] (gas: 8)\n  7796: a3 = u64 [s1 + 0xc0]\n  7800: a0 = u64 [a3 + 0x18]\n  7803: a1 = u64 [a3 + 0x10]\n  7806: a2 = u64 [a3 + 0x8]\n  7809: a3 = u64 [a3]\n  7811: a0 = reverse a0\n  7813: u64 [s1 + 0xa8] = a0\n  7817: t0 = 346, jump @699\n      : @334 [@dyn 173] (gas: 8)\n  7823: u64 [s1 + 0xc0] = a0\n  7827: sp = a0\n  7829: a0 = u64 [s1 + 0xb8]\n  7833: ra = 0x15c\n  7837: ecalli 5 // 'caller'\n  7839: a2 = u64 [s1 + 0x110]\n  7843: t0 = 0x15e\n  7847: jump @693\n      : @335 [@dyn 174] (gas: 2)\n  7850: a2 = u64 [s1 + 0x110]\n  7854: t0 = 350, jump @693\n      : @336 [@dyn 175] (gas: 7)\n  7860: u64 [s1 + 1112] = 0\n  7864: u64 [s1 + 0x450] = a1\n  7868: u64 [s1 + 0x448] = a0\n  7872: a1 = s1 + 0x440\n  7876: u64 [s1 + 0x440] = a3\n  7880: a0 = 0\n  7882: ra = 352, jump @19\n      : @337 [@dyn 176] (gas: 12)\n  7888: a0 = u64 [s1 + 0x90]\n  7892: a3 = s1 + 0x400\n  7896: u64 [a3 + 0x38] = a0\n  7899: a0 = u64 [s1 + 0x98]\n  7903: u64 [a3 + 0x30] = a0\n  7906: a0 = u64 [s1 + 0xa0]\n  7910: u64 [a3 + 0x28] = a0\n  7913: a0 = 0x20\n  7916: a1 = s1 + 0x420\n  7920: a2 = u64 [s1 + 0xa8]\n  7924: u64 [a3 + 0x20] = a2\n  7927: ra = 354, jump @19\n      : @338 [@dyn 177] (gas: 3)\n  7933: a1 = u64 [s1 + 0x128]\n  7937: a0 = i32 [a1]\n  7939: jump @340 if a0 >u 63\n      : @339 (gas: 2)\n  7943: u32 [a1 + 0] = 0x40\n  7946: fallthrough\n      : @340 (gas: 4)\n  7947: a0 = sp + 0xffffffffffffffe0\n  7950: a0 = a0 & 0xffffffffffffffe0\n  7953: u64 [s1 + 0x128] = a0\n  7957: t0 = 356, jump @704\n      : @341 [@dyn 178] (gas: 5)\n  7963: ra = 0x166\n  7967: ecalli 9 // 'hash_keccak_256'\n  7969: a3 = u64 [s1 + 0x128]\n  7973: t0 = 0x168\n  7977: jump @715\n      : @342 [@dyn 179] (gas: 2)\n  7980: a3 = u64 [s1 + 0x128]\n  7984: t0 = 360, jump @715\n      : @343 [@dyn 180] (gas: 7)\n  7990: a0 = u64 [s1 + 0xc0]\n  7994: u64 [a0 + 0x18] = a3\n  7997: u64 [a0 + 0x10] = a2\n  8000: u64 [a0 + 0x8] = a1\n  8003: u64 [a0] = a4\n  8005: a1 = u64 [s1 + 0xb0]\n  8009: ra = 362, jump @22\n      : @344 [@dyn 181] (gas: 30)\n  8015: a0 = u64 [s1 + 0xf0]\n  8019: u64 [s1 + 0x3c0] = a0\n  8023: a0 = u64 [s1 + 0xc8]\n  8027: u64 [s1 + 0x3e0] = a0\n  8031: a1 = s1 + 0x100\n  8035: a0 = u64 [a1 + 0x30]\n  8038: a4 = s1 + 0x400\n  8042: u64 [a4] = a0\n  8044: a0 = u64 [s1 + 0xf8]\n  8048: u64 [s1 + 0x3c8] = a0\n  8052: a0 = u64 [s1 + 0xd0]\n  8056: u64 [s1 + 0x3e8] = a0\n  8060: a0 = u64 [a1 + 0x38]\n  8063: u64 [a4 + 0x8] = a0\n  8066: a0 = u64 [a1]\n  8068: u64 [s1 + 0x3d0] = a0\n  8072: a0 = u64 [s1 + 0xd8]\n  8076: u64 [s1 + 0x3f0] = a0\n  8080: a0 = u64 [a1 + 0x18]\n  8083: u64 [a4 + 0x10] = a0\n  8086: a0 = u64 [a1 + 0x8]\n  8089: u64 [s1 + 0x3d8] = a0\n  8093: a0 = u64 [s1 + 0xe0]\n  8097: u64 [s1 + 0x3f8] = a0\n  8101: a0 = s1 + 0x400\n  8105: a1 = s1 + 0x3e0\n  8109: a2 = s1 + 0x3c0\n  8113: a3 = u64 [s1 + 0xe8]\n  8117: u64 [a4 + 0x18] = a3\n  8120: ra = 364, jump @645\n      : @345 [@dyn 182] (gas: 3)\n  8126: a0 = s1 + 0x3a0\n  8130: a1 = 0x40\n  8133: ra = 366, jump @17\n      : @346 [@dyn 183] (gas: 6)\n  8139: a4 = s1 + 0x300\n  8143: a3 = u64 [a4 + 0xb8]\n  8147: a1 = u64 [a4 + 0xb0]\n  8151: a2 = u64 [a4 + 0xa8]\n  8155: a0 = u64 [a4 + 0xa0]\n  8159: t0 = 368, jump @718\n      : @347 [@dyn 184] (gas: 1)\n  8165: jump @349 if a1 == 0\n      : @348 (gas: 1)\n  8168: jump @533\n      : @349 (gas: 8)\n  8171: u64 [s1 + 920] = 0\n  8175: u64 [s1 + 912] = 0\n  8179: u64 [s1 + 904] = 0\n  8183: a1 = s1 + 0x380\n  8187: u64 [s1 + 896] = 0x1\n  8192: u64 [s1 + 0x138] = a0\n  8196: ra = 0x1c6\n  8200: jump @19\n      : @350 (gas: 9)\n  8203: u64 [t0 + 1376] = 0\n  8207: u64 [t0 + 1368] = 0\n  8211: u64 [t0 + 1360] = 0\n  8215: u64 [t0 + 1352] = 0\n  8219: a0 = s1 + 0x1000\n  8223: i32 a0 = a0 + 0x600\n  8227: ra = 0x172\n  8231: ecalli 17 // 'value_transferred'\n  8233: fallthrough\n      : @351 [@dyn 185] (gas: 3)\n  8234: a3 = s1 + 0x10b8\n  8238: a4 = a3 + 0x500\n  8242: t0 = 372, jump @723\n      : @352 [@dyn 186] (gas: 1)\n  8248: jump @354 if a0 == 0\n      : @353 (gas: 1)\n  8251: jump @555\n      : @354 (gas: 4)\n  8254: a0 = u64 [s1 + 0x138]\n  8258: a0 = i32 [a0]\n  8260: a1 = 0x43\n  8263: jump @356 if a1 <u a0\n      : @355 (gas: 1)\n  8266: jump @556\n      : @356 (gas: 6)\n  8269: a0 = 0xffffffff\n  8279: u64 [s1 + 0x138] = a0\n  8283: a0 = s1 + 0x11c0\n  8287: ra = 0x176\n  8291: t0 = 0x25a\n  8295: jump @722\n      : @357 [@dyn 187] (gas: 11)\n  8298: a1 = s1 + 0x10b8\n  8302: a0 = u64 [a1 + 0x108]\n  8306: u64 [s1 + 0x130] = a0\n  8310: a0 = u64 [a1 + 0x110]\n  8314: u64 [s1 + 0x110] = a0\n  8318: a0 = u32 [a1 + 0x118]\n  8322: u64 [s1 + 0x108] = a0\n  8326: a0 = s1 + 0x11a0\n  8330: ra = 0x178\n  8334: t0 = 0x264\n  8338: jump @722\n      : @358 [@dyn 188] (gas: 3)\n  8341: t0 = 0x17a\n  8345: a1 = s1 + 0x10b8\n  8349: fallthrough\n      : @359 [@dyn 189] (gas: 18)\n  8350: a0 = u64 [a1 + 0xf8]\n  8354: a3 = s1 + 0x100\n  8358: u64 [a3 + 0x28] = a0\n  8361: a0 = u64 [a1 + 0xf0]\n  8365: u64 [a3 + 0x20] = a0\n  8368: a0 = u64 [a1 + 0xe8]\n  8372: u64 [a3 + 0x18] = a0\n  8375: u64 [a1 + 224] = 0\n  8379: a0 = u64 [a3 + 0x8]\n  8382: u64 [a1 + 0xd8] = a0\n  8386: a0 = u64 [a3 + 0x10]\n  8389: u64 [a1 + 0xd0] = a0\n  8393: a2 = a1\n  8395: a1 = s1 + 0x1180\n  8399: a0 = u64 [a3 + 0x30]\n  8402: u64 [a2 + 0xc8] = a0\n  8406: a0 = 0\n  8408: ra = 380, jump @19\n      : @360 [@dyn 190] (gas: 3)\n  8414: t0 = 0x17e\n  8418: a1 = s1 + 0x10b8\n  8422: fallthrough\n      : @361 [@dyn 191] (gas: 8)\n  8423: u64 [a1 + 192] = 0\n  8427: u64 [a1 + 184] = 0\n  8431: u64 [a1 + 168] = 0x2\n  8436: a2 = a1\n  8438: a0 = 0x20\n  8441: a1 = s1 + 0x1160\n  8445: u64 [a2 + 176] = 0\n  8449: ra = 384, jump @19\n      : @362 [@dyn 192] (gas: 3)\n  8455: a1 = 0x200dc\n  8460: a0 = i32 [0x200dc]\n  8465: jump @364 if a0 >u 63\n      : @363 (gas: 2)\n  8469: u32 [0x200dc] = 0x40\n  8475: fallthrough\n      : @364 (gas: 43)\n  8476: a0 = sp + 0xffffffffffffffe0\n  8479: a2 = a0 & 0xffffffffffffffe0\n  8482: u64 [s1 + 0x108] = a2\n  8486: sp = a2\n  8488: a0 = 0x200f0\n  8493: i32 a0 = a0 + 0\n  8495: i32 a2 = a2 + 0\n  8497: u64 [s1 + 0x130] = a1\n  8501: a1 = 0x40\n  8504: u64 [s1 + 0x110] = a0\n  8508: ecalli 9 // 'hash_keccak_256'\n  8510: a3 = u64 [s1 + 0x108]\n  8514: a0 = u64 [a3 + 0x18]\n  8517: a1 = u64 [a3 + 0x10]\n  8520: a2 = u64 [a3 + 0x8]\n  8523: a3 = u64 [a3]\n  8525: a0 = reverse a0\n  8527: u64 [s1 + 0x100] = a0\n  8531: a0 = reverse a1\n  8533: u64 [s1 + 0xf8] = a0\n  8537: a0 = reverse a2\n  8539: u64 [s1 + 0xf0] = a0\n  8543: a0 = reverse a3\n  8545: u64 [s1 + 0xe8] = a0\n  8549: a0 = sp + 0xffffffffffffffe0\n  8552: a0 = a0 & 0xffffffffffffffe0\n  8555: u64 [s1 + 0x108] = a0\n  8559: sp = a0\n  8561: a0 = u64 [s1 + 0x118]\n  8565: a0 = a0 & 0xffffffffffffffff\n  8568: a2 = u64 [s1 + 0x120]\n  8572: a1 = a2 & 0xffffffffffffffff\n  8575: a2 = u64 [s1 + 0x138]\n  8579: a3 = u64 [s1 + 0x128]\n  8583: a2 = a2 & a3\n  8586: a3 = s1 + 0x10b8\n  8590: u64 [a3 + 160] = 0\n  8594: u64 [a3 + 0x98] = a2\n  8598: u64 [a3 + 0x90] = a1\n  8602: a1 = s1 + 0x1140\n  8606: u64 [a3 + 0x88] = a0\n  8610: a0 = 0\n  8612: ra = 386, jump @19\n      : @365 [@dyn 193] (gas: 13)\n  8618: a0 = u64 [s1 + 0xe8]\n  8622: a1 = s1 + 0x10b8\n  8626: u64 [a1 + 0x80] = a0\n  8630: a0 = u64 [s1 + 0xf0]\n  8634: u64 [a1 + 0x78] = a0\n  8637: a0 = u64 [s1 + 0xf8]\n  8641: u64 [a1 + 0x70] = a0\n  8644: a3 = a1\n  8646: a0 = 0x20\n  8649: a1 = s1 + 0x1120\n  8653: a2 = u64 [s1 + 0x100]\n  8657: u64 [a3 + 0x68] = a2\n  8660: ra = 388, jump @19\n      : @366 [@dyn 194] (gas: 3)\n  8666: a1 = u64 [s1 + 0x130]\n  8670: a0 = i32 [a1]\n  8672: jump @368 if a0 >u 63\n      : @367 (gas: 2)\n  8676: u32 [a1 + 0] = 0x40\n  8679: fallthrough\n      : @368 (gas: 12)\n  8680: a0 = sp + 0xffffffffffffffe0\n  8683: a0 = a0 & 0xffffffffffffffe0\n  8686: u64 [s1 + 0x138] = a0\n  8690: sp = a0\n  8692: i32 a2 = a0 + 0\n  8694: a1 = 0x40\n  8697: a0 = u64 [s1 + 0x110]\n  8701: ra = 0x186\n  8705: ecalli 9 // 'hash_keccak_256'\n  8707: a3 = u64 [s1 + 0x138]\n  8711: t0 = 0x188\n  8715: jump @696\n      : @369 [@dyn 195] (gas: 2)\n  8718: a3 = u64 [s1 + 0x138]\n  8722: t0 = 392, jump @696\n      : @370 [@dyn 196] (gas: 7)\n  8728: a1 = u64 [s1 + 0x108]\n  8732: u64 [a1 + 0x18] = a3\n  8735: u64 [a1 + 0x10] = a2\n  8738: u64 [a1 + 0x8] = a4\n  8741: u64 [a1] = a0\n  8743: a0 = s1 + 0x1100\n  8747: ra = 394, jump @21\n      : @371 [@dyn 197] (gas: 3)\n  8753: t0 = 0x18c\n  8757: a1 = s1 + 0x10b8\n  8761: fallthrough\n      : @372 [@dyn 198] (gas: 12)\n  8762: a0 = u64 [a1 + 0x60]\n  8765: a2 = s1 + 0x100\n  8769: u64 [a2 + 0x38] = a0\n  8772: a0 = u64 [a1 + 0x58]\n  8775: u64 [a2 + 0x30] = a0\n  8778: a0 = u64 [a1 + 0x50]\n  8781: u64 [a2 + 0x28] = a0\n  8784: a0 = u64 [a1 + 0x48]\n  8787: u64 [a2 + 0x20] = a0\n  8790: a0 = s1 + 0x10e0\n  8794: a1 = 0x40\n  8797: ra = 398, jump @17\n      : @373 [@dyn 199] (gas: 6)\n  8803: a3 = s1 + 0x10b8\n  8807: a0 = u64 [a3 + 0x40]\n  8810: a1 = u64 [a3 + 0x38]\n  8813: a2 = u64 [a3 + 0x30]\n  8816: a4 = u64 [a3 + 0x28]\n  8819: t0 = 400, jump @717\n      : @374 [@dyn 200] (gas: 1)\n  8825: jump @376 if a0 == 0\n      : @375 (gas: 1)\n  8828: jump @533\n      : @376 (gas: 14)\n  8831: a2 = s1 + 0x100\n  8835: a0 = u64 [a2 + 0x20]\n  8838: u64 [a3 + 0x8] = a0\n  8841: a0 = u64 [a2 + 0x28]\n  8844: u64 [a3 + 0x10] = a0\n  8847: a0 = u64 [a2 + 0x30]\n  8850: u64 [a3 + 0x18] = a0\n  8853: a1 = s1 + 0x10c0\n  8857: a0 = u64 [a2 + 0x38]\n  8860: u64 [a3 + 0x20] = a0\n  8863: a0 = a4\n  8865: u64 [a2 + 0x38] = a4\n  8868: ra = 0x1c6\n  8872: jump @19\n      : @377 (gas: 8)\n  8875: u64 [t0 + 416] = 0\n  8879: u64 [t0 + 408] = 0\n  8883: u64 [t0 + 400] = 0\n  8887: u64 [t0 + 392] = 0\n  8891: a0 = s1 + 0x1000\n  8895: i32 a0 = a0 + 0x240\n  8899: ecalli 17 // 'value_transferred'\n  8901: fallthrough\n      : @378 (gas: 10)\n  8902: a3 = s1 + 0x10b8\n  8906: a4 = a3 + 0x100\n  8910: a0 = u64 [a4 + 0x98]\n  8914: a1 = u64 [a4 + 0xa0]\n  8918: a2 = u64 [a4 + 0x90]\n  8922: a3 = u64 [a4 + 0x88]\n  8926: a1 = a1 | a2\n  8929: a0 = a0 | a3\n  8932: a0 = a0 | a1\n  8935: jump @380 if a0 == 0\n      : @379 (gas: 1)\n  8938: jump @557\n      : @380 (gas: 4)\n  8941: a0 = u64 [s1 + 0x138]\n  8945: a0 = i32 [a0]\n  8947: a1 = 0x43\n  8950: jump @382 if a1 <u a0\n      : @381 (gas: 1)\n  8953: jump @558\n      : @382 (gas: 4)\n  8956: a0 = s1 + 0x300\n  8960: ra = 0x192\n  8964: t0 = 0x25a\n  8968: jump @722\n      : @383 [@dyn 201] (gas: 30)\n  8971: a1 = s1 + 0x300\n  8975: a0 = u64 [a1]\n  8977: u64 [s1 + 0x138] = a0\n  8981: a0 = u64 [a1 + 0x8]\n  8984: u64 [s1 + 0x130] = a0\n  8988: a0 = u64 [a1 + 0x10]\n  8991: u64 [s1 + 0x128] = a0\n  8995: a0 = u64 [a1 + 0x18]\n  8998: u64 [s1 + 0x120] = a0\n  9002: a0 = s1 + 0x1000\n  9006: i32 a0 = a0 + 0x260\n  9010: a1 = 0x24\n  9013: ecalli 3 // 'call_data_load'\n  9015: a0 = s1 + 0x10b8\n  9019: a2 = a0 + 0x100\n  9023: a1 = u64 [a2 + 0xa8]\n  9027: u64 [s1 + 0x118] = a1\n  9031: a1 = u64 [a2 + 0xb0]\n  9035: u64 [s1 + 0x110] = a1\n  9039: a1 = u64 [a2 + 0xb8]\n  9043: u64 [s1 + 0x108] = a1\n  9047: a0 = u64 [a2 + 0xc0]\n  9051: u64 [s1 + 0x100] = a0\n  9055: a0 = 0x300f0\n  9060: u64 [s1 + 0xf8] = a0\n  9064: i32 a0 = a0 + 0\n  9066: ra = 0x194\n  9070: ecalli 5 // 'caller'\n  9072: t0 = 0x196\n  9076: jump @700\n      : @384 [@dyn 202] (gas: 1)\n  9079: t0 = 406, jump @700\n      : @385 [@dyn 203] (gas: 25)\n  9085: a4 = s1 + 0x100\n  9089: a3 = u64 [a4]\n  9091: u64 [s1 + 0x2b8] = a3\n  9095: a3 = u64 [a4 + 0x8]\n  9098: u64 [s1 + 0x2b0] = a3\n  9102: a3 = u64 [a4 + 0x10]\n  9105: u64 [s1 + 0x2a8] = a3\n  9109: a3 = u64 [a4 + 0x18]\n  9112: u64 [s1 + 0x2a0] = a3\n  9116: a3 = u64 [a4 + 0x20]\n  9119: u64 [s1 + 0x2d8] = a3\n  9123: a3 = u64 [a4 + 0x28]\n  9126: u64 [s1 + 0x2d0] = a3\n  9130: a3 = u64 [a4 + 0x30]\n  9133: u64 [s1 + 0x2c8] = a3\n  9137: a3 = u64 [a4 + 0x38]\n  9140: u64 [s1 + 0x2c0] = a3\n  9144: u64 [s1 + 0x2f0] = a2\n  9148: u64 [s1 + 0x2e8] = a0\n  9152: u64 [s1 + 0x2e0] = a1\n  9156: a0 = s1 + 0x2e0\n  9160: a1 = s1 + 0x2c0\n  9164: a2 = s1 + 0x2a0\n  9168: u64 [s1 + 760] = 0\n  9172: ra = 408, jump @620\n      : @386 [@dyn 204] (gas: 3)\n  9178: a0 = s1 + 0x280\n  9182: a1 = 0x40\n  9185: ra = 410, jump @17\n      : @387 [@dyn 205] (gas: 6)\n  9191: a4 = s1 + 0x200\n  9195: a3 = u64 [a4 + 0x98]\n  9199: a1 = u64 [a4 + 0x90]\n  9203: a2 = u64 [a4 + 0x88]\n  9207: a0 = u64 [a4 + 0x80]\n  9211: t0 = 412, jump @718\n      : @388 [@dyn 206] (gas: 1)\n  9217: jump @390 if a1 == 0\n      : @389 (gas: 1)\n  9220: jump @533\n      : @390 (gas: 8)\n  9223: u64 [s1 + 632] = 0\n  9227: u64 [s1 + 624] = 0\n  9231: u64 [s1 + 616] = 0\n  9235: a1 = s1 + 0x260\n  9239: u64 [s1 + 608] = 0x1\n  9244: u64 [s1 + 0x138] = a0\n  9248: ra = 0x1c6\n  9252: jump @19\n      : @391 (gas: 15)\n  9255: a0 = s1 + 0x100\n  9259: u64 [a0 + 0x18] = a2\n  9262: u64 [a0 + 0x20] = a5\n  9265: u64 [a0 + 0x28] = a4\n  9268: u64 [a0 + 0x30] = a3\n  9271: u64 [t0 + 960] = 0\n  9275: u64 [t0 + 952] = 0\n  9279: u64 [t0 + 944] = 0\n  9283: u64 [t0 + 936] = 0\n  9287: a0 = s1 + 0x1000\n  9291: i32 a0 = a0 + 0x460\n  9295: ra = 0x19e\n  9299: ecalli 17 // 'value_transferred'\n  9301: t0 = 0x1a0\n  9305: jump @710\n      : @392 [@dyn 207] (gas: 1)\n  9308: t0 = 416, jump @710\n      : @393 [@dyn 208] (gas: 8)\n  9314: a0 = u64 [a4 + 0xb8]\n  9318: a1 = u64 [a4 + 0xc0]\n  9322: a2 = u64 [a4 + 0xb0]\n  9326: a3 = u64 [a4 + 0xa8]\n  9330: a1 = a1 | a2\n  9333: a0 = a0 | a3\n  9336: a0 = a0 | a1\n  9339: jump @395 if a0 == 0\n      : @394 (gas: 1)\n  9342: jump @559\n      : @395 (gas: 4)\n  9345: a0 = u64 [s1 + 0x138]\n  9349: a0 = i32 [a0]\n  9351: a1 = 0xe3\n  9355: jump @397 if a1 <u a0\n      : @396 (gas: 1)\n  9358: jump @560\n      : @397 (gas: 4)\n  9361: a0 = s1 + 0x10a0\n  9365: ra = 0x1a2\n  9369: t0 = 0x25a\n  9373: jump @722\n      : @398 [@dyn 209] (gas: 14)\n  9376: a1 = s1 + 0x10b8\n  9380: a0 = u64 [a1]\n  9382: u64 [s1 + 0x98] = a0\n  9386: a2 = a1 + 0xffffffffffffff00\n  9390: a0 = u64 [a2 + 0xf8]\n  9394: u64 [s1 + 0xe8] = a0\n  9398: a0 = u64 [a2 + 0xf0]\n  9402: u64 [s1 + 0xf8] = a0\n  9406: a0 = u64 [a2 + 0xe8]\n  9410: u64 [s1 + 0xf0] = a0\n  9414: a0 = s1 + 0x1080\n  9418: ra = 0x1a4\n  9422: t0 = 0x264\n  9426: jump @722\n      : @399 [@dyn 210] (gas: 45)\n  9429: a0 = s1 + 0x7ff\n  9433: a0 = a0 + 0xb9\n  9437: a2 = a0 + 0x700\n  9441: a1 = u64 [a2 + 0xe0]\n  9445: u64 [s1 + 0x90] = a1\n  9449: a1 = u64 [a2 + 0xd8]\n  9453: u64 [s1 + 0xd8] = a1\n  9457: a1 = u64 [a2 + 0xd0]\n  9461: u64 [s1 + 0xd0] = a1\n  9465: a0 = u64 [a2 + 0xc8]\n  9469: u64 [s1 + 0xc8] = a0\n  9473: a0 = s1 + 0x1000\n  9477: i32 a0 = a0 + 0x480\n  9481: a1 = 0x44\n  9484: ecalli 3 // 'call_data_load'\n  9486: a1 = s1 + 0x10b8\n  9490: a2 = a1 + 0x300\n  9494: a0 = u64 [a2 + 0xe0]\n  9498: u64 [s1 + 0xc0] = a0\n  9502: a0 = u64 [a2 + 0xd8]\n  9506: u64 [s1 + 0xb8] = a0\n  9510: a0 = u64 [a2 + 0xd0]\n  9514: u64 [s1 + 0xb0] = a0\n  9518: a0 = u64 [a2 + 0xc8]\n  9522: u64 [s1 + 0xa8] = a0\n  9526: a0 = s1 + 0x1000\n  9530: i32 a0 = a0 + 0x4a0\n  9534: a1 = 0x64\n  9537: ecalli 3 // 'call_data_load'\n  9539: a1 = s1 + 0x10b8\n  9543: a0 = u64 [a1 + 0x400]\n  9547: a2 = s1 + 0x100\n  9551: u64 [a2 + 0x38] = a0\n  9554: a3 = a1 + 0x300\n  9558: a0 = u64 [a3 + 0xf8]\n  9562: u64 [a2 + 0x10] = a0\n  9565: a0 = u64 [a3 + 0xf0]\n  9569: u64 [a2 + 0x8] = a0\n  9572: a0 = u64 [a3 + 0xe8]\n  9576: u64 [a2] = a0\n  9578: a0 = s1 + 0x1000\n  9582: i32 a0 = a0 + 0x4c0\n  9586: a1 = 0x84\n  9590: ecalli 3 // 'call_data_load'\n  9592: fallthrough\n      : @400 (gas: 12)\n  9593: a2 = s1 + 0x10b8\n  9597: a4 = a2 + 0x400\n  9601: a0 = u64 [a4 + 0x20]\n  9604: a1 = u64 [a4 + 0x18]\n  9607: a3 = u64 [a4 + 0x8]\n  9610: a2 = u64 [a4 + 0x10]\n  9613: a0 = a0 | a1\n  9616: u64 [s1 + 0xa0] = a3\n  9620: a1 = a3 <u 0x100\n  9624: a1 = 0 if a2 != 0\n  9626: a1 = 0 if a0 != 0\n  9628: jump @402 if a1 != 0\n      : @401 (gas: 1)\n  9631: jump @561\n      : @402 (gas: 4)\n  9634: a0 = s1 + 0x1000\n  9638: i32 a0 = a0 + 0x4e0\n  9642: ecalli 10 // 'now'\n  9644: fallthrough\n      : @403 (gas: 22)\n  9645: a3 = s1 + 0x10b8\n  9649: a4 = a3 + 0x400\n  9653: a0 = u64 [a4 + 0x30]\n  9656: a1 = u64 [a4 + 0x40]\n  9659: a2 = u64 [a4 + 0x28]\n  9662: a3 = u64 [a4 + 0x38]\n  9665: a5 = u64 [s1 + 0x108]\n  9669: a4 = a5 ^ a0\n  9672: a0 = a5 <u a0\n  9675: a5 = u64 [s1 + 0x100]\n  9679: a2 = a5 <u a2\n  9682: a2 = a0 if a4 != 0\n  9685: a0 = u64 [s1 + 0x110]\n  9689: t0 = a0 <u a3\n  9692: a5 = u64 [s1 + 0x138]\n  9696: a4 = a5 ^ a1\n  9699: a1 = a5 <u a1\n  9702: a1 = t0 if a4 == 0\n  9705: a0 = a0 ^ a3\n  9708: a0 = a0 | a4\n  9711: a1 = a2 if a0 == 0\n  9714: jump @441 if a1 == 0\n      : @404 (gas: 4)\n  9718: a0 = s1 + 0x7ff\n  9722: a0 = a0 + 0x341\n  9726: a1 = 0x40\n  9729: ra = 422, jump @17\n      : @405 [@dyn 211] (gas: 15)\n  9735: a2 = s1 + 0x7ff\n  9739: a2 = a2 + 0xb9\n  9743: t0 = u64 [a2 + 0x2a0]\n  9747: a1 = a2 + 0x200\n  9751: a5 = u64 [a1 + 0x98]\n  9755: a4 = u64 [a1 + 0x90]\n  9759: a0 = u64 [a1 + 0x88]\n  9763: a3 = a4 | t0\n  9766: a1 = a0 | a5\n  9769: a1 = a1 | a3\n  9772: a1 = a1 >> 0x20\n  9775: a3 = a3 | a5\n  9778: a3 = a3 << 0x20\n  9781: a1 = a1 | a3\n  9784: jump @407 if a1 == 0\n      : @406 (gas: 1)\n  9787: jump @533\n      : @407 (gas: 12)\n  9790: u64 [a2 + 632] = 0\n  9794: u64 [a2 + 624] = 0\n  9798: u64 [a2 + 616] = 0\n  9802: a3 = 0x8c379a000000000\n  9812: a1 = s1 + 0x7ff\n  9816: a1 = a1 + 0x321\n  9820: u64 [a2 + 0x280] = a3\n  9824: u64 [s1 + 0x138] = a0\n  9828: u64 [s1 + 0x130] = a4\n  9832: u64 [s1 + 0x120] = t0\n  9836: u64 [s1 + 0x128] = a5\n  9840: ra = 424, jump @19\n      : @408 [@dyn 212] (gas: 12)\n  9846: a5 = s1 + 0x100\n  9850: a1 = u64 [a5 + 0x38]\n  9853: a0 = u64 [a5 + 0x28]\n  9856: a3 = u64 [a5 + 0x20]\n  9859: a3 = a3 | a0\n  9862: a4 = 0x100000000\n  9872: a0 = 0xfffffffc\n  9882: a0 = a1 <u a0\n  9885: a2 = u64 [a5 + 0x30]\n  9888: a0 = 0 if a2 != 0\n  9890: a0 = 0 if a3 != 0\n  9892: jump @410 if a0 != 0\n      : @409 (gas: 1)\n  9895: jump @533\n      : @410 (gas: 12)\n  9898: i32 a0 = a1 + 0x4\n  9901: a2 = s1 + 0x7ff\n  9905: a2 = a2 + 0xb9\n  9909: u64 [a2 + 608] = 0\n  9913: u64 [a2 + 600] = 0\n  9917: u64 [a2 + 584] = 0x20\n  9922: a1 = s1 + 0x7ff\n  9926: a1 = a1 + 0x301\n  9930: u64 [a2 + 592] = 0\n  9934: u64 [s1 + 0x128] = a3\n  9938: u64 [s1 + 0x120] = a4\n  9942: ra = 426, jump @19\n      : @411 [@dyn 213] (gas: 10)\n  9948: a4 = s1 + 0x100\n  9952: a3 = u64 [a4 + 0x28]\n  9955: a2 = u64 [a4 + 0x30]\n  9958: a1 = u64 [a4 + 0x38]\n  9961: a0 = u64 [a4 + 0x20]\n  9964: a0 = a0 + 0xffffffffffffffdc\n  9967: a0 = a1 <u a0\n  9970: a0 = 0 if a2 != 0\n  9972: a0 = 0 if a3 != 0\n  9974: jump @413 if a0 != 0\n      : @412 (gas: 1)\n  9977: jump @533\n      : @413 (gas: 10)\n  9980: i32 a0 = a1 + 0x24\n  9983: a3 = s1 + 0x7ff\n  9987: a3 = a3 + 0xb9\n  9991: u64 [a3 + 576] = 0\n  9995: u64 [a3 + 568] = 0\n  9999: u64 [a3 + 552] = 0x12\n 10004: a1 = s1 + 0x7ff\n 10008: a1 = a1 + 0x2e1\n 10012: u64 [a3 + 560] = 0\n 10016: ra = 428, jump @19\n      : @414 [@dyn 214] (gas: 9)\n 10022: a2 = s1 + 0x100\n 10026: a3 = u64 [a2 + 0x38]\n 10029: a0 = 0xffffffbc\n 10039: a0 = a3 <u a0\n 10042: a1 = u64 [a2 + 0x30]\n 10045: a0 = 0 if a1 != 0\n 10047: a1 = u64 [a2 + 0x28]\n 10050: a0 = 0 if a1 != 0\n 10052: jump @416 if a0 != 0\n      : @415 (gas: 1)\n 10055: jump @533\n      : @416 (gas: 14)\n 10058: i32 a0 = a3 + 0x44\n 10061: a1 = u64 [0x20068]\n 10066: a2 = u64 [0x20080]\n 10071: a4 = s1 + 0x7ff\n 10075: a4 = a4 + 0xb9\n 10079: a3 = a4 + 0x200\n 10083: u64 [a3 + 0x20] = a1\n 10086: u64 [a3 + 0x18] = a2\n 10089: a1 = 0x4544000000000000\n 10099: u64 [a3 + 0x10] = a1\n 10102: a1 = s1 + 0x7ff\n 10106: a1 = a1 + 0x2c1\n 10110: u64 [a4 + 520] = 0\n 10114: ra = 430, jump @19\n      : @417 [@dyn 215] (gas: 3)\n 10120: a1 = 0x64\n 10123: a0 = u64 [s1 + 0x138]\n 10127: ra = 432, jump @26\n      : @418 [@dyn 216] (gas: 5)\n 10133: i32 a1 = a0 + 0\n 10135: a0 = 0x1\n 10138: a2 = 0x64\n 10141: ecalli 14 // 'seal_return'\n 10143: fallthrough\n      : @419 (gas: 1)\n 10144: jump @421 if a0 == 2127478272\n      : @420 (gas: 1)\n 10151: jump @534\n      : @421 (gas: 10)\n 10154: u64 [t0 + 800] = 0\n 10158: u64 [t0 + 792] = 0\n 10162: u64 [t0 + 784] = 0\n 10166: u64 [t0 + 776] = 0\n 10170: a0 = s1 + 0x1000\n 10174: i32 a0 = a0 + 0x3c0\n 10178: ra = 0x1b2\n 10182: ecalli 17 // 'value_transferred'\n 10184: t0 = 0x1b4\n 10188: jump @710\n      : @422 [@dyn 217] (gas: 1)\n 10191: t0 = 436, jump @710\n      : @423 [@dyn 218] (gas: 8)\n 10197: a0 = u64 [a4 + 0x18]\n 10200: a1 = u64 [a4 + 0x20]\n 10203: a2 = u64 [a4 + 0x10]\n 10206: a3 = u64 [a4 + 0x8]\n 10209: a1 = a1 | a2\n 10212: a0 = a0 | a3\n 10215: a0 = a0 | a1\n 10218: jump @425 if a0 == 0\n      : @424 (gas: 1)\n 10221: jump @562\n      : @425 (gas: 4)\n 10224: a0 = u64 [s1 + 0x138]\n 10228: a0 = i32 [a0]\n 10230: a1 = 0x23\n 10233: jump @427 if a1 <u a0\n      : @426 (gas: 1)\n 10236: jump @563\n      : @427 (gas: 5)\n 10239: a0 = s1 + 0x7ff\n 10243: a0 = a0 + 0xc1\n 10247: ra = 0x1b6\n 10251: t0 = 0x25a\n 10255: jump @722\n      : @428 [@dyn 219] (gas: 15)\n 10258: a3 = s1 + 0x7ff\n 10262: a3 = a3 + 0xb9\n 10266: a0 = u64 [a3 + 0x8]\n 10269: a1 = u64 [a3 + 0x10]\n 10272: a2 = u32 [a3 + 0x18]\n 10275: u64 [a3 + 0] = 0\n 10277: u64 [a3 + 0xfffffffffffffff8] = a2\n 10280: a2 = s1 + 0x1000\n 10284: u64 [a2 + 0xfffffffffffff8a8] = a1\n 10288: a1 = s1 + 0x7ff\n 10292: a1 = a1 + 0xa1\n 10296: a2 = s1 + 0x1000\n 10300: u64 [a2 + 0xfffffffffffff8a0] = a0\n 10304: a0 = 0\n 10306: ra = 440, jump @19\n      : @429 [@dyn 220] (gas: 12)\n 10312: a0 = s1 + 0x1000\n 10316: u64 [a0 + 4294965400] = 0\n 10320: a0 = s1 + 0x1000\n 10324: u64 [a0 + 4294965392] = 0\n 10328: a1 = s1 + 0x1000\n 10332: u64 [a1 + 4294965376] = 0x4\n 10337: a0 = 0x20\n 10340: a1 = s1 + 0x7ff\n 10344: a1 = a1 + 0x81\n 10348: a2 = s1 + 0x1000\n 10352: u64 [a2 + 4294965384] = 0\n 10356: ra = 442, jump @19\n      : @430 [@dyn 221] (gas: 2)\n 10362: a1 = i32 [0x200dc]\n 10367: jump @432 if a1 >u 63\n      : @431 (gas: 2)\n 10371: u32 [0x200dc] = 0x40\n 10377: fallthrough\n      : @432 (gas: 12)\n 10378: a0 = sp + 0xffffffffffffffe0\n 10381: a2 = a0 & 0xffffffffffffffe0\n 10384: u64 [s1 + 0x138] = a2\n 10388: sp = a2\n 10390: a0 = 0x200f0\n 10395: i32 a0 = a0 + 0\n 10397: i32 a2 = a2 + 0\n 10399: a1 = 0x40\n 10402: ra = 0x1bc\n 10406: ecalli 9 // 'hash_keccak_256'\n 10408: t0 = 0x1be\n 10412: jump @701\n      : @433 [@dyn 222] (gas: 1)\n 10415: t0 = 446, jump @701\n      : @434 [@dyn 223] (gas: 9)\n 10421: a5 = a4 + 0x300\n 10425: u64 [a5 + 0x40] = a3\n 10428: u64 [a5 + 0x38] = a2\n 10431: u64 [a5 + 0x30] = a1\n 10434: u64 [a5 + 0x28] = a0\n 10437: a0 = s1 + 0x7ff\n 10441: a0 = a0 + 0x61\n 10444: a1 = s1 + 0x13e0\n 10448: ra = 448, jump @21\n      : @435 [@dyn 224] (gas: 17)\n 10454: a0 = s1 + 0x1000\n 10458: a0 = u64 [a0 + 0xfffffffffffff878]\n 10462: a1 = s1 + 0x100\n 10466: u64 [a1 + 0x38] = a0\n 10469: a0 = s1 + 0x1000\n 10473: a0 = u64 [a0 + 0xfffffffffffff870]\n 10477: u64 [a1 + 0x30] = a0\n 10480: a0 = s1 + 0x1000\n 10484: a0 = u64 [a0 + 0xfffffffffffff868]\n 10488: u64 [a1 + 0x28] = a0\n 10491: a0 = s1 + 0x1000\n 10495: a0 = u64 [a0 + 0xfffffffffffff860]\n 10499: u64 [a1 + 0x20] = a0\n 10502: a0 = s1 + 0x7ff\n 10506: a0 = a0 + 0x41\n 10509: a1 = 0x40\n 10512: ra = 450, jump @17\n      : @436 [@dyn 225] (gas: 9)\n 10518: a0 = s1 + 0x1000\n 10522: a0 = u64 [a0 + 0xfffffffffffff858]\n 10526: a1 = s1 + 0x1000\n 10530: a1 = u64 [a1 + 0xfffffffffffff850]\n 10534: a2 = s1 + 0x1000\n 10538: a2 = u64 [a2 + 0xfffffffffffff848]\n 10542: a3 = s1 + 0x1000\n 10546: a3 = u64 [a3 + 0xfffffffffffff840]\n 10550: t0 = 452, jump @695\n      : @437 [@dyn 226] (gas: 1)\n 10556: jump @533 if a0 != 0\n      : @438 (gas: 18)\n 10560: a2 = s1 + 0x100\n 10564: a0 = u64 [a2 + 0x20]\n 10567: a1 = s1 + 0x1000\n 10571: u64 [a1 + 0xfffffffffffff820] = a0\n 10575: a0 = u64 [a2 + 0x28]\n 10578: a1 = s1 + 0x1000\n 10582: u64 [a1 + 0xfffffffffffff828] = a0\n 10586: a0 = u64 [a2 + 0x30]\n 10589: a1 = s1 + 0x1000\n 10593: u64 [a1 + 0xfffffffffffff830] = a0\n 10597: a1 = s1 + 0x7ff\n 10601: a1 = a1 + 0x21\n 10604: a0 = u64 [a2 + 0x38]\n 10607: a2 = s1 + 0x1000\n 10611: u64 [a2 + 0xfffffffffffff838] = a0\n 10615: a0 = a3\n 10617: u64 [s1 + 0x138] = a3\n 10621: ra = 454, jump @19\n      : @439 [@dyn 227] (gas: 3)\n 10627: a1 = 0x20\n 10630: a0 = u64 [s1 + 0x138]\n 10634: ra = 456, jump @26\n      : @440 [@dyn 228] (gas: 6)\n 10640: i32 a1 = a0 + 0\n 10642: a2 = 0x20\n 10645: a0 = 0\n 10647: ecalli 14 // 'seal_return'\n 10649: a1 = s1 + 0x10b8\n 10653: jump @442\n      : @441 (gas: 2)\n 10655: a1 = s1 + 0x10b8\n 10659: fallthrough\n      : @442 (gas: 7)\n 10660: u64 [a1 + 1120] = 0\n 10664: u64 [a1 + 1112] = 0\n 10668: u64 [a1 + 1104] = 0\n 10672: u64 [a1 + 1096] = 0x3\n 10677: a0 = s1 + 0x1060\n 10681: a1 = s1 + 0x1500\n 10685: ra = 458, jump @21\n      : @443 [@dyn 229] (gas: 25)\n 10691: a1 = s1 + 0x7ff\n 10695: a1 = a1 + 0xb9\n 10699: a2 = a1 + 0x700\n 10703: a0 = u64 [a2 + 0xc0]\n 10707: u64 [s1 + 0x48] = a0\n 10710: a0 = u64 [a2 + 0xb8]\n 10714: u64 [s1 + 0x40] = a0\n 10717: a0 = u64 [a2 + 0xb0]\n 10721: u64 [s1 + 0x38] = a0\n 10724: a0 = u64 [a2 + 0xa8]\n 10728: u64 [s1 + 0x30] = a0\n 10731: a0 = u64 [s1 + 0xe8]\n 10735: a0 = a0 << 0x20\n 10738: a0 = a0 >> 0x20\n 10741: u64 [a1 + 1952] = 0\n 10745: u64 [s1 + 0x70] = a0\n 10748: u64 [a2 + 0x98] = a0\n 10752: a0 = u64 [s1 + 0xf8]\n 10756: u64 [a2 + 0x90] = a0\n 10760: a2 = a1\n 10762: a1 = s1 + 0x1040\n 10766: a0 = u64 [s1 + 0xf0]\n 10770: u64 [a2 + 0x788] = a0\n 10774: a0 = 0\n 10776: ra = 460, jump @19\n      : @444 [@dyn 230] (gas: 10)\n 10782: a1 = s1 + 0x7ff\n 10786: a1 = a1 + 0xb9\n 10790: u64 [a1 + 1920] = 0\n 10794: u64 [a1 + 1912] = 0\n 10798: u64 [a1 + 1896] = 0x4\n 10803: a2 = a1\n 10805: a0 = 0x20\n 10808: a1 = s1 + 0x1020\n 10812: u64 [a2 + 1904] = 0\n 10816: ra = 462, jump @19\n      : @445 [@dyn 231] (gas: 7)\n 10822: a0 = sp + 0xffffffffffffffe0\n 10825: a0 = a0 & 0xffffffffffffffe0\n 10828: u64 [s1 + 0xe0] = a0\n 10832: sp = a0\n 10834: a2 = 0x200dc\n 10839: a0 = i32 [0x200dc]\n 10844: jump @447 if a0 >u 63\n      : @446 (gas: 2)\n 10848: u32 [0x200dc] = 0x40\n 10854: fallthrough\n      : @447 (gas: 16)\n 10855: u64 [s1 + 0x28] = a2\n 10858: a0 = sp + 0xffffffffffffffe0\n 10861: a2 = a0 & 0xffffffffffffffe0\n 10864: u64 [s1 + 0x88] = a2\n 10868: sp = a2\n 10870: a0 = 0x200f0\n 10875: u64 [s1 + 0x20] = a0\n 10878: i32 a0 = a0 + 0\n 10880: i32 a2 = a2 + 0\n 10882: a1 = 0x40\n 10885: u64 [s1 + 0x18] = a0\n 10888: ra = 0x1d0\n 10892: ecalli 9 // 'hash_keccak_256'\n 10894: a3 = u64 [s1 + 0x88]\n 10898: t0 = 0x1d2\n 10902: jump @696\n      : @448 [@dyn 232] (gas: 2)\n 10905: a3 = u64 [s1 + 0x88]\n 10909: t0 = 466, jump @696\n      : @449 [@dyn 233] (gas: 7)\n 10915: a1 = u64 [s1 + 0xe0]\n 10919: u64 [a1 + 0x18] = a3\n 10922: u64 [a1 + 0x10] = a2\n 10925: u64 [a1 + 0x8] = a4\n 10928: u64 [a1] = a0\n 10930: a0 = s1 + 0x1000\n 10934: ra = 468, jump @21\n      : @450 [@dyn 234] (gas: 23)\n 10940: a1 = s1 + 0x7ff\n 10944: a1 = a1 + 0xb9\n 10948: a5 = a1 + 0x700\n 10952: a0 = u64 [a5 + 0x48]\n 10955: a4 = u64 [a5 + 0x60]\n 10958: a2 = u64 [a5 + 0x50]\n 10961: a3 = u64 [a5 + 0x58]\n 10964: u64 [s1 + 0x60] = a0\n 10967: a0 = a0 + 0x1\n 10970: a1 = a0 <u 0x1\n 10973: u64 [s1 + 0x58] = a2\n 10976: a1 = a1 + a2\n 10979: a2 = a0 | a1\n 10982: a2 = a2 <u 0x1\n 10985: a2 = a2 + a3\n 10988: u64 [s1 + 0x50] = a3\n 10991: a3 = a2 <u a3\n 10994: u64 [s1 + 0x68] = a4\n 10997: a3 = a3 + a4\n 11000: a4 = a1 | a3\n 11003: a5 = a0 | a2\n 11006: a4 = a4 | a5\n 11009: jump @564 if a4 == 0\n      : @451 (gas: 9)\n 11013: a4 = s1 + 0x10b8\n 11017: a5 = a4 + 0x400\n 11021: u64 [a5 + 0x68] = a0\n 11024: u64 [a5 + 0x70] = a1\n 11027: u64 [a5 + 0x78] = a2\n 11030: u64 [a5 + 0x80] = a3\n 11034: a1 = s1 + 0x1520\n 11038: a0 = u64 [s1 + 0xe0]\n 11042: ra = 470, jump @22\n      : @452 [@dyn 235] (gas: 4)\n 11048: a0 = s1 + 0x7ff\n 11052: a0 = a0 + 0x7e1\n 11056: a1 = 0x40\n 11059: ra = 472, jump @17\n      : @453 [@dyn 236] (gas: 22)\n 11065: a5 = s1 + 0x7ff\n 11069: a5 = a5 + 0xb9\n 11073: t0 = u64 [a5 + 0x728]\n 11077: t1 = u64 [a5 + 0x740]\n 11081: t2 = u64 [a5 + 0x730]\n 11085: ra = u64 [a5 + 0x738]\n 11089: a4 = t0 + 0x20\n 11092: a0 = a4 <u t0\n 11095: a1 = t2 + a0\n 11098: a2 = a1 <u t2\n 11101: a2 = a0 if a0 == 0\n 11104: a2 = a2 + ra\n 11107: a0 = a2 <u ra\n 11110: a0 = a0 + t1\n 11113: a3 = a4 | a2\n 11116: a0 = a0 | a1\n 11119: a3 = a3 | a0\n 11122: a3 = a3 >> 0x20\n 11125: a0 = a0 | a2\n 11128: a0 = a0 << 0x20\n 11131: a0 = a0 | a3\n 11134: jump @533 if a0 != 0\n      : @454 (gas: 18)\n 11138: a3 = s1 + 0x100\n 11142: a0 = u64 [0x20048]\n 11147: a1 = u64 [0x20050]\n 11152: a2 = u64 [0x20058]\n 11157: u64 [a5 + 0x720] = a0\n 11161: a0 = u64 [0x20060]\n 11166: u64 [a5 + 0x718] = a1\n 11170: u64 [a5 + 0x710] = a2\n 11174: a1 = s1 + 0x7ff\n 11178: a1 = a1 + 0x7c1\n 11182: u64 [a5 + 0x708] = a0\n 11186: u64 [a3 + 0x30] = a4\n 11189: a0 = a4\n 11191: u64 [s1 + 0xe0] = t0\n 11195: u64 [s1 + 0x88] = t2\n 11199: u64 [s1 + 0x80] = t1\n 11203: u64 [s1 + 0x78] = ra\n 11206: ra = 474, jump @19\n      : @455 [@dyn 237] (gas: 5)\n 11212: a4 = u64 [s1 + 0x78]\n 11215: a3 = u64 [s1 + 0x88]\n 11219: a1 = u64 [s1 + 0xe0]\n 11223: a0 = a1 + 0x40\n 11226: t0 = 476, jump @692\n      : @456 [@dyn 238] (gas: 1)\n 11232: jump @533 if a1 != 0\n      : @457 (gas: 13)\n 11236: a3 = s1 + 0x7ff\n 11240: a3 = a3 + 0xb9\n 11244: u64 [a3 + 1792] = 0\n 11248: a1 = u64 [s1 + 0xf0]\n 11252: a4 = a3 + 0x600\n 11256: u64 [a4 + 0xe8] = a1\n 11260: a1 = u64 [s1 + 0xf8]\n 11264: u64 [a4 + 0xf0] = a1\n 11268: a1 = s1 + 0x7ff\n 11272: a1 = a1 + 0x7a1\n 11276: a2 = u64 [s1 + 0x70]\n 11279: u64 [a4 + 0xf8] = a2\n 11283: ra = 478, jump @19\n      : @458 [@dyn 239] (gas: 5)\n 11289: a4 = u64 [s1 + 0x78]\n 11292: a3 = u64 [s1 + 0x88]\n 11296: a1 = u64 [s1 + 0xe0]\n 11300: a0 = a1 + 0x60\n 11303: t0 = 480, jump @692\n      : @459 [@dyn 240] (gas: 1)\n 11309: jump @533 if a1 != 0\n      : @460 (gas: 18)\n 11313: a2 = 0xffffffff\n 11323: a1 = u64 [s1 + 0xd8]\n 11327: u64 [s1 + 0x128] = a2\n 11331: a2 = a2 & a1\n 11334: a1 = u64 [s1 + 0xd0]\n 11338: a1 = a1 & 0xffffffffffffffff\n 11341: a3 = u64 [s1 + 0xc8]\n 11345: a3 = a3 & 0xffffffffffffffff\n 11348: a4 = s1 + 0x7ff\n 11352: a4 = a4 + 0xb9\n 11356: u64 [a4 + 1760] = 0\n 11360: a5 = a4 + 0x600\n 11364: u64 [a5 + 0xc8] = a3\n 11368: u64 [a5 + 0xd0] = a1\n 11372: a1 = s1 + 0x7ff\n 11376: a1 = a1 + 0x781\n 11380: u64 [a5 + 0xd8] = a2\n 11384: ra = 482, jump @19\n      : @461 [@dyn 241] (gas: 5)\n 11390: a4 = u64 [s1 + 0x78]\n 11393: a3 = u64 [s1 + 0x88]\n 11397: a1 = u64 [s1 + 0xe0]\n 11401: a0 = a1 + 0x80\n 11405: t0 = 484, jump @692\n      : @462 [@dyn 242] (gas: 1)\n 11411: jump @533 if a1 != 0\n      : @463 (gas: 14)\n 11415: a1 = u64 [s1 + 0xa8]\n 11419: a3 = s1 + 0x7ff\n 11423: a3 = a3 + 0xb9\n 11427: a4 = a3 + 0x600\n 11431: u64 [a4 + 0xa8] = a1\n 11435: a1 = u64 [s1 + 0xb0]\n 11439: u64 [a4 + 0xb0] = a1\n 11443: a1 = u64 [s1 + 0xb8]\n 11447: u64 [a4 + 0xb8] = a1\n 11451: a1 = s1 + 0x7ff\n 11455: a1 = a1 + 0x761\n 11459: a2 = u64 [s1 + 0xc0]\n 11463: u64 [a4 + 0xc0] = a2\n 11467: ra = 486, jump @19\n      : @464 [@dyn 243] (gas: 5)\n 11473: a4 = u64 [s1 + 0x78]\n 11476: a3 = u64 [s1 + 0x88]\n 11480: a1 = u64 [s1 + 0xe0]\n 11484: a0 = a1 + 0xa0\n 11488: t0 = 488, jump @692\n      : @465 [@dyn 244] (gas: 1)\n 11494: jump @533 if a1 != 0\n      : @466 (gas: 14)\n 11498: a2 = s1 + 0x7ff\n 11502: a2 = a2 + 0xb9\n 11506: a1 = u64 [s1 + 0x60]\n 11509: a4 = a2 + 0x600\n 11513: u64 [a4 + 0x88] = a1\n 11517: a1 = u64 [s1 + 0x58]\n 11520: u64 [a4 + 0x90] = a1\n 11524: a1 = u64 [s1 + 0x50]\n 11527: u64 [a4 + 0x98] = a1\n 11531: a1 = s1 + 0x7ff\n 11535: a1 = a1 + 0x741\n 11539: a3 = u64 [s1 + 0x68]\n 11542: u64 [a4 + 0xa0] = a3\n 11546: ra = 490, jump @19\n      : @467 [@dyn 245] (gas: 5)\n 11552: a4 = u64 [s1 + 0x78]\n 11555: a3 = u64 [s1 + 0x88]\n 11559: a1 = u64 [s1 + 0xe0]\n 11563: a0 = a1 + 0xc0\n 11567: t0 = 492, jump @692\n      : @468 [@dyn 246] (gas: 1)\n 11573: jump @533 if a1 != 0\n      : @469 (gas: 15)\n 11577: a4 = s1 + 0x100\n 11581: a1 = u64 [a4]\n 11583: a3 = s1 + 0x7ff\n 11587: a3 = a3 + 0xb9\n 11591: a5 = a3 + 0x600\n 11595: u64 [a5 + 0x68] = a1\n 11598: a1 = u64 [a4 + 0x8]\n 11601: u64 [a5 + 0x70] = a1\n 11604: a1 = u64 [a4 + 0x10]\n 11607: u64 [a5 + 0x78] = a1\n 11610: a1 = s1 + 0x7ff\n 11614: a1 = a1 + 0x721\n 11618: a2 = u64 [a4 + 0x38]\n 11621: u64 [a5 + 0x80] = a2\n 11625: ra = 494, jump @19\n      : @470 [@dyn 247] (gas: 12)\n 11631: a5 = u64 [s1 + 0x78]\n 11634: a4 = u64 [s1 + 0x80]\n 11638: a3 = u64 [s1 + 0x88]\n 11642: a0 = u64 [s1 + 0xe0]\n 11646: a2 = a0 | a5\n 11649: a1 = a3 | a4\n 11652: a2 = a2 | a1\n 11655: a2 = a2 >> 0x20\n 11658: a1 = a1 | a5\n 11661: a1 = a1 << 0x20\n 11664: a1 = a1 | a2\n 11667: jump @533 if a1 != 0\n      : @471 (gas: 10)\n 11671: a2 = s1 + 0x7ff\n 11675: a2 = a2 + 0xb9\n 11679: u64 [a2 + 1632] = 0\n 11683: u64 [a2 + 1624] = 0\n 11687: u64 [a2 + 1616] = 0\n 11691: t0 = 0xc0\n 11695: a1 = s1 + 0x7ff\n 11699: a1 = a1 + 0x701\n 11703: u64 [a2 + 0x648] = t0\n 11707: ra = 496, jump @19\n      : @472 [@dyn 248] (gas: 21)\n 11713: a1 = s1 + 0x7ff\n 11717: a1 = a1 + 0xb9\n 11721: u64 [a1 + 1568] = 0\n 11725: u64 [a1 + 1560] = 0\n 11729: u64 [a1 + 1552] = 0\n 11733: a2 = a1 + 0x600\n 11737: u64 [a2 + 8] = 0xe0\n 11742: a0 = u64 [s1 + 0x80]\n 11746: u64 [a2 + 0x40] = a0\n 11749: a0 = u64 [s1 + 0x78]\n 11752: u64 [a2 + 0x38] = a0\n 11755: a0 = u64 [s1 + 0x88]\n 11759: u64 [a2 + 0x30] = a0\n 11762: a3 = a1\n 11764: a0 = s1 + 0x7ff\n 11768: a0 = a0 + 0x6e1\n 11772: a1 = s1 + 0x7ff\n 11776: a1 = a1 + 0x6c1\n 11780: a2 = u64 [s1 + 0xe0]\n 11784: u64 [a3 + 0x628] = a2\n 11788: ra = 498, jump @573\n      : @473 [@dyn 249] (gas: 4)\n 11794: a0 = s1 + 0x7ff\n 11798: a0 = a0 + 0x6a1\n 11802: a1 = u64 [s1 + 0xe0]\n 11806: ra = 500, jump @17\n      : @474 [@dyn 250] (gas: 8)\n 11812: a1 = s1 + 0x7ff\n 11816: a1 = a1 + 0xb9\n 11820: a0 = u64 [a1 + 0x600]\n 11824: a4 = a1 + 0x500\n 11828: a3 = u64 [a4 + 0xf8]\n 11832: a2 = u64 [a4 + 0xf0]\n 11836: a1 = u64 [a4 + 0xe8]\n 11840: t0 = 502, jump @703\n      : @475 [@dyn 251] (gas: 1)\n 11846: jump @533 if a0 != 0\n      : @476 (gas: 3)\n 11850: a0 = u64 [s1 + 0x130]\n 11854: u64 [s1 + 0x138] = a1\n 11858: ra = 504, jump @26\n      : @477 [@dyn 252] (gas: 1)\n 11864: t0 = 506, jump @720\n      : @478 [@dyn 253] (gas: 14)\n 11870: ecalli 9 // 'hash_keccak_256'\n 11872: a1 = u64 [s1 + 0x130]\n 11876: a0 = u64 [a1 + 0x18]\n 11879: u64 [s1 + 0x110] = a0\n 11883: a0 = u64 [a1 + 0x10]\n 11886: u64 [s1 + 0x108] = a0\n 11890: a0 = u64 [a1 + 0x8]\n 11893: u64 [s1 + 0x100] = a0\n 11897: a0 = u64 [a1]\n 11899: u64 [s1 + 0xe0] = a0\n 11903: a0 = s1 + 0x7ff\n 11907: a0 = a0 + 0x681\n 11911: a1 = 0x40\n 11914: ra = 508, jump @17\n      : @479 [@dyn 254] (gas: 27)\n 11920: t0 = s1 + 0x7ff\n 11924: t0 = t0 + 0xb9\n 11928: a0 = t0 + 0x500\n 11932: a1 = u64 [a0 + 0xc8]\n 11936: a5 = u64 [a0 + 0xe0]\n 11940: a2 = u64 [a0 + 0xd0]\n 11944: a4 = u64 [a0 + 0xd8]\n 11948: a0 = a1 + 0x20\n 11951: u64 [s1 + 0x138] = a1\n 11955: a3 = a0 <u a1\n 11958: a1 = a2 + a3\n 11961: u64 [s1 + 0x130] = a2\n 11965: a2 = a1 <u a2\n 11968: a2 = a3 if a3 == 0\n 11971: a2 = a2 + a4\n 11974: u64 [s1 + 0x118] = a4\n 11978: a3 = a2 <u a4\n 11981: u64 [s1 + 0x120] = a5\n 11985: a5 = a5 + a3\n 11988: a3 = a0 | a2\n 11991: a1 = a1 | a5\n 11994: a3 = a3 | a1\n 11997: a3 = a3 >> 0x20\n 12000: a1 = a1 | a2\n 12003: a1 = a1 << 0x20\n 12006: a1 = a1 | a3\n 12009: jump @533 if a1 != 0\n      : @480 (gas: 9)\n 12013: u64 [t0 + 1464] = 0\n 12017: u64 [t0 + 1456] = 0\n 12021: u64 [t0 + 1448] = 0\n 12025: a2 = 0x1901000000000000\n 12035: a1 = s1 + 0x7ff\n 12039: a1 = a1 + 0x661\n 12043: u64 [t0 + 0x5c0] = a2\n 12047: u64 [s1 + 0x88] = a0\n 12051: ra = 510, jump @19\n      : @481 [@dyn 255] (gas: 4)\n 12057: a5 = s1 + 0x100\n 12061: a1 = u64 [a5 + 0x38]\n 12064: a0 = a1 + 0x22\n 12067: t0 = 512, jump @698\n      : @482 [@dyn 256] (gas: 1)\n 12073: jump @533 if a1 != 0\n      : @483 (gas: 14)\n 12077: a2 = s1 + 0x7ff\n 12081: a2 = a2 + 0xb9\n 12085: a1 = u64 [s1 + 0x30]\n 12088: a4 = a2 + 0x500\n 12092: u64 [a4 + 0x88] = a1\n 12096: a1 = u64 [s1 + 0x38]\n 12099: u64 [a4 + 0x90] = a1\n 12103: a1 = u64 [s1 + 0x40]\n 12106: u64 [a4 + 0x98] = a1\n 12110: a1 = s1 + 0x7ff\n 12114: a1 = a1 + 0x641\n 12118: a3 = u64 [s1 + 0x48]\n 12121: u64 [a4 + 0xa0] = a3\n 12125: ra = 514, jump @19\n      : @484 [@dyn 257] (gas: 4)\n 12131: a5 = s1 + 0x100\n 12135: a1 = u64 [a5 + 0x38]\n 12138: a0 = a1 + 0x42\n 12141: t0 = 516, jump @698\n      : @485 [@dyn 258] (gas: 1)\n 12147: jump @533 if a1 != 0\n      : @486 (gas: 18)\n 12151: a1 = u64 [s1 + 0xe0]\n 12155: a2 = reverse a1\n 12157: a1 = u64 [s1 + 0x100]\n 12161: a1 = reverse a1\n 12163: a3 = u64 [s1 + 0x108]\n 12167: a3 = reverse a3\n 12169: a4 = u64 [s1 + 0x110]\n 12173: a4 = reverse a4\n 12175: a5 = s1 + 0x7ff\n 12179: a5 = a5 + 0xb9\n 12183: u64 [a5 + 0x568] = a4\n 12187: a4 = a5 + 0x500\n 12191: u64 [a4 + 0x70] = a3\n 12194: u64 [a4 + 0x78] = a1\n 12197: a1 = s1 + 0x7ff\n 12201: a1 = a1 + 0x621\n 12205: u64 [a4 + 0x80] = a2\n 12209: ra = 518, jump @19\n      : @487 [@dyn 259] (gas: 13)\n 12215: a4 = s1 + 0x100\n 12219: a0 = u64 [a4 + 0x38]\n 12222: a3 = u64 [a4 + 0x18]\n 12225: a0 = a0 | a3\n 12228: a1 = u64 [a4 + 0x30]\n 12231: a2 = u64 [a4 + 0x20]\n 12234: a1 = a1 | a2\n 12237: a0 = a0 | a1\n 12240: a0 = a0 >> 0x20\n 12243: a1 = a1 | a3\n 12246: a1 = a1 << 0x20\n 12249: a0 = a0 | a1\n 12252: jump @533 if a0 != 0\n      : @488 (gas: 10)\n 12256: a2 = s1 + 0x7ff\n 12260: a2 = a2 + 0xb9\n 12264: u64 [a2 + 1376] = 0\n 12268: u64 [a2 + 1368] = 0\n 12272: u64 [a2 + 1360] = 0\n 12276: a1 = s1 + 0x7ff\n 12280: a1 = a1 + 0x601\n 12284: u64 [a2 + 1352] = 0x42\n 12289: a0 = u64 [s1 + 0x138]\n 12293: ra = 520, jump @19\n      : @489 [@dyn 260] (gas: 21)\n 12299: a1 = s1 + 0x7ff\n 12303: a1 = a1 + 0xb9\n 12307: u64 [a1 + 1312] = 0\n 12311: u64 [a1 + 1304] = 0\n 12315: u64 [a1 + 1296] = 0\n 12319: a2 = a1 + 0x500\n 12323: u64 [a2 + 8] = 0x62\n 12327: a0 = u64 [s1 + 0x120]\n 12331: u64 [a2 + 0x40] = a0\n 12334: a0 = u64 [s1 + 0x118]\n 12338: u64 [a2 + 0x38] = a0\n 12341: a0 = u64 [s1 + 0x130]\n 12345: u64 [a2 + 0x30] = a0\n 12348: a3 = a1\n 12350: a0 = s1 + 0x7ff\n 12354: a0 = a0 + 0x5e1\n 12358: a1 = s1 + 0x7ff\n 12362: a1 = a1 + 0x5c1\n 12366: a2 = u64 [s1 + 0x138]\n 12370: u64 [a3 + 0x528] = a2\n 12374: ra = 522, jump @573\n      : @490 [@dyn 261] (gas: 4)\n 12380: a0 = s1 + 0x7ff\n 12384: a0 = a0 + 0x5a1\n 12388: a1 = u64 [s1 + 0x138]\n 12392: ra = 524, jump @17\n      : @491 [@dyn 262] (gas: 8)\n 12398: a3 = s1 + 0x7ff\n 12402: a3 = a3 + 0xb9\n 12406: a0 = u64 [a3 + 0x500]\n 12410: a5 = a3 + 0x400\n 12414: a1 = u64 [a5 + 0xf8]\n 12418: a2 = u64 [a5 + 0xf0]\n 12422: a4 = u64 [a5 + 0xe8]\n 12426: t0 = 526, jump @717\n      : @492 [@dyn 263] (gas: 1)\n 12432: jump @533 if a0 != 0\n      : @493 (gas: 5)\n 12436: a3 = a4\n 12438: a0 = u64 [s1 + 0x88]\n 12442: a1 = a4\n 12444: u64 [s1 + 0x138] = a3\n 12448: ra = 528, jump @26\n      : @494 [@dyn 264] (gas: 1)\n 12454: t0 = 530, jump @720\n      : @495 [@dyn 265] (gas: 14)\n 12460: ecalli 9 // 'hash_keccak_256'\n 12462: a1 = u64 [s1 + 0x130]\n 12466: a0 = u64 [a1 + 0x18]\n 12469: u64 [s1 + 0xe0] = a0\n 12473: a0 = u64 [a1 + 0x10]\n 12476: u64 [s1 + 0x100] = a0\n 12480: a0 = u64 [a1 + 0x8]\n 12483: u64 [s1 + 0x108] = a0\n 12487: a0 = u64 [a1]\n 12489: u64 [s1 + 0x110] = a0\n 12493: a0 = s1 + 0x7ff\n 12497: a0 = a0 + 0x581\n 12501: a1 = 0x40\n 12504: ra = 532, jump @17\n      : @496 [@dyn 266] (gas: 20)\n 12510: a0 = s1 + 0x7ff\n 12514: a0 = a0 + 0xb9\n 12518: a5 = a0 + 0x400\n 12522: a3 = u64 [a5 + 0xe0]\n 12526: a4 = u64 [a5 + 0xd8]\n 12530: a2 = u64 [a5 + 0xd0]\n 12534: a1 = u64 [a5 + 0xc8]\n 12538: a5 = s1 + 0x100\n 12542: u64 [a5 + 0x30] = a2\n 12545: u64 [a5 + 0x20] = a3\n 12548: a0 = a2 | a3\n 12551: u64 [a5 + 0x38] = a1\n 12554: a1 = a1 | a4\n 12557: a1 = a1 | a0\n 12560: a1 = a1 >> 0x20\n 12563: u64 [a5 + 0x18] = a4\n 12566: a0 = a0 | a4\n 12569: a0 = a0 << 0x20\n 12572: a0 = a0 | a1\n 12575: jump @533 if a0 != 0\n      : @497 (gas: 19)\n 12579: a0 = u64 [s1 + 0xe0]\n 12583: a0 = reverse a0\n 12585: a1 = u64 [s1 + 0x100]\n 12589: a1 = reverse a1\n 12591: a2 = u64 [s1 + 0x108]\n 12595: a2 = reverse a2\n 12597: a3 = u64 [s1 + 0x110]\n 12601: a3 = reverse a3\n 12603: a4 = s1 + 0x7ff\n 12607: a4 = a4 + 0xb9\n 12611: a5 = a4 + 0x400\n 12615: u64 [a5 + 0xc0] = a3\n 12619: u64 [a5 + 0xb8] = a2\n 12623: u64 [a5 + 0xb0] = a1\n 12627: a1 = s1 + 0x7ff\n 12631: a1 = a1 + 0x561\n 12635: u64 [a5 + 0xa8] = a0\n 12639: a0 = u64 [s1 + 0x138]\n 12643: ra = 534, jump @19\n      : @498 [@dyn 267] (gas: 14)\n 12649: a3 = s1 + 0x100\n 12653: a0 = u64 [a3 + 0x20]\n 12656: a2 = u64 [a3 + 0x18]\n 12659: a2 = a2 | a0\n 12662: a0 = 0x100000000\n 12672: u64 [a3 + 0x18] = a0\n 12675: a0 = 0xffffffe0\n 12685: a1 = u64 [a3 + 0x38]\n 12688: a0 = a1 <u a0\n 12691: a1 = u64 [a3 + 0x30]\n 12694: a0 = 0 if a1 != 0\n 12696: u64 [a3 + 0x20] = a2\n 12699: a0 = 0 if a2 != 0\n 12701: jump @533 if a0 == 0\n      : @499 (gas: 12)\n 12705: a1 = u8 [s1 + 0xa0]\n 12709: a0 = u64 [s1 + 0x138]\n 12713: i32 a0 = a0 + 0x20\n 12716: a2 = s1 + 0x7ff\n 12720: a2 = a2 + 0xb9\n 12724: u64 [a2 + 1184] = 0\n 12728: u64 [a2 + 1176] = 0\n 12732: u64 [a2 + 0x488] = a1\n 12736: a1 = s1 + 0x7ff\n 12740: a1 = a1 + 0x541\n 12744: u64 [a2 + 1168] = 0\n 12748: ra = 536, jump @19\n      : @500 [@dyn 268] (gas: 5)\n 12754: a0 = s1 + 0x1000\n 12758: i32 a0 = a0 + 0x540\n 12762: a1 = 0xa4\n 12766: ecalli 3 // 'call_data_load'\n 12768: fallthrough\n      : @501 (gas: 10)\n 12769: a2 = s1 + 0x100\n 12773: a0 = u64 [a2 + 0x18]\n 12776: a0 = a0 + 0xffffffffffffffc0\n 12779: a1 = u64 [a2 + 0x38]\n 12782: a0 = a1 <u a0\n 12785: a1 = u64 [a2 + 0x30]\n 12788: a0 = 0 if a1 != 0\n 12790: a1 = u64 [a2 + 0x20]\n 12793: a0 = 0 if a1 != 0\n 12795: jump @533 if a0 == 0\n      : @502 (gas: 18)\n 12799: a0 = s1 + 0x10b8\n 12803: a5 = a0 + 0x400\n 12807: a2 = u64 [a5 + 0x88]\n 12811: a1 = u64 [a5 + 0x90]\n 12815: a3 = u64 [a5 + 0x98]\n 12819: a4 = u64 [a5 + 0xa0]\n 12823: a0 = u64 [s1 + 0x138]\n 12827: i32 a0 = a0 + 0x40\n 12830: a5 = s1 + 0x7ff\n 12834: a5 = a5 + 0xb9\n 12838: u64 [a5 + 0x480] = a4\n 12842: a4 = a5 + 0x400\n 12846: u64 [a4 + 0x78] = a3\n 12849: u64 [a4 + 0x70] = a1\n 12852: a1 = s1 + 0x7ff\n 12856: a1 = a1 + 0x521\n 12860: u64 [a4 + 0x68] = a2\n 12863: ra = 538, jump @19\n      : @503 [@dyn 269] (gas: 5)\n 12869: a0 = s1 + 0x1000\n 12873: i32 a0 = a0 + 0x560\n 12877: a1 = 0xc4\n 12881: ecalli 3 // 'call_data_load'\n 12883: fallthrough\n      : @504 (gas: 9)\n 12884: a0 = 0xffffffa0\n 12894: a2 = s1 + 0x100\n 12898: a1 = u64 [a2 + 0x38]\n 12901: a0 = a1 <u a0\n 12904: a1 = u64 [a2 + 0x30]\n 12907: a0 = 0 if a1 != 0\n 12909: a1 = u64 [a2 + 0x20]\n 12912: a0 = 0 if a1 != 0\n 12914: jump @533 if a0 == 0\n      : @505 (gas: 18)\n 12918: a0 = s1 + 0x10b8\n 12922: a5 = a0 + 0x400\n 12926: a2 = u64 [a5 + 0xa8]\n 12930: a1 = u64 [a5 + 0xb0]\n 12934: a3 = u64 [a5 + 0xb8]\n 12938: a4 = u64 [a5 + 0xc0]\n 12942: a0 = u64 [s1 + 0x138]\n 12946: i32 a0 = a0 + 0x60\n 12949: a5 = s1 + 0x7ff\n 12953: a5 = a5 + 0xb9\n 12957: u64 [a5 + 0x460] = a4\n 12961: a4 = a5 + 0x400\n 12965: u64 [a4 + 0x58] = a3\n 12968: u64 [a4 + 0x50] = a1\n 12971: a1 = s1 + 0x7ff\n 12975: a1 = a1 + 0x501\n 12979: u64 [a4 + 0x48] = a2\n 12982: ra = 540, jump @19\n      : @506 [@dyn 270] (gas: 10)\n 12988: a0 = s1 + 0x7ff\n 12992: a0 = a0 + 0xb9\n 12996: u64 [a0 + 1088] = 0\n 13000: u64 [a0 + 1080] = 0\n 13004: u64 [a0 + 1072] = 0\n 13008: a1 = s1 + 0x7ff\n 13012: a1 = a1 + 0x4e1\n 13016: u64 [a0 + 1064] = 0\n 13020: a0 = 0\n 13022: ra = 542, jump @19\n      : @507 [@dyn 271] (gas: 14)\n 13028: ecalli 11 // 'ref_time_left'\n 13030: a1 = 0x300f0\n 13035: u64 [0x300f8] = 0\n 13040: u64 [0x300f0] = 0\n 13045: u64 [s1 + 0x130] = a1\n 13049: u32 [0x30100] = 0x1000000\n 13058: a0 = s1 + 0x10b8\n 13062: u64 [a0 + 1248] = 0\n 13066: u64 [a0 + 1240] = 0\n 13070: u64 [a0 + 1232] = 0\n 13074: u64 [a0 + 1224] = 0\n 13078: a1 = 0x80\n 13082: a0 = u64 [s1 + 0x138]\n 13086: ra = 544, jump @26\n      : @508 [@dyn 272] (gas: 3)\n 13092: a1 = u64 [s1 + 0x28]\n 13095: a1 = i32 [a1]\n 13097: jump @510 if a1 >u 31\n      : @509 (gas: 3)\n 13101: a2 = u64 [s1 + 0x28]\n 13104: u32 [a2 + 0] = 0x20\n 13107: fallthrough\n      : @510 (gas: 32)\n 13108: a2 = s1 + 0x10b8\n 13112: u32 [a2 + 1256] = 0x20\n 13117: u64 [a2 + 1312] = 0\n 13121: u64 [a2 + 1304] = 0\n 13125: u64 [a2 + 1296] = 0\n 13129: u64 [a2 + 1288] = 0\n 13133: a1 = u64 [s1 + 0x130]\n 13137: a1 = a1 << 0x20\n 13140: a1 = a1 >> 0x20\n 13143: a2 = 0x1800000000\n 13153: t0 = a1 | a2\n 13156: a1 = s1 + 0x1580\n 13160: a1 = a1 << 0x20\n 13163: a1 = a1 >> 0x20\n 13166: a2 = s1 + 0x15c0\n 13170: a2 = a2 << 0x20\n 13173: a3 = a2 | a1\n 13176: a0 = a0 << 0x20\n 13179: a0 = a0 >> 0x20\n 13182: a1 = 0x8000000000\n 13192: a4 = a0 | a1\n 13195: a0 = u64 [s1 + 0x20]\n 13198: a0 = a0 << 0x20\n 13201: a0 = a0 >> 0x20\n 13204: a1 = s1 + 0x15a0\n 13208: a1 = a1 << 0x20\n 13211: a5 = a1 | a0\n 13214: a1 = 0xffffffffffffffff\n 13217: a2 = 0xffffffffffffffff\n 13220: a0 = t0\n 13222: ecalli 1 // 'call'\n 13224: fallthrough\n      : @511 (gas: 1)\n 13225: jump @524 if a0 != 0\n      : @512 (gas: 4)\n 13229: a0 = s1 + 0x7ff\n 13233: a0 = a0 + 0x4a1\n 13237: a1 = 0\n 13239: ra = 546, jump @17\n      : @513 [@dyn 273] (gas: 13)\n 13245: a2 = s1 + 0x7ff\n 13249: a2 = a2 + 0xb9\n 13253: a3 = a2 + 0x300\n 13257: a0 = u64 [a3 + 0xf0]\n 13261: a1 = u64 [a3 + 0xf8]\n 13265: a2 = u64 [a3 + 0xe8]\n 13269: a0 = a0 & 0xffffffffffffffff\n 13272: a4 = u64 [s1 + 0x128]\n 13276: a1 = a1 & a4\n 13279: a2 = a2 & 0xffffffffffffffff\n 13282: a3 = a2 | a1\n 13285: a3 = a3 | a0\n 13288: jump @515 if a3 == 0\n      : @514 (gas: 9)\n 13291: a3 = u64 [s1 + 0xf0]\n 13295: a2 = a2 ^ a3\n 13298: a3 = u64 [s1 + 0x70]\n 13301: a1 = a1 ^ a3\n 13304: a3 = u64 [s1 + 0xf8]\n 13308: a0 = a0 ^ a3\n 13311: a0 = a0 | a2\n 13314: a0 = a0 | a1\n 13317: jump @569 if a0 == 0\n      : @515 (gas: 4)\n 13321: a0 = s1 + 0x7ff\n 13325: a0 = a0 + 0x481\n 13329: a1 = 0x40\n 13332: ra = 548, jump @17\n      : @516 [@dyn 274] (gas: 20)\n 13338: a0 = s1 + 0x7ff\n 13342: a0 = a0 + 0xb9\n 13346: a5 = a0 + 0x300\n 13350: a3 = u64 [a5 + 0xe0]\n 13354: a4 = u64 [a5 + 0xd8]\n 13358: a2 = u64 [a5 + 0xd0]\n 13362: a1 = u64 [a5 + 0xc8]\n 13366: a5 = s1 + 0x100\n 13370: u64 [a5 + 0x30] = a2\n 13373: u64 [a5 + 0x28] = a3\n 13376: a0 = a2 | a3\n 13379: u64 [a5 + 0x38] = a1\n 13382: a1 = a1 | a4\n 13385: a1 = a1 | a0\n 13388: a1 = a1 >> 0x20\n 13391: u64 [a5 + 0x20] = a4\n 13394: a0 = a0 | a4\n 13397: a0 = a0 << 0x20\n 13400: a0 = a0 | a1\n 13403: jump @533 if a0 != 0\n      : @517 (gas: 11)\n 13407: a2 = s1 + 0x7ff\n 13411: a2 = a2 + 0xb9\n 13415: u64 [a2 + 952] = 0\n 13419: u64 [a2 + 944] = 0\n 13423: u64 [a2 + 936] = 0\n 13427: a0 = 0x8c379a000000000\n 13437: a1 = s1 + 0x7ff\n 13441: a1 = a1 + 0x461\n 13445: u64 [a2 + 0x3c0] = a0\n 13449: a0 = u64 [s1 + 0x138]\n 13453: ra = 550, jump @19\n      : @518 [@dyn 275] (gas: 14)\n 13459: a3 = s1 + 0x100\n 13463: a0 = u64 [a3 + 0x28]\n 13466: a2 = u64 [a3 + 0x20]\n 13469: a2 = a2 | a0\n 13472: a0 = 0x100000000\n 13482: u64 [a3 + 0x20] = a0\n 13485: a0 = 0xfffffffc\n 13495: a1 = u64 [a3 + 0x38]\n 13498: a0 = a1 <u a0\n 13501: a1 = u64 [a3 + 0x30]\n 13504: a0 = 0 if a1 != 0\n 13506: u64 [a3 + 0x28] = a2\n 13509: a0 = 0 if a2 != 0\n 13511: jump @533 if a0 == 0\n      : @519 (gas: 11)\n 13515: a0 = u64 [s1 + 0x138]\n 13519: i32 a0 = a0 + 0x4\n 13522: a2 = s1 + 0x7ff\n 13526: a2 = a2 + 0xb9\n 13530: u64 [a2 + 928] = 0\n 13534: u64 [a2 + 920] = 0\n 13538: u64 [a2 + 904] = 0x20\n 13543: a1 = s1 + 0x7ff\n 13547: a1 = a1 + 0x441\n 13551: u64 [a2 + 912] = 0\n 13555: ra = 552, jump @19\n      : @520 [@dyn 276] (gas: 10)\n 13561: a2 = s1 + 0x100\n 13565: a0 = u64 [a2 + 0x20]\n 13568: a0 = a0 + 0xffffffffffffffdc\n 13571: a1 = u64 [a2 + 0x38]\n 13574: a0 = a1 <u a0\n 13577: a1 = u64 [a2 + 0x30]\n 13580: a0 = 0 if a1 != 0\n 13582: a1 = u64 [a2 + 0x28]\n 13585: a0 = 0 if a1 != 0\n 13587: jump @533 if a0 == 0\n      : @521 (gas: 11)\n 13591: a0 = u64 [s1 + 0x138]\n 13595: i32 a0 = a0 + 0x24\n 13598: a2 = s1 + 0x7ff\n 13602: a2 = a2 + 0xb9\n 13606: u64 [a2 + 896] = 0\n 13610: u64 [a2 + 888] = 0\n 13614: u64 [a2 + 872] = 0x1c\n 13619: a1 = s1 + 0x7ff\n 13623: a1 = a1 + 0x421\n 13627: u64 [a2 + 880] = 0\n 13631: ra = 554, jump @19\n      : @522 [@dyn 277] (gas: 9)\n 13637: a0 = 0xffffffbc\n 13647: a2 = s1 + 0x100\n 13651: a1 = u64 [a2 + 0x38]\n 13654: a0 = a1 <u a0\n 13657: a1 = u64 [a2 + 0x30]\n 13660: a0 = 0 if a1 != 0\n 13662: a1 = u64 [a2 + 0x28]\n 13665: a0 = 0 if a1 != 0\n 13667: jump @533 if a0 == 0\n      : @523 (gas: 17)\n 13671: a0 = u64 [s1 + 0x138]\n 13675: i32 a0 = a0 + 0x44\n 13678: a1 = u64 [0x20068]\n 13683: a2 = u64 [0x20070]\n 13688: a3 = u64 [0x20078]\n 13693: a4 = s1 + 0x7ff\n 13697: a4 = a4 + 0xb9\n 13701: a5 = a4 + 0x300\n 13705: u64 [a5 + 0x60] = a1\n 13708: u64 [a5 + 0x58] = a2\n 13711: u64 [a5 + 0x50] = a3\n 13714: a2 = 0x5455524500000000\n 13724: a1 = s1 + 0x7ff\n 13728: a1 = a1 + 0x401\n 13732: u64 [a5 + 0x48] = a2\n 13735: ra = 0x1ae\n 13739: jump @19\n      : @524 (gas: 4)\n 13742: a0 = s1 + 0x7ff\n 13746: a0 = a0 + 0x4c1\n 13750: a1 = 0x40\n 13753: ra = 556, jump @17\n      : @525 [@dyn 278] (gas: 13)\n 13759: a0 = s1 + 0x7ff\n 13763: a0 = a0 + 0xb9\n 13767: a2 = a0 + 0x400\n 13771: a1 = u64 [a2 + 0x20]\n 13774: u64 [s1 + 0x130] = a1\n 13778: a1 = u64 [a2 + 0x18]\n 13781: u64 [s1 + 0x128] = a1\n 13785: a1 = u64 [a2 + 0x10]\n 13788: u64 [s1 + 0x120] = a1\n 13792: a0 = u64 [a2 + 0x8]\n 13795: u64 [s1 + 0x138] = a0\n 13799: ecalli 13 // 'return_data_size'\n 13801: fallthrough\n      : @526 (gas: 13)\n 13802: a4 = s1 + 0x100\n 13806: a1 = u64 [a4 + 0x30]\n 13809: a2 = u64 [a4 + 0x20]\n 13812: a1 = a1 | a2\n 13815: a3 = u64 [a4 + 0x28]\n 13818: a2 = u64 [a4 + 0x38]\n 13821: a2 = a2 | a3\n 13824: a2 = a2 | a1\n 13827: a2 = a2 >> 0x20\n 13830: a1 = a1 | a3\n 13833: a1 = a1 << 0x20\n 13836: a1 = a1 | a2\n 13839: jump @533 if a1 != 0\n      : @527 (gas: 2)\n 13842: a1 = a0 >> 0x20\n 13845: jump @533 if a1 != 0\n      : @528 (gas: 6)\n 13848: a1 = a0\n 13850: u64 [s1 + 0x128] = a0\n 13854: i32 a0 = a0 + 0\n 13856: u64 [s1 + 0x130] = a0\n 13860: a0 = u64 [s1 + 0x138]\n 13864: ra = 558, jump @26\n      : @529 [@dyn 279] (gas: 9)\n 13870: a1 = s1 + 0x10b8\n 13874: a2 = u64 [s1 + 0x128]\n 13878: u32 [a1 + 0x528] = a2\n 13882: i32 a0 = a0 + 0\n 13884: a1 = s1 + 0x1000\n 13888: i32 a1 = a1 + 0x5e0\n 13892: a2 = 0\n 13894: ecalli 12 // 'return_data_copy'\n 13896: fallthrough\n      : @530 (gas: 4)\n 13897: a0 = s1 + 0x10b8\n 13901: a0 = i32 [a0 + 0x528]\n 13905: a1 = u64 [s1 + 0x130]\n 13909: jump @533 if a0 <u a1\n      : @531 (gas: 2)\n 13912: ecalli 13 // 'return_data_size'\n 13914: fallthrough\n      : @532 (gas: 3)\n 13915: a1 = a0\n 13917: a0 = a0 >> 0x20\n 13920: jump @571 if a0 == 0\n      : @533 (gas: 1)\n 13924: trap\n      : @534 (gas: 4)\n 13925: a1 = 0x200f0\n 13930: i32 a1 = a1 + 0\n 13932: a0 = 0x1\n 13935: jump @536\n      : @535 (gas: 6)\n 13937: i32 a1 = a1 + 0\n 13939: a0 = 0x1\n 13942: a2 = 0\n 13944: ecalli 14 // 'seal_return'\n 13946: a1 = 0x200f0\n 13951: jump @535\n      : @536 (gas: 4)\n 13953: a2 = 0\n 13955: ecalli 14 // 'seal_return'\n 13957: a1 = 0x200f0\n 13962: jump @535\n      : @537 (gas: 2)\n 13964: a1 = 0x200f0\n 13969: jump @535\n      : @538 (gas: 2)\n 13971: a1 = 0x200f0\n 13976: jump @535\n      : @539 (gas: 2)\n 13978: a1 = 0x200f0\n 13983: jump @535\n      : @540 (gas: 2)\n 13985: a1 = 0x200f0\n 13990: jump @535\n      : @541 (gas: 2)\n 13992: a1 = 0x200f0\n 13997: jump @535\n      : @542 (gas: 2)\n 13999: a1 = 0x200f0\n 14004: jump @535\n      : @543 (gas: 2)\n 14006: a1 = 0x200f0\n 14011: jump @535\n      : @544 (gas: 2)\n 14013: a1 = 0x200f0\n 14018: jump @535\n      : @545 (gas: 2)\n 14020: a1 = 0x200f0\n 14025: jump @535\n      : @546 (gas: 2)\n 14027: a1 = 0x200f0\n 14032: jump @535\n      : @547 (gas: 2)\n 14034: a1 = 0x200f0\n 14039: jump @535\n      : @548 (gas: 2)\n 14041: a1 = 0x200f0\n 14046: jump @535\n      : @549 (gas: 2)\n 14048: a1 = 0x200f0\n 14053: jump @535\n      : @550 (gas: 2)\n 14055: a1 = 0x200f0\n 14060: jump @535\n      : @551 (gas: 2)\n 14062: a1 = 0x200f0\n 14067: jump @535\n      : @552 (gas: 2)\n 14070: a1 = 0x200f0\n 14075: jump @535\n      : @553 (gas: 2)\n 14078: a1 = 0x200f0\n 14083: jump @535\n      : @554 (gas: 2)\n 14086: a1 = 0x200f0\n 14091: jump @535\n      : @555 (gas: 2)\n 14094: a1 = 0x200f0\n 14099: jump @535\n      : @556 (gas: 2)\n 14102: a1 = 0x200f0\n 14107: jump @535\n      : @557 (gas: 2)\n 14110: a1 = 0x200f0\n 14115: jump @535\n      : @558 (gas: 2)\n 14118: a1 = 0x200f0\n 14123: jump @535\n      : @559 (gas: 2)\n 14126: a1 = 0x200f0\n 14131: jump @535\n      : @560 (gas: 2)\n 14134: a1 = 0x200f0\n 14139: jump @535\n      : @561 (gas: 2)\n 14142: a1 = 0x200f0\n 14147: jump @535\n      : @562 (gas: 2)\n 14150: a1 = 0x200f0\n 14155: jump @535\n      : @563 (gas: 2)\n 14158: a1 = 0x200f0\n 14163: jump @535\n      : @564 (gas: 12)\n 14166: a0 = s1 + 0x7ff\n 14170: a0 = a0 + 0xb9\n 14174: u64 [a0 + 728] = 0\n 14178: u64 [a0 + 720] = 0\n 14182: u64 [a0 + 712] = 0\n 14186: a2 = a0\n 14188: a0 = 0x4e487b7100000000\n 14198: a1 = s1 + 0x7ff\n 14202: a1 = a1 + 0x381\n 14206: u64 [a2 + 0x2e0] = a0\n 14210: a0 = 0\n 14212: ra = 560, jump @19\n      : @565 [@dyn 280] (gas: 11)\n 14218: a1 = s1 + 0x7ff\n 14222: a1 = a1 + 0xb9\n 14226: u64 [a1 + 704] = 0\n 14230: u64 [a1 + 696] = 0\n 14234: u64 [a1 + 680] = 0x11\n 14239: a2 = a1\n 14241: a0 = 0x4\n 14244: a1 = s1 + 0x7ff\n 14248: a1 = a1 + 0x361\n 14252: u64 [a2 + 688] = 0\n 14256: ra = 562, jump @19\n      : @566 [@dyn 281] (gas: 3)\n 14262: a0 = u64 [s1 + 0x28]\n 14265: a0 = i32 [a0]\n 14267: jump @568 if a0 >u 63\n      : @567 (gas: 3)\n 14271: a1 = u64 [s1 + 0x28]\n 14274: u32 [a1 + 0] = 0x40\n 14277: fallthrough\n      : @568 (gas: 5)\n 14278: a0 = 0x1\n 14281: a2 = 0x24\n 14284: a1 = u64 [s1 + 0x18]\n 14287: ecalli 14 // 'seal_return'\n 14289: fallthrough\n      : @569 (gas: 35)\n 14290: a3 = s1 + 0x7ff\n 14294: a3 = a3 + 0xb9\n 14298: a0 = u64 [s1 + 0xa8]\n 14302: a1 = a3 + 0x200\n 14306: u64 [a1 + 0xe8] = a0\n 14310: a0 = u64 [s1 + 0xc8]\n 14314: a5 = a3 + 0x300\n 14318: u64 [a5 + 0x8] = a0\n 14321: a0 = u64 [s1 + 0xf0]\n 14325: u64 [a5 + 0x28] = a0\n 14328: a0 = u64 [s1 + 0xb0]\n 14332: u64 [a1 + 0xf0] = a0\n 14336: a0 = u64 [s1 + 0xd0]\n 14340: u64 [a5 + 0x10] = a0\n 14343: a0 = u64 [s1 + 0xf8]\n 14347: u64 [a5 + 0x30] = a0\n 14350: a0 = u64 [s1 + 0xb8]\n 14354: u64 [a1 + 0xf8] = a0\n 14358: a0 = u64 [s1 + 0xd8]\n 14362: u64 [a5 + 0x18] = a0\n 14365: a0 = u64 [s1 + 0xe8]\n 14369: u64 [a5 + 0x38] = a0\n 14372: a0 = u64 [s1 + 0xc0]\n 14376: u64 [a5] = a0\n 14378: a0 = u64 [s1 + 0x90]\n 14382: u64 [a5 + 0x20] = a0\n 14385: a0 = s1 + 0x7ff\n 14389: a0 = a0 + 0x3e1\n 14393: a1 = s1 + 0x7ff\n 14397: a1 = a1 + 0x3c1\n 14401: a2 = s1 + 0x7ff\n 14405: a2 = a2 + 0x3a1\n 14409: a4 = u64 [s1 + 0x98]\n 14413: u64 [a5 + 0x40] = a4\n 14416: ra = 564, jump @620\n      : @570 [@dyn 282] (gas: 3)\n 14422: a0 = 0\n 14424: a1 = u64 [s1 + 0x18]\n 14427: jump @536\n      : @571 (gas: 3)\n 14430: a0 = u64 [s1 + 0x138]\n 14434: u64 [s1 + 0x130] = a1\n 14438: ra = 566, jump @26\n      : @572 [@dyn 283] (gas: 6)\n 14444: i32 a1 = a0 + 0\n 14446: a2 = i32 [s1 + 0x130]\n 14450: a0 = 0x1\n 14453: ra = 0x238\n 14457: ecalli 14 // 'seal_return'\n 14459: fallthrough\n      : @573 [@dyn 284] (gas: 46)\n 14460: sp = sp + 0xffffffffffffff70\n 14464: u64 [sp + 0x88] = ra\n 14468: u64 [sp + 0x80] = s0\n 14472: u64 [sp + 0x78] = s1\n 14475: s0 = sp + 0x90\n 14479: sp = sp & 0xfffffffffffffff0\n 14482: t0 = a0\n 14484: a2 = u64 [a1]\n 14486: t2 = u64 [a0 + 0x8]\n 14489: a5 = u64 [a1 + 0x8]\n 14492: t1 = u64 [a0]\n 14494: a3 = a2 + 0x1f\n 14497: ra = a3 <u a2\n 14500: a2 = a5 + ra\n 14503: a3 = a3 & 0xffffffffffffffe0\n 14506: u64 [sp + 0x8] = t1\n 14509: t1 = t1 + a3\n 14512: a4 = t1 <u a3\n 14515: a3 = a2 + t2\n 14518: a3 = a3 + a4\n 14521: s1 = a3 ^ a2\n 14524: a0 = a3 <u a2\n 14527: a0 = a4 if s1 == 0\n 14530: a4 = u64 [t0 + 0x18]\n 14533: a5 = a2 <u a5\n 14536: s1 = u64 [a1 + 0x10]\n 14539: t0 = u64 [t0 + 0x10]\n 14542: a1 = u64 [a1 + 0x18]\n 14545: a5 = ra if ra == 0\n 14548: a5 = a5 + s1\n 14551: s1 = a5 <u s1\n 14554: a2 = a5 + t0\n 14557: a0 = a0 + a2\n 14560: a5 = a2 <u a5\n 14563: a2 = a0 <u a2\n 14566: a1 = a1 + a4\n 14569: a1 = a1 + s1\n 14572: a1 = a1 + a5\n 14575: a5 = a1 + a2\n 14578: a1 = a5 >u 0\n 14580: a2 = a0 >u 0\n 14582: a2 = a1 if a5 != 0\n 14585: a1 = a0 | a5\n 14588: s1 = a3 >u 0\n 14590: s1 = a2 if a1 != 0\n 14593: jump @577 if s1 != 0\n      : @574 (gas: 13)\n 14596: a1 = u64 [sp + 0x8]\n 14599: a1 = t1 <u a1\n 14602: a2 = a3 ^ t2\n 14605: s1 = a3 <u t2\n 14608: s1 = a1 if a2 == 0\n 14611: a1 = a0 <u t0\n 14614: a2 = a5 ^ a4\n 14617: a4 = a5 <u a4\n 14620: a4 = a1 if a2 == 0\n 14623: a1 = a0 ^ t0\n 14626: a1 = a1 | a2\n 14629: a4 = s1 if a1 == 0\n 14632: jump @577 if a4 != 0\n      : @575 (gas: 7)\n 14635: u64 [sp + 0x50] = t1\n 14638: u64 [sp + 0x58] = a3\n 14641: u64 [sp + 0x60] = a0\n 14644: a0 = 0x40\n 14647: a1 = sp + 0x50\n 14650: u64 [sp + 0x68] = a5\n 14653: ra = 570, jump @19\n      : @576 [@dyn 285] (gas: 6)\n 14659: sp = s0 + 0xffffffffffffff70\n 14663: ra = u64 [sp + 0x88]\n 14667: s0 = u64 [sp + 0x80]\n 14671: s1 = u64 [sp + 0x78]\n 14674: sp = sp + 0x90\n 14678: ret\n      : @577 (gas: 1)\n 14680: t0 = 572, jump @719\n      : @578 [@dyn 286] (gas: 1)\n 14686: ra = 574, jump @19\n      : @579 [@dyn 287] (gas: 7)\n 14692: u64 [sp + 40] = 0\n 14695: u64 [sp + 32] = 0\n 14698: u64 [sp + 16] = 0x41\n 14702: a0 = 0x4\n 14705: a1 = sp + 0x10\n 14708: u64 [sp + 24] = 0\n 14711: ra = 576, jump @19\n      : @580 [@dyn 288] (gas: 2)\n 14717: a1 = i32 [0x200dc]\n 14722: jump @582 if a1 >u 63\n      : @581 (gas: 2)\n 14726: u32 [0x200dc] = 0x40\n 14732: fallthrough\n      : @582 (gas: 7)\n 14733: a1 = 0x200f0\n 14738: i32 a1 = a1 + 0\n 14740: a0 = 0x1\n 14743: a2 = 0x24\n 14746: ra = 0x242\n 14750: ecalli 14 // 'seal_return'\n 14752: fallthrough\n      : @583 [@dyn 289] (gas: 45)\n 14753: sp = sp + 0xffffffffffffff90\n 14756: u64 [sp + 0x68] = ra\n 14759: u64 [sp + 0x60] = s0\n 14762: u64 [sp + 0x58] = s1\n 14765: s0 = sp + 0x70\n 14768: sp = sp & 0xfffffffffffffff0\n 14771: a3 = u64 [a1 + 0x18]\n 14774: u64 [sp + 0x8] = a3\n 14777: a4 = u64 [a2 + 0x18]\n 14780: t2 = u64 [a1]\n 14782: u64 [sp] = t2\n 14784: a3 = u64 [a1 + 0x8]\n 14787: s1 = u64 [a2 + 0x8]\n 14790: a5 = u64 [a2]\n 14792: t1 = u64 [a1 + 0x10]\n 14795: t0 = u64 [a2 + 0x10]\n 14798: a2 = s1 + a3\n 14801: t2 = t2 + a5\n 14804: a5 = t2 <u a5\n 14807: a2 = a2 + a5\n 14810: ra = a2 ^ s1\n 14813: s1 = a2 <u s1\n 14816: s1 = a5 if ra == 0\n 14819: a1 = t0 + t1\n 14822: a5 = u64 [sp + 0x8]\n 14825: a5 = a5 + a4\n 14828: a4 = a1 <u t0\n 14831: a4 = a4 + a5\n 14834: a5 = a1 + s1\n 14837: a1 = a5 <u a1\n 14840: ra = a4 + a1\n 14843: a4 = a2 ^ a3\n 14846: a3 = a2 <u a3\n 14849: a1 = u64 [sp]\n 14851: s1 = t2 <u a1\n 14854: s1 = a3 if a4 != 0\n 14857: t0 = a5 <u t1\n 14860: a1 = u64 [sp + 0x8]\n 14863: a4 = ra ^ a1\n 14866: a3 = ra <u a1\n 14869: a3 = t0 if a4 == 0\n 14872: a1 = a5 ^ t1\n 14875: a1 = a1 | a4\n 14878: s1 = a3 if a1 != 0\n 14881: jump @585 if s1 != 0\n      : @584 (gas: 10)\n 14884: u64 [a0] = t2\n 14886: u64 [a0 + 0x8] = a2\n 14889: u64 [a0 + 0x10] = a5\n 14892: u64 [a0 + 0x18] = ra\n 14895: sp = s0 + 0xffffffffffffff90\n 14898: ra = u64 [sp + 0x68]\n 14901: s0 = u64 [sp + 0x60]\n 14904: s1 = u64 [sp + 0x58]\n 14907: sp = sp + 0x70\n 14910: ret\n      : @585 (gas: 1)\n 14912: t0 = 580, jump @719\n      : @586 [@dyn 290] (gas: 1)\n 14918: ra = 582, jump @19\n      : @587 [@dyn 291] (gas: 7)\n 14924: u64 [sp + 40] = 0\n 14927: u64 [sp + 32] = 0\n 14930: u64 [sp + 16] = 0x11\n 14934: a0 = 0x4\n 14937: a1 = sp + 0x10\n 14940: u64 [sp + 24] = 0\n 14943: ra = 584, jump @19\n      : @588 [@dyn 292] (gas: 2)\n 14949: a1 = i32 [0x200dc]\n 14954: jump @590 if a1 >u 63\n      : @589 (gas: 2)\n 14958: u32 [0x200dc] = 0x40\n 14964: fallthrough\n      : @590 (gas: 7)\n 14965: a1 = 0x200f0\n 14970: i32 a1 = a1 + 0\n 14972: a0 = 0x1\n 14975: a2 = 0x24\n 14978: ra = 0x24a\n 14982: ecalli 14 // 'seal_return'\n 14984: fallthrough\n      : @591 [@dyn 293] (gas: 22)\n 14985: sp = sp + 0xfffffffffffffee0\n 14989: u64 [sp + 0x118] = ra\n 14993: u64 [sp + 0x110] = s0\n 14997: u64 [sp + 0x108] = s1\n 15001: s0 = sp + 0x120\n 15005: sp = sp & 0xfffffffffffffff0\n 15008: a4 = u64 [a1 + 0x10]\n 15011: a3 = u64 [a1 + 0x18]\n 15014: a5 = u64 [a1 + 0x8]\n 15017: t0 = u64 [a1]\n 15019: u64 [sp + 0x68] = a3\n 15022: u64 [sp + 0x78] = a5\n 15025: a1 = a5 | a3\n 15028: a3 = t0 | a4\n 15031: a3 = a3 | a1\n 15034: a3 = a3 >> 0x20\n 15037: u64 [sp + 0x70] = a4\n 15040: a1 = a1 | a4\n 15043: a1 = a1 << 0x20\n 15046: a1 = a1 | a3\n 15049: u64 [sp + 0x8] = a0\n 15052: jump @606 if a1 != 0\n      : @592 (gas: 15)\n 15056: a0 = u64 [a2 + 0x18]\n 15059: u64 [sp + 0x48] = a0\n 15062: s1 = u64 [a2 + 0x10]\n 15065: a0 = u64 [a2 + 0x8]\n 15068: u64 [sp + 0x50] = a0\n 15071: a0 = u64 [a2]\n 15073: u64 [sp + 0x58] = a0\n 15076: u64 [sp + 248] = 0\n 15080: u64 [sp + 240] = 0\n 15084: u64 [sp + 232] = 0\n 15088: a1 = sp + 0xe0\n 15092: u64 [sp + 224] = 0x20\n 15097: a0 = t0\n 15099: u64 [sp + 0x60] = t0\n 15102: ra = 588, jump @19\n      : @593 [@dyn 294] (gas: 12)\n 15108: a1 = u64 [sp + 0x58]\n 15111: a0 = a1 | s1\n 15114: a2 = u64 [sp + 0x48]\n 15117: a3 = u64 [sp + 0x50]\n 15120: a2 = a2 | a3\n 15123: a0 = a0 | a2\n 15126: a0 = a0 >> 0x20\n 15129: u64 [sp + 0x20] = s1\n 15132: a2 = a2 | s1\n 15135: a2 = a2 << 0x20\n 15138: a0 = a0 | a2\n 15141: jump @606 if a0 != 0\n      : @594 (gas: 2)\n 15145: a0 = sp + 0xc0\n 15149: ra = 590, jump @17\n      : @595 [@dyn 295] (gas: 13)\n 15155: a0 = u64 [sp + 0x70]\n 15158: a1 = u64 [sp + 0x68]\n 15161: a1 = a1 | a0\n 15164: a0 = 0x100000000\n 15174: u64 [sp + 0x10] = a0\n 15177: a0 = 0xffffffe0\n 15187: a2 = u64 [sp + 0x60]\n 15190: a0 = a2 <u a0\n 15193: a3 = u64 [sp + 0x78]\n 15196: a0 = 0 if a3 != 0\n 15198: u64 [sp + 0x18] = a1\n 15201: a0 = 0 if a1 != 0\n 15203: jump @606 if a0 == 0\n      : @596 (gas: 16)\n 15207: a3 = u64 [sp + 0xd8]\n 15211: a4 = u64 [sp + 0xd0]\n 15215: a5 = u64 [sp + 0xc8]\n 15219: a1 = u64 [sp + 0xc0]\n 15223: i32 a0 = a2 + 0x20\n 15226: u64 [sp + 0x28] = a1\n 15229: u64 [sp + 0xa0] = a1\n 15233: u64 [sp + 0x30] = a5\n 15236: u64 [sp + 0xa8] = a5\n 15240: u64 [sp + 0x38] = a4\n 15243: u64 [sp + 0xb0] = a4\n 15247: a1 = sp + 0xa0\n 15251: u64 [sp + 0x40] = a3\n 15254: u64 [sp + 0xb8] = a3\n 15258: s1 = a2\n 15260: ra = 592, jump @19\n      : @597 [@dyn 296] (gas: 8)\n 15266: a0 = u64 [sp + 0x10]\n 15269: a0 = a0 + 0xffffffffffffffc0\n 15272: a0 = s1 <u a0\n 15275: a1 = u64 [sp + 0x78]\n 15278: a0 = 0 if a1 != 0\n 15280: a1 = u64 [sp + 0x18]\n 15283: a0 = 0 if a1 != 0\n 15285: jump @606 if a0 == 0\n      : @598 (gas: 10)\n 15289: a0 = u64 [sp + 0x48]\n 15292: a1 = u64 [sp + 0x20]\n 15295: a0 = a0 | a1\n 15298: a1 = 0xffffffe0\n 15308: a3 = u64 [sp + 0x58]\n 15311: a1 = a3 <u a1\n 15314: a4 = u64 [sp + 0x50]\n 15317: a1 = 0 if a4 != 0\n 15319: a1 = 0 if a0 != 0\n 15321: jump @606 if a1 == 0\n      : @599 (gas: 13)\n 15325: a2 = s1\n 15327: a1 = u64 [sp + 0x28]\n 15330: a5 = u64 [sp + 0x38]\n 15333: a0 = a1 | a5\n 15336: a4 = u64 [sp + 0x40]\n 15339: s1 = u64 [sp + 0x30]\n 15342: a4 = a4 | s1\n 15345: a0 = a0 | a4\n 15348: a0 = a0 >> 0x20\n 15351: a4 = a4 | a5\n 15354: a4 = a4 << 0x20\n 15357: a0 = a0 | a4\n 15360: jump @606 if a0 != 0\n      : @600 (gas: 5)\n 15364: i32 a0 = a2 + 0x40\n 15367: i32 a3 = a3 + 0x20\n 15370: u64 [sp + 0x58] = a3\n 15373: s1 = a1\n 15375: ra = 594, jump @26\n      : @601 [@dyn 297] (gas: 4)\n 15381: u64 [sp + 0x50] = a0\n 15384: a0 = u64 [sp + 0x58]\n 15387: a1 = s1\n 15389: ra = 596, jump @26\n      : @602 [@dyn 298] (gas: 4)\n 15395: a1 = a0\n 15397: a0 = u64 [sp + 0x50]\n 15400: a2 = s1\n 15402: ra = 598, jump @0\n      : @603 [@dyn 299] (gas: 27)\n 15408: a0 = u64 [sp + 0x60]\n 15411: a0 = a0 + s1\n 15414: a1 = a0 <u s1\n 15417: a2 = u64 [sp + 0x78]\n 15420: a4 = u64 [sp + 0x30]\n 15423: a2 = a2 + a4\n 15426: a2 = a2 + a1\n 15429: a3 = a2 ^ a4\n 15432: a4 = a2 <u a4\n 15435: a4 = a1 if a3 == 0\n 15438: a1 = u64 [sp + 0x70]\n 15441: a3 = u64 [sp + 0x38]\n 15444: a1 = a1 + a3\n 15447: a3 = a1 <u a3\n 15450: a5 = u64 [sp + 0x68]\n 15453: s1 = u64 [sp + 0x40]\n 15456: a5 = a5 + s1\n 15459: a3 = a3 + a5\n 15462: a4 = a4 + a1\n 15465: a1 = a4 <u a1\n 15468: a1 = a1 + a3\n 15471: a1 = a1 | a4\n 15474: a3 = 0xffffffc0\n 15484: a3 = a0 <u a3\n 15487: a3 = 0 if a2 != 0\n 15489: a3 = 0 if a1 != 0\n 15491: jump @606 if a3 == 0\n      : @604 (gas: 7)\n 15495: i32 a0 = a0 + 0x40\n 15498: u64 [sp + 152] = 0\n 15502: u64 [sp + 144] = 0\n 15506: u64 [sp + 136] = 0\n 15510: a1 = sp + 0x80\n 15514: u64 [sp + 128] = 0\n 15518: ra = 600, jump @19\n      : @605 [@dyn 300] (gas: 35)\n 15524: s1 = u64 [sp + 0x28]\n 15527: s1 = s1 + 0x1f\n 15530: a0 = 0x1ffffffe0\n 15540: a0 = a0 & s1\n 15543: a1 = u64 [sp + 0x60]\n 15546: a0 = a0 + a1\n 15549: a1 = a0 <u a1\n 15552: a3 = u64 [sp + 0x78]\n 15555: a2 = a3 + a1\n 15558: a3 = a2 <u a3\n 15561: a3 = a1 if a1 == 0\n 15564: a1 = u64 [sp + 0x70]\n 15567: a3 = a3 + a1\n 15570: a1 = a3 <u a1\n 15573: a4 = u64 [sp + 0x68]\n 15576: a1 = a1 + a4\n 15579: a4 = a0 + 0x40\n 15582: a0 = a4 <u a0\n 15585: a5 = a2 + a0\n 15588: a2 = a5 <u a2\n 15591: a2 = a0 if a0 == 0\n 15594: a2 = a2 + a3\n 15597: a0 = a2 <u a3\n 15600: a0 = a0 + a1\n 15603: a1 = u64 [sp + 0x8]\n 15606: u64 [a1] = a4\n 15608: u64 [a1 + 0x8] = a5\n 15611: u64 [a1 + 0x10] = a2\n 15614: u64 [a1 + 0x18] = a0\n 15617: sp = s0 + 0xfffffffffffffee0\n 15621: ra = u64 [sp + 0x118]\n 15625: s0 = u64 [sp + 0x110]\n 15629: s1 = u64 [sp + 0x108]\n 15633: sp = sp + 0x120\n 15637: ret\n      : @606 (gas: 1)\n 15639: trap\n      : @607 [@dyn 301] (gas: 5)\n 15640: a1 = 0x4\n 15643: ra = 0x25c\n 15647: ecalli 3 // 'call_data_load'\n 15649: t0 = 0x25e\n 15653: jump @706\n      : @608 [@dyn 302] (gas: 1)\n 15656: t0 = 606, jump @706\n      : @609 [@dyn 303] (gas: 1)\n 15662: jump @612 if a3 == 0\n      : @610 (gas: 1)\n 15665: t0 = 608, jump @716\n      : @611 [@dyn 304] (gas: 1)\n 15671: ret\n      : @612 (gas: 8)\n 15673: a1 = 0x200f0\n 15678: i32 a1 = a1 + 0\n 15680: a0 = 0x1\n 15683: a2 = 0\n 15685: ra = 0x262\n 15689: ecalli 14 // 'seal_return'\n 15691: t0 = 0x264\n 15695: jump @722\n      : @613 [@dyn 305] (gas: 1)\n 15698: t0 = 612, jump @722\n      : @614 [@dyn 306] (gas: 5)\n 15704: a1 = 0x24\n 15707: ra = 0x266\n 15711: ecalli 3 // 'call_data_load'\n 15713: t0 = 0x268\n 15717: jump @706\n      : @615 [@dyn 307] (gas: 1)\n 15720: t0 = 616, jump @706\n      : @616 [@dyn 308] (gas: 1)\n 15726: jump @619 if a3 == 0\n      : @617 (gas: 1)\n 15729: t0 = 618, jump @716\n      : @618 [@dyn 309] (gas: 1)\n 15735: ret\n      : @619 (gas: 7)\n 15737: a1 = 0x200f0\n 15742: i32 a1 = a1 + 0\n 15744: a0 = 0x1\n 15747: a2 = 0\n 15749: ra = 0x26c\n 15753: ecalli 14 // 'seal_return'\n 15755: fallthrough\n      : @620 [@dyn 310] (gas: 40)\n 15756: sp = sp + 0xfffffffffffffe00\n 15760: u64 [sp + 0x1f8] = ra\n 15764: u64 [sp + 0x1f0] = s0\n 15768: u64 [sp + 0x1e8] = s1\n 15772: s0 = sp + 0x200\n 15776: sp = sp & 0xffffffffffffffe0\n 15779: s1 = sp\n 15781: a3 = u64 [a1 + 0x10]\n 15784: u64 [s1 + 0x98] = a3\n 15788: a3 = u64 [a1 + 0x8]\n 15791: u64 [s1 + 0x90] = a3\n 15795: a1 = u64 [a1]\n 15797: u64 [s1 + 0x88] = a1\n 15801: t0 = u64 [a0]\n 15803: a1 = u64 [a0 + 0x8]\n 15806: a0 = u32 [a0 + 0x10]\n 15809: a4 = u64 [a2 + 0x18]\n 15812: a5 = u64 [a2 + 0x10]\n 15815: a3 = u64 [a2 + 0x8]\n 15818: a2 = u64 [a2]\n 15820: u64 [s1 + 0x28] = a4\n 15823: u64 [s1 + 0x1d8] = a4\n 15827: u64 [s1 + 0x20] = a5\n 15830: u64 [s1 + 0x1d0] = a5\n 15834: u64 [s1 + 0x18] = a3\n 15837: u64 [s1 + 0x1c8] = a3\n 15841: u64 [s1 + 0x10] = a2\n 15844: u64 [s1 + 0x1c0] = a2\n 15848: a2 = 0xffffffff\n 15858: u64 [s1 + 0x78] = a2\n 15861: u64 [s1 + 440] = 0\n 15865: u64 [s1 + 0x30] = a0\n 15868: u64 [s1 + 0x1b0] = a0\n 15872: u64 [s1 + 0x38] = a1\n 15875: u64 [s1 + 0x1a8] = a1\n 15879: a1 = s1 + 0x1a0\n 15883: u64 [s1 + 0x40] = t0\n 15886: u64 [s1 + 0x1a0] = t0\n 15890: a0 = 0\n 15892: ra = 622, jump @19\n      : @621 [@dyn 311] (gas: 7)\n 15898: u64 [s1 + 408] = 0\n 15902: u64 [s1 + 400] = 0\n 15906: u64 [s1 + 384] = 0x2\n 15911: a0 = 0x20\n 15914: a1 = s1 + 0x180\n 15918: u64 [s1 + 392] = 0\n 15922: ra = 624, jump @19\n      : @622 [@dyn 312] (gas: 3)\n 15928: a1 = 0x200dc\n 15933: a0 = i32 [0x200dc]\n 15938: jump @624 if a0 >u 63\n      : @623 (gas: 2)\n 15942: u32 [0x200dc] = 0x40\n 15948: fallthrough\n      : @624 (gas: 45)\n 15949: a0 = sp + 0xffffffffffffffe0\n 15952: a2 = a0 & 0xffffffffffffffe0\n 15955: u64 [s1 + 0x68] = a2\n 15958: sp = a2\n 15960: a0 = 0x200f0\n 15965: i32 a0 = a0 + 0\n 15967: i32 a2 = a2 + 0\n 15969: u64 [s1 + 0x80] = a1\n 15973: a1 = 0x40\n 15976: u64 [s1 + 0x70] = a0\n 15979: ecalli 9 // 'hash_keccak_256'\n 15981: a3 = u64 [s1 + 0x68]\n 15984: a0 = u64 [a3 + 0x18]\n 15987: a1 = u64 [a3 + 0x10]\n 15990: a2 = u64 [a3 + 0x8]\n 15993: a3 = u64 [a3]\n 15995: a0 = reverse a0\n 15997: u64 [s1 + 0x60] = a0\n 16000: a0 = reverse a1\n 16002: u64 [s1 + 0x58] = a0\n 16005: a0 = reverse a2\n 16007: u64 [s1 + 0x50] = a0\n 16010: a0 = reverse a3\n 16012: u64 [s1 + 0x48] = a0\n 16015: a0 = sp + 0xffffffffffffffe0\n 16018: a0 = a0 & 0xffffffffffffffe0\n 16021: u64 [s1 + 0x68] = a0\n 16024: sp = a0\n 16026: a0 = u64 [s1 + 0x88]\n 16030: a0 = a0 & 0xffffffffffffffff\n 16033: a1 = u64 [s1 + 0x90]\n 16037: a1 = a1 & 0xffffffffffffffff\n 16040: a2 = u64 [s1 + 0x98]\n 16044: a3 = u64 [s1 + 0x78]\n 16047: a2 = a2 & a3\n 16050: u64 [s1 + 376] = 0\n 16054: u64 [s1 + 0x78] = a2\n 16057: u64 [s1 + 0x170] = a2\n 16061: u64 [s1 + 0x88] = a1\n 16065: u64 [s1 + 0x168] = a1\n 16069: a1 = s1 + 0x160\n 16073: u64 [s1 + 0x90] = a0\n 16077: u64 [s1 + 0x160] = a0\n 16081: a0 = 0\n 16083: ra = 626, jump @19\n      : @625 [@dyn 313] (gas: 12)\n 16089: a0 = u64 [s1 + 0x48]\n 16092: a3 = s1 + 0x100\n 16096: u64 [a3 + 0x58] = a0\n 16099: a0 = u64 [s1 + 0x50]\n 16102: u64 [a3 + 0x50] = a0\n 16105: a0 = u64 [s1 + 0x58]\n 16108: u64 [a3 + 0x48] = a0\n 16111: a0 = 0x20\n 16114: a1 = s1 + 0x140\n 16118: a2 = u64 [s1 + 0x60]\n 16121: u64 [a3 + 0x40] = a2\n 16124: ra = 628, jump @19\n      : @626 [@dyn 314] (gas: 3)\n 16130: a1 = u64 [s1 + 0x80]\n 16134: a0 = i32 [a1]\n 16136: jump @628 if a0 >u 63\n      : @627 (gas: 2)\n 16140: u32 [a1 + 0] = 0x40\n 16143: fallthrough\n      : @628 (gas: 12)\n 16144: a0 = sp + 0xffffffffffffffe0\n 16147: a0 = a0 & 0xffffffffffffffe0\n 16150: u64 [s1 + 0x98] = a0\n 16154: sp = a0\n 16156: i32 a2 = a0 + 0\n 16158: a1 = 0x40\n 16161: a0 = u64 [s1 + 0x70]\n 16164: ra = 0x276\n 16168: ecalli 9 // 'hash_keccak_256'\n 16170: a3 = u64 [s1 + 0x98]\n 16174: t0 = 0x278\n 16178: jump @715\n      : @629 [@dyn 315] (gas: 2)\n 16181: a3 = u64 [s1 + 0x98]\n 16185: t0 = 632, jump @715\n      : @630 [@dyn 316] (gas: 7)\n 16191: a0 = u64 [s1 + 0x68]\n 16194: u64 [a0 + 0x18] = a3\n 16197: u64 [a0 + 0x10] = a2\n 16200: u64 [a0 + 0x8] = a1\n 16203: u64 [a0] = a4\n 16205: a1 = s1 + 0x1c0\n 16209: ra = 634, jump @22\n      : @631 [@dyn 317] (gas: 3)\n 16215: a0 = s1 + 0x120\n 16219: a1 = 0x40\n 16222: ra = 636, jump @17\n      : @632 [@dyn 318] (gas: 6)\n 16228: a4 = s1 + 0x100\n 16232: a0 = u64 [a4 + 0x38]\n 16235: a1 = u64 [a4 + 0x30]\n 16238: a2 = u64 [a4 + 0x28]\n 16241: a3 = u64 [a4 + 0x20]\n 16244: t0 = 638, jump @695\n      : @633 [@dyn 319] (gas: 1)\n 16250: jump @637 if a0 != 0\n      : @634 (gas: 13)\n 16254: a0 = u64 [s1 + 0x10]\n 16257: a2 = s1 + 0x100\n 16261: u64 [a2] = a0\n 16263: a0 = u64 [s1 + 0x18]\n 16266: u64 [a2 + 0x8] = a0\n 16269: a0 = u64 [s1 + 0x20]\n 16272: u64 [a2 + 0x10] = a0\n 16275: a1 = s1 + 0x100\n 16279: a0 = u64 [s1 + 0x28]\n 16282: u64 [a2 + 0x18] = a0\n 16285: a0 = a3\n 16287: u64 [s1 + 0x98] = a3\n 16291: ra = 640, jump @19\n      : @635 [@dyn 320] (gas: 28)\n 16297: u64 [s1 + 184] = 0\n 16301: a0 = u64 [s1 + 0x78]\n 16304: u64 [s1 + 0xb0] = a0\n 16308: a0 = u64 [s1 + 0x88]\n 16312: u64 [s1 + 0xa8] = a0\n 16316: a0 = u64 [s1 + 0x90]\n 16320: u64 [s1 + 0xa0] = a0\n 16324: u64 [s1 + 216] = 0\n 16328: a0 = u64 [s1 + 0x30]\n 16331: u64 [s1 + 0xd0] = a0\n 16335: a0 = u64 [s1 + 0x38]\n 16338: u64 [s1 + 0xc8] = a0\n 16342: a0 = u64 [0x20098]\n 16347: a1 = u64 [0x200a0]\n 16352: a2 = u64 [0x200a8]\n 16357: a3 = u64 [s1 + 0x40]\n 16360: u64 [s1 + 0xc0] = a3\n 16364: u64 [s1 + 0xf8] = a0\n 16368: u64 [s1 + 0xf0] = a1\n 16372: u64 [s1 + 0xe8] = a2\n 16376: a0 = u64 [0x200b0]\n 16381: a1 = 0x20\n 16384: a2 = s1 + 0xe0\n 16388: a3 = s1 + 0xc0\n 16392: a4 = s1 + 0xa0\n 16396: u64 [s1 + 0xe0] = a0\n 16400: a0 = u64 [s1 + 0x98]\n 16404: ra = 642, jump @23\n      : @636 [@dyn 321] (gas: 6)\n 16410: sp = s0 + 0xfffffffffffffe00\n 16414: ra = u64 [sp + 0x1f8]\n 16418: s0 = u64 [sp + 0x1f0]\n 16422: s1 = u64 [sp + 0x1e8]\n 16426: sp = sp + 0x200\n 16430: ret\n      : @637 (gas: 1)\n 16432: trap\n      : @638 (gas: 30)\n 16433: sp = sp + 0xffffffffffffff80\n 16436: u64 [sp + 0x78] = ra\n 16439: u64 [sp + 0x70] = s0\n 16442: u64 [sp + 0x68] = s1\n 16445: s0 = sp + 0x80\n 16449: sp = sp & 0xfffffffffffffff0\n 16452: a4 = u64 [a2]\n 16454: a3 = u64 [a1]\n 16456: s1 = u64 [a2 + 0x8]\n 16459: t1 = u64 [a1 + 0x8]\n 16462: t2 = u64 [a2 + 0x10]\n 16465: a5 = u64 [a1 + 0x10]\n 16468: a2 = u64 [a2 + 0x18]\n 16471: a1 = u64 [a1 + 0x18]\n 16474: t0 = t1 ^ s1\n 16477: u64 [sp + 0x8] = s1\n 16480: s1 = t1 <u s1\n 16483: u64 [sp + 0x18] = a4\n 16486: u64 [sp + 0x10] = a3\n 16489: a3 = a3 <u a4\n 16492: u64 [sp] = a3\n 16494: s1 = a3 if t0 == 0\n 16497: a3 = a1 ^ a2\n 16500: ra = a1 <u a2\n 16503: t0 = a5 <u t2\n 16506: ra = t0 if a3 == 0\n 16509: a4 = a5 ^ t2\n 16512: a3 = a3 | a4\n 16515: ra = s1 if a3 == 0\n 16518: jump @640 if ra != 0\n      : @639 (gas: 23)\n 16521: a3 = a5 - t2\n 16524: a1 = a1 - a2\n 16527: a1 = a1 - t0\n 16530: a2 = a3 <u s1\n 16533: a1 = a1 - a2\n 16536: a3 = a3 - s1\n 16539: a2 = u64 [sp + 0x8]\n 16542: a2 = t1 - a2\n 16545: a4 = u64 [sp]\n 16547: a2 = a2 - a4\n 16550: a4 = u64 [sp + 0x18]\n 16553: a5 = u64 [sp + 0x10]\n 16556: a4 = a5 - a4\n 16559: u64 [a0] = a4\n 16561: u64 [a0 + 0x8] = a2\n 16564: u64 [a0 + 0x10] = a3\n 16567: u64 [a0 + 0x18] = a1\n 16570: sp = s0 + 0xffffffffffffff80\n 16573: ra = u64 [sp + 0x78]\n 16576: s0 = u64 [sp + 0x70]\n 16579: s1 = u64 [sp + 0x68]\n 16582: sp = sp + 0x80\n 16586: ret\n      : @640 (gas: 8)\n 16588: u64 [sp + 80] = 0\n 16591: u64 [sp + 72] = 0\n 16594: u64 [sp + 64] = 0\n 16597: a0 = 0x4e487b7100000000\n 16607: a1 = sp + 0x40\n 16610: u64 [sp + 0x58] = a0\n 16613: a0 = 0\n 16615: ra = 644, jump @19\n      : @641 [@dyn 322] (gas: 7)\n 16621: u64 [sp + 56] = 0\n 16624: u64 [sp + 48] = 0\n 16627: u64 [sp + 32] = 0x11\n 16631: a0 = 0x4\n 16634: a1 = sp + 0x20\n 16637: u64 [sp + 40] = 0\n 16640: ra = 646, jump @19\n      : @642 [@dyn 323] (gas: 2)\n 16646: a1 = i32 [0x200dc]\n 16651: jump @644 if a1 >u 63\n      : @643 (gas: 2)\n 16655: u32 [0x200dc] = 0x40\n 16661: fallthrough\n      : @644 (gas: 7)\n 16662: a1 = 0x200f0\n 16667: i32 a1 = a1 + 0\n 16669: a0 = 0x1\n 16672: a2 = 0x24\n 16675: ra = 0x288\n 16679: ecalli 14 // 'seal_return'\n 16681: fallthrough\n      : @645 [@dyn 324] (gas: 35)\n 16682: sp = sp + 0xfffffffffffffc40\n 16686: a3 = sp + 0x300\n 16690: u64 [a3 + 0xb8] = ra\n 16694: u64 [a3 + 0xb0] = s0\n 16698: u64 [a3 + 0xa8] = s1\n 16702: s0 = sp + 0x3c0\n 16706: sp = sp & 0xffffffffffffffe0\n 16709: s1 = sp\n 16711: a3 = u64 [a2 + 0x18]\n 16714: u64 [s1 + 0x68] = a3\n 16717: a3 = u64 [a2 + 0x10]\n 16720: u64 [s1 + 0x60] = a3\n 16723: a3 = u64 [a2 + 0x8]\n 16726: u64 [s1 + 0x58] = a3\n 16729: a2 = u64 [a2]\n 16731: u64 [s1 + 0x50] = a2\n 16734: a2 = u64 [a1 + 0x10]\n 16737: u64 [s1 + 0x30] = a2\n 16740: a2 = u64 [a1 + 0x8]\n 16743: u64 [s1 + 0x28] = a2\n 16746: a1 = u64 [a1]\n 16748: u64 [s1 + 0x20] = a1\n 16751: a2 = u64 [a0]\n 16753: a1 = u64 [a0 + 0x8]\n 16756: a0 = u32 [a0 + 0x10]\n 16759: u64 [s1 + 760] = 0\n 16763: u64 [s1 + 0x38] = a0\n 16766: u64 [s1 + 0x2f0] = a0\n 16770: u64 [s1 + 0x40] = a1\n 16773: u64 [s1 + 0x2e8] = a1\n 16777: a1 = s1 + 0x2e0\n 16781: u64 [s1 + 0x48] = a2\n 16784: u64 [s1 + 0x2e0] = a2\n 16788: a0 = 0\n 16790: ra = 650, jump @19\n      : @646 [@dyn 325] (gas: 7)\n 16796: u64 [s1 + 728] = 0\n 16800: u64 [s1 + 720] = 0\n 16804: u64 [s1 + 712] = 0\n 16808: a0 = 0x20\n 16811: a1 = s1 + 0x2c0\n 16815: u64 [s1 + 704] = 0x1\n 16820: ra = 652, jump @19\n      : @647 [@dyn 326] (gas: 3)\n 16826: a1 = 0x200dc\n 16831: a0 = i32 [0x200dc]\n 16836: jump @649 if a0 >u 63\n      : @648 (gas: 2)\n 16840: u32 [0x200dc] = 0x40\n 16846: fallthrough\n      : @649 (gas: 17)\n 16847: a0 = 0xffffffff\n 16857: u64 [s1 + 0x18] = a0\n 16860: a0 = sp + 0xffffffffffffffe0\n 16863: a2 = a0 & 0xffffffffffffffe0\n 16866: u64 [s1 + 0x10] = a2\n 16869: sp = a2\n 16871: a0 = 0x200f0\n 16876: i32 a0 = a0 + 0\n 16878: u64 [s1 + 0x70] = a1\n 16881: i32 a2 = a2 + 0\n 16883: a1 = 0x40\n 16886: u64 [s1 + 0x78] = a0\n 16889: ra = 0x28e\n 16893: ecalli 9 // 'hash_keccak_256'\n 16895: a3 = u64 [s1 + 0x10]\n 16898: t0 = 0x290\n 16902: jump @714\n      : @650 [@dyn 327] (gas: 2)\n 16905: a3 = u64 [s1 + 0x10]\n 16908: t0 = 656, jump @714\n      : @651 [@dyn 328] (gas: 7)\n 16914: u64 [s1 + 0x338] = a3\n 16918: u64 [s1 + 0x330] = a2\n 16922: u64 [s1 + 0x328] = a1\n 16926: u64 [s1 + 0x320] = a0\n 16930: a0 = s1 + 0x2a0\n 16934: a1 = s1 + 0x320\n 16938: ra = 658, jump @21\n      : @652 [@dyn 329] (gas: 20)\n 16944: a3 = u64 [s1 + 0x2a0]\n 16948: a0 = u64 [s1 + 0x2a8]\n 16952: a1 = u64 [s1 + 0x2b0]\n 16956: a2 = u64 [s1 + 0x2b8]\n 16960: a4 = u64 [s1 + 0x68]\n 16963: u64 [s1 + 0x258] = a4\n 16967: a4 = u64 [s1 + 0x60]\n 16970: u64 [s1 + 0x250] = a4\n 16974: a4 = u64 [s1 + 0x58]\n 16977: u64 [s1 + 0x248] = a4\n 16981: a4 = u64 [s1 + 0x50]\n 16984: u64 [s1 + 0x240] = a4\n 16988: u64 [s1 + 0x278] = a2\n 16992: u64 [s1 + 0x270] = a1\n 16996: u64 [s1 + 0x268] = a0\n 17000: a0 = s1 + 0x280\n 17004: a1 = s1 + 0x260\n 17008: a2 = s1 + 0x240\n 17012: u64 [s1 + 0x260] = a3\n 17016: ra = 660, jump @638\n      : @653 [@dyn 330] (gas: 19)\n 17022: a0 = u64 [s1 + 0x298]\n 17026: a1 = u64 [s1 + 0x290]\n 17030: a2 = u64 [s1 + 0x288]\n 17034: a3 = u64 [s1 + 0x280]\n 17038: a4 = s1 + 0x300\n 17042: u64 [a4 + 0x18] = a0\n 17045: u64 [a4 + 0x10] = a1\n 17048: u64 [a4 + 0x8] = a2\n 17051: u64 [a4] = a3\n 17053: u64 [s1 + 568] = 0\n 17057: a0 = u64 [s1 + 0x38]\n 17060: u64 [s1 + 0x230] = a0\n 17064: a0 = u64 [s1 + 0x40]\n 17067: u64 [s1 + 0x228] = a0\n 17071: a1 = s1 + 0x220\n 17075: a0 = u64 [s1 + 0x48]\n 17078: u64 [s1 + 0x220] = a0\n 17082: a0 = 0\n 17084: ra = 662, jump @19\n      : @654 [@dyn 331] (gas: 7)\n 17090: u64 [s1 + 536] = 0\n 17094: u64 [s1 + 528] = 0\n 17098: u64 [s1 + 512] = 0x1\n 17103: a0 = 0x20\n 17106: a1 = s1 + 0x200\n 17110: u64 [s1 + 520] = 0\n 17114: ra = 664, jump @19\n      : @655 [@dyn 332] (gas: 3)\n 17120: a1 = u64 [s1 + 0x70]\n 17123: a0 = i32 [a1]\n 17125: jump @657 if a0 >u 63\n      : @656 (gas: 2)\n 17129: u32 [a1 + 0] = 0x40\n 17132: fallthrough\n      : @657 (gas: 12)\n 17133: a0 = sp + 0xffffffffffffffe0\n 17136: a0 = a0 & 0xffffffffffffffe0\n 17139: u64 [s1 + 0x10] = a0\n 17142: sp = a0\n 17144: i32 a2 = a0 + 0\n 17146: a1 = 0x40\n 17149: a0 = u64 [s1 + 0x78]\n 17152: ra = 0x29a\n 17156: ecalli 9 // 'hash_keccak_256'\n 17158: a3 = u64 [s1 + 0x10]\n 17161: t0 = 0x29c\n 17165: jump @697\n      : @658 [@dyn 333] (gas: 2)\n 17168: a3 = u64 [s1 + 0x10]\n 17171: t0 = 668, jump @697\n      : @659 [@dyn 334] (gas: 7)\n 17177: u64 [a4 + 0x58] = a3\n 17180: u64 [a4 + 0x50] = a2\n 17183: u64 [a4 + 0x48] = a1\n 17186: u64 [a4 + 0x40] = a0\n 17189: a0 = s1 + 0x340\n 17193: a1 = s1 + 0x300\n 17197: ra = 670, jump @22\n      : @660 [@dyn 335] (gas: 17)\n 17203: a0 = u64 [s1 + 0x20]\n 17206: a0 = a0 & 0xffffffffffffffff\n 17209: a1 = u64 [s1 + 0x28]\n 17212: a1 = a1 & 0xffffffffffffffff\n 17215: a2 = u64 [s1 + 0x30]\n 17218: a3 = u64 [s1 + 0x18]\n 17221: a2 = a2 & a3\n 17224: u64 [s1 + 504] = 0\n 17228: u64 [s1 + 0x20] = a2\n 17231: u64 [s1 + 0x1f0] = a2\n 17235: u64 [s1 + 0x28] = a1\n 17238: u64 [s1 + 0x1e8] = a1\n 17242: a1 = s1 + 0x1e0\n 17246: u64 [s1 + 0x30] = a0\n 17249: u64 [s1 + 0x1e0] = a0\n 17253: a0 = 0\n 17255: ra = 672, jump @19\n      : @661 [@dyn 336] (gas: 7)\n 17261: u64 [s1 + 472] = 0\n 17265: u64 [s1 + 464] = 0\n 17269: u64 [s1 + 448] = 0x1\n 17274: a0 = 0x20\n 17277: a1 = s1 + 0x1c0\n 17281: u64 [s1 + 456] = 0\n 17285: ra = 674, jump @19\n      : @662 [@dyn 337] (gas: 3)\n 17291: a1 = u64 [s1 + 0x70]\n 17294: a0 = i32 [a1]\n 17296: jump @664 if a0 >=u 64\n      : @663 (gas: 2)\n 17300: u32 [a1 + 0] = 0x40\n 17303: fallthrough\n      : @664 (gas: 12)\n 17304: a0 = sp + 0xffffffffffffffe0\n 17307: a0 = a0 & 0xffffffffffffffe0\n 17310: u64 [s1 + 0x18] = a0\n 17313: sp = a0\n 17315: i32 a2 = a0 + 0\n 17317: a1 = 0x40\n 17320: a0 = u64 [s1 + 0x78]\n 17323: ra = 0x2a4\n 17327: ecalli 9 // 'hash_keccak_256'\n 17329: a3 = u64 [s1 + 0x18]\n 17332: t0 = 0x2a6\n 17336: jump @697\n      : @665 [@dyn 338] (gas: 2)\n 17339: a3 = u64 [s1 + 0x18]\n 17342: t0 = 678, jump @697\n      : @666 [@dyn 339] (gas: 7)\n 17348: u64 [a4 + 0x78] = a3\n 17351: u64 [a4 + 0x70] = a2\n 17354: u64 [a4 + 0x68] = a1\n 17357: u64 [a4 + 0x60] = a0\n 17360: a0 = s1 + 0x1a0\n 17364: a1 = s1 + 0x360\n 17368: ra = 680, jump @21\n      : @667 [@dyn 340] (gas: 41)\n 17374: t2 = u64 [s1 + 0x1b8]\n 17378: a2 = s1 + 0x100\n 17382: a0 = u64 [a2 + 0xb0]\n 17386: a1 = u64 [a2 + 0xa0]\n 17390: a4 = u64 [a2 + 0xa8]\n 17394: a2 = sp + 0xffffffffffffffe0\n 17397: a3 = a2 & 0xffffffffffffffe0\n 17400: sp = a3\n 17402: a5 = u64 [s1 + 0x58]\n 17405: a5 = a5 + a4\n 17408: t0 = u64 [s1 + 0x50]\n 17411: t0 = t0 + a1\n 17414: u64 [s1 + 0x18] = t0\n 17417: a1 = t0 <u a1\n 17420: ra = a5 + a1\n 17423: a2 = ra ^ a4\n 17426: t0 = ra <u a4\n 17429: t0 = a1 if a2 == 0\n 17432: a2 = u64 [s1 + 0x60]\n 17435: a2 = a2 + a0\n 17438: a4 = a2 + t0\n 17441: t1 = a4 <u a2\n 17444: a1 = u64 [s1 + 0x68]\n 17447: a1 = a1 + t2\n 17450: a2 = a2 <u a0\n 17453: a1 = a1 + a2\n 17456: a1 = a1 + t1\n 17459: t1 = a4 <u a0\n 17462: a2 = t2 ^ a1\n 17465: a5 = a1 <u t2\n 17468: a5 = t1 if a2 == 0\n 17471: a0 = a0 ^ a4\n 17474: a0 = a0 | a2\n 17477: a5 = t0 if a0 == 0\n 17480: u64 [a3 + 0x10] = a4\n 17483: u64 [a3 + 0x8] = ra\n 17486: a0 = u64 [s1 + 0x18]\n 17489: u64 [a3] = a0\n 17491: u64 [s1 + 0x18] = a3\n 17494: u64 [a3 + 0x18] = a1\n 17497: jump @683 if a5 != 0\n      : @668 (gas: 10)\n 17501: u64 [s1 + 408] = 0\n 17505: a0 = u64 [s1 + 0x30]\n 17508: u64 [s1 + 0x180] = a0\n 17512: a0 = u64 [s1 + 0x28]\n 17515: u64 [s1 + 0x188] = a0\n 17519: a1 = s1 + 0x180\n 17523: a0 = u64 [s1 + 0x20]\n 17526: u64 [s1 + 0x190] = a0\n 17530: a0 = 0\n 17532: ra = 682, jump @19\n      : @669 [@dyn 341] (gas: 1)\n 17538: t0 = 684, jump @713\n      : @670 [@dyn 342] (gas: 1)\n 17544: ra = 686, jump @19\n      : @671 [@dyn 343] (gas: 3)\n 17550: a2 = u64 [s1 + 0x70]\n 17553: a0 = i32 [a2]\n 17555: jump @673 if a0 >u 63\n      : @672 (gas: 2)\n 17559: u32 [a2 + 0] = 0x40\n 17562: fallthrough\n      : @673 (gas: 12)\n 17563: a0 = sp + 0xffffffffffffffe0\n 17566: a0 = a0 & 0xffffffffffffffe0\n 17569: u64 [s1 + 0x70] = a0\n 17572: sp = a0\n 17574: i32 a2 = a0 + 0\n 17576: a1 = 0x40\n 17579: a0 = u64 [s1 + 0x78]\n 17582: ra = 0x2b0\n 17586: ecalli 9 // 'hash_keccak_256'\n 17588: a3 = u64 [s1 + 0x70]\n 17591: t0 = 0x2b2\n 17595: jump @697\n      : @674 [@dyn 344] (gas: 2)\n 17598: a3 = u64 [s1 + 0x70]\n 17601: t0 = 690, jump @697\n      : @675 [@dyn 345] (gas: 7)\n 17607: u64 [a4 + 0x98] = a3\n 17611: u64 [a4 + 0x90] = a2\n 17615: u64 [a4 + 0x88] = a1\n 17619: u64 [a4 + 0x80] = a0\n 17623: a0 = s1 + 0x380\n 17627: a1 = u64 [s1 + 0x18]\n 17630: ra = 692, jump @22\n      : @676 [@dyn 346] (gas: 3)\n 17636: a0 = s1 + 0x140\n 17640: a1 = 0x40\n 17643: ra = 694, jump @17\n      : @677 [@dyn 347] (gas: 6)\n 17649: a4 = s1 + 0x100\n 17653: a0 = u64 [a4 + 0x58]\n 17656: a1 = u64 [a4 + 0x50]\n 17659: a2 = u64 [a4 + 0x48]\n 17662: a3 = u64 [a4 + 0x40]\n 17665: t0 = 696, jump @695\n      : @678 [@dyn 348] (gas: 1)\n 17671: jump @682 if a0 != 0\n      : @679 (gas: 12)\n 17675: a0 = u64 [s1 + 0x50]\n 17678: u64 [s1 + 0x120] = a0\n 17682: a0 = u64 [s1 + 0x58]\n 17685: u64 [s1 + 0x128] = a0\n 17689: a0 = u64 [s1 + 0x60]\n 17692: u64 [s1 + 0x130] = a0\n 17696: a1 = s1 + 0x120\n 17700: a0 = u64 [s1 + 0x68]\n 17703: u64 [s1 + 0x138] = a0\n 17707: a0 = a3\n 17709: u64 [s1 + 0x78] = a3\n 17712: ra = 698, jump @19\n      : @680 [@dyn 349] (gas: 29)\n 17718: u64 [s1 + 216] = 0\n 17722: a0 = u64 [s1 + 0x20]\n 17725: u64 [s1 + 0xd0] = a0\n 17729: a0 = u64 [s1 + 0x28]\n 17732: u64 [s1 + 0xc8] = a0\n 17736: a0 = u64 [s1 + 0x30]\n 17739: u64 [s1 + 0xc0] = a0\n 17743: u64 [s1 + 248] = 0\n 17747: a0 = u64 [s1 + 0x38]\n 17750: u64 [s1 + 0xf0] = a0\n 17754: a0 = u64 [s1 + 0x40]\n 17757: u64 [s1 + 0xe8] = a0\n 17761: a0 = u64 [0x200b8]\n 17766: a1 = u64 [0x200c0]\n 17771: a2 = u64 [0x200c8]\n 17776: a3 = u64 [s1 + 0x48]\n 17779: u64 [s1 + 0xe0] = a3\n 17783: a5 = s1 + 0x100\n 17787: u64 [a5 + 0x18] = a0\n 17790: u64 [a5 + 0x10] = a1\n 17793: u64 [a5 + 0x8] = a2\n 17796: a0 = u64 [0x200d0]\n 17801: a1 = 0x20\n 17804: a2 = s1 + 0x100\n 17808: a3 = s1 + 0xe0\n 17812: a4 = s1 + 0xc0\n 17816: u64 [a5] = a0\n 17818: a0 = u64 [s1 + 0x78]\n 17821: ra = 700, jump @23\n      : @681 [@dyn 350] (gas: 7)\n 17827: sp = s0 + 0xfffffffffffffc40\n 17831: a0 = sp + 0x300\n 17835: ra = u64 [a0 + 0xb8]\n 17839: s0 = u64 [a0 + 0xb0]\n 17843: s1 = u64 [a0 + 0xa8]\n 17847: sp = sp + 0x3c0\n 17851: ret\n      : @682 (gas: 1)\n 17853: trap\n      : @683 (gas: 8)\n 17854: u64 [s1 + 176] = 0\n 17858: u64 [s1 + 168] = 0\n 17862: u64 [s1 + 160] = 0\n 17866: a0 = 0x4e487b7100000000\n 17876: a1 = s1 + 0xa0\n 17880: u64 [s1 + 0xb8] = a0\n 17884: a0 = 0\n 17886: ra = 702, jump @19\n      : @684 [@dyn 351] (gas: 7)\n 17892: u64 [s1 + 152] = 0\n 17896: u64 [s1 + 144] = 0\n 17900: u64 [s1 + 128] = 0x11\n 17905: a0 = 0x4\n 17908: a1 = s1 + 0x80\n 17912: u64 [s1 + 136] = 0\n 17916: ra = 704, jump @19\n      : @685 [@dyn 352] (gas: 3)\n 17922: a0 = u64 [s1 + 0x70]\n 17925: a0 = i32 [a0]\n 17927: jump @687 if a0 >u 63\n      : @686 (gas: 3)\n 17931: a1 = u64 [s1 + 0x70]\n 17934: u32 [a1 + 0] = 0x40\n 17937: fallthrough\n      : @687 (gas: 7)\n 17938: a0 = 0x1\n 17941: a2 = 0x24\n 17944: a1 = u64 [s1 + 0x78]\n 17947: ecalli 14 // 'seal_return'\n 17949: a0 = 0\n 17951: ra = 0x2c2\n 17955: jump @32\n      : @688 [export #0: 'call'] (gas: 2)\n 17958: a0 = 0\n 17960: ra = 706, jump @32\n      : @689 [@dyn 353] [export #1: 'deploy'] (gas: 2)\n 17966: a0 = 0x1\n 17969: ra = 708, jump @32\n      : @690 [@dyn 354] (gas: 24)\n 17975: sp = sp + 0xffffffffffffffb0\n 17978: u64 [sp + 0x48] = ra\n 17981: u64 [sp + 0x40] = s0\n 17984: s0 = sp + 0x50\n 17987: sp = sp & 0xfffffffffffffff0\n 17990: t0 = u64 [a0]\n 17992: t1 = u64 [a0 + 0x8]\n 17995: a4 = u64 [a0 + 0x10]\n 17998: a0 = u64 [a0 + 0x18]\n 18001: a5 = u64 [a1]\n 18003: a2 = u64 [a1 + 0x8]\n 18006: a3 = u64 [a1 + 0x10]\n 18009: a1 = u64 [a1 + 0x18]\n 18012: u64 [sp + 0x18] = a1\n 18015: u64 [sp + 0x10] = a3\n 18018: u64 [sp + 0x8] = a2\n 18021: u64 [sp] = a5\n 18023: u64 [sp + 0x38] = a0\n 18026: u64 [sp + 0x30] = a4\n 18029: u64 [sp + 0x28] = t1\n 18032: a0 = sp + 0x20\n 18035: a1 = sp\n 18037: u64 [sp + 0x20] = t0\n 18040: ra = 710, jump @573\n      : @691 [@dyn 355] (gas: 5)\n 18046: sp = s0 + 0xffffffffffffffb0\n 18049: ra = u64 [sp + 0x48]\n 18052: s0 = u64 [sp + 0x40]\n 18055: sp = sp + 0x50\n 18058: ret\n      : @692 (gas: 16)\n 18060: a1 = a0 <u a1\n 18063: a2 = a3 + a1\n 18066: a3 = a2 <u a3\n 18069: a3 = a1 if a1 == 0\n 18072: a3 = a3 + a4\n 18075: a1 = a3 <u a4\n 18078: a4 = u64 [s1 + 0x80]\n 18082: a1 = a1 + a4\n 18085: a4 = a0 | a3\n 18088: a1 = a1 | a2\n 18091: a4 = a4 | a1\n 18094: a4 = a4 >> 0x20\n 18097: a1 = a1 | a3\n 18100: a1 = a1 << 0x20\n 18103: a1 = a1 | a4\n 18106: jump [t0]\n      : @693 (gas: 14)\n 18108: a0 = u64 [a2 + 0x8]\n 18111: a1 = i32 [a2 + 0x10]\n 18114: a2 = u64 [a2]\n 18116: a0 = reverse a0\n 18118: a3 = a0 << 0x20\n 18121: a1 = reverse a1\n 18123: a1 = a1 >> 0x20\n 18126: a3 = a3 | a1\n 18129: a0 = a0 >> 0x20\n 18132: a1 = reverse a2\n 18134: a2 = a1 << 0x20\n 18137: a0 = a0 | a2\n 18140: a1 = a1 >> 0x20\n 18143: jump [t0]\n      : @694 (gas: 16)\n 18145: a1 = a0 <u a1\n 18148: a2 = a3 + a1\n 18151: a3 = a2 <u a3\n 18154: a3 = a1 if a1 == 0\n 18157: a3 = a3 + a4\n 18160: a1 = a3 <u a4\n 18163: a4 = u64 [s1 + 0x88]\n 18167: a1 = a1 + a4\n 18170: a4 = a0 | a3\n 18173: a1 = a1 | a2\n 18176: a4 = a4 | a1\n 18179: a4 = a4 >> 0x20\n 18182: a1 = a1 | a3\n 18185: a1 = a1 << 0x20\n 18188: a1 = a1 | a4\n 18191: jump [t0]\n      : @695 (gas: 8)\n 18193: a0 = a0 | a2\n 18196: a2 = a3 | a1\n 18199: a2 = a2 | a0\n 18202: a2 = a2 >> 0x20\n 18205: a0 = a0 | a1\n 18208: a0 = a0 << 0x20\n 18211: a0 = a0 | a2\n 18214: jump [t0]\n      : @696 (gas: 9)\n 18216: a0 = u64 [a3 + 0x18]\n 18219: a1 = u64 [a3 + 0x10]\n 18222: a2 = u64 [a3 + 0x8]\n 18225: a3 = u64 [a3]\n 18227: a0 = reverse a0\n 18229: a4 = reverse a1\n 18231: a2 = reverse a2\n 18233: a3 = reverse a3\n 18235: jump [t0]\n      : @697 (gas: 10)\n 18237: a0 = u64 [a3 + 0x18]\n 18240: a1 = u64 [a3 + 0x10]\n 18243: a2 = u64 [a3 + 0x8]\n 18246: a3 = u64 [a3]\n 18248: a0 = reverse a0\n 18250: a1 = reverse a1\n 18252: a2 = reverse a2\n 18254: a3 = reverse a3\n 18256: a4 = s1 + 0x300\n 18260: jump [t0]\n      : @698 (gas: 18)\n 18262: a1 = a0 <u a1\n 18265: a3 = u64 [a5 + 0x30]\n 18268: a2 = a3 + a1\n 18271: a3 = a2 <u a3\n 18274: a3 = a1 if a1 == 0\n 18277: a1 = u64 [a5 + 0x18]\n 18280: a3 = a3 + a1\n 18283: a1 = a3 <u a1\n 18286: a4 = u64 [a5 + 0x20]\n 18289: a1 = a1 + a4\n 18292: a4 = a0 | a3\n 18295: a1 = a1 | a2\n 18298: a4 = a4 | a1\n 18301: a4 = a4 >> 0x20\n 18304: a1 = a1 | a3\n 18307: a1 = a1 << 0x20\n 18310: a1 = a1 | a4\n 18313: jump [t0]\n      : @699 (gas: 9)\n 18315: a0 = reverse a1\n 18317: u64 [s1 + 0xa0] = a0\n 18321: a0 = reverse a2\n 18323: u64 [s1 + 0x98] = a0\n 18327: a0 = reverse a3\n 18329: u64 [s1 + 0x90] = a0\n 18333: a0 = sp + 0xffffffffffffffe0\n 18336: a0 = a0 & 0xffffffffffffffe0\n 18339: jump [t0]\n      : @700 (gas: 15)\n 18341: a2 = u64 [s1 + 0xf8]\n 18345: a0 = u64 [a2 + 0x8]\n 18348: a1 = i32 [a2 + 0x10]\n 18351: a2 = u64 [a2]\n 18353: a0 = reverse a0\n 18355: a3 = a0 << 0x20\n 18358: a1 = reverse a1\n 18360: a1 = a1 >> 0x20\n 18363: a1 = a1 | a3\n 18366: a0 = a0 >> 0x20\n 18369: a2 = reverse a2\n 18371: a3 = a2 << 0x20\n 18374: a0 = a0 | a3\n 18377: a2 = a2 >> 0x20\n 18380: jump [t0]\n      : @701 (gas: 11)\n 18382: a3 = u64 [s1 + 0x138]\n 18386: a0 = u64 [a3 + 0x18]\n 18389: a1 = u64 [a3 + 0x10]\n 18392: a2 = u64 [a3 + 0x8]\n 18395: a3 = u64 [a3]\n 18397: a0 = reverse a0\n 18399: a1 = reverse a1\n 18401: a2 = reverse a2\n 18403: a3 = reverse a3\n 18405: a4 = s1 + 0x10b8\n 18409: jump [t0]\n      : @702 (gas: 11)\n 18411: a3 = s1 + 0x100\n 18415: a0 = u64 [a3 + 0x28]\n 18418: a1 = u64 [a3 + 0x20]\n 18421: a0 = a0 | a1\n 18424: a1 = 0xffffffe0\n 18434: a2 = u64 [a3 + 0x38]\n 18437: a1 = a2 <u a1\n 18440: a2 = u64 [a3 + 0x30]\n 18443: a1 = 0 if a2 != 0\n 18445: a1 = 0 if a0 != 0\n 18447: jump [t0]\n      : @703 (gas: 8)\n 18449: a0 = a0 | a2\n 18452: a2 = a1 | a3\n 18455: a2 = a2 | a0\n 18458: a2 = a2 >> 0x20\n 18461: a0 = a0 | a3\n 18464: a0 = a0 << 0x20\n 18467: a0 = a0 | a2\n 18470: jump [t0]\n      : @704 (gas: 5)\n 18472: sp = a0\n 18474: i32 a2 = a0 + 0\n 18476: a1 = 0x40\n 18479: a0 = u64 [s1 + 0x120]\n 18483: jump [t0]\n      : @705 (gas: 8)\n 18485: a1 = sp + 0xffffffffffffffe0\n 18488: a2 = a1 & 0xffffffffffffffe0\n 18491: u64 [s1 + 0x90] = a2\n 18495: sp = a2\n 18497: i32 a0 = a0 + 0\n 18499: a1 = i32 [s1 + 0x98]\n 18503: i32 a2 = a2 + 0\n 18505: jump [t0]\n      : @706 (gas: 10)\n 18507: a0 = u64 [sp + 0x10]\n 18510: a1 = u64 [sp + 0x18]\n 18513: a2 = 0x100000000\n 18523: a2 = a2 ^ a0\n 18526: a2 = a2 | a1\n 18529: a3 = a0 >> 0x20\n 18532: a3 = a3 <u 0x1\n 18535: a3 = 0 if a1 != 0\n 18537: a3 = 0 if a2 == 0\n 18539: jump [t0]\n      : @707 (gas: 10)\n 18541: a0 = u64 [a3 + 0x18]\n 18544: a1 = u64 [a3 + 0x10]\n 18547: a2 = u64 [a3 + 0x8]\n 18550: a3 = u64 [a3]\n 18552: a0 = reverse a0\n 18554: a1 = reverse a1\n 18556: a2 = reverse a2\n 18558: a3 = reverse a3\n 18560: a4 = s1 + 0x700\n 18564: jump [t0]\n      : @708 (gas: 13)\n 18566: a1 = s1 + 0x100\n 18570: a4 = u64 [a1 + 0x8]\n 18573: a2 = u64 [a1]\n 18575: a0 = u64 [a1 + 0x18]\n 18578: a0 = a0 | a4\n 18581: a3 = u64 [a1 + 0x10]\n 18584: a1 = a2 | a3\n 18587: a1 = a1 | a0\n 18590: a1 = a1 >> 0x20\n 18593: a0 = a0 | a3\n 18596: a0 = a0 << 0x20\n 18599: a0 = a0 | a1\n 18602: jump [t0]\n      : @709 (gas: 10)\n 18604: a0 = u64 [s1 + 0x88]\n 18608: a1 = u64 [s1 + 0x80]\n 18612: a0 = a0 | a1\n 18615: a1 = 0xffffffe0\n 18625: a2 = u64 [s1 + 0x98]\n 18629: a1 = a2 <u a1\n 18632: a2 = u64 [s1 + 0x90]\n 18636: a1 = 0 if a2 != 0\n 18638: a1 = 0 if a0 != 0\n 18640: jump [t0]\n      : @710 (gas: 4)\n 18642: a0 = 0x10b8\n 18646: a3 = s1 + a0\n 18649: a4 = a3 + 0x300\n 18653: jump [t0]\n      : @711 (gas: 4)\n 18655: a0 = 0x10b8\n 18659: a3 = s1 + a0\n 18662: a4 = a3 + 0x200\n 18666: jump [t0]\n      : @712 (gas: 13)\n 18668: a3 = s1 + 0x100\n 18672: a0 = u64 [a3 + 0x20]\n 18675: a1 = u64 [a3 + 0x30]\n 18678: a0 = a0 | a1\n 18681: a2 = u64 [a3 + 0x28]\n 18684: a1 = u64 [a3 + 0x38]\n 18687: a1 = a1 | a2\n 18690: a1 = a1 | a0\n 18693: a1 = a1 >> 0x20\n 18696: a0 = a0 | a2\n 18699: a0 = a0 << 0x20\n 18702: a0 = a0 | a1\n 18705: jump [t0]\n      : @713 (gas: 7)\n 18707: u64 [s1 + 376] = 0\n 18711: u64 [s1 + 368] = 0\n 18715: u64 [s1 + 352] = 0x1\n 18720: a0 = 0x20\n 18723: a1 = s1 + 0x160\n 18727: u64 [s1 + 360] = 0\n 18731: jump [t0]\n      : @714 (gas: 9)\n 18733: a0 = u64 [a3 + 0x18]\n 18736: a1 = u64 [a3 + 0x10]\n 18739: a2 = u64 [a3 + 0x8]\n 18742: a3 = u64 [a3]\n 18744: a0 = reverse a0\n 18746: a1 = reverse a1\n 18748: a2 = reverse a2\n 18750: a3 = reverse a3\n 18752: jump [t0]\n      : @715 (gas: 9)\n 18754: a0 = u64 [a3 + 0x18]\n 18757: a1 = u64 [a3 + 0x10]\n 18760: a2 = u64 [a3 + 0x8]\n 18763: a3 = u64 [a3]\n 18765: a4 = reverse a0\n 18767: a1 = reverse a1\n 18769: a2 = reverse a2\n 18771: a3 = reverse a3\n 18773: jump [t0]\n      : @716 (gas: 12)\n 18775: a2 = u64 [sp]\n 18777: a3 = u64 [sp + 0x8]\n 18780: u64 [s1] = a2\n 18782: u64 [s1 + 0x8] = a3\n 18785: u64 [s1 + 0x10] = a0\n 18788: u64 [s1 + 0x18] = a1\n 18791: sp = s0 + 0xffffffffffffffc0\n 18794: ra = u64 [sp + 0x38]\n 18797: s0 = u64 [sp + 0x30]\n 18800: s1 = u64 [sp + 0x28]\n 18803: sp = sp + 0x40\n 18806: jump [t0]\n      : @717 (gas: 8)\n 18808: a0 = a0 | a2\n 18811: a2 = a4 | a1\n 18814: a2 = a2 | a0\n 18817: a2 = a2 >> 0x20\n 18820: a0 = a0 | a1\n 18823: a0 = a0 << 0x20\n 18826: a0 = a0 | a2\n 18829: jump [t0]\n      : @718 (gas: 8)\n 18831: a3 = a3 | a2\n 18834: a2 = a0 | a1\n 18837: a2 = a2 | a3\n 18840: a2 = a2 >> 0x20\n 18843: a1 = a1 | a3\n 18846: a1 = a1 << 0x20\n 18849: a1 = a1 | a2\n 18852: jump [t0]\n      : @719 (gas: 8)\n 18854: u64 [sp + 64] = 0\n 18857: u64 [sp + 56] = 0\n 18860: u64 [sp + 48] = 0\n 18863: a0 = 0x4e487b7100000000\n 18873: a1 = sp + 0x30\n 18876: u64 [sp + 0x48] = a0\n 18879: a0 = 0\n 18881: jump [t0]\n      : @720 (gas: 8)\n 18883: a1 = sp + 0xffffffffffffffe0\n 18886: a2 = a1 & 0xffffffffffffffe0\n 18889: u64 [s1 + 0x130] = a2\n 18893: sp = a2\n 18895: i32 a0 = a0 + 0\n 18897: a1 = i32 [s1 + 0x138]\n 18901: i32 a2 = a2 + 0\n 18903: jump [t0]\n      : @721 (gas: 12)\n 18905: a0 = u64 [s1 + 0x88]\n 18909: a1 = u64 [s1 + 0x90]\n 18913: a0 = a0 | a1\n 18916: a2 = u64 [s1 + 0x80]\n 18920: a1 = u64 [s1 + 0x98]\n 18924: a1 = a1 | a2\n 18927: a1 = a1 | a0\n 18930: a1 = a1 >> 0x20\n 18933: a0 = a0 | a2\n 18936: a0 = a0 << 0x20\n 18939: a0 = a0 | a1\n 18942: jump [t0]\n      : @722 (gas: 9)\n 18944: sp = sp + 0xffffffffffffffc0\n 18947: u64 [sp + 0x38] = ra\n 18950: u64 [sp + 0x30] = s0\n 18953: u64 [sp + 0x28] = s1\n 18956: s0 = sp + 0x40\n 18959: sp = sp & 0xffffffffffffffe0\n 18962: s1 = a0\n 18964: i32 a0 = sp + 0\n 18966: jump [t0]\n      : @723 (gas: 8)\n 18968: a0 = u64 [a4 + 0x58]\n 18971: a1 = u64 [a4 + 0x60]\n 18974: a2 = u64 [a4 + 0x50]\n 18977: a3 = u64 [a4 + 0x48]\n 18980: a1 = a1 | a2\n 18983: a0 = a0 | a3\n 18986: a0 = a0 | a1\n 18989: jump [t0]\n      : @724 (gas: 8)\n 18991: a0 = u64 [a4 + 0x78]\n 18994: a1 = u64 [a4 + 0x80]\n 18998: a2 = u64 [a4 + 0x70]\n 19001: a3 = u64 [a4 + 0x68]\n 19004: a1 = a1 | a2\n 19007: a0 = a0 | a3\n 19010: a0 = a0 | a1\n 19013: jump [t0]\n",
            "bytecode": {
              "object": "50564d00008658000000000000010700c11001c000800380d82070617773696e553dfeb89bc6c3738b79cc59f74ccc2e51cafa0f9b177b9f230f40392b525da7a99bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5287fb9b112aeed716e1010ef0f37601f4d4a112601aefaa25fc926615d84649c165670617773696e554c41564e49203a32414e4749535f44495249505845203a32000032562d494e552070617773696e555b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af52804811c1200000000070000000b0000001900000027000000350000003b00000043000000500000005b0000006a0000006d0000007a0000008a0000009a000000a5000000b7000000c20000006164647265737363616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636861696e5f69646465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235366e6f777265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c026460463616c6cc02e46066465706c6f7906c05c56816302c0474a9b00e30100040804de042a056205d405e10502062a0677067c069e06a306da06e7060007110716073f0791079607b807bd07ef07fc071108220827085008d708eb0820093409690973098809b909cb09e009240a680aa50ab20acb0adb0ae00aef0af80a260b430b900bd10be20bea0b050c220c730c7c0c940ce00c110d1a0d360d3c0d420d7a0d840d9e0dab0dc10df10d790e860e9c0ecf0ee60ef00e160fab0fb10ff10f2510431078107e10a010cd10e7103d114b116b11b411ba11df11e5111b1228128a129012e712ed12f31213132d1395139b13a113c91342144814bd14ce149515c215d81534163a16401660167a1610173d175317ae17b417ba17de173d18431874187a18b218c31833193919bc19f219f819311a601ae11aff1a3b1b561b7c1b861ba21bd31bf11b021c0c1c251c6f1c8d1cab1cb21ccd1ce81cf21c0e1d3b1d591d6a1d741d991dea1d311e4f1e6d1e741e8f1eaa1eb41ed01efd1e1b1f2c1f361f4f1fbe1fcb1fe51f2a2038206a2095209e20de20e7200721aa21da210e22182231223a22632279220b2377237d23da23e72301245c246224a024d52407267626dc26262788279527cf27d527122848287a28af28b528d62816293c2983299029c3291e2a462a992aa32abc2a282b392bcc2be02b192c2d2c7e2c932cd12ce62c202d352d6f2dc12d122e242e462e582e5e2e902e192f292f632f732fb72f0b305c306e309030a630ac30de306931d2314532bc32e4322433bd331a349334f9344535bf352e368a37b63756386c387c3843395e3964397d39a139463a4c3a653a893a043b333ba23b153c233c303ca43c183d283d2e3d373d523d583d683d6e3d773d8c3d1a3e383ed93e023f353f3f3f573f643f7a3fa93f1a40ed4006412a419c41ba410942124230427e42c242e0421043194333436d438b43bb43c443de43824488448e44be44c744e444f14407453645a345e44502462e4637467e46aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f032003908e000025108650e330710010383770a0f28580e9511f07b10087b15648964753308206497501002f9037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b19828510828618330820501004b1026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a08821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a109551a08210588215509511603200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020682ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b1910491138203300082892007b18385010088c006f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a07955120ff8210d8008215d0008216c8009511e00032008b7910520931c8780883881f8488e05638000001253309dc0002390adc0002ae8a093d08dc0002013308f000028377c887073200009511f07b10087b158475010a04013d07d8000251050750100a5033000c951108f8951700077b70f0007b75e8007b76e0009515f807951100f89511b8f98411e064169569b81049294001492938014929280180003307409568e0114929300133009e002898fc9511a0f8951700077b70587b75507b7648951560078411e064164926180649261006492608063307409568000649260006800050100e62fc49263806492630064926280649262006836720060a1101956b000682b73082b83882b92882ba20d49808d4a707d4870752070e093907d800027b6798009777209879204926d8054926d0054926c8054926f8054926f0054926e8054926e00580009567e0059568c0057b69c005501010ad323307800082689800501012b3fe83778268980033090a02018268980054181fc0089567a0053308800050101488fa8267b8057b67788267b0057b67708267a8057b67688267a0057b67609567800533084050101660fa956c000582c798007b67880082c890007b68800082ca88007b6a900082c980007b699800492658054926500549264805491c40407bc7787bc8707bca6895676005956840057bc9605010180a3250121a62435207230849263805492630054926280595682005492620050a8267980050101c26fb50121e0e425108fc07826798008377203a0800000249260805492600057b68180514090000000000003256956800057b6910057b679000501020eafa9567e00482689800501022a3f9956b000482b7f80082baf00082b9e80082b8e000501224164152079f07826790007b68980050102683fd50122824410a09826890008287187b67588287107b67508287087b674882877b67409567c00433084050102a4bf9956c000482c7d8007b67880082c8d0007b68800082cac8007b6a900082c9c0007b699800492698044926900449268804492c8000407bc7b8007bc8b0007bcaa8009567a004956880047bc9a00050102cf03050122e484252070907492678044926700449266804956860044926600401826798005010300cfa501232f4405108e2068267980083772049265004492648044926400414090000000000000031956840047b6958047b679000501034d5f995672004826898005010368ef8956b000482b73882ba3082b92882b820501238054052078e06826790007b68980050103a72fc50123c13400a09826890008287187b67388287107b67308287087b672882877b67209567000433084050103e3af8826200048263180482640804826c1004952b20d82b07c87408d84809da7709c8c909d8c907c83707d49b0ad48707d47a0a98aa20d49707977720d4a707520712063a07080002956a00037ba7f8003a071000023a081800023a092000027ba7f0007ba8e8009568e0037ba9e0007b6b1864b77b6298007b6490007b6388007b6c8000501040edf8826b8000826a900082689800958740501242fb3d5208b4058268406f898268486f88826a506faa826b586fbb956c00037bcbc0007bcac8007bc8d0009568c0037bc9d800501044a4f8826b8000826a900082689800958760501246b23d52086b058268206f898268286f88826a306faa826b386fbb956c00037bcba0007bcaa8007bc8b0009568a0037bc9b8005010485bf88367400633004a0a0601826b8000826a9000826898009587800050124c5e3d52081705956c000682c94082c84882ca5082cb58956c00037bcb98007bca90007bc88800956880037bc9800050104e0bf83307f000037b675883777b67503300500a01826b8000826a9000826898009587a000501252063d5208bf04826a5882a80881a91082aa6f88978b206f99989920d4b9099888206faa97ab20d4b80898aa2049267803956b00037bba707bb868956860037bb960501054a0f7826c8000826b8800826a900082679800d4c709d4ba08d48909989920d4c808978820d49808520856044926580349265003492648039568400349264003a0005010565cf7492618034926100349260803956a0003490ac000826788007ba738826780007ba730826790007ba7289567200395680003826998007ba920501058dc2d9567e0028268980050105ad8f5956b000282b7f80082baf00082b9e80082b8e00050125c4b3d5207d4038267187b68980050105eb9f95012605a3d3300620a09826a900033026428413e826a90005012643a3e49267806492670064926680649266006037b6a98067b6990067b6888067b678006956760069568800650106611f84926b8064926b0064926a8064926a0069567c0029568a00650106873f7826ac0028267c8028268d0028269d802826b787b6b7802826b707b6b7002826b687b6b6802826b607b6b60027b6998027b6890027b6788029567a00295688002956960027b6a800250106a162e8267a0028268a8028269b002826ab8024926d8064926d0064926c8064926c006956b00067bbaf8007bb9f0007bb8e8007bb7e0009567c0069568e00650106c66f782675033006e0a0582695833027028dd3a826958501270d73a492658027b6850027b674802956840027b6a40023307501072bff5492638024926300249262802330720956820024926200201501074a2f59517e08477e07b67980064713307dc00027b6790003907dc000256173f0c82689000480840019517e08479e07b69800064913307f00002837783993308407b6788003300760a09826a800033027828fd3b826a8000501278f63b7bba187bb9107bb8087bb7956700029568000750107a22f6956b000282ba82b70882b81082b918826b787b6bb801826b707b6bb001826b687b6ba801826b607b6ba0017b69d8017b68d0017b67c8019567e0019568c0019569a0017b6ac00150107cc62c8267f0018268f8018269e001826ae801826b98007bb7107bb8187bb97bba0882675033007e0a058269583302800028ae3982695850228000a839492698017b6890017b678801956880017b6a80013307502082008ff450228400dd3b5020860083f482679000817756173f0c82679000480740019517e08477e07b6790006471837933084082678800330088000a09826a900033028a0028f63a826a900050228a00ef3a7bba387bb9307bb8287bb720956720078268980050208c009af59567400133084050208e00e0f2956b000182b75882b85082b94882ba405022900056395207de008267607b6720018267687b6728018267707b673001956820018267787b67380164a77b6a980050209200d4f38267500a0582695882970881981082996f7a97a7206f88988820d4780298aa206f99979820d4a8089899204926d8004926f8004926f0004926e8004926e0003a0a2800023a0b3000023a0c3800023a074000027b6a1801956a00017bab107bac087ba77b69d0007b68c80033082095690001956ae000956bc0007b62c000826798005020940028f59567a0003308405020960005f28267b8008268b0008269a800826ba00050229800e23a510723003308f00002838833070133090a0e28113308f00002838833070133090a0e0164ba64b77b6a9800330850209a00c6f58377330833090a022899f182679800330850209c00aff58378330733090a0e28d13307d800027b6738013907d8000255170407286327956700108377000233083300a0000a03019562b810812764015147419bd8956b085147bb9c05a94a045247cfac05d50a28f21452473eed62dd0a28cc10514703defd06dc015247b3a75e090a285a135147dd0d1618d2055147dd72b823710a51471ff8ad304e03514767e53c31a306514715e544362c0751473182a0700a281d184922e0024922d8024922d0024922c80295670010837780033300a2000a113302a4002837395022a400343982b7d80082b8e00082b9d00082bac800d49808d4a707d4870751070628bf26826738018177330823ac780628b7269567ff079577013300a60033025a0228123a95670010827700f895680010828808f895690010809910f84926f8077b69f0077b68e8079568e0077b67e00733075020a800a0f14926d8074926d0074926c007013307209568c0074926c8075020aa0082f13908dc000256183f0b2003dc000240019517e08479e07b69380164913307f00002837783993308403300ac000a093302ae002859375022ae0056377bba000395ba00027ba9f8007ba8f0007ba7e8009567a0079568a0135020b00017f28267b807956800017b87388267b0077b87308267a8077b87288267a0077b8720956780073308405020b200beef956b000782b7980082b8900082b9880082ba80005022b4003036510706287a2595690001829720956b00077bb7608297287bb7688297307bb770956860078297387bb77864a77b6a38013300c60128a4f04922800149227801492270014922680195670010837720023300b6000a1101956ab81095ab00015022b800ea38510706284c2582673801817756170307284625956740023308405020ba0020ef956c000282c7587b67200182c8507b68280182ca487b6a300182c9407b693801492618024926100249260802490c407bc7387bc8307bca2895672002956800027bc9205020bc00ce265022be00383751070628a7244926f8014926f0014926e8019568e0014926e0010a826738015020c000e6ef5022c2000c36520806287c24826738018377203a089000024926c8017b68d801140800000000000032567b68d0019568c0014926c0015020c400aaef9567a0013308405020c60063ee8269b8017b6918018268b0017b681001826aa8017b6a0801826ba0017b6b0001826720017b675801826728017b675001826730017b674801826738017b6740017b6978017b6870017b6a68019567800195686001956940017b6b60015020c80005285022ca00fc3551070628d12364a2956c000182c7880082c898007bc8388263800182ca900028ac06956700017b79187b7c207b7b287b7a304922600249225802492250024922480295670010837700033300cc000a113302ce0028fb355022ce00f8355022d0002b3751070628b2238267380181775617030728ac239567a0063308405020d20078ed956b000682b7b80082b8b00082b9a80082baa0005022d400ea33510706283423956b00013a074800023a085000023a09580002956c00067bc798003a076000027bc890007bc98800956880067bc7800064a77b6a38013300c6012852ee4922800349227803492270034922680395670010837720043300d6000a113302d8002840355022d8003d355022da009436510706281223826738018177330843ac7806280a239567ff079577a1023300dc0033025a02283a369568ff079588b900958900018297e8007b6738018297f0007b6730018297f8007b672801828700027b67200195670010837740043308240a039567b81095790003829888007b681801829890007b681001829898007b6808018297a0007b6700013307f000037b67f80083773300de000a053302e0002866335022e0006333956aff0795aab900956c000182cb7baba00182cb087bab980182cb107bab900182cb187bab880182cb207babc00182cb287babb80182cb307babb00182cb3895ac00017bcba8007bc9d8007bc7d0007bc8c8009567ff07957781029568ff07958861029569ff0795994102492ae0015020e200732c9567ff07957721023308405020e400bdeb956aff0795aab90095ac000182cb800082c87882c97082c768d49b0bd48709d4b909989920d4b808978820d49808510806286521492a6001492a5801492a4801019568ff0795880102492a50017b6738013300c601289cec4922e0014922d8014922d0014922c80195670010837780020a1101956ab81095ac000182c7d80082c8e00082c9d00064ab82cac800d49808d4a707d48707510706285d2182673801817756170307285721492b0002492bf801492bf001492be801956760039568a0125020e60022ed82677803956800017b8738826770037b8730826768037b8728826760037b8720956740033308405020e800c9ea956b000382b75882b85082b94882ba405022ea003f3151070628892095690001829720956b00037bb7208297287bb7288297307bb730956820038297387bb73864a77b6a38013300c60128b3eb4922800249227802492270024922680295670010837720033300ec000a113302ee0028ae325022ee00ab325022f000f533510706288f20826738018177561703072889209567e0063308405020f2002bea956b000682baf80082b8f00082b9e80082b7e0005022f4001b3351080628e71f4926d8064926d0064926c8069568c0064926c006127b6738013300c6012822eb4922a00249229802492290024922880295670010837740030a1101956ab81095ac000282c7980082c8a00082c9900064ab82ca8800d49808d4a707d4870751070628ff1f8267380181785618030728f91f492bc002492bb802492bb002492ba8020395674007956860135020f600a7eb82675807956800017b8738826750077b8730826748077b8728826740077b8720956720073308405020f8004ee9956b000782b73882b83082b92882ba205022fa00c42f510706280e1f95690001829720956b00077bb78297287bb7088297307bb710956800078297387bb71864a77b6a38013300c6012839ea4922600349225803492250034922480395670010837700043300fc000a113302fe002827315022fe00243150220001643251070628311f82673801817756170307282c1f9567ff079577e10133084050200201ade89569ff079599b900829740017b672001829838017b682801829b30017b6b3001829a28017b6a3801492900014929f8004929f0004929e80040959c00017bc7207bc8187bcb109567ff079577c1019568ff079588a1017bca0850200401452050220601af30510706281e1e9569ff079599b9004929e0004929d8004929d0009568ff07958881014929c80006826738015020080151e950220a01772f52080628e71d826738018377203a088800029569ff079599b9004929b8004929b0007b98c0009568ff07958861014929a80050200c0113e99567ff079577410133084050200e01c8e79568ff079588b900828aa0007b6a1801828998007b691001828b90007b6b0801828c88007b6c0001826720017b8740826728017b8738826730017b8730826738017b87287b8a607b89587b8b50648a9567ff07957721019568ff07958801019569ff079599e1007bac48502010015c2150221201532f51070628281d64a29568ff079588b900828770828a80007b6a3801828368828a7801d3b704d8b70cd89300da400cc92a08c9c804d8c8087b683001d82a0a826c180182683801c9c80cc9ac0c82683001c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a70751070628b71c64977b68380150201401d9ea83788169380133070a0e9568b81028da0f49222002492218024922100249220802956700108377c002330016010a113302180128f02e50221801ed2e82b71882b82082b91082ba08d49808d4a707d4870751070628ee1c826738018177330863ac780628e71c9567600633001a0133025a0228d22f826778067b67e800826770067b671801826768067b673801826760067b6730019567400633001c013302640228a32f826758067b67e000826750067b67d800826748067b67d000826740067b67c800956700108377e0023308440a039567b81095790002829840956a00017ba8088298387ba88298307b68f8008297287b67f00082a718977720987720492638067b67c0007b67300682a7387b6728069568200682a7307b672006330750201e01e4e649261806492610064926000602330720956800064926080650202001c6e63308dc00023907dc000256173f0b2003dc000240019517e08479e07b69100164913307f00002837783997b6828013308407b672001330022010a0901826a100182a71882a81082a90882aa6f777b67a800502224013b2c7b67b00064713307f000037b67100183777b67b800330026010a05826910013302280128432b82691001502228013c2b4926f8057b68f0057b67e8059568e0057b6ae005330750202a0123e682679000956a00057ba7d800826798007ba7d0008267a0007ba7c8003307209568c0058269a8007ba9c00050202c01f2e582682801818756173f08480840019517e08477e07b67a80050222e013d2c330030010a09826aa8003302320128292b826aa80050223201222b8268b0007b8a187b89107b8b087b879567a0055020340192e6956b000582b7b00082b8b80082b9a80082baa000d29808d2a707d287075117ff0d0349269805826730017b678005826738017b678805956880058267c0007b67900533075020360156e54926780549267005492660050233072095686005492668055020380138e582682801818756173f08480840019517e08477e07b67b00050223a01832b33003c010a0901826ab00082a71882a81082a90882aa6f777b67b00050223e01c42a7b67a80064718267b800330040010a05826910013302420128d7298269100150224201d029492658057b6850057b674805956840057b6a4005330750204401b7e482679000956a00057ba738826798007ba7308267a0007ba728330720956820058269b0007ba920502046018ae482682801818756173f08480840019517e08477e07b67b00050224801d52a33004a010a09826ab00033024c0128c129826ab00050224c01ba298268a8007b8a187b89107b8b087b879517e08477e07b67b00064719567000550204e011ee5956b000582ba82b70882b81082b918826b08017b6bb804826b00017b6bb004826bf8007b6ba804826bf0007b6ba0047b69d8047b68d0047b67c8049567e0049568c0049569a0047b6ac004502050014d228267f0048268f8048269e004826ae804826bb0007bb7107bb8187bb97bba08492698048267c0007b679004826738017b67880495688004826730017b67800433075020520194e34926780449267004492660040233072095686004492668045020540176e382682801818756173f08480840019517e08477e07b67c00050225601c129330058010a0901826ac00082a71882a81082a90882aa6f777b67a80050225a0102297b67c00064718267b80033005c010a058269100133025e012815288269100150225e010e28492658047b6850047b674804956840047b6a4004330750206001f5e282679000956a00047ba738826798007ba7308267a0007ba728330720956820048269a8007ba92050206201c8e282682801818756173f08480840019517e08477e07b672801502264011329330066010a09826a28013302680128192a826a280150226801122a8267c0007b7a187b79107b78087b7b8268b00050206a01e9e38267f0007b67c0038267c8007b67e00395680001828730956b00047bb78267f8007b67c8038267d0007b67e8038287387bb70882877b67d0038267d8007b67f0038287187bb7108287087b67d8038267e0007b67f803956700049568e0039569c003826ae8007bba1850206c0172219567a00333084050206e01c0e0956b000382bab80082b8b00082b9a80082b7a00050227001b029510806287c164926980349269003492688039568800349268003017b6738013300c60128b7e1492260054922580549225005492248059567001083770006330072010a1101956ab81095ab000550227401e62951070628d316826738018177330843ac780628cc161407ffffffff000000007b6738019567c0113300760133025a022899299568b810828708017b673001828710017b671001808718017b6708019567a0113300780133026402286e2933027a019568b810018287f800956a00017ba7288287f0007ba7208287e8007ba7184928e00082a7087b87d80082a7107b87d00064899568801182a7307b97c800330750207c01e7e033027e019568b810014928c0004928b8004928a800026489330720956860114929b00050208001bee03308dc00023907dc000256173f0b2003dc000240019517e08479e07b69080164913307f00002837783997b6830013308407b6710010a09826a080182a71882a81082a90882aa6f777b6700016f877b67f8006f977b67f0006fa77b67e8009517e08477e07b6708016471826718018477ff826920018498ff82693801826a2801d2a909956ab810492aa0007ba998007ba89000956840117ba788003307502082011be08267e8009568b8107b8780008267f0007b87788267f8007b8770648a33072095682011826900017ba96850208401ebdf82683001818756173f08480840019517e08477e07b6738016471837933084082671001330086010a09826a380133028801281d25826a3801502288011625826808017b8a187b89107b8b087b879567001150208a0186e033028c019568b81001828760956900017b97388287587b97308287507b97288287487b97209567e01033084050208e0128de956ab81082a74082a83882a93082ab2850229001052751070628e813956900018297207ba7088297287ba7108297307ba7189568c0108297387ba72064b77b9b383300c6012817df4922a00149229801492290014922880195670010837740020a1101956ab81095ab000182b7980082b8a00082b9900082ba8800d49808d4a707d48707510706283414826738018177330843ac7806282d14956700033300920133025a0228f8269568000382877b6738018287087b6730018287107b6728018287187b67200195670010837760023308240a039567b810957900018298a8007b6818018298b0007b6810018298b8007b6808018297c0007b6700013307f000037b67f8008377330094010a0533029601283124502296012e24956b000182ba7b6ab80282ba087b6ab00282ba107b6aa80282ba187b6aa00282ba207b6ad80282ba287b6ad00282ba307b6ac80282ba387b6ac0027b69f0027b67e8027b68e0029567e0029568c0029569a0024926f80250209801b8199567800233084050209a01a4dc956b000282ba980082b8900082b9880082b7800050229c0194255108062860124926780249267002492668029568600249266002017b6738013300c601289bdd956700017b79187b7c207b7b287b7a304922c0034922b8034922b0034922a803956700108377600433009e010a113302a0012879245022a001762482b7b80082b8c00082b9b00082baa800d49808d4a707d4870751070628b0128267380181773308e300ac780628a8129567a0103300a20133025a022863259568b81082877b679800958900ff8297f8007b67e8008297f0007b67f8008297e8007b67f000956780103300a40133026402282e259567ff079577b900957900078298e0007b6890008298d8007b68d8008298d0007b68d0008297c8007b67c80095670010837780043308440a039568b810958900038297e0007b67c0008297d8007b67b8008297d0007b67b0008297c8007b67a800956700108377a0043308640a039568b81082870004956900017b9738958a000382a7f8007b971082a7f0007b970882a7e8007b97956700108377c004330884000a03019569b810959b000482b72082b81882ba0882b910d487077b6aa00088a8000194989478520806289f11956700108377e0040a0a01956ab81095ab000482b73082b84082b92882ba38826c0801d37c0bd87c07826c0001d89c09dbb70982671001d8a702826c3801d38c0bd88c08dab208d3a707d4b707da79085108ad039567ff07957741033308405020a60184da9569ff079599b9008292a00295980002828c9800828b900082878800d42b0ad4c708d4a808988820d4ca0a97aa20d4a808510806282910492978024929700249296802140a00000000a079c3089568ff07958821037b9a80027b6738017b6b30017b6220017b6c28015020a8014fdb956c000182c83882c72882ca20d47a0a140b00000000010000001407fcffffff00000000d8780782c930949794a752070628bd0f8387049569ff079599b900492960024929580249294802209568ff0795880103492950027b6a28017b6b20015020aa01e9da956b000182ba2882b93082b83882b7209577dcd87807949794a7520706286b0f838724956aff0795aab900492a4002492a3802492a2802129568ff079588e102492a30025020ac019fda95690001829a381407bcffffff00000000d87a0782983094878298289487520706281d0f83a7443a086800023a09800002956bff0795bbb90095ba00027ba8207ba918140800000000000044457ba8109568ff079588c102492b08025020ae013dda330864826738015020b00100dd83783307013309640a0e01514700bece7e0a28be0e49222003492218034922100349220803956700108377c0033300b2010a113302b4012806215022b401032182b71882b82082b91082ba08d49808d4a707d4870751070628590f826738018177330823ac780628520f9567ff079577c1003300b60133025a0228f121956aff0795aab90082a70882a81080a918490a7ba9f8956900107b98a8f89568ff079588a100956900107b97a0f833075020b8017dd995670010492798f895670010492790f895680010492880f8043307209568ff079588810095690010492988f85020ba014bd93908dc000256183f0b2003dc000240019517e08479e07b69380164913307f00002837783993308403300bc010a093302be0128221f5022be011f1f95bc00037bca407bc9387bc8307bc7289567ff079577619568e0135020c001e1d995670010827778f8956800017b873895670010827770f87b873095670010827768f87b872895670010827760f87b87209567ff079577413308405020c20175d795670010827758f895680010828850f895690010829948f8956a001082aa40f85022c401db1d5207280d95690001829720956800107b8720f8829728956800107b8728f8829730956800107b8730f89568ff07958821829738956900107b9738f864a77b6a38015020c60142d8330820826738015020c80105db837833092033070a0e9568b81028079568b81001492860044928580449285004492848040395676010956800155020ca01f4d89568ff079588b900958900078297c0007b67488297b8007b67408297b0007b67388297a8007b67308267e8009777209877204928a0077b67707b9798008267f8007b9790006489956840108267f0007b97880733075020cc01a7d79568ff079588b90049288007492878074928680704648933072095682010492970075020ce017fd79517e08477e07b67e00064713309dc00023907dc000256173f0b2003dc000240017b69289517e08479e07b69880064913307f000027b6720837783993308407b67183300d0010a09826a88003302d20128921c826a88005022d2018b1c8268e0007b8a187b89107b8b087b87956700105020d401fbd79568ff079588b900958c000782c74882cb6082c95082ca587b67609577018878017b6958c89808d48709889901c8a9097b6a50d8a90a7b6b68c8ba0ad4a80bd4970cd4cb0b510b550c956bb81095bc00047bc7687bc8707bc9787bca8000956820158267e0005020d60110d89567ff079577e1073308405020d80152d5956cff0795ccb90082c2280782c3400782c4300782c03807952b20d82b07c87408d84809da7709c80909d80907c83707d49b0ad48707d47a0a98aa20d49707977720d4a7075207e60a956a00013a074800023a085000023a095800027bc720073a076000027bc818077bc910079568ff079588c1077bc708077bab3064b77b62e0007b6488007b6380007b60785020da01f9d5826b78826a88008268e0009587405022dc01b21a5208840a956aff0795aab900492a00078268f00095ab00067bb8e8008268f8007bb8f0009568ff079588a1078269707bb9f8005020de01acd5826b78826a88008268e0009587605022e001651a5208370a1409ffffffff000000008268d8007b692801d289098268d0008488ff826ac80084aaff956bff0795bbb900492be00695bc00067bcac8007bc8d0009568ff07958881077bc9d8005020e20147d5826b78826a88008268e000958780005022e401ff195208d1098268a800956aff0795aab90095ab00067bb8a8008268b0007bb8b0008268b8007bb8b8009568ff07958861078269c0007bb9c0005020e601f4d4826b78826a88008268e0009587a0005022e801ac1952087e099569ff079599b900826860959b00067bb888008268587bb890008268507bb898009568ff0795884107826a687bbaa0005020ea01a5d4826b78826a88008268e0009587c0005022ec015d1952082f09956b000182b8956aff0795aab90095ac00067bc86882b8087bc87082b8107bc8789568ff079588210782b9387bc980005020ee0156d4826c78826b8000826a88008267e000d4c709d4ba08d48909989920d4c808978820d498085208d1089569ff079599b9004929600649295806492950063302c0009568ff07958801077b9248065020f00104d49568ff079588b90049282006492818064928100695890006491908e000826780007b97408267787b9738826788007b9730648a9567ff079577e1069568ff079588c1068269e0007ba928065020f201700a9567ff079577a1068268e0005020f40167d29568ff079588b90082870006958b000582baf80082b9f00082b8e8005022f601d11952071e08826730017b6838015020f8013dd65022fa016b1b0a09826830018287187b6710018287107b6708018287087b67000182877b67e0009567ff07957781063308405020fc01fbd19562ff079522b900952700058278c800827ce0008279d000827bd8009587207b683801d8870ac8a9087b693001d89809daaa09c8b9097b6b1801d8b90a7b6c2001c8ac0cd4970ad4c808d48a0a98aa20d49808978820d4a80852087b074922b8054922b0054922a805140900000000000001199568ff07958861067b29c0057b6788005020fe01acd2956c000182c83895872250220002331852083b079569ff079599b900826830959b00057bb888008268387bb890008268407bb898009568ff0795884106826a487bbaa0005020020262d2956c000182c83895874250220402e9175208f1068268e0006f89826800016f88826a08016faa826b10016fbb956cff0795ccb9007bcb680595cb00057bba707bb8789568ff07958821067bb98000502006020ed2956b000182b73882ba18d4a70782b83082b920d49808d48707987720d4a808978820d48707520788069569ff079599b9004929600549295805492950059568ff079588010649294805428267380150200802bad19568ff079588b9004928200549281805492810059589000549190862826720017b9740826718017b9738826730017b9730648a9567ff079577e1059568ff079588c105826938017ba9280550200a0226089567ff079577a1058268380150200c021dd0956aff0795aab90082a7000595ac000482c8f80082c9f00082cbe80050220e02ee185207d40564ba8267880064b87b6a380150201002efd3502212021d190a09826830018287187b67e0008287107b6700018287087b67080182877b6710019567ff079577810533084050201402adcf9567ff079577b900957c000482cae00082cbd80082c9d00082c8c800956c00017bc9307bca20d4a9077bc838d4b808d478089888207bcb18d4b707977720d48707520745058267e0006f77826800016f88826908016f99826a10016faa956bff0795bbb90095bc00047bcac0007bc9b8007bc8b0009568ff07958861057bc7a80082673801502016025cd0956a000182a72082a918d47909140700000000010000007ba7181407e0ffffff0000000082a838d8780782a83094877ba92094975107c7047c68a000826738018377209569ff079599b9004929a004492998047b9888049568ff07958841054929900450201802f3cf95670010837740053308a4000a0301956900018297189577c0829838d8780782983094878298209487510769049567b810957c000482c9880082c8900082ca980082cba00082673801837740956cff0795ccb9007bcb800495cb00047bba787bb8709568ff07958821057bb96850201a0280cf95670010837760053308c4000a03011407a0ffffff0000000095690001829838d87807829830948782982094875107f2039567b810957c000482c9a80082c8b00082cab80082cbc00082673801837760956cff0795ccb9007bcb600495cb00047bba587bb8509568ff07958801057bb94850201c0209cf9567ff079577b9004927400449273804492730049568ff079588e10449272804330750201e02e1ce0a0b3308f000032103f800032103f000037b6830012003000103000000019567b8104927e0044927d8044927d0044927c80433088000826738015020200271d1826828818856181f0b826928480920019569b8104829e80420492920054929180549291005492908058268300197882098882014090000000018000000d49802956880159788209888209569c015979920d4890a97772098772014080000000080000000d4870b8267209777209877209568a015978820d4780c3308ff3309ff64270a0101520705029567ff079577a104330850202202cecc9569ff079599b900959a000382a7f00082a8f80082a9e8008477ff826b2801d2b8088499ffd4890ad47a0a510a21826af000d3a909826a70d3a808826af800d3a707d49707d487075107cd039567ff07957781043308405020240271cc9567ff079577b900957c000382cae00082cbd80082c9d00082c8c800956c00017bc9307bca28d4a9077bc838d4b808d478089888207bcb20d4b707977720d48707520709029569ff079599b9004929b8034929b0034929a803140700000000a079c3089568ff07958861047b97c003826738015020260232cd956a000182a72882a920d47909140700000000010000007ba7201407fcffffff0000000082a838d8780782a83094877ba928949751079d01826738018377049569ff079599b9004929a0034929980349298803209568ff07958841044929900350202802cccc956900018297209577dc829838d878078298309487829828948751075101826738018377249569ff079599b9004929800349297803492968031c9568ff07958821044929700350202a0280cc1407bcffffff0000000095690001829838d878078298309487829828948751070101826738018377443a086800023a097000023a0a780002956bff0795bbb90095bc00037bc8607bc9587bca50140900000000455255549568ff07958801047bc9483300ae012814cc9567ff079577c10433084050202c02ccca9567ff079577b900957900048298207b6830018298187b6828018298107b6820018297087b6738010a0d01956b000182b83082b920d4980882ba2882b938d4a909d48909989920d4a808978820d4980852085598782052084f64787b67280183777b6730018267380150202e0267ce9568b810826928017a8928058377956800108388e00533090a0c019567b8108177280582683001ac870f0a0d0164789877205107fe01003308f0000283883307012812838833070133090a0e3308f0000228f233090a0e3308f0000228e73308f0000228e03308f0000228d93308f0000228d23308f0000228cb3308f0000228c43308f0000228bd3308f0000228b63308f0000228af3308f0000228a83308f0000228a13308f00002289a3308f0000228933308f00002288c3308f0000228853308f00002287eff3308f000022876ff3308f00002286eff3308f000022866ff3308f00002285eff3308f000022856ff3308f00002284eff3308f000022846ff3308f00002283eff3308f000022836ff3308f00002282eff3308f000022826ff3308f00002281eff9567ff079577b9004927d8024927d0024927c8026479140700000000717b484e9568ff07958881037b97e0023307502030023bca9568ff079588b9004928c0024928b8024928a8021164893307049568ff07958861034929b002502032020fca826728817756173f0b826828480840013307013309248268180a0e01956aff0795aab9008267a80095a800027b87e8008267c80095ac00037bc7088267f0007bc7288267b0007b87f0008267d0007bc7108267f8007bc7308267b8007b87f8008267d8007bc7188267e8007bc7388267c0007bc7826790007bc7209567ff079577e1039568ff079588c1039569ff079599a103826b98007bcb40502034023c0533078268182826fe826738017b6830015020360229cc837881693001330701330038020a0e01951170ff7b1088007b1580007b1678951590008411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520657821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b307b13507b1a587b17603307409518507b1c6850203a0282c8955170ff821088008215800082167895119000320050223c024e1050203e0261c8491128491120491110413307049518104911185020400248c83908dc000256183f0b2003dc000240013308f000028388330701330924330042020a0e019511907b10687b15607b16589515708411f0828a187b1a08829b1882847b14828a08829608829c828310829210c8a609c8c404d8c40cc8c909d36900d86906da0c06c83208821c08c8bc0cd8280bc8cb0bc8680cd88c08c88b00d3a90bd8a90a8218d88406dbba06d83c02821808d3800bd8800adab20ad33c08d4b808db8a0652061f7b747b79087b7c107b7018955190821068821560821658951170320050224402660f5020460279c7491128491120491110113307049518104911185020480260c73908dc000256183f0b2003dc000240013308f00002838833070133092433004a020a0e019511e0fe7b1018017b1510017b160801951520018411f0828b10828a18828c0882827b1a687b1c78d4ac08d4b20ad48a0a98aa207b1b70d4b808978820d4a8087b170852084b028297187b17488296108297087b175082977b17584921f8004921f0004921e8009518e0004921e0002064277b126050204c02c1c6821858d46807821948821a50d4a909d497079877207b1620d46909979920d497075207f2019517c00050204e0258c5821770821868d47808140700000000010000007b17101407e0ffffff00000000821960d87907821a7894a77b181894875107b401821ad800821bd000821cc8008218c0008397207b18287b18a0007b1c307b1ca8007b1b387b1bb0009518a0007b1a407b1ab80064965020500223c68217109577c0d876078218789487821818948751076201821748821820d487071408e0ffffff00000000821a58d88a08821b5094b8947851083e016469821828821c38d4c807821b40821630d46b0bd4b707987720d4cb0b97bb20d4b7075207170183974083aa207b1a5864865020520280c87b175082175864685020540272c86478821750646950205602d6c3821760c86707d86708821978821b30c8b909c88909d3b90ad8b90bdaa80b821870821a38c8a808d8a80a821c68821640c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ac0ffffff00000000d8a70a949a948a510a940083774049219800492190004921880095188000492180005020580221c582162895661f1407e0ffffff01000000d26707821860c88707d88708821a78c88a09d8a90ada880a821870c88a0ad88a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87189551e0fe8210180182151001821608019511200132000033080433005c020a0333025e0228260b50225e02230b510a0b50226002260c32003308f0000283883307013309330062020a0e3302640228b10c50226402ae0c330824330066020a033302680228e60a50226802e30a510a0b50226a02e60b32003308f000028388330701330933006c020a0e01951100fe7b10f8017b15f0017b16e801951500028411e06416828a107b6a9800828a087b6a900082887b6888008272827808807710829b18829c10829a0882997b6b287b6bd8017b6c207b6cd0017b6a187b6ac8017b69107b69c0011409ffffffff000000007b69784926b8017b67307b67b0017b68387b68a8019568a0017b62407b62a001330750206e02abc3492698014926900149268001023307209568800149268801502070028dc33308dc00023907dc000256173f0b2003dc000240019517e08479e07b696864913307f00002837783997b6880003308407b67700a09826a6882a71882a81082a90882aa6f777b67606f877b67586f977b67506fa77b67489517e08477e07b67686471826788008477ff826890008488ff82699800826a78d2a909492678017b69787b6970017b6888007b686801956860017b6790007b676001330750207202ecc2826748956a00017ba7588267507ba7508267587ba748330720956840018269607ba94050207402c3c282688000818756173f08480840019517e08477e07b67980064718379330840826770330076020a09826a98003302780228100a826a980050227802090a8267687b7a187b79107b78087b7b9568c00150207a02e1c39567200133084050207c0227c1956b000182b73882b83082b92882ba2050227e029d075207b600826710956900017b978267187b97088267207b9710956800018267287b971864a77b6a9800502080021cc24926b8008267787b67b000826788007b67a800826790007b67a0004926d8008267307b67d0008267387b67c8003a079800023a08a000023a09a80002826a407b6ac0007b67f8007b68f0007b69e8003a07b000023308209569e000956ac000956ba0007b67e000826798005020820287c3955100fe8210f8018215f0018216e801951100023200009511807b10787b15707b1668951580008411f0829b828a829608828308829410828c10829918828818d363027b1608d863067b1b187b1a10d8ba0a7b1ada2a06d3980ad89800d84c02daa200d34c0bd4ba0adaa600520046c94c0ac99808c92808d86a09c99808c96a0a821908c99309821bc9b909821b18821c10c9bc0b7b7b7b79087b7a107b7818955180821078821570821668951180003200491150491148491140140700000000717b484e9518407b1758330750208402d8c04911384911304911201133070495182049112850208602bfc03908dc000256183f0b2003dc000240013308f000028388330701330924330088020a0e01951140fc951a00037ba0b8007ba5b0007ba6a8009515c0038411e06416829a187b6a68829a107b6a60829a087b6a5882997b69508289107b69308289087b692882887b682082798278088077104926f8027b67387b67f0027b68407b68e8029568e0027b69487b69e002330750208a0229c04926d8024926d0024926c8023307209568c0024926c0020150208c020bc03308dc00023907dc000256173f0b2003dc000240011407ffffffff000000007b67189517e08479e07b691064913307f0000283777b687083993308407b677833008e020a09826a1033029002282707826a105022900221077b6a38037b6930037b6828037b6720039567a002956820035020920287c0826aa0028267a8028268b0028269b802826b687b6b5802826b607b6b5002826b587b6b4802826b507b6b40027b6978027b6870027b6768029567800295686002956940027b6a600250209402b9fd826798028268900282698802826a8002956b00037bb7187bb8107bb9087bba492638028267387b6730028267407b672802956820028267487b67200233075020960203bf49261802492610024926000201330720956800024926080250209802e5be826870818756173f08480840019517e08477e07b67106471837933084082677833009a020a09826a1033029c02283004826a1050229c022a047bba587bb9507bb8487bb740956740039568000350209e0205c08267208477ff8268288488ff826930826a18d2a9094926f8017b69207b69f0017b68287b68e8019568e0017b67307b67e00133075020a00258be4926d8014926d0014926c001013307209568c0014926c8015020a2023abe826870818755174008480840019517e08477e07b6718647183793308408267783300a4020a09826a183302a602288503826a185022a6027f037bba787bb9707bb8687bb7609567a001956860035020a802d9be8264b801956900018297b0008298a000829ba8009519e0849ae064a1826c58c8bc0c826250c882027b6218d88208c88c00d3b009d8b002da9802826960c87909c8290bd89b03826868c84808d87909c89808c83808d87b03d38409d8480cda930cd3b707d49707da720c7bab107ba0088267187ba77b6a187ba818520c6501492698018267307b6780018267287b678801956880018267207b67900133075020aa0243bd5022ac0291045020ae0237bd826970819756173f08480940019517e08477e07b6770647183793308408267783300b0020a09826a703302b202288202826a705022b2027c027bba98007bb990007bb888007bb78000956780038268185020b40254be956740013308405020b6029abb956b000182b75882b85082b94882ba405022b80210025207b6008267507b6720018267587b6728018267607b673001956820018267687b67380164a77b6a785020ba028fbc4926d8008267207b67d0008267287b67c8008267307b67c0004926f8008267387b67f0008267407b67e8003a07b800023a08c000023a09c80002826a487b6ae000956c00017bc7187bc8107bc9083a07d0000233082095690001956ae000956bc0007bc78267785020bc02febd955140fc951700038270b8008275b0008276a8009511c0033200004926b0004926a8004926a000140700000000717b484e9568a0007b67b80033075020be02e1bb4926980049269000492680001133070495688000492688005020c002c3bb826770817756173f0b826870480840013307013309248268780a0e33073300c20228a1be33075020c2029cbe3307015020c40293be9511b07b10487b15409515508411f08272827308827b10827718828c828908828a108288187b18187b1a107b19087b1c7b17387b1b307b132895172064187b12205020c60204f29551b08210488215409511503200d88708c88a09d8a90ada880ac8ba0ad8ba08826b8000c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b808320282970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888203202d88708c88a09d8a90ada880ac8ba0ad8ba08826b8800c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b8083202d49707d48a09d47909989920d48707977720d49707320282a71882a81082a90882aa6f776f8b6f996faa320282a71882a81082a90882aa6f776f886f996faa956b00033202d8870882ca30c88a09d8a90ada880a82c818c88a0ad88a0882cb20c8b808d4a70bd49808d48b0b98bb20d4a808978820d4b80832026f877b67a0006f977b6798006fa77b6790009517e08477e032028269f80082970881981082996f77977a206f88988820d4a8089877206f99979a20d4a7079899203202826a380182a71882a81082a90882aa6f776f886f996faa956bb8103202956a000182a72882a820d487071408e0ffffff0000000082a938d8890882a930949894783202d49707d4a809d47909989920d4a707977720d497073202647183793308408267200132029518e08489e07b69900064918377816898008399320282171082181814090000000001000000d37909d48909987a2088aa01948a939a320282a71882a81082a90882aa6f776f886f996faa956b0007320295680001828b088289828718d4b707828a10d4a908d47808988820d4a707977720d4870732028267880082688000d487071408e0ffffff0000000082699800d88908826990009498947832023307b810c8760a95ab000332023307b810c8760a95ab00023202956a000182a72082a830d4870782a92882a838d49808d47808988820d49707977720d487073202492678014926700149266001013307209568600149266801320282a71882a81082a90882aa6f776f886f996faa320282a71882a81082a90882aa6f7b6f886f996faa32028219821a087b697b6a087b67107b68189551c08210388215308216289511403202d49707d48b09d47909989920d48707977720d497073202d49a0ad48709d4a909989920d4a808978820d498083202491140491138491130140700000000717b484e9518307b1748330732029518e08489e07b6930016491837781683801839932028267880082689000d487078269800082689800d49808d47808988820d49707977720d4870732029511c07b10387b15307b16289515408411e064768317320282b75882b86082b95082ba48d49808d4a707d48707320282b77882b8800082b97082ba68d49808d4a707d48707320249922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a498a88889424495292242925492409a592929222458a142952a44851922222a224491042c2509a94864422222222524404898844248914118920444444234992448824222222888810118a1a21224422914824444444444444449288841011112142884888880022224484888808111142912449898488888888888810111111424444840821221111404484881049122222842249921209111149922449922442440821222245448488488894528a88880811911029a514111111228d8808114912111111424a8e880891a452929244249110119124492222220811111189442222212244444488440829920811112222224244444488884824128988888808111111111111111192922444444421221221245188109149142a91228990a4881025492412898888880811119194a4441244444441104411994425a28844902411412488240922914844a20852924a494a1211112184109114918888082241444490a154a1d48a82aa444155214224a2684440402081040412101010101048444444140922229224519248442222222222a22022242208114ca2508922414444440411894422912022228224124992488a48444444342248a248248844229188882489481024111121822089848800222288041111111111111111111111110449119188449244444444912048a24824888888208910424488882822111111512408922849444422222222222222454444444484288a04115124128944229188888888888820224144449224499244848888484444442322a248924491888888202291482412449204492492249114918888882812044914890411111124111121221111118d88882249124522224404118944229120922448225192445244222222a24810245124224144444444444484481211912048222222224410249110111111114424888888888888442291244544442408922212914c92249188249224499224455054242222228a04499224899244442222222222221111111111292291944824898844240a2242228210229844a122118d24154114a28822124144441444444444222288229308a2884410498a20222292848888888882889088208a4c228846928a208a28221144444441442291442488229308a2884410494aa208a224111111111111111144444452222222220a22422282283289201a492a8228a28844101111051189441291208a4c228822124124298288884814119114114922222222412488888820898808118988888846044994248088884444444444246244229148248a4441c48850228210229844a1225124a9288a22892291884444441444442452221244914954228a480491a4082226922449248824099248922492128988886844444492244a12118922914844a48888888888104591208a44229148241211111111448288880892888810914892888888281244442449a248222251444444444424222222222222524444444444448a8844241245442392241195443422492289241249924444828888884892244944041011111141244900012495242222444444104992549288881011412480a494248488480248440489a0a481444444449120499224519288884424291111110511111112111184082651a8449120922412414424221189482441444444441091884424229288224804a5a2181121228888482412892412114544414444281141128510c12451482551442288244510114992244992244922224944041109222222922449922449440821424444a4884890880411111111119108129120028848241211111111412222888888888888880812114144242291884804898820a28848924424824444922489888888880822222242248914111111444410111111414404419148248a88041111119148224924922449222202888808220922221189444422882488288aa2888824228248922449121111111122888888884824524444441011414444440451144150241289222241444444449224499288a2288a88888888082249000920492922121111111144442349528a888888484444129120221a40242945444444242222894810111111515008210244444444902219212222920012492449004912495223a2202222229124892491242212444444442449922489888808202222882401248024a58844448488082249528a4844448888208048528a4808212292041091484482884824128946922449922445114144145123222d31944a852a140a8542a15028140a8542a150484848484848484848484848484444144044144444841211418a64924644444422119148442412452222222241494450241a1189545292244992244992244992545292244992244992248888444190449220443094449324495249499224499224494a92244952922449419044922044309444232222494a9224491249921211114a9024499224224812400248528a88882412894814244929920490a4a22449922491a420292805499224499224499204908a4444449004902449922449922449492222a28922418242298a048922418242291a11112991284a92944824120124128948144484440421443049a12229492aa59424452291442222220a124992441244914954124524822429824810491244a22489a408221111118944082111112111111144444493245249922449529224499224494a92922449942480a42089244188602889464444a424494a92949248242251101189108410c10092a4504aa24412444444041111894422111111114144442429128948144484440429324925512209922422489224914844a2202224224891492a8912499024114144442425499224499224499224494a221289481404418a4c5249944882888848100922498248241291284124128948244208894812121125888888684404105110111211a44826a94841822449494a92a42429419294244924499294544a529292248924499292244949aa2a4955519224499224492a8a2229924a494a5224a92a8a240124a99224499528898a4a0248922a495551a4244992149100225145a24814499224498a088928495525a9aa529224494992a42449529200924aa2a222129124494992544992a444922400"
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": "/// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 5:\"contracts/interfaces/IUniswapV2ERC20.sol\", 11:\"contracts/test/ERC20.sol\"\nobject \"ERC20_2361\" {\n    code {\n        {\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_2361\")\n            let argSize := sub(codesize(), programSize)\n            finalize_allocation(_1, argSize)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let value := mload(_1)\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let memPtr_1 := mload(64)\n            finalize_allocation(memPtr_1, 64)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 10)\n            let _2 := add(memPtr_1, 32)\n            mstore(_2, \"Uniswap V2\")\n            /// @src 0:1327:1349  \"keccak256(bytes(name))\"\n            let expr := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _2, mload(/** @src 0:1327:1349  \"keccak256(bytes(name))\" */ memPtr_1))\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            let memPtr_2 := /** @src -1:-1:-1 */ 0\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let memPtr_3 := mload(64)\n            finalize_allocation(memPtr_3, 64)\n            memPtr_2 := memPtr_3\n            mstore(memPtr_3, 1)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            let _3 := add(memPtr_3, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 32)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_3, \"1\")\n            /// @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\"\n            let expr_1 := keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _3, mload(/** @src 0:1367:1388  \"keccak256(bytes(\\\"1\\\"))\" */ memPtr_3))\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            let expr_mpos := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(64)\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            let _4 := add(expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 32)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_4, /** @src 0:1176:1309  \"keccak256(...\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 64), /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ expr)\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 96), expr_1)\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 128), /** @src 0:1044:1097  \"assembly {...\" */ chainid())\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(add(/** @src 0:1148:1458  \"abi.encode(...\" */ expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160), /** @src 0:1439:1443  \"this\" */ address())\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            mstore(expr_mpos, /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ 160)\n            /// @src 0:1148:1458  \"abi.encode(...\"\n            finalize_allocation(expr_mpos, 192)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            sstore(/** @src 0:1106:1468  \"DOMAIN_SEPARATOR = keccak256(...\" */ 0x03, /** @src 0:1125:1468  \"keccak256(...\" */ keccak256(/** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _4, mload(/** @src 0:1125:1468  \"keccak256(...\" */ expr_mpos)))\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 0:1553:1572  \"totalSupply + value\" */ checked_add_uint256(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sload(/** @src -1:-1:-1 */ 0), /** @src 0:1553:1572  \"totalSupply + value\" */ value))\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:208:218  \"msg.sender\" */ caller())\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            mstore(32, 1)\n            /// @src 0:1598:1619  \"balanceOf[to] + value\"\n            let _5 := checked_add_uint256(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 64)), /** @src 0:1598:1619  \"balanceOf[to] + value\" */ value)\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:208:218  \"msg.sender\" */ caller())\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            mstore(32, 1)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            sstore(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 64), /** @src 0:284:296  \"\\\"Uniswap V2\\\"\" */ _5)\n            /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n            let _6 := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(64)\n            /// @src 0:284:296  \"\\\"Uniswap V2\\\"\"\n            mstore(_6, value)\n            /// @src 0:1634:1665  \"Transfer(address(0), to, value)\"\n            log3(_6, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 32, /** @src 0:1634:1665  \"Transfer(address(0), to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src -1:-1:-1 */ 0, /** @src 11:208:218  \"msg.sender\" */ caller())\n            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n            let _7 := mload(64)\n            let _8 := datasize(\"ERC20_2361_deployed\")\n            codecopy(_7, dataoffset(\"ERC20_2361_deployed\"), _8)\n            return(_7, _8)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function checked_add_uint256(x, y) -> sum\n        {\n            sum := add(x, y)\n            if gt(x, sum)\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n        }\n    }\n    /// @use-src 0:\"contracts/UniswapV2ERC20.sol\", 9:\"contracts/libraries/SafeMath.sol\", 11:\"contracts/test/ERC20.sol\"\n    object \"ERC20_2361_deployed\" {\n        code {\n            {\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := 0\n                        let size := 0\n                        size := 0\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, 64)\n                        memPtr := memPtr_1\n                        mstore(memPtr_1, 10)\n                        mstore(add(memPtr_1, 32), \"Uniswap V2\")\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, memPtr_1), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_4481()\n                        /// @src 0:2393:2398  \"value\"\n                        fun_approve(/** @src 0:2372:2382  \"msg.sender\" */ caller(), /** @src 0:2393:2398  \"value\" */ value0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ calldataload(36))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _1 := sload(0)\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_4481()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        let _2 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _2)\n                        mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 0:2703:2730  \"allowance[from][msg.sender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)\n                        /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                        if /** @src 0:2703:2751  \"allowance[from][msg.sender] != type(uint256).max\" */ iszero(eq(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sload(/** @src 0:2703:2730  \"allowance[from][msg.sender]\" */ dataSlot_1), /** @src 0:2734:2751  \"type(uint256).max\" */ not(0)))\n                        /// @src 0:2699:2876  \"if (allowance[from][msg.sender] != type(uint256).max) {...\"\n                        {\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            mstore(0, _2)\n                            mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            let dataSlot_2 := keccak256(0, 64)\n                            /// @src 0:2797:2824  \"allowance[from][msg.sender]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2797:2812  \"allowance[from]\" */ dataSlot_2)\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)\n                            /// @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\"\n                            let expr := fun_sub(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sload(/** @src 0:2797:2824  \"allowance[from][msg.sender]\" */ dataSlot_3), /** @src 0:2797:2865  \"allowance[from][msg.sender].sub(...\" */ value)\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            mstore(0, _2)\n                            mstore(32, /** @src 0:2703:2712  \"allowance\" */ 0x02)\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            let dataSlot_4 := keccak256(0, 64)\n                            /// @src 0:2767:2794  \"allowance[from][msg.sender]\"\n                            let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:2719:2729  \"msg.sender\" */ caller(), /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:2767:2782  \"allowance[from]\" */ dataSlot_4)\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)\n                            sstore(/** @src 0:2767:2794  \"allowance[from][msg.sender]\" */ dataSlot_5, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ expr)\n                        }\n                        /// @src 0:2905:2910  \"value\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x30adf81f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, /** @src 0:381:383  \"18\" */ 0x12)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _3 := sload(/** @src 0:533:564  \"bytes32 public DOMAIN_SEPARATOR\" */ 3)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, _3)\n                        return(memPos_6, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_4481(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:418:459  \"mapping(address => uint) public balanceOf\" */ 1)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _4)\n                        return(memPos_7, 32)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_4481(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let _5 := sload(keccak256(0, 64))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _5)\n                        return(memPos_8, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_2 := 0\n                        let size_1 := 0\n                        size_1 := 0\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, 64)\n                        memPtr_2 := memPtr_3\n                        mstore(memPtr_3, 6)\n                        mstore(add(memPtr_3, 32), \"UNI-V2\")\n                        let memPos_9 := mload(64)\n                        return(memPos_9, sub(abi_encode_string(memPos_9, memPtr_3), memPos_9))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_4481()\n                        /// @src 0:2535:2540  \"value\"\n                        fun_transfer(/** @src 0:2519:2529  \"msg.sender\" */ caller(), /** @src 0:2535:2540  \"value\" */ value0_2, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ calldataload(36))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, 1)\n                        return(memPos_10, 32)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_4481()\n                        let value1_1 := abi_decode_address()\n                        let value_1 := calldataload(68)\n                        let value_2 := calldataload(100)\n                        let value_3 := calldataload(132)\n                        let _6 := and(value_3, 0xff)\n                        if iszero(eq(value_3, _6)) { revert(0, 0) }\n                        if /** @src 0:3140:3167  \"deadline >= block.timestamp\" */ lt(value_2, /** @src 0:3152:3167  \"block.timestamp\" */ timestamp())\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 18)\n                            mstore(add(memPtr_4, 68), \"UniswapV2: EXPIRED\")\n                            revert(memPtr_4, 100)\n                        }\n                        let _7 := sload(/** @src 0:3302:3318  \"DOMAIN_SEPARATOR\" */ 0x03)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let _8 := and(value0_3, sub(shl(160, 1), 1))\n                        mstore(0, _8)\n                        mstore(32, 4)\n                        let dataSlot_6 := keccak256(0, 64)\n                        let _9 := sload(/** @src 0:3539:3554  \"nonces[owner]++\" */ dataSlot_6)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        if eq(_9, /** @src 0:2734:2751  \"type(uint256).max\" */ not(0))\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot_6, add(_9, 1))\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        let expr_mpos := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        let _10 := add(expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 32)\n                        mstore(_10, /** @src 0:720:786  \"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 64), _8)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 96), and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 128), value_1)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 160), _9)\n                        mstore(add(/** @src 0:3367:3610  \"abi.encode(...\" */ expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 192), value_2)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        mstore(expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 192)\n                        /// @src 0:3367:3610  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 224)\n                        /// @src 0:3336:3628  \"keccak256(...\"\n                        let expr_1 := keccak256(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _10, mload(/** @src 0:3336:3628  \"keccak256(...\" */ expr_mpos))\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        let expr_mpos_1 := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(64)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        let _11 := add(expr_mpos_1, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 32)\n                        mstore(_11, shl(240, 6401))\n                        mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 34), _7)\n                        mstore(add(/** @src 0:3240:3642  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 66), expr_1)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        mstore(expr_mpos_1, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 66)\n                        /// @src 0:3240:3642  \"abi.encodePacked(...\"\n                        finalize_allocation(expr_mpos_1, 98)\n                        /// @src 0:3217:3652  \"keccak256(...\"\n                        let expr_2 := keccak256(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _11, mload(/** @src 0:3217:3652  \"keccak256(...\" */ expr_mpos_1))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        let _12 := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(64)\n                        mstore(_12, expr_2)\n                        mstore(add(_12, 32), _6)\n                        mstore(add(_12, 64), calldataload(164))\n                        mstore(add(_12, 96), calldataload(196))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        mstore(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0, 0)\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        if iszero(staticcall(gas(), /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 1, /** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ _12, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 128, 0, 32))\n                        /// @src 0:3689:3715  \"ecrecover(digest, v, r, s)\"\n                        {\n                            /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:3746:3776  \"recoveredAddress != address(0)\"\n                        let _13 := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:3689:3715  \"ecrecover(digest, v, r, s)\" */ mload(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0), sub(shl(160, 1), 1))\n                        /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        let expr_3 := /** @src 0:3746:3776  \"recoveredAddress != address(0)\" */ iszero(iszero(_13))\n                        /// @src 0:3746:3805  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        if expr_3\n                        {\n                            expr_3 := /** @src 0:3780:3805  \"recoveredAddress == owner\" */ eq(_13, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _8)\n                        }\n                        if iszero(expr_3)\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 28)\n                            mstore(add(memPtr_5, 68), \"UniswapV2: INVALID_SIGNATURE\")\n                            revert(memPtr_5, 100)\n                        }\n                        /// @src 0:3894:3899  \"value\"\n                        fun_approve(value0_3, value1_1, value_1)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_4481()\n                        let value1_2 := abi_decode_address()\n                        mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ 2)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ value1_2, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_7)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)\n                        let _14 := sload(/** @src 0:465:526  \"mapping(address => mapping(address => uint)) public allowance\" */ dataSlot_8)\n                        /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _14)\n                        return(memPos_11, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_4481() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 168 @src 0:1889:2055  \"function _approve(address owner, address spender, uint value) private {...\"\n            function fun_approve(var_owner, var_spender, var_value)\n            {\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                let _1 := and(var_owner, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:1969:1978  \"allowance\" */ 0x02)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)\n                /// @src 0:1969:1994  \"allowance[owner][spender]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ var_spender, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 0:1969:1985  \"allowance[owner]\" */ dataSlot)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)\n                sstore(/** @src 0:1969:1994  \"allowance[owner][spender]\" */ dataSlot_1, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ var_value)\n                /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                let _2 := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_2, var_value)\n                /// @src 0:2017:2048  \"Approval(owner, spender, value)\"\n                log3(_2, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ and(/** @src 0:2017:2048  \"Approval(owner, spender, value)\" */ var_spender, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 2269 @src 9:318:445  \"function sub(uint x, uint y) internal pure returns (uint z) {...\"\n            function fun_sub(var_x, var_y) -> var_z\n            {\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                let diff := sub(var_x, var_y)\n                let _1 := gt(diff, var_x)\n                if _1\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                /// @src 9:397:406  \"z = x - y\"\n                var_z := diff\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                _1 := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 206 @src 0:2061:2277  \"function _transfer(address from, address to, uint value) private {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                let _1 := and(var_from, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 0:2154:2180  \"balanceOf[from].sub(value)\"\n                let _2 := fun_sub(/** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40)), /** @src 0:2154:2180  \"balanceOf[from].sub(value)\" */ var_value)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40), _2)\n                let _3 := and(var_to, sub(shl(160, 1), 1))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                let _4 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40))\n                let sum := add(_4, var_value)\n                if gt(_4, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x24)\n                }\n                if /** @src 9:264:280  \"(z = x + y) >= x\" */ lt(sum, _4)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 0x20)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"ds-math-add-overflow\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 0:2154:2163  \"balanceOf\" */ 0x01)\n                /// @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x40), sum)\n                /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                let _5 := /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ mload(0x40)\n                mstore(_5, var_value)\n                /// @src 0:2245:2270  \"Transfer(from, to, value)\"\n                log3(_5, /** @src 11:112:242  \"contract ERC20 is UniswapV2ERC20 {...\" */ 0x20, /** @src 0:2245:2270  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a809f4b2b4b4bb9f381969a2aa4a3fa8f7ea30beffb04f082cc5a0b2832ac1e664736f6c634300081a0033\"\n    }\n}\n",
          "hash": "ac304834d792dc89131517a309bb717092812ba4ebd8cf4eae0db054213504d9",
          "factoryDependencies": {}
        }
      }
    }
  }
}